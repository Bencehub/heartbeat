{"version":3,"sources":["../package.json","../src/load_musicxml_file.ts","index.js"],"names":["module","exports","name","version","description","main","scripts","test","build2","build3","build","watch2","repository","type","url","keywords","author","license","bugs","homepage","dependencies","devDependencies","tslint","typescript","parcel","sequencer","saveAs","navigator","msSaveOrOpenBlob","bind","view","userAgent","doc","document","URL","webkitURL","save_link","createElementNS","can_use_save_link","externalHost","webkit_req_fs","webkitRequestFileSystem","req_fs","requestFileSystem","mozRequestFileSystem","throw_outside","ex","setImmediate","setTimeout","fs_min_size","deletion_queue","process_deletion_queue","i","length","file","revokeObjectURL","remove","dispatch","filesaver","event_types","event","concat","listener","call","FileSaver","blob","object_url","target_view","slice","blob_changed","get_object_url","createObjectURL","push","dispatch_all","split","fs_error","location","href","window","open","readyState","DONE","abortable","func","apply","arguments","create_if_not_found","create","exclusive","INIT","download","createEvent","initMouseEvent","dispatchEvent","chrome","webkitSlice","size","TEMPORARY","fs","root","getDirectory","dir","save","getFile","createWriter","writer","onwriteend","toURL","onerror","error","code","ABORT_ERR","forEach","write","abort","WRITING","NOT_FOUND_ERR","FS_proto","prototype","onwritestart","onprogress","onwrite","onabort","addEventListener","unload","removeEventListener","self","content","openModule","protectedScope","context","gainNode","compressor","os","browser","initMethods","webaudioUnlocked","sampleIndex","compressorParams","ua","match","indexOf","AudioContext","createGainNode","createGain","webkitAudioContext","Error","createDynamicsCompressor","connect","destination","gain","value","masterGainNode","masterCompressor","useDelta","timedTasks","scheduledTasks","repetitiveTasks","getSampleId","Date","getTime","addInitMethod","method","callInitMethods","maxi","ui","legacy","midi","webmidi","webaudio","jazz","ogg","mp3","record_audio","undefined","getUserMedia","bitrate_mp3_encoding","util","debug","defaultInstrument","pitch","bufferTime","autoAdjustBufferTime","noteNameMode","minimalSongLength","pauseOnBlur","restartOnFocus","defaultPPQ","overrulePPQ","precision","midiInputs","midiOutputs","storage","id","audio","recordings","instruments","samplepacks","assetpacks","getAudioContext","currentTime","getTimeDiff","contextTime","performance","now","setMasterVolume","getMasterVolume","getCompressionReduction","reduction","enableMasterCompressor","flag","disconnect","configureMasterCompressor","cfg","param","unlockWebAudio","resume","src","createOscillator","noteOn","start","stop","noteOff","Object","defineProperty","assetManager","findItem","deleteItem","typeString","objectForEach","updateInstruments","findItemsInFolder","busy","taskIndex","finishedTasks","taskQueue","callbacks","removeMidiFile","path","item","items","className","localPath","removeInstrument","unloadSamples","folder","mapping","samplePath","hasOwnProperty","sample_path","n","removeSamplePack","samples","sample","s","reset","removeAssetPack","startTaskQueue","cb","loadQueueLoop","index","onTaskQueueDone","task","params","scope","j","callback","taskIds","performCallback","m","console","log","cbActionLoop","success","addTask","callbackAfterAllTasksAreDone","addCallbackAfterTask","getInstrument","exact_match","getMidiFile","getSamplePack","getSample","getAssetPack","getSamplePacks","include_subfolders","getAssetPacks","getSamples","getInstruments","getMidiFiles","loadLoop","storeItem","getArguments","isEmptyObject","assetPack","ajax","parseUrl","AssetPack","load","pack","responseType","onError","e","cleanup","assetpack","onSuccess","data","fileSize","loaded","filesize","midifiles","assets","asset","store","occupied","action","warn","packs","tmp","p","double","addMidiFile","addInstrument","addSamplePack","config","val","key","addAssetPack","json","JSON","parse","round","audioEvent","AudioEvent","Array","ticks","buffer","sampleId","WARN","replace","durationTicks","durationMillis","duration","muted","velocity","sampleOffsetTicks","sampleOffsetMillis","sampleOffset","latencyCompensation","playheadOffset","time","update","pos","song","getPosition","millis","endTicks","endMillis","stopSample","seconds","track","setSampleOffset","setDuration","clone","copy","property","trackId","part","partId","fromPart","fromTrack","fromSong","channel","move","isNaN","parseInt","state","needsUpdate","moveTo","position","createAudioEvent","audioRecorder","encode64","createWorker","getWaveformData","localMediaStream","millisPerSample","microphoneAccessGranted","waveformConfig","height","width","sampleStep","color","bgcolor","AudioRecorder","audioEvents","worker","onmessage","encodeAudioBuffer","wavArrayBuffer","interleavedSamples","decodeAudioData","audioBuffer","base64","recording","recordId","wav","Blob","Uint8Array","dataUrl","waveform","dataUrls","prepare","record","stream","postMessage","command","sampleRate","scriptProcessor","createScriptProcessor","onaudioprocess","inputBuffer","numberOfChannels","getChannelData","precounting","createAudio","sourceNode","createMediaStreamSource","stopRecordingTimestamp","timestamp","scriptProcessors","bufferIndexStart","metronome","precountDurationInMillis","audioRecordingLatency","bufferIndexEnd","setAudioRecordingLatency","terminate","createAudioRecorder","createAudioRecorderWorker","songDispatchEvent","audioTrack","unscheduleCallback","AudioTrack","scheduledSamples","recorder","processEvent","createSample","offset","allNotesOff","unschedule","prepareForRecording","stopRecording","createAudioTrack","channelEffects","createClass","Reverb","Panner","Panner2","Delay","BiQuadFilter","Compressor","Effect","bypass","amount","output","wetGain","dryGain","setInput","input","node","setAmount","createReverb","createPanner","createPanner2","createDelay","createCompressor","createBiQuadFilter","createConvolver","panningModel","setPosition","delayTime","createBiquadFilter","Q","frequency","x","y","z","Math","abs","xDeg","zDeg","sin","PI","setTime","eventStatistics","getStats","createNote","findEvent","getEvents","args","operator","events","searchPattern","patternLength","propValue","minNoteName","maxNoteName","numArgs","min","max","sum","avg","useNoteName","supportedProperties","supportedOperators","shift","join","noteName","createMidiNote","midiEventNumberByName","patterns","operators","findNote","checkValue","createPattern","checkOperators","checkCondition","checkCondition2","inverseOperator","removeMutualEvents","removeDoubleEvents","performSearch","properties","logicalOperatorsRegex","RegExp","bar","beat","sixteenth","tick","barsbeats","musical_time","hour","minute","second","millisecond","linear_time","data1","data2","noteNumber","searchString","pattern","patternIndex","operatorIndex","results","lastResult","subResult1","resultSet1","resultSet2","eventId","addEvent","maxj","result","lastId","sort","a","b","eventNumber","inverse","searchResult","operator1","operator2","value1","value2","numEvents","isString","obj","eventsMidiTime","pop","check","check2","number","inversedOperator","noteOnEvent","noteOnEvents","resultsFiltered","NOTE_ON","NOTE_OFF","sortIndex","instrument","remap","transpose","Instrument","SimpleSynth","createAutoPanner","getValue","scheduledEvents","sustainPedalDown","sustainPedalSamples","sampleDataByNoteNumber","sampleData","info","instrument_info","instrument_author","instrument_license","updateTaskId","setInstrument","v","v1","v2","octave","note","pathArray","names","subdata","sampleConfig","samplePack","audioFolder","notename_mode","me","autopan","singlePitch","single_pitch","keyScalingRelease","keyscaling_release","keyScalingPanning","keyscaling_panning","keyRange","keyrange","key_range","lowestNote","highestNote","numNotes","release_duration","releaseDuration","releaseEnvelope","release_envelope","autoPanner","samplepack","substring","getNoteNumber","getNoteNameFromNoteNumber","multiLayered","parseSampleData","toLowerCase","bufferId","sustain","sustain_start","sustain_end","samplesById","release","r","panPosition","panning","getInfoAsHTML","html","instrumentInfo","samplepackInfo","sp","getFullNoteName","compression","getInfo","addData","setKeyScalingPanning","end","panStep","currentPan","numSamples","setRelease","envelope","setKeyScalingRelease","releaseStep","currentRelease","semitones","cb1","cb2","loop","num","transposedBuffer","midiEvent","stopNote","playNote","stopSustain","setPanning","setValueAtTime","midiNote","sourceId","fullName","hasScheduledSamples","reschedule","arg","allNotesOffPart","createInstrument","pathToArray","getEqualPowerCurve","waveForm","wave_form","oscillator","createSimpleSynth","instrumentConfig","InstrumentConfig","keyEditor","KeyEditor","createIteratorFactory","createPlayhead","arrayToObject","floor","setPageData","checkNextPage","checkScrollPosition","updateDataKeys","ceil","playhead","numBars","bars","newNumBars","eventListeners","interrupt","iteratorFactory","verticalLine","createVerticalLineIterator","horizontalLine","createHorizontalLineIterator","eventIterator","createEventIterator","noteIterator","createNoteIterator","partIterator","createPartIterator","exactFitVertical","exactFitHorizontal","activeEvents","activeNotes","activeParts","newEvents","newNotes","newParts","changedEvents","changedNotes","changedParts","removedEvents","removedNotes","removedParts","recordedNotesObj","recordedEventsObj","snapshot","paginate","pageNo","barsPerPage","pageWidth","pageHeight","pitchRange","pitchHeight","setStartPosition","startPosition","setEndPosition","endPosition","numTicks","startTicks","tickWidth","viewportWidth","ticksPerBar","scrollX","scrollPosition","viewportTicks","maxScrollPosition","scrollLimit","viewportHeight","scrollY","currentPage","numPages","snapValueX","snapX","snapValueY","snapY","setSnapX","setSnapY","setBarsPerPage","bbp","snapWidth","snapTicks","playing","setViewport","w","h","draw","updateSong","arr","bbox","getNoteRect","getPartRect","removedEventsObj","removedNotesObj","removedPartsObj","startMillis","ids","editor","nextPage","startBar","lastPage","prevPage","gotoPage","scroll","updateScroll","getEventRect","ticksToX","pitchToY","top","left","bottom","right","endless","stats","getBBox","endEvent","getPart","startMoveNote","selectedNote","gripX","stopMoveNote","moveNote","newPitch","yToPitch","oldPitch","newTicks","xToTicks","oldTicks","transposeNote","startMovePart","selectedPart","stopMovePart","movePart","autoUpdate","transposePart","getTicksAt","snap","getPitchAt","getXAt","getYAt","getPositionAt","set","get","getPlayheadX","compensateForScroll","setPlayheadToX","setPlayhead","getPlayheadPosition","setPlayheadPosition","getEventAt","getSongPosition","getEventsInRect","getNoteAt","getNotesInRect","snapHeight","beatLength","denominator","ppq","nominator","removeNote","removeEvents","removePart","getSnapshot","activeEventsObj","activeNotesObj","activePartsObj","recordedNotesSong","recordedEventsSong","endBar","nonActiveEvents","nonActiveNotes","nonActiveParts","prevActiveEvents","prevActiveNotes","prevActiveParts","recordedEvents","recordedNotes","recordingNotes","activeStateChangedEvents","activeStateChangedNotes","activeStateChangedParts","lastBar","active","inActive","recorded","new","changed","removed","stateChanged","notes","parts","hasNewBars","newWidth","requestAnimationFrame","listeners","createKeyEditor","objectToArray","getScaffoldingBars","createKeyEditorIteratorFactory","keyEditorIteratorFactory","minWidthSixteenth","Factory","numParts","supportedTypes","lineType","numSixteenth","getData","ticksPerBeat","ticksPerSixteenth","next","t","hasNext","diffTicks","setType","range","hasNextCalled","nextEvent","types","isPlaying","eventIndex","setTypes","newNote","nextNote","parseEvents","parseMetronomeEvents","Metronome","methodMap","volume","noteNumberAccentedTick","noteNumberNonAccentedTick","velocityAccentedTick","velocityNonAccentedTick","noteLengthAccentedTick","noteLengthNonAccentedTick","checkNumber","createEvents","noteLength","beatsPerBar","noteNumberAccented","noteNumberNonAccented","noteLengthAccented","noteLengthNonAccented","velocityAccented","velocityNonAccented","createMidiEvent","createTrack","createPart","addPart","precountEvents","init","addEvents","updateConfig","scheduler","configure","setNoteLengthAccentedTick","setNoteLengthNonAccentedTick","setVelocityAccentedTick","setVelocityNonAccentedTick","setNoteNumberAccentedTick","setNoteNumberNonAccentedTick","createPrecountEvents","precount","endPos","getPrecountEvents","maxtime","startTime","setVolume","createMetronome","MidiEvent","midiEventId","status","bpm","controllerType","controllerValue","programNumber","semi","setPitch","midiEventNames","lowerCaseToNumber","upperCaseToNumber","numberToLowerCase","numberToUpperCase","numberByName","no","nameByNumber","upperOrLower","checkEventType","midiEventNameByNumber","midiFile","base64ToBinary","parseMidiFile","MidiFile","midifile","numTracks","tmpTicks","parsed","timeEvents","ppqFactor","lastType","tracks","header","deltaTime","subtype","numNoteOn","numNoteOff","numOther","text","instrumentName","microsecondsPerBeat","numerator","autoSize","arraybuffer","MidiFile2","reader","FileReader","_promise","Promise","executor","resolve","reject","readAsArrayBuffer","lastIndexOf","createMidiFile","mf","MidiNote","midiNoteId","on","off","MIDI_NOTE","addNoteOff","mute","midiParse","lastEventTypeByte","trackName","createStream","readChunk","read","readInt32","readEvent","readVarInt","eventTypeByte","param1","readInt8","subtypeByte","readInt16","hourByte","frameRate","sec","frame","subframe","pow","thirtyseconds","scale","eventType","parseStream","formatType","trackCount","timeDivision","trackChunk","trackStream","headerChunk","headerStream","trackNames","eof","midiStream","fcc","String","fromCharCode","signed","toString","midiSystem","songMidiEventListener","midiAccess","midiInputsOrder","midiOutputsOrder","midiInitialized","midiEventListenerId","getDevices","inputs","nameA","nameB","numMidiInputs","outputs","numMidiOutputs","handleMidiMessageTrack","recordMillis","prerolling","recordEnabled","recordPart","enableRetrospectiveRecording","retrospectiveRecording","midiEventListeners","send","routeToMidiOut","getMidiPortsAsDropdown","select","option","ports","createElement","div","firstOption","innerHTML","appendChild","port","getMidiInputs","getMidiOutputs","getMidiInputsAsDropdown","getMidiOutputsAsDropdown","initMidi","requestMIDIAccess","then","midiAccessOnSuccess","_jazzInstances","_Jazz","onstatechange","midiAccessOnError","initMidiSong","handleMidiMessageSong","midiMessageEvent","monitor","onmidimessage","setMidiInputSong","setMidiInput","setMidiOutputSong","lastEventTime","setMidiOutput","addMidiEventListener","removeMidiEventListener","removeMidiEventListeners","midiWrite","AP","PPQ","HDR_CHUNKID","charCodeAt","HDR_CHUNK_SIZE","HDR_TYPE1","HDR_PPQ","str2Bytes","TRK_CHUNKID","byteArray","arrayBuffer","uintArray","trackToBytes","instrumentId","ArrayBuffer","endings","lastEventTicks","lengthBytes","delta","trackBytes","convertToVLQ","stringToNumArray","microSeconds","denom","str","finalBytes","bytes","chars","unshift","bList","map","char","saveToMidiFile","saveSongAsMidiFile","musicXMLParser","nsResolver","xml","parser","xmlDoc","DOMParser","parseFromString","firstChild","nextSibling","nodeName","createNSResolver","ownerDocument","documentElement","parsePartWise","partNode","measureIterator","measureNode","noteNode","tieStart","tieStop","tieIterator","tieNode","tmp1","tmp2","step","alter","voice","noteDuration","rest","chord","divisions","evaluate","XPathResult","ANY_TYPE","tiedNotes","iterateNext","STRING_TYPE","stringValue","NUMBER_TYPE","numberValue","TIME_SIGNATURE","FIRST_ORDERED_NODE_TYPE","singleNodeValue","createSong","useMetronome","parseTimeWise","loadMusicXML","returnAsXML","response","parseMusicXML","noteNames","getNoteName","checkNoteName","getFrequency","isNoteMode","isBlackKey","arg0","arg1","arg2","blackKey","mode","toUpperCase","black","getNoteOctave","factor","millisPerTick","secondsPerTick","updateEvent","timeData","tickAsString","getNiceTime","timeAsString","timeAsArray","barsAsString","barsAsArray","lastEventTick","getDataFromEvent","lastEventTmp","parseTimeEvents","playbackSpeed","numTimeEvents","setTickDuration","setTicksPerBeat","copyName","getEvent","moveEvents","transposeEvents","getEventsAndConfig","reverseByPitch","reverseByTicks","Part","eventsById","relative","END_OF_TRACK","hasAudioEvents","tobeRemoved","onTicks","offTicks","partIndex","notesById","dirtyEvents","dirtyNotes","solo","keepWhenEmpty","addEventsRelative","removeEvent","moveEvent","moveAllEvents","transposeAllEvents","findEvents","findNotes","getIndex","partTicks","copies","setSolo","setPartSolo","firstEvent","lastEvent","l","instanceId","Playhead","getPosition2","u","unit","currentValue","noteIndex","calculate","diff","addType","removeType","trim","stillActiveNotes","stillActiveEvents","collectedParts","collectedNotes","collectedEvents","DUMMY_EVENT","percentage","diffMillis","millisToTicks","ticksToMillis","barsToMillis","barsToTicks","ticksToBars","millisToBars","checkBarsAndBeats","getPositionData","calculateBarsAndBeats","checkPosition","fromMillis","fromTicks","fromBars","returnType","beyondEndOfSong","getTimeEvent","target","targetMillis","beos","targetTicks","targetBar","targetBeat","targetSixteenth","targetTick","diffTick","positionData","millisRounded","isTick","positionLength","supportedReturnTypes","quantizeFixedLength","copyObject","noteFractions","quantize","history","quantized","quantizeTicks","quantizeHistory","quantizedEvents","fixedLength","fadeOut","SampleSynth","SampleRelease","SampleSustainRelease","SampleReleasePanning","SampleSustainReleasePanning","Sample","stopCallback","source","onended","values","linearRampToValueAtTime","setValueCurveAtTime","releaseEnvelopeArray","Float32Array","createSource","createBufferSource","route","phase","startReleasePhase","stopTime","when","cancelScheduledValues","execute","panner","doLog","sustainStart","sustainEnd","release_envelope_array","loopStart","loopEnd","parseTime","SamplePack","ext","slash","dot","remotePath","extension","remote_path","d","loadSamples","callback1","callback2","loadSample","hasMapping","parseAudioData","audiodata","ts","loadTime","samplepack_info","samplepack_author","samplepack_license","samplepack_compression","compression_type","compression_level","Scheduler","looped","timeDiff","eventsMidiAudioMetronome","numAudioEvents","scheduledAudioEvents","setIndex","beyondLoop","getDanglingAudioEvents","songStartMillis","buffertime","doLoop","loopDuration","songMillis","loopEndTicks","firstRun","prevMaxtime","midiOutput","vel","audioLatency","unscheduleEvent","createScheduler","createSequencer","heartbeat","lastTimeStamp","processEventTracks","pausedSongs","activeSongs","snapshots","addSong","removeProperties","getSongs","deleteSong","k","eventsLib","notesLib","processEvents","stopProcessEvent","stopProcessEvents","play","songs","indentation","addParts","setAnimationFrameType","interval","webkitRequestAnimationFrame","onblur","pause","onfocus","createFollowEvent","checkDuration","gridToSong","noteToGrid","eventToGrid","positionToGrid","removeFromArray","removeFromArray2","getNoteLengthName","_removeTracks","pulse","getTrack","addTracks","getParts","getTimeEvents","setRecordingStatus","_getRecordingPerTrack","createGrid","Song","songIndex","quantizeValue","fixedLengthValue","positionType","autoQuantize","illegalLoop","grid","tempoEvent","TEMPO","timeSignatureEvent","setTempo","setTimeSignature","allEvents","tracksById","tracksByName","partsById","paused","stopped","preroll","playheadRecording","followEvent","newTracks","addedIds","timeStamp","prevMillis","resetAllListeners","endOfSong","jump","playstart","startTime2","playAfterPrecount","adjustLatencyForAllRecordings","startRecording","userFeedback","audioRecording","recordStartMillis","recordTimestampTicks","recordingAudio","recordTimestamp","recordingHistory","undoRecording","getAudioRecordingData","historyObject","undoQuantize","quantizeRecording","setLeftLocator","loopStartPosition","loopStartTicks","setRightLocator","loopEndPosition","setLoop","addTrack","getTracks","removeTrack","removeTracks","setPlaybackSpeed","speed","startLoop","endLoop","newPos","updateTimeEvents","updateGrid","updateTempoEvent","updatePlayheadAndLocators","updateTimeSignatureEvent","getTempoEvents","getTimeSignatureEvents","newStartPos","newEndPos","startPos","ratio","resetTempo","firstTempoEvent","resetTimeSignature","firstTimeSignatureEvent","addTimeEvent","addTimeEvents","removeTimeEvent","removeTimeEvents","removeDoubleTimeEvents","eventsByTicks","setPitchRange","setDurationInBars","changedTracks","dirtyTracks","dirtyParts","addEffect","removeEffect","getVolume","setTrackSolo","soloTrack","muteAllTracks","setMetronomeVolume","configureMetronome","resetMetronome","setPrecount","resetExternalMidiDevices","addMetronomeEvents","songAddEventListener","songRemoveEventListener","songEventListener","listenerIndex","listenerId","filteredListeners","songFollowEvent","checkOperatorConflict","FollowEvent","supportedTimeEvents","barsandbeats","allListenersById","allListenersByType","searchPatterns","eventListenersBySearchstring","positionListenersBySearchstring","listenerIds","instance","searchstring","callEventListeners","callListenersPositionTicks","callListenersPositionRepetitive","callListenersPositionConditionalSimple","callListenersPositionConditionalComplex","called","repetitive","conditional_simple","conditional_complex","storeArray","dataType","addPositionEventListener","len","value1Type","position_type","eventIds","removeMe","filteredListenerIds","removedListenerIds","songGrid","positionToSong","coordinatesToPosition","getSong","songToGrid","songUpdate","update2","parseParts","parseMidiNotes","id1","id2","id3","removedTracks","midiEvents","parseRecordedEvents","totalTime","encodeAudio","Track","getPartsAndConfig","getTicksAtPosition","removeParts","eventsPerPart","getDefaultInstrumentConfig","effects","numEffects","lastEffect","addPartAt","addPartsAt","moveParts","movePartTo","movePartsTo","positions","moveAllParts","copyPart","copyParts","selectedParts","copiedParts","getPartAt","getPartsAt","getPartFromTo","getPartsFromTo","from","to","toTicks","getPartBetween","effect","removeEventsFromTo","removeEventAt","removeEventsAt","removeAllEvents","setSong","setEffectPosition","fx","soloPart","availableInputs","setWaveformConfig","encodeAudioRecording","bitrate","mp3Data","processMidiEvent","shifter","Pitchshift","fftFrameSize","numChannels","c","shiftValue","outputBuffer","process","outdata","createBuffer","foundItem","foundFolder","mPow","mRound","mFloor","mRandom","random","noteLengthNames","o","decimals","ignore_keys","isEmpty","request","promise","XMLHttpRequest","onload","overrideMimeType","setRequestHeader","loop3","search_subfolders","indent","folders","numFolders","currentFolder","itemId","parseSample","loadAndParseSample","toBinaryString","ff","mx","scc","keyStr","uarray","chr1","chr2","chr3","enc2","enc3","enc4","charAt","getRandom","b64ToUint6","nChr","uint6ToB64","nUint6","base64DecToArr","sBase64","nBlocksSize","sB64Enc","nMod3","nMod4","nInLen","nOutLen","taBytes","nUint24","nOutIdx","nInIdx","base64EncArr","aBytes","nLen","nIdx","substr","UTF8ArrToStr","sView","nPart","strToUTF8Arr","sDOMStr","nStrLen","nArrLen","nMapIdx","nChrIdx","ajax2","onreadystatechange","parseSamples","promises","all","oldMin","oldMax","newMin","newMax","createSlider","slider","sliderWrapper","message","label","onMouseDown","valueAsNumber","onMouseUp","onMouseMove","parentNode","initialSliderValue","initialLabelValue","onChange","setValue","setLabel","elem","element","createSlider2","calculateFromLabel","initialValueSlider","initialValueLabel","updateSlider","updateLabel","getValue1","getValue2","getRandomNotes","minVelocity","maxVelocity","minNoteNumber","maxNoteNumber","numSteps","maxValue","percent","cos","insertLink","binary","byteLength","btoa","divider","toUint8Array","uint","filePath","fileName","fileExtension","numItems","pathString","prop","searchFolder","loop2","convertPPQ","oldPPQ","newPPQ","convert","ms","parent","constructor","thisClass","attr","numCopies","array","elementA","newArray","filterItemsByClassName","getMicrosecondsFromBPM","density","lastWidth","numImages","currentImage","canvas","ctx","getContext","pcmRight","xPos","urls","fillStyle","fillRect","beginPath","strokeStyle","lineWidth","stroke","toDataURL","lineTo","closeModule","ready","readyCallbacks","addCleanup","attack","timeEnd","initSequencer"],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["module.exports={name:\"heartbeat-sequencer\",version:\"0.0.22\",description:\"javascript sequencer\",main:\"./build/index.js\",scripts:{test:'echo \"Error: no test specified\" && exit 1',build2:\"cd ./tools && ./build.sh && cd ../\",build3:\"cd ./tools && ./build.sh && cd ../ && webpack\",build:\"cd ./tools && ./build.sh\",\"build-live\":\"cd ./tools && ./build.sh && cd ../ && parcel build ./build/index.js -d ./build\",watch2:\"tsc-watch\"},repository:{type:\"git\",url:\"git+https://github.com/abudaan/heartbeat.git#npm\"},keywords:[\"MIDI\",\"sequencer\",\"audio\"],author:\"abudaan\",license:\"MIT\",bugs:{url:\"https://github.com/abudaan/heartbeat/issues\"},homepage:\"https://github.com/abudaan/heartbeat/blob/npm/README.md\",dependencies:{},devDependencies:{\"tsc-watch\":\"^4.0.0\",tslint:\"^5.20.0\",typescript:\"^3.6.4\",parcel:\"^1.12.4\"}};","// import sequencer from 'heartbeat-sequencer';\n\n// const addAssetPack = (ap: Heartbeat.AssetPack): Promise<void> => new Promise((resolve) => {\n//   sequencer.addAssetPack(ap, () => {\n//     resolve();\n//   });\n// })\n\nconst loadMusicXMLFile = (url: string): Promise<XMLDocument> => {\n  return new Promise((resolve, reject) => {\n    fetch(url)\n      .then(response => response.text())\n      .then(str => {\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(str, 'application/xml');\n        resolve(xmlDoc);\n      });\n  });\n}\n\nexport {\n  loadMusicXMLFile,\n  // addAssetPack,\n};","/*\n\nheartbeat\n(c) 2013 - 2019 abudaan\nhttps://github.com/abudaan/heartbeat/wiki/license\n\n\nIn util.js the method base64ToBinary() is based on Daniel Guerrero's code:\n\nhttps://github.com/danguer/blog-examples/blob/master/js/base64-binary.js\nhttps://github.com/danguer/blog-examples/blob/master/LICENSE\n\n\nIn util.js the method toBinaryString(), midi_parse.js and midi_stream.js are based on Matt Westcott & Ben Fishman's code:\n\nhttps://github.com/gasman/jasmid\nhttps://github.com/gasman/jasmid/blob/master/LICENSE\n\n\nIn util.js Mozilla's atob and btoa alternatives are included:\nhttps://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_.232_.E2.80.93_rewriting_atob()_and_btoa()_using_TypedArrays_and_UTF-8\n\n\nThe code in midi_write.js is based on Sergi Mansilla's code:\n\nhttps://github.com/sergi/jsmidi\nhttps://github.com/sergi/jsmidi/blob/master/README.md\n\n\nAudio recording:\nhttps://github.com/akrennmair/libmp3lame-js\nhttps://github.com/kobigurk/libmp3lame-js\nhttps://github.com/nusofthq/Recordmp3js\n\n\nIf a browser doesn't support WebMIDI, heartbeat will try to fallback to Sema's Jazz plugin:\n\nhttp://jazz-soft.net/\nhttps://github.com/jazz-soft/JZZ\n\n*/\n\n\n/*\n *\tFileSaver.js\n *  A saveAs() FileSaver implementation.\n *  2014-01-24\n *\n *  By Eli Grey, http://eligrey.com\n *  License: X11/MIT\n *    See LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs\n  // IE 10+ (native saveAs)\n  || (typeof navigator !== \"undefined\" &&\n      navigator.msSaveOrOpenBlob && navigator.msSaveOrOpenBlob.bind(navigator))\n  // Everyone else\n  || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof navigator !== \"undefined\" &&\n\t    /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case BlobBuilder.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, URL = view.URL || view.webkitURL || view\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = !view.externalHost && \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = doc.createEvent(\"MouseEvents\");\n\t\t\tevent.initMouseEvent(\n\t\t\t\t\"click\", true, false, view, 0, 0, 0, 0, 0\n\t\t\t\t, false, false, false, false, 0, null\n\t\t\t);\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, webkit_req_fs = view.webkitRequestFileSystem\n\t\t, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t, fs_min_size = 0\n\t\t, deletion_queue = []\n\t\t, process_deletion_queue = function() {\n\t\t\tvar i = deletion_queue.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar file = deletion_queue[i];\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tURL.revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t\tdeletion_queue.length = 0; // clear queue\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, FileSaver = function(blob, name) {\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, blob_changed = false\n\t\t\t\t, object_url\n\t\t\t\t, target_view\n\t\t\t\t, get_object_url = function() {\n\t\t\t\t\tvar object_url = get_URL().createObjectURL(blob);\n\t\t\t\t\tdeletion_queue.push(object_url);\n\t\t\t\t\treturn object_url;\n\t\t\t\t}\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (blob_changed || !object_url) {\n\t\t\t\t\t\tobject_url = get_object_url(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (target_view) {\n\t\t\t\t\t\ttarget_view.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\twindow.open(object_url, \"_blank\");\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t}\n\t\t\t\t, abortable = function(func) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif (filesaver.readyState !== filesaver.DONE) {\n\t\t\t\t\t\t\treturn func.apply(this, arguments);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t, create_if_not_found = {create: true, exclusive: false}\n\t\t\t\t, slice\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\tif (!name) {\n\t\t\t\tname = \"download\";\n\t\t\t}\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_object_url(blob);\n\t\t\t\t// FF for Android has a nasty garbage collection mechanism\n\t\t\t\t// that turns all objects that are not pure javascript into 'deadObject'\n\t\t\t\t// this means `doc` and `save_link` are unusable and need to be recreated\n\t\t\t\t// `view` is usable though:\n\t\t\t\tdoc = view.document;\n\t\t\t\tsave_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\");\n\t\t\t\tsave_link.href = object_url;\n\t\t\t\tsave_link.download = name;\n\t\t\t\tvar event = doc.createEvent(\"MouseEvents\");\n\t\t\t\tevent.initMouseEvent(\n\t\t\t\t\t\"click\", true, false, view, 0, 0, 0, 0, 0\n\t\t\t\t\t, false, false, false, false, 0, null\n\t\t\t\t);\n\t\t\t\tsave_link.dispatchEvent(event);\n\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\tdispatch_all();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Object and web filesystem URLs have a problem saving in Google Chrome when\n\t\t\t// viewed in a tab, so I force save with application/octet-stream\n\t\t\t// http://code.google.com/p/chromium/issues/detail?id=91158\n\t\t\tif (view.chrome && type && type !== force_saveable_type) {\n\t\t\t\tslice = blob.slice || blob.webkitSlice;\n\t\t\t\tblob = slice.call(blob, 0, blob.size, force_saveable_type);\n\t\t\t\tblob_changed = true;\n\t\t\t}\n\t\t\t// Since I can't be sure that the guessed media type will trigger a download\n\t\t\t// in WebKit, I append .download to the filename.\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=65440\n\t\t\tif (webkit_req_fs && name !== \"download\") {\n\t\t\t\tname += \".download\";\n\t\t\t}\n\t\t\tif (type === force_saveable_type || webkit_req_fs) {\n\t\t\t\ttarget_view = view;\n\t\t\t}\n\t\t\tif (!req_fs) {\n\t\t\t\tfs_error();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfs_min_size += blob.size;\n\t\t\treq_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {\n\t\t\t\tfs.root.getDirectory(\"saved\", create_if_not_found, abortable(function(dir) {\n\t\t\t\t\tvar save = function() {\n\t\t\t\t\t\tdir.getFile(name, create_if_not_found, abortable(function(file) {\n\t\t\t\t\t\t\tfile.createWriter(abortable(function(writer) {\n\t\t\t\t\t\t\t\twriter.onwriteend = function(event) {\n\t\t\t\t\t\t\t\t\ttarget_view.location.href = file.toURL();\n\t\t\t\t\t\t\t\t\tdeletion_queue.push(file);\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t\tdispatch(filesaver, \"writeend\", event);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\twriter.onerror = function() {\n\t\t\t\t\t\t\t\t\tvar error = writer.error;\n\t\t\t\t\t\t\t\t\tif (error.code !== error.ABORT_ERR) {\n\t\t\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\"writestart progress write abort\".split(\" \").forEach(function(event) {\n\t\t\t\t\t\t\t\t\twriter[\"on\" + event] = filesaver[\"on\" + event];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\twriter.write(blob);\n\t\t\t\t\t\t\t\tfilesaver.abort = function() {\n\t\t\t\t\t\t\t\t\twriter.abort();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.WRITING;\n\t\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t};\n\t\t\t\t\tdir.getFile(name, {create: false}, abortable(function(file) {\n\t\t\t\t\t\t// delete file if it already exists\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t\tsave();\n\t\t\t\t\t}), abortable(function(ex) {\n\t\t\t\t\t\tif (ex.code === ex.NOT_FOUND_ERR) {\n\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}), fs_error);\n\t\t\t}), fs_error);\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name) {\n\t\t\treturn new FileSaver(blob, name);\n\t\t}\n\t;\n\tFS_proto.abort = function() {\n\t\tvar filesaver = this;\n\t\tfilesaver.readyState = filesaver.DONE;\n\t\tdispatch(filesaver, \"abort\");\n\t};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\tview.addEventListener(\"unload\", process_deletion_queue, false);\n\tsaveAs.unload = function() {\n\t\tprocess_deletion_queue();\n\t\tview.removeEventListener(\"unload\", process_deletion_queue, false);\n\t};\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\n/*\n\nif (typeof module !== \"undefined\" && module !== null) {\n  module.exports = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd != null)) {\n  define([], function() {\n    return saveAs;\n  });\n}\n\n*/var sequencer;\r\nimport { version } from \"../package.json\";\r\n// var version = \"0.0.21\";\r\n\r\nfunction openModule() {\r\n  \"use strict\";\r\n\r\n  var protectedScope,\r\n    initMethods = [],\r\n    webaudioUnlocked = false,\r\n    src,\r\n    context,\r\n    gainNode,\r\n    compressor,\r\n    sampleIndex = 0,\r\n    compressorParams = [\r\n      \"threshold\",\r\n      \"knee\",\r\n      \"ratio\",\r\n      \"reduction\",\r\n      \"attack\",\r\n      \"release\",\r\n    ],\r\n    ua = navigator.userAgent,\r\n    os,\r\n    browser,\r\n    legacy = false;\r\n\r\n  if (ua.match(/(iPad|iPhone|iPod)/g)) {\r\n    os = \"ios\";\r\n    // webaudioUnlocked = false;\r\n  } else if (ua.indexOf(\"Android\") !== -1) {\r\n    os = \"android\";\r\n  } else if (ua.indexOf(\"Linux\") !== -1) {\r\n    os = \"linux\";\r\n  } else if (ua.indexOf(\"Macintosh\") !== -1) {\r\n    os = \"osx\";\r\n  } else if (ua.indexOf(\"Windows\") !== -1) {\r\n    os = \"windows\";\r\n  }\r\n\r\n  if (ua.indexOf(\"Chrome\") !== -1) {\r\n    // chrome, chromium and canary\r\n    browser = \"chrome\";\r\n\r\n    if (ua.indexOf(\"OPR\") !== -1) {\r\n      browser = \"opera\";\r\n    } else if (ua.indexOf(\"Chromium\") !== -1) {\r\n      browser = \"chromium\";\r\n    }\r\n  } else if (ua.indexOf(\"Safari\") !== -1) {\r\n    browser = \"safari\";\r\n  } else if (ua.indexOf(\"Firefox\") !== -1) {\r\n    browser = \"firefox\";\r\n  } else if (ua.indexOf(\"Trident\") !== -1) {\r\n    browser = \"Internet Explorer\";\r\n  }\r\n\r\n  if (os === \"ios\") {\r\n    if (ua.indexOf(\"CriOS\") !== -1) {\r\n      browser = \"chrome\";\r\n    }\r\n  }\r\n\r\n  // console.log(os, browser, '---', ua);\r\n\r\n  if (window.AudioContext) {\r\n    context = new window.AudioContext();\r\n    if (typeof context.createGainNode !== \"function\") {\r\n      context.createGainNode = context.createGain;\r\n    }\r\n  } else if (window.webkitAudioContext) {\r\n    context = new window.webkitAudioContext();\r\n    if (typeof context.createGainNode !== \"function\") {\r\n      context.createGainNode = context.createGain;\r\n    }\r\n  } else {\r\n    //alert('Your browser does not support AudioContext!\\n\\nPlease use one of these browsers:\\n\\n- Chromium (Linux | Windows)\\n- Firefox (OSX | Windows)\\n- Chrome (Linux | Android | OSX | Windows)\\n- Canary (OSX | Windows)\\n- Safari (iOS 6.0+ | OSX)\\n\\nIf you use Chrome or Chromium, heartbeat uses the WebMIDI api');\r\n    throw new Error(\r\n      \"The WebAudio API hasn't been implemented in \" +\r\n        browser +\r\n        \", please use any other browser\"\r\n    );\r\n  }\r\n\r\n  compressor = context.createDynamicsCompressor();\r\n  compressor.connect(context.destination);\r\n  //console.log(compressor);\r\n  gainNode = context.createGainNode();\r\n  //gainNode.connect(compressor);\r\n  gainNode.connect(context.destination);\r\n  gainNode.gain.value = 1;\r\n\r\n  protectedScope = {\r\n    context: context,\r\n    //destination: context.destination,\r\n    masterGainNode: gainNode,\r\n    masterCompressor: compressor,\r\n\r\n    useDelta: false,\r\n\r\n    timedTasks: {},\r\n    scheduledTasks: {},\r\n    repetitiveTasks: {},\r\n\r\n    getSampleId: function () {\r\n      return \"S\" + sampleIndex++ + new Date().getTime();\r\n    },\r\n\r\n    addInitMethod: function (method) {\r\n      initMethods.push(method);\r\n    },\r\n\r\n    callInitMethods: function () {\r\n      var i,\r\n        maxi = initMethods.length;\r\n      for (i = 0; i < maxi; i++) {\r\n        initMethods[i]();\r\n      }\r\n    },\r\n  };\r\n\r\n  /**\r\n      @namespace sequencer\r\n  */\r\n  sequencer = {\r\n    name: \"qambi\",\r\n    version,\r\n    protectedScope: protectedScope,\r\n    ui: {},\r\n    ua: ua,\r\n    os: os,\r\n    browser: browser,\r\n    legacy: false,\r\n    midi: false,\r\n    webmidi: false,\r\n    webaudio: true,\r\n    jazz: false,\r\n    ogg: false,\r\n    mp3: false,\r\n    record_audio: navigator.getUserMedia !== undefined,\r\n    bitrate_mp3_encoding: 128,\r\n    util: {},\r\n    debug: 0, // 0 = off, 1 = error, 2 = warn, 3 = info, 4 = log\r\n    defaultInstrument: \"sinewave\",\r\n    pitch: 440,\r\n    bufferTime: 350 / 1000, //seconds\r\n    autoAdjustBufferTime: false,\r\n    noteNameMode: \"sharp\",\r\n    minimalSongLength: 60000, //millis\r\n    pauseOnBlur: false,\r\n    restartOnFocus: true,\r\n    defaultPPQ: 960,\r\n    overrulePPQ: true,\r\n    precision: 3, // means float with precision 3, e.g. 10.437\r\n\r\n    midiInputs: {},\r\n    midiOutputs: {},\r\n\r\n    storage: {\r\n      midi: {\r\n        id: \"midi\",\r\n      },\r\n      audio: {\r\n        id: \"audio\",\r\n        recordings: {},\r\n      },\r\n      instruments: {\r\n        id: \"instruments\",\r\n      },\r\n      samplepacks: {\r\n        id: \"samplepacks\",\r\n      },\r\n      assetpacks: {\r\n        id: \"assetpacks\",\r\n      },\r\n    },\r\n\r\n    getAudioContext: function () {\r\n      return context;\r\n    },\r\n\r\n    getTime: function () {\r\n      return context.currentTime;\r\n      // return performance.now() / 1000;\r\n    },\r\n\r\n    getTimeDiff: function () {\r\n      var contextTime = context.currentTime * 1000;\r\n      return performance.now() - contextTime;\r\n    },\r\n\r\n    setMasterVolume: function (value) {\r\n      value = value < 0 ? 0 : value > 1 ? 1 : value;\r\n      gainNode.gain.value = value;\r\n    },\r\n\r\n    getMasterVolume: function () {\r\n      return gainNode.gain.value;\r\n    },\r\n\r\n    getCompressionReduction: function () {\r\n      //console.log(compressor);\r\n      return compressor.reduction.value;\r\n    },\r\n\r\n    enableMasterCompressor: function (flag) {\r\n      if (flag) {\r\n        gainNode.disconnect(0);\r\n        gainNode.connect(compressor);\r\n        compressor.disconnect(0);\r\n        compressor.connect(context.destination);\r\n      } else {\r\n        compressor.disconnect(0);\r\n        gainNode.disconnect(0);\r\n        gainNode.connect(context.destination);\r\n      }\r\n    },\r\n\r\n    configureMasterCompressor: function (cfg) {\r\n      /*\r\n          readonly attribute AudioParam threshold; // in Decibels\r\n          readonly attribute AudioParam knee; // in Decibels\r\n          readonly attribute AudioParam ratio; // unit-less\r\n          readonly attribute AudioParam reduction; // in Decibels\r\n          readonly attribute AudioParam attack; // in Seconds\r\n          readonly attribute AudioParam release; // in Seconds\r\n      */\r\n      var i, param;\r\n      for (i = compressorParams.length; i >= 0; i--) {\r\n        param = compressorParams[i];\r\n        if (cfg[param] !== undefined) {\r\n          compressor[param].value = cfg[param];\r\n        }\r\n      }\r\n    },\r\n\r\n    unlockWebAudio: function () {\r\n      // console.log('unlock webaudio');\r\n      if (webaudioUnlocked === true) {\r\n        // console.log('already unlocked');\r\n        return;\r\n      }\r\n      if (typeof context.resume === \"function\") {\r\n        context.resume();\r\n      }\r\n      var src = context.createOscillator(),\r\n        gainNode = context.createGainNode();\r\n      gainNode.gain.value = 0;\r\n      src.connect(gainNode);\r\n      gainNode.connect(context.destination);\r\n      if (src.noteOn !== undefined) {\r\n        src.start = src.noteOn;\r\n        src.stop = src.noteOff;\r\n      }\r\n      src.start(0);\r\n      src.stop(0.001);\r\n      webaudioUnlocked = true;\r\n    },\r\n  };\r\n\r\n  // debug levels\r\n  Object.defineProperty(sequencer, \"ERROR\", { value: 1 });\r\n  Object.defineProperty(sequencer, \"WARN\", { value: 2 });\r\n  Object.defineProperty(sequencer, \"INFO\", { value: 3 });\r\n  Object.defineProperty(sequencer, \"LOG\", { value: 4 });\r\n}\r\nfunction assetManager() {\r\n\r\n  'use strict';\r\n\r\n  // console.log('AssetManager');\r\n\r\n  var\r\n    // import\r\n    loadLoop, //defined in util.js\r\n    findItem, //defined in util.js\r\n    storeItem, //defined in util.js\r\n    deleteItem, //defined in util.js\r\n    typeString, //defined in util.js\r\n    getArguments, //defined in util.js\r\n    isEmptyObject, // defined in util.js\r\n    objectForEach, //defined in util.js\r\n    storage, //defined in open_module.js\r\n    updateInstruments, //defined in sequencer.js\r\n    findItemsInFolder, //defined in util.js\r\n\r\n    busy = false,\r\n    taskIndex = 0,\r\n    finishedTasks = {},\r\n    taskQueue = [],\r\n    callbacks = [];\r\n\r\n\r\n  sequencer.removeMidiFile = function (path) {\r\n    var item,\r\n      items = [], i, folder;\r\n\r\n    if (path.className === 'MidiFile') {\r\n      item = path;\r\n      path = item.localPath;\r\n    } else {\r\n      item = findItem(path, storage.midi);\r\n    }\r\n\r\n    if (item.className === 'MidiFile') {\r\n      items.push(item);\r\n    } else {\r\n      folder = item;\r\n      objectForEach(folder, function (item) {\r\n        if (item.className === 'MidiFile') {\r\n          items.push(item);\r\n        }\r\n      });\r\n    }\r\n\r\n    for (i = items.length - 1; i >= 0; i--) {\r\n      item = items[i];\r\n      deleteItem(item.localPath, storage.midi);\r\n    }\r\n  };\r\n\r\n\r\n  sequencer.removeInstrument = function (path, unloadSamples) {\r\n    var item, items = [], i, folder, mapping, samplePath;\r\n\r\n    if (path.className === 'InstrumentConfig') {\r\n      item = path;\r\n      path = item.localPath;\r\n    } else {\r\n      item = findItem(path, storage.instruments);\r\n    }\r\n\r\n\r\n    if (item.className === 'InstrumentConfig') {\r\n      items.push(item);\r\n    } else {\r\n      folder = item;\r\n      for (i in folder) {\r\n        if (folder.hasOwnProperty(i)) {\r\n          item = folder[i];\r\n          if (item.className === 'InstrumentConfig') {\r\n            items.push(item);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (i = items.length - 1; i >= 0; i--) {\r\n      item = items[i];\r\n      //console.log(item.mapping);\r\n      mapping = item.mapping;\r\n      samplePath = item.sample_path;\r\n\r\n      if (unloadSamples === true) {\r\n        // delete samples\r\n        objectForEach(mapping, function (value) {\r\n          deleteItem(samplePath + '/' + value.n, storage.audio);\r\n        });\r\n        // delete sample pack\r\n        deleteItem(samplePath, storage.samplepacks);\r\n      }\r\n      // remove instrument from storage\r\n      deleteItem(item.localPath, storage.instruments);\r\n      //return deleteItem(path, storage.instruments);\r\n    }\r\n\r\n    // if an instrument has been removed, inform the tracks that used that instrument\r\n    updateInstruments();\r\n  };\r\n\r\n\r\n  sequencer.removeSamplePack = function (path) {\r\n    var item,\r\n      items = [], i, samples, sample, s, folder;\r\n\r\n    if (path.className === 'SamplePack') {\r\n      item = path;\r\n      path = item.localPath;\r\n    } else {\r\n      item = findItem(path, storage.samplepacks);\r\n    }\r\n\r\n    if (item.className === 'SamplePack') {\r\n      items.push(item);\r\n    } else {\r\n      folder = item;\r\n      objectForEach(folder, function (item) {\r\n        if (item.className === 'SamplePack') {\r\n          items.push(item);\r\n        }\r\n      });\r\n    }\r\n\r\n    for (i = items.length - 1; i >= 0; i--) {\r\n      item = items[i];\r\n      //console.log(item.localPath);\r\n      samples = item.samples;\r\n      for (s = samples.length - 1; s >= 0; s--) {\r\n        sample = samples[s];\r\n        //console.log('->', sample.folder + '/' + sample.id);\r\n        deleteItem(sample.folder + '/' + sample.id, storage.audio);\r\n      }\r\n      item.reset();\r\n      deleteItem(item.localPath, storage.samplepacks);\r\n    }\r\n\r\n    updateInstruments();\r\n    /*\r\n            function loopInstruments(root){\r\n                var item;\r\n    \r\n                for(i in root){\r\n                    if(root.hasOwnProperty(i)){\r\n                        if(i === 'id' || i === 'path' || i === 'className'){\r\n                            continue;\r\n                        }\r\n                        item = root[i];\r\n                        if(item.className === 'Folder'){\r\n                            loopInstruments(item);\r\n                        }else{\r\n                            item = findItem(item.folder + '/' + item.name, storage.instruments);\r\n                            console.log(item);\r\n                            if(item.parse){\r\n                                item.parse();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    \r\n            loopInstruments(storage.instruments);\r\n    */\r\n  };\r\n\r\n\r\n  sequencer.removeAssetPack = function (path) {\r\n    var item,\r\n      folder;\r\n\r\n    if (path.className === 'AssetPack') {\r\n      item = path;\r\n      path = item.localPath;\r\n    } else {\r\n      item = findItem(path, storage.assetpacks);\r\n    }\r\n\r\n    if (item.className === 'AssetPack') {\r\n      item.unload();\r\n    } else {\r\n      folder = item;\r\n      objectForEach(folder, function (item) {\r\n        if (item.className === 'AssetPack') {\r\n          item.unload();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  sequencer.startTaskQueue = function (cb) {\r\n    //console.log('startTaskQueue', taskQueue.length, busy);\r\n    if (busy === true) {\r\n      return;\r\n    }\r\n    busy = true;\r\n    loadQueueLoop(0, cb);\r\n  };\r\n\r\n\r\n  sequencer.addTask = function (task, callback, callbackAfterAllTasksAreDone) {\r\n    task.id = 'task' + taskIndex++;\r\n    taskQueue.push(task);\r\n    //console.log('task', task.type, taskQueue.length);\r\n    if (callback !== undefined) {\r\n      if (callbackAfterAllTasksAreDone === true) {\r\n        // call the callback only after all tasks are done\r\n        sequencer.addCallbackAfterTask(callback);\r\n      } else {\r\n        // call the callback right after this task is done\r\n        sequencer.addCallbackAfterTask(callback, [task.id]);\r\n      }\r\n    }\r\n    return task.id;\r\n  };\r\n\r\n\r\n  sequencer.addCallbackAfterTask = function (callback, taskIds) {\r\n    callbacks.push({\r\n      method: callback,\r\n      taskIds: taskIds\r\n    });\r\n    //console.log('taskIds', taskIds);\r\n  };\r\n\r\n\r\n  // this method loops over the load cue and performs the individual load method per asset\r\n  function loadQueueLoop(index, onTaskQueueDone) {\r\n    var task, params, scope,\r\n      i, j, callback, taskIds,\r\n      performCallback;\r\n\r\n    if (index === taskQueue.length) {\r\n      // call all callbacks that have to be called at the end of the loop queue\r\n      for (i = callbacks.length - 1; i >= 0; i--) {\r\n        callback = callbacks[i];\r\n        if (callback === false) {\r\n          // this callback has already been called\r\n          continue;\r\n        }\r\n        //console.log(i, callback.method);\r\n        var m = callback.method;\r\n        //callback = false;\r\n        //console.log(1,callback);\r\n        setTimeout(function () {\r\n          //console.log(2, m);\r\n          //callback.method();\r\n          m();\r\n        }, 0);\r\n      }\r\n      finishedTasks = {};\r\n      taskQueue = [];\r\n      callbacks = [];\r\n      taskIndex = 0;\r\n      busy = false;\r\n      if (onTaskQueueDone) {\r\n        // for internal use only, never used so far\r\n        console.log('onTaskQueueDone');\r\n        onTaskQueueDone();\r\n      }\r\n      //console.log('task queue done', sequencer.storage);\r\n      return;\r\n    }\r\n\r\n    task = taskQueue[index];\r\n    scope = task.scope || null;\r\n    params = task.params || [];\r\n\r\n    //console.log(index, task.type, taskQueue.length);\r\n\r\n    if (typeString(params) !== 'array') {\r\n      params = [params];\r\n    }\r\n\r\n    function cbActionLoop(success) {\r\n      //console.log('cbActionLoop', success);\r\n      // set a flag that this task has been done\r\n      finishedTasks[task.id] = true;\r\n\r\n      // check which callbacks we can call now\r\n      for (i = callbacks.length - 1; i >= 0; i--) {\r\n        callback = callbacks[i];\r\n        if (callback === false) {\r\n          // this callback has already been called\r\n          continue;\r\n        }\r\n        taskIds = callback.taskIds;\r\n        // console.log(i, callback.method, taskIds);\r\n        // some callbacks may only be called after a task, or a number of tasks have been done\r\n        if (taskIds !== undefined) {\r\n          performCallback = true;\r\n          for (j = taskIds.length - 1; j >= 0; j--) {\r\n            // if one of the required tasks has not been done yet, do not perform the callback\r\n            if (finishedTasks[taskIds[j]] !== true) {\r\n              performCallback = false;\r\n            }\r\n          }\r\n          //console.log('performCallback', performCallback);\r\n          if (performCallback) {\r\n            //callback.method.call(null);\r\n            //console.log(callback);\r\n            var m = callback.method;\r\n            callbacks[i] = false;\r\n            setTimeout(function () {\r\n              m(success);\r\n              //console.log(callbacks);\r\n            }, 0);\r\n          }\r\n        }\r\n      }\r\n\r\n      //console.log('task done', task.name, index, taskQueue.length);\r\n      index++;\r\n\r\n      // if(index === taskQueue.length && taskIds === undefined){\r\n\r\n      // }\r\n      loadQueueLoop(index, onTaskQueueDone);\r\n    }\r\n\r\n    params.push(cbActionLoop);\r\n\r\n    //console.log(index, taskQueue.length, task.method.name, params);\r\n    task.method.apply(scope, params);\r\n  }\r\n\r\n\r\n  sequencer.getInstrument = function (path, exact_match) {\r\n    return findItem(path, storage.instruments, exact_match);\r\n  };\r\n\r\n  sequencer.getMidiFile = function (path, exact_match) {\r\n    return findItem(path, storage.midi, exact_match);\r\n  };\r\n\r\n  sequencer.getSamplePack = function (path, exact_match) {\r\n    return findItem(path, storage.samplepacks, exact_match);\r\n  };\r\n\r\n  sequencer.getSample = function (path, exact_match) {\r\n    return findItem(path, storage.audio, exact_match);\r\n  };\r\n\r\n  sequencer.getAssetPack = function (path, exact_match) {\r\n    return findItem(path, storage.assetpacks, exact_match);\r\n  };\r\n\r\n  sequencer.getSamplePacks = function (path, include_subfolders) {\r\n    return findItemsInFolder(path, storage.samplepacks, include_subfolders);\r\n  };\r\n\r\n  sequencer.getAssetPacks = function (path, include_subfolders) {\r\n    return findItemsInFolder(path, storage.assetpacks, include_subfolders);\r\n  };\r\n\r\n  sequencer.getSamples = function (path, include_subfolders) {\r\n    return findItemsInFolder(path, storage.audio, include_subfolders);\r\n  };\r\n\r\n  sequencer.getInstruments = function (path, include_subfolders) {\r\n    return findItemsInFolder(path, storage.instruments, include_subfolders);\r\n  };\r\n\r\n  sequencer.getMidiFiles = function (path, include_subfolders) {\r\n    return findItemsInFolder(path, storage.midi, include_subfolders);\r\n  };\r\n\r\n\r\n  sequencer.protectedScope.addInitMethod(function () {\r\n    storage = sequencer.storage;\r\n    loadLoop = sequencer.protectedScope.loadLoop;\r\n    findItem = sequencer.protectedScope.findItem;\r\n    storeItem = sequencer.protectedScope.storeItem;\r\n    deleteItem = sequencer.protectedScope.deleteItem;\r\n    typeString = sequencer.protectedScope.typeString;\r\n    getArguments = sequencer.protectedScope.getArguments;\r\n    isEmptyObject = sequencer.protectedScope.isEmptyObject;\r\n    objectForEach = sequencer.protectedScope.objectForEach;\r\n    updateInstruments = sequencer.protectedScope.updateInstruments;\r\n    findItemsInFolder = sequencer.protectedScope.findItemsInFolder;\r\n  });\r\n\r\n}\r\nfunction assetPack() {\n\n    'use strict';\n\n    // console.log('AssetPack');\n\n    var\n        index = 0,\n        storage, // defined in open_module.js\n        ajax, // defined in utils.js\n        round, // defined in utils.js\n        parseUrl, // defined in utils.js\n        findItem, // defined in utils.js\n        storeItem, // defined in utils.js\n        deleteItem, // defined in utils.js\n        typeString, // defined in utils.js\n        objectForEach, // defined in utils.js\n        removeMidiFile, // defined in asset_manager.js\n        removeAssetPack, // defined in asset_manager.js\n        removeInstrument, // defined in asset_manager.js\n        removeSamplePack, // defined in asset_manager.js\n\n        AssetPack;\n\n    AssetPack = function (config) {\n        this.id = 'AP' + index++ + new Date().getTime();\n        this.name = this.id;\n        this.className = 'AssetPack';\n        this.loaded = false;\n        this.midifiles = config.midifiles || [];\n        this.samplepacks = config.samplepacks || [];\n        this.instruments = config.instruments || [];\n        this.url = config.url;\n        var pack = this;\n        objectForEach(config, function (val, key) {\n            pack[key] = val;\n        });\n    };\n\n\n    function cleanup(assetpack, callback) {\n        assetpack = null;\n        //console.log(callback.name);\n        callback(false);\n    }\n\n\n    function store(assetpack) {\n        var occupied = findItem(assetpack.localPath, sequencer.storage.assetpacks, true),\n            action = assetpack.action;\n\n        //console.log('occ', occupied);\n        if (occupied && occupied.className === 'AssetPack' && action !== 'overwrite') {\n            if (sequencer.debug >= 2) {\n                console.warn('there is already an AssetPack at', assetpack.localPath);\n            }\n            return true;\n        } else {\n            storeItem(assetpack, assetpack.localPath, sequencer.storage.assetpacks);\n            return false;\n        }\n    }\n\n\n    function load(pack, callback) {\n        if (pack.url !== undefined) {\n            ajax({\n                url: pack.url,\n                responseType: 'json',\n                onError: function (e) {\n                    //console.log('onError', e);\n                    cleanup(pack, callback);\n                },\n                onSuccess: function (data, fileSize) {\n                    // if the json data is corrupt (for instance because of a trailing comma) data will be null\n                    if (data === null) {\n                        callback(false);\n                        return;\n                    }\n\n                    pack.loaded = true;\n\n                    if (data.name !== undefined && pack.name === undefined) {\n                        pack.name = data.name;\n                    }\n\n                    if (data.folder !== undefined && pack.folder === undefined) {\n                        pack.folder = data.folder;\n                    }\n\n                    if (pack.name === undefined) {\n                        pack.name = parseUrl(pack.url).name;\n                    }\n\n                    pack.localPath = pack.folder !== undefined ? pack.folder + '/' + pack.name : pack.name;\n                    pack.filesize = fileSize;\n                    //pack.fileSize = round(data.length/1024/1024, 2);\n                    //console.log(pack.filesize);\n\n                    if (data.instruments) {\n                        pack.instruments = pack.instruments.concat(data.instruments);\n                    }\n                    if (data.samplepacks) {\n                        pack.samplepacks = pack.samplepacks.concat(data.samplepacks);\n                    }\n                    if (data.midifiles) {\n                        pack.midifiles = pack.midifiles.concat(data.midifiles);\n                    }\n\n                    loadLoop(pack, callback);\n                }\n            });\n        } else {\n            pack.localPath = pack.folder !== undefined ? pack.folder + '/' + pack.name : pack.name;\n            loadLoop(pack, callback);\n        }\n    }\n\n\n    function loadLoop(assetpack, callback) {\n        var i, assets, asset,\n            loaded = store(assetpack),\n            localPath = assetpack.localPath;\n\n\n        if (loaded === true) {\n            assetpack = findItem(localPath, sequencer.storage.assetpacks, true);\n            callback(assetpack);\n            return;\n        }\n\n        if (assetpack.url !== undefined) {\n            var packs = sequencer.storage.assetpacks,\n                tmp, p, double = null;\n\n            for (p in packs) {\n                tmp = packs[p];\n                if (tmp.className !== 'AssetPack') {\n                    continue;\n                }\n                //console.log('loop', p, assetpack.id);\n                if (tmp.id !== assetpack.id && tmp.url === assetpack.url) {\n                    double = tmp;\n                    break;\n                }\n            }\n            if (double !== null) {\n                //console.log(double.id, assetpack.id);\n                localPath = assetpack.localPath;\n                removeAssetPack(localPath);\n\n                assetpack = null;\n                assetpack = findItem(double.localPath, sequencer.storage.assetpacks, true);\n                //console.log(assetpack.id, double.id);\n                callback(assetpack);\n                return;\n            }\n        }\n\n\n        assets = assetpack.midifiles;\n        for (i = assets.length - 1; i >= 0; i--) {\n            //console.log('midifile', assets[i]);\n            asset = assets[i];\n            asset.pack = assetpack;\n            sequencer.addMidiFile(asset);\n        }\n\n        assets = assetpack.instruments;\n        for (i = assets.length - 1; i >= 0; i--) {\n            //console.log('instrument', assets[i]);\n            asset = assets[i];\n            asset.pack = assetpack;\n            sequencer.addInstrument(asset);\n        }\n\n        assets = assetpack.samplepacks;\n        for (i = assets.length - 1; i >= 0; i--) {\n            //console.log('samplepack', assets[i], pack);\n            asset = assets[i];\n            asset.pack = assetpack;\n            //console.log(asset.folder, pack.fileSize);\n            sequencer.addSamplePack(asset);\n        }\n\n        callback(assetpack);\n    }\n\n\n    AssetPack.prototype.unload = function () {\n        var i, assets, asset;\n\n        assets = this.midifiles;\n        for (i = assets.length - 1; i >= 0; i--) {\n            asset = assets[i];\n            removeMidiFile(asset.folder + '/' + asset.name);\n        }\n\n        assets = this.instruments;\n        for (i = assets.length - 1; i >= 0; i--) {\n            asset = assets[i];\n            removeInstrument(asset.folder + '/' + asset.name);\n        }\n\n        assets = this.samplepacks;\n        for (i = assets.length - 1; i >= 0; i--) {\n            asset = assets[i];\n            removeSamplePack(asset.folder + '/' + asset.name);\n        }\n\n        deleteItem(this.localPath, storage.assetpacks);\n    };\n\n\n    sequencer.addAssetPack = function (config, callback) {\n        var type = typeString(config),\n            assetpack, json, name, folder;\n\n        if (type !== 'object') {\n            if (sequencer.debug >= 2) {\n                console.warn('can\\'t create an AssetPack with this data', config);\n            }\n            return false;\n        }\n\n        if (callback === undefined) {\n            callback = function () { };\n        }\n\n        if (config.json) {\n            json = config.json;\n            name = config.name;\n            folder = config.folder;\n            if (typeString(json) === 'string') {\n                try {\n                    json = JSON.parse(json);\n                } catch (e) {\n                    if (sequencer.debug >= 2) {\n                        console.warn('can\\'t create an AssetPack with this data', config);\n                    }\n                    return false;\n                }\n            }\n            if (json.instruments === undefined && json.midifiles === undefined && json.samplepacks === undefined) {\n                if (sequencer.debug >= 2) {\n                    console.warn('can\\'t create an AssetPack with this data', config);\n                }\n                return false;\n            }\n            config = {\n                midifiles: json.midifiles,\n                instruments: json.instruments,\n                samplepacks: json.samplepacks,\n                name: name === undefined ? json.name : name,\n                folder: folder === undefined ? json.folder : folder\n            };\n            //console.log('config', name, folder, json.name, json.folder);\n        }\n\n\n        //assetpack = new AssetPack(config);\n        //console.log(assetpack.id);\n\n        sequencer.addTask({\n            type: 'load asset pack',\n            method: load,\n            params: new AssetPack(config)\n        }, function (assetpack) {\n            config = null;\n            // console.log(assetpack.id);\n            callback(assetpack);\n            //console.log('assetpack', assetpack);\n        }, true);\n\n        sequencer.startTaskQueue();\n/*\n        sequencer.addTask({\n            method: load,\n            params: assetpack\n        }, function(){\n            console.log('loaded', assetpack);\n            store(assetpack);\n            if(callback){\n                callback(assetpack);\n            }\n        });\n*/\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n\n        ajax = sequencer.protectedScope.ajax;\n        round = sequencer.protectedScope.round;\n        parseUrl = sequencer.protectedScope.parseUrl;\n        findItem = sequencer.protectedScope.findItem;\n        storeItem = sequencer.protectedScope.storeItem;\n        deleteItem = sequencer.protectedScope.deleteItem;\n        typeString = sequencer.protectedScope.typeString;\n        objectForEach = sequencer.protectedScope.objectForEach;\n\n        storage = sequencer.storage;\n        removeMidiFile = sequencer.removeMidiFile;\n        removeInstrument = sequencer.removeInstrument;\n        removeSamplePack = sequencer.removeSamplePack;\n        removeAssetPack = sequencer.removeAssetPack;\n    });\n}\nfunction audioEvent() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        slice = Array.prototype.slice,\r\n\r\n        //import\r\n        typeString, // → defined in utils.js\r\n\r\n        AudioEvent,\r\n        audioEventId = 0;\r\n\r\n\r\n    AudioEvent = function (config) {\r\n\r\n        if (config === undefined) {\r\n            // bypass for cloning\r\n            return;\r\n        }\r\n\r\n        // use ticks like in MidiEvent\r\n        if (config.ticks === undefined) {\r\n            this.ticks = 0;\r\n        } else {\r\n            this.ticks = config.ticks;\r\n        }\r\n\r\n\r\n        // provide either buffer (AudioBuffer) or path to a sample in the sequencer.storage object\r\n        this.buffer = config.buffer;\r\n        this.sampleId = config.sampleId;\r\n        this.path = config.path;\r\n\r\n        if (this.buffer === undefined && this.path === undefined) {\r\n            if (sequencer.debug >= sequencer.WARN) {\r\n                console.warn('please provide an AudioBuffer or a path to a sample in the sequencer.storage object');\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this.buffer !== undefined && typeString(this.buffer) !== 'audiobuffer') {\r\n            if (sequencer.debug >= sequencer.WARN) {\r\n                console.warn('buffer has to be an AudioBuffer');\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this.path !== undefined) {\r\n            if (typeString(this.path) !== 'string') {\r\n                if (sequencer.debug >= sequencer.WARN) {\r\n                    console.warn('path has to be a String');\r\n                }\r\n                return;\r\n            } else {\r\n\r\n                this.sampleId = this.path;\r\n                this.sampleId = this.sampleId.replace(/^\\//, '');\r\n                this.sampleId = this.sampleId.replace(/\\/$/, '');\r\n                this.sampleId = this.sampleId.split('/');\r\n                this.sampleId = this.sampleId[this.sampleId.length - 1];\r\n\r\n                this.buffer = sequencer.getSample(this.path);\r\n                if (this.buffer === false) {\r\n                    if (sequencer.debug >= sequencer.WARN) {\r\n                        console.warn('no sample found at', this.path);\r\n                    }\r\n                    return;\r\n                }\r\n                this.buffer = sequencer.getSample(this.path);\r\n                //console.log(this.sampleId, this.path, this.buffer);\r\n                //console.log(this.buffer);\r\n            }\r\n        }\r\n\r\n        // set either durationTicks of durationMillis, or both if they represent the same value\r\n        this.durationTicks = config.durationTicks;\r\n        this.durationMillis = config.durationMillis;\r\n\r\n        //console.log(this.durationTicks, this.durationMillis);\r\n\r\n        if (this.durationTicks === undefined && this.durationMillis === undefined) {\r\n            this.duration = this.buffer.duration;\r\n            this.durationMillis = this.duration * 1000;\r\n        }\r\n        //console.log(this.durationMillis, this.duration, this.buffer);\r\n\r\n        this.muted = false;\r\n\r\n        if (config.velocity === undefined) {\r\n            this.velocity = 127;\r\n        } else {\r\n            this.velocity = config.velocity;\r\n        }\r\n\r\n        // start of audio, also the quantize point, value in ticks or millis\r\n        this.sampleOffsetTicks = config.sampleOffsetTicks;\r\n        this.sampleOffsetMillis = config.sampleOffsetMillis;\r\n\r\n        if (this.sampleOffsetMillis === undefined && this.sampleOffsetTicks === undefined) {\r\n            this.sampleOffsetTicks = 0;\r\n            this.sampleOffsetMillis = 0;\r\n            this.sampleOffset = 0;\r\n        } else if (this.sampleOffsetMillis !== undefined) {\r\n            this.sampleOffset = this.sampleOffsetMillis / 1000;\r\n        }\r\n\r\n        this.latencyCompensation = config.latencyCompensation;\r\n        if (this.latencyCompensation === undefined) {\r\n            this.latencyCompensation = 0;\r\n        }\r\n\r\n        // if the playhead starts somewhere in the sample, this value will be set by the scheduler\r\n        this.playheadOffset = 0;\r\n\r\n        this.className = 'AudioEvent';\r\n        this.time = 0;\r\n        this.type = 'audio';\r\n        this.id = 'A' + audioEventId + new Date().getTime();\r\n    };\r\n\r\n\r\n    AudioEvent.prototype.update = function () {\r\n        var pos;\r\n        if (this.duration === undefined) {\r\n            pos = this.song.getPosition('ticks', this.ticks + this.durationTicks);\r\n            this.durationMillis = pos.millis - this.millis;\r\n            this.duration = this.durationMillis / 1000;\r\n            //console.log(pos, this.durationMillis);\r\n        } else if (this.durationTicks === undefined) {\r\n            pos = this.song.getPosition('millis', this.millis + this.durationMillis);\r\n            this.durationTicks = pos.ticks - this.ticks;\r\n        }\r\n\r\n        if (this.sampleOffset === undefined) {\r\n            pos = this.song.getPosition('ticks', this.ticks + this.sampleOffsetTicks);\r\n            //console.log(pos.barsAsString);\r\n            this.sampleOffsetMillis = pos.millis - this.millis;\r\n            this.sampleOffset = this.sampleOffsetMillis / 1000;\r\n            //console.log(this.sampleOffsetMillis);\r\n        } else if (this.sampleOffsetTicks === undefined) {\r\n            pos = this.song.getPosition('millis', this.millis + this.sampleOffsetMillis);\r\n            this.sampleOffsetTicks = pos.ticks - this.ticks;\r\n        }\r\n\r\n        this.endTicks = this.ticks + this.durationTicks;\r\n        this.endMillis = this.millis + this.durationMillis;\r\n    };\r\n\r\n\r\n\r\n    AudioEvent.prototype.stopSample = function (seconds) {\r\n        this.track.audio.stopSample(this, seconds);\r\n    };\r\n\r\n\r\n    AudioEvent.prototype.setSampleOffset = function (type, value) {\r\n        if (type === 'millis') {\r\n            this.sampleOffsetMillis = value;\r\n            this.sampleOffset = value / 1000;\r\n            this.durationTicks = undefined;\r\n            if (this.song !== undefined) {\r\n                this.update();\r\n            }\r\n        } else if (type === 'ticks') {\r\n            this.sampleOffsetTicks = value;\r\n            this.sampleOffset = undefined;\r\n            this.sampleOffsetMillis = undefined;\r\n            if (this.song !== undefined) {\r\n                this.update();\r\n            }\r\n        } else {\r\n            if (sequencer.debug >= sequencer.WARN) {\r\n                console.warn('you have to provide a type \"ticks\" or \"millis\" and a value');\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    AudioEvent.prototype.setDuration = function (type, value) {\r\n        if (type === 'millis') {\r\n            this.durationMillis = value;\r\n            this.duration = value / 1000;\r\n            this.durationTicks = undefined;\r\n            if (this.song !== undefined) {\r\n                this.update();\r\n            }\r\n        } else if (type === 'ticks') {\r\n            this.durationTicks = value;\r\n            this.duration = undefined;\r\n            this.durationMillis = undefined;\r\n            if (this.song !== undefined) {\r\n                this.update();\r\n            }\r\n        } else {\r\n            if (sequencer.debug >= sequencer.WARN) {\r\n                console.warn('you have to provide a type \"ticks\" or \"millis\" and a value');\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    AudioEvent.prototype.clone = AudioEvent.prototype.copy = function () {\r\n        var event = new AudioEvent(),\r\n            property;\r\n\r\n        for (property in this) {\r\n            if (this.hasOwnProperty(property)) {\r\n                //console.log(property);\r\n                if (property !== 'id' && property !== 'eventNumber') {\r\n                    event[property] = this[property];\r\n                }\r\n                event.song = undefined;\r\n                event.track = undefined;\r\n                event.trackId = undefined;\r\n                event.part = undefined;\r\n                event.partId = undefined;\r\n            }\r\n        }\r\n        return event;\r\n    };\r\n\r\n\r\n    // same as MidiEvent, could be inherited from generic Event\r\n    AudioEvent.prototype.reset = function (fromPart, fromTrack, fromSong) {\r\n\r\n        fromPart = fromPart === undefined ? true : false;\r\n        fromTrack = fromTrack === undefined ? true : false;\r\n        fromSong = fromSong === undefined ? true : false;\r\n\r\n        if (fromPart) {\r\n            this.part = undefined;\r\n            this.partId = undefined;\r\n        }\r\n        if (fromTrack) {\r\n            this.track = undefined;\r\n            this.trackId = undefined;\r\n            this.channel = 0;\r\n        }\r\n        if (fromSong) {\r\n            this.song = undefined;\r\n        }\r\n    };\r\n\r\n\r\n\r\n    // same as MidiEvent, could be inherited from generic Event\r\n    AudioEvent.prototype.move = function (ticks) {\r\n        if (isNaN(ticks)) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('please provide a number');\r\n            }\r\n            return;\r\n        }\r\n        this.ticks += parseInt(ticks, 10);\r\n        if (this.song !== undefined) {\r\n            this.update();\r\n        }\r\n        if (this.state !== 'new') {\r\n            this.state = 'changed';\r\n        }\r\n        if (this.part !== undefined) {\r\n            this.part.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    // same as MidiEvent, could be inherited from generic Event\r\n    AudioEvent.prototype.moveTo = function () {\r\n        var position = slice.call(arguments);\r\n        //console.log(position);\r\n\r\n        if (position[0] === 'ticks' && isNaN(position[1]) === false) {\r\n            this.ticks = parseInt(position[1], 10);\r\n        } else if (this.song === undefined) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('The audio event has not been added to a song yet; you can only move to ticks values');\r\n            }\r\n        } else {\r\n            position = this.song.getPosition(position);\r\n            if (position === false) {\r\n                if (sequencer.debug >= 1) {\r\n                    console.error('wrong position data');\r\n                }\r\n            } else {\r\n                this.ticks = position.ticks;\r\n            }\r\n        }\r\n\r\n        if (this.song !== undefined) {\r\n            this.update();\r\n        }\r\n        if (this.state !== 'new') {\r\n            this.state = 'changed';\r\n        }\r\n        if (this.part !== undefined) {\r\n            this.part.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    sequencer.createAudioEvent = function (config) {\r\n        if (config.className === 'AudioEvent') {\r\n            return config.clone();\r\n        }\r\n        return new AudioEvent(config);\r\n    };\r\n\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        typeString = sequencer.protectedScope.typeString;\r\n    });\r\n\r\n}function audioRecorder() {\n\n    'use strict';\n\n    var\n        // import\n        context, // defined in open_module.js\n        encode64, // defined in util.js\n        dispatchEvent, // defined in song_event_listener.js\n        createWorker, // defined in audio_recorder_worker.js\n        getWaveformData, //defined in util.js\n\n        microphoneAccessGranted = null,\n        localMediaStream,\n\n        bufferSize = 8192,\n        millisPerSample,\n        bufferMillis,\n\n        waveformConfig = {\n            height: 200,\n            width: 800,\n            //density: 0.0001,\n            sampleStep: 1,\n            color: '#71DE71',\n            bgcolor: '#000'\n        };\n\n\n    function AudioRecorder(track) {\n        this.track = track;\n        this.song = track.song;\n        this.audioEvents = {};\n        this.callback = null; // callback after wav audio file of the recording has been created or updated\n        this.worker = createWorker();\n        this.waveformConfig = track.waveformConfig || waveformConfig;\n\n        var scope = this;\n        this.worker.onmessage = function (e) {\n            //createAudioBuffer(scope, e.data.wavArrayBuffer, e.data.interleavedSamples, e.data.planarSamples, e.data.id);\n            encodeAudioBuffer(scope, e.data.wavArrayBuffer, e.data.interleavedSamples, e.data.id);\n        };\n    }\n\n\n    function createAudioBuffer(scope, wavArrayBuffer, interleavedSamples, planarSamples, type) {\n        var\n            i,\n            frameCount = planarSamples.length,\n            base64 = encode64(wavArrayBuffer),\n            audioBuffer = context.createBuffer(1, frameCount, context.sampleRate),\n            samples = audioBuffer.getChannelData(0),\n            recording = {\n                id: scope.recordId,\n                audioBuffer: null,\n                wavArrayBuffer: wavArrayBuffer,\n                wav: {\n                    blob: new Blob([new Uint8Array(wavArrayBuffer)], { type: 'audio/wav' }),\n                    base64: base64,\n                    dataUrl: 'data:audio/wav;base64,' + base64\n                },\n                waveform: {}\n            };\n\n    for (let i = 0; i < frameCount; i++) {\n            samples[i] = planarSamples[i];\n        }\n        recording.audioBuffer = audioBuffer;\n\n        // keep a copy of the original samples for non-destructive editing\n        if (type === 'new') {\n            recording.planarSamples = planarSamples;\n            recording.interleavedSamples = interleavedSamples;\n        } else {\n            recording.planarSamples = sequencer.storage.audio.recordings[scope.recordId].planarSamples;\n            recording.interleavedSamples = sequencer.storage.audio.recordings[scope.recordId].interleavedSamples;\n        }\n\n        sequencer.storage.audio.recordings[scope.recordId] = recording;\n        //console.log('create took', window.performance.now() - scope.timestamp);\n\n        if (scope.callback !== null) {\n            scope.callback(recording);\n            scope.callback = null;\n        }\n    }\n\n\n    function encodeAudioBuffer(scope, wavArrayBuffer, interleavedSamples, type) {\n        //console.log(wavArrayBuffer, interleavedSamples, type);\n        context.decodeAudioData(wavArrayBuffer, function (audioBuffer) {\n            var\n                base64 = encode64(wavArrayBuffer),\n                recording = {\n                    id: scope.recordId,\n                    audioBuffer: audioBuffer,\n                    wavArrayBuffer: wavArrayBuffer,\n                    wav: {\n                        blob: new Blob([new Uint8Array(wavArrayBuffer)], { type: 'audio/wav' }),\n                        base64: base64,\n                        dataUrl: 'data:audio/wav;base64,' + base64\n                    },\n                    waveform: {}\n                };\n\n            // keep a copy of the original samples for non-destructive editing\n            if (type === 'new') {\n                recording.interleavedSamples = interleavedSamples;\n            } else {\n                recording.interleavedSamples = sequencer.storage.audio.recordings[scope.recordId].interleavedSamples;\n            }\n\n            // create waveform images\n            getWaveformData(\n                audioBuffer,\n                scope.waveformConfig,\n                //callback\n                function (data) {\n                    recording.waveform = { dataUrls: data };\n                    sequencer.storage.audio.recordings[scope.recordId] = recording;\n                    //console.log('encode took', window.performance.now() - scope.timestamp);\n                    if (scope.callback !== null) {\n                        scope.callback(recording);\n                        scope.callback = null;\n                    }\n                }\n            );\n\n        }, function () {\n            if (sequencer.debug >= sequencer.WARN) {\n                console.warn('no valid audiodata');\n            }\n        });\n    }\n\n\n    function record(callback) {\n\n        navigator.getUserMedia({ audio: true },\n\n            // successCallback\n            function (stream) {\n                microphoneAccessGranted = true;\n                // localMediaStream is type of MediaStream that comes from microphone\n                localMediaStream = stream;\n                //console.log(localMediaStream.getAudioTracks());\n                //console.log(localMediaStream.getVideoTracks());\n                callback();\n            },\n\n            // errorCallback\n            function (error) {\n                if (sequencer.debug >= sequencer.WARN) {\n                    console.log(error);\n                }\n                microphoneAccessGranted = false;\n                callback();\n            }\n        );\n    }\n\n\n    // this triggers the little popup in the browser where the user has to grant access to her microphone\n    AudioRecorder.prototype.prepare = function (recordId, callback) {\n        var scope = this;\n\n        this.recordId = recordId;\n\n        if (microphoneAccessGranted === null) {\n            record(function () {\n                callback(microphoneAccessGranted);\n                if (localMediaStream !== undefined) {\n                    //scope.localMediaStream = localMediaStream.clone(); -> not implemented yet\n                    scope.start();\n                }\n            });\n        } else {\n            callback(microphoneAccessGranted);\n            if (localMediaStream !== undefined) {\n                //this.localMediaStream = localMediaStream.clone(); -> not implemented yet\n                this.start();\n            }\n        }\n    };\n\n\n    AudioRecorder.prototype.start = function () {\n        var scope = this,\n            song = this.track.song;\n\n        scope.worker.postMessage({\n            command: 'init',\n            sampleRate: context.sampleRate\n        });\n\n        this.scriptProcessor = context.createScriptProcessor(bufferSize, 1, 1);\n\n        this.scriptProcessor.onaudioprocess = function (e) {\n\n            if (e.inputBuffer.numberOfChannels === 1) {\n\n                scope.worker.postMessage({\n                    command: 'record_mono',\n                    buffer: e.inputBuffer.getChannelData(0)\n                });\n\n\n            } else {\n\n                scope.worker.postMessage({\n                    command: 'record_stereo',\n                    buffer: [\n                        e.inputBuffer.getChannelData(0),\n                        e.inputBuffer.getChannelData(1)\n                    ]\n                });\n            }\n\n            if (song.recording === false && song.precounting === false) {\n                scope.createAudio();\n            }\n        };\n\n        this.sourceNode = context.createMediaStreamSource(localMediaStream);\n        this.sourceNode.connect(this.scriptProcessor);\n        this.scriptProcessor.connect(context.destination);\n    };\n\n\n    AudioRecorder.prototype.stop = function (callback) {\n        this.stopRecordingTimestamp = context.currentTime * 1000;\n        this.timestamp = window.performance.now();\n        if (this.sourceNode === undefined) {\n            callback();\n            return;\n        }\n        this.callback = callback;\n    };\n\n\n    // create wav audio file after recording has stopped\n    AudioRecorder.prototype.createAudio = function () {\n        this.sourceNode.disconnect(this.scriptProcessor);\n        this.scriptProcessor.disconnect(context.destination);\n        this.scriptProcessor.onaudioprocess = null;\n        this.sourceNode = null;\n        this.scriptProcessors = null;\n\n        // remove precount bars and latency\n        var bufferIndexStart = parseInt((this.song.metronome.precountDurationInMillis + this.song.audioRecordingLatency) / millisPerSample),\n            bufferIndexEnd = -1;\n\n        this.worker.postMessage({\n            command: 'get_wavfile',\n            //command: 'get_wavfile2', // use this if you want to create the audio buffer instead of decoding it\n            bufferIndexStart: bufferIndexStart,\n            bufferIndexEnd: bufferIndexEnd\n        });\n    };\n\n\n    // adjust latency for specific recording -> all audio events that use this audio data will be updated!\n    // if you don't want that, please use AudioEvent.sampleOffset to adjust the starting point of the audio data\n    AudioRecorder.prototype.setAudioRecordingLatency = function (recordId, value, callback) {\n        var bufferIndexStart = parseInt(value / millisPerSample),\n            bufferIndexEnd = -1;\n\n        this.callback = callback;\n        this.worker.postMessage({\n            command: 'update_wavfile',\n            samples: sequencer.storage.audio.recordings[recordId].interleavedSamples,\n            bufferIndexStart: bufferIndexStart,\n            bufferIndexEnd: bufferIndexEnd\n        });\n    };\n\n\n    AudioRecorder.prototype.cleanup = function () {\n        if (localMediaStream === undefined) {\n            this.worker.terminate();\n            return;\n        }\n        //this.localMediaStream.stop();\n        this.scriptProcessor.disconnect();\n        this.scriptProcessor.onaudioprocess = null;\n        this.sourceNode.disconnect();\n        this.scriptProcessor = null;\n        this.sourceNode = null;\n        this.worker.terminate();\n    };\n\n\n    sequencer.protectedScope.createAudioRecorder = function (track) {\n        if (sequencer.record_audio === false) {\n            return false;\n        }\n        return new AudioRecorder(track);\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        encode64 = sequencer.util.encode64;\n        context = sequencer.protectedScope.context;\n        getWaveformData = sequencer.getWaveformData;\n        createWorker = sequencer.protectedScope.createAudioRecorderWorker;\n        millisPerSample = (1 / context.sampleRate) * 1000;\n        dispatchEvent = sequencer.protectedScope.songDispatchEvent;\n        bufferMillis = bufferSize * millisPerSample;\n    });\n\n}\n\n\n/*\n    // real-time waveform rendering, not implemented\n    AudioRecorder.prototype.drawCanvas = function(amplitudeArray, column){\n        var minValue = 9999999;\n        var maxValue = 0;\n        var canvasHeight = 100;\n        var canvasWidth = 1000;\n\n        for (var i = 0; i < amplitudeArray.length; i++) {\n            var value = amplitudeArray[i] / 256;\n            if(value > maxValue) {\n                maxValue = value;\n            } else if(value < minValue) {\n                minValue = value;\n            }\n        }\n\n        var y_lo = canvasHeight - (canvasHeight * minValue) - 1;\n        var y_hi = canvasHeight - (canvasHeight * maxValue) - 1;\n\n        this.context2d.fillStyle = '#ffffff';\n        this.context2d.fillRect(column, y_lo, 1, y_hi - y_lo);\n    };\n*/\n\n\n\n/*\n            getWaveformImageUrlFromBuffer(\n                audioBuffer,\n\n                {\n                    height: 200,\n                    //density: 0.0001,\n                    width: 800,\n                    sampleStep: 1,\n                    // density: 0.5,\n                    color: '#71DE71',\n                    bgcolor: '#000',\n                    samples: samples\n                },\n\n                //callback\n                function(urls){\n                    var image, images = [],\n                        i, maxi = urls.length;\n\n                    // create html image instances from the data-urls\n                    for(i = 0; i < maxi; i++){\n                        image = document.createElement('img');\n                        image.src = urls[i];\n                        image.origWidth = image.width;\n                        image.height = 100;\n                        images.push(image);\n                    }\n\n                    recording.waveform.images = images;\n                    recording.waveform.dataUrls = urls;\n\n                    sequencer.storage.audio.recordings[scope.recordId] = recording;\n                    console.log('took', window.performance.now() - scope.timestamp);\n                    if(scope.callback !== null){\n                        scope.callback(recording);\n                        scope.callback = null;\n                    }\n                }\n            );\n*/\n/*\n    controls the playback of the audio events in a track\n*/\nfunction audioTrack() {\n\n    'use strict';\n\n    var\n        slice = Array.prototype.slice,\n\n        //import\n        typeString, // → defined in utils.js\n        createAudioRecorder, // → defined in audio_recorder.js\n\n        unscheduleCallback,\n        AudioTrack;\n\n\n    AudioTrack = function (track) {\n        this.track = track;\n        this.className = 'AudioTrack';\n        this.scheduledSamples = {};\n        this.recorder = createAudioRecorder(track);\n    };\n\n\n    unscheduleCallback = function (sample) {\n        //console.log(sample.id, 'has been unscheduled');\n        delete this.scheduledSamples[sample.id];\n        sample = null;\n    };\n\n\n    AudioTrack.prototype.setAudioRecordingLatency = function (recordId, value, callback) {\n        this.recorder.setAudioRecordingLatency(recordId, value, callback);\n    };\n\n\n    AudioTrack.prototype.processEvent = function (audioEvent) {\n        var sample = sequencer.createSample({ buffer: audioEvent.buffer, track: audioEvent.track });\n        audioEvent.sample = sample;\n        //console.log(audioEvent.sampleOffset, audioEvent.playheadOffset, audioEvent.latencyCompensation);\n        audioEvent.offset = audioEvent.sampleOffset + audioEvent.playheadOffset;// + audioEvent.latencyCompensation;\n        //audioEvent.time -= audioEvent.latencyCompensation;\n        // set playheadOffset to 0 after the event has been scheduled\n        audioEvent.playheadOffset = 0;\n        //sample.start(audioEvent.time/1000, 127, audioEvent.offsetMillis/1000, audioEvent.durationMillis/1000);\n\n        sample.start(audioEvent);\n        //console.log(time, time + audioEvent.durationMillis/1000);\n        //sample.stop(time + audioEvent.durationMillis/1000, function(){});\n\n        this.scheduledSamples[sample.id] = sample;\n    };\n\n    /*\n        AudioTrack.prototype.playEvent = function(audioEvent, seconds){\n        };\n    */\n\n    AudioTrack.prototype.stopSample = function (audioEvent, seconds) {\n        //console.log('stopping', audioEvent.id);\n        if (audioEvent.sample === undefined) {\n            return;\n        }\n        audioEvent.sample.stop(seconds, unscheduleCallback.bind(this));\n    };\n\n\n    AudioTrack.prototype.allNotesOff = function () {\n        var sampleId, sample,\n            scheduledSamples = this.scheduledSamples;\n\n        for (sampleId in scheduledSamples) {\n            if (scheduledSamples.hasOwnProperty(sampleId)) {\n                //console.log('allNotesOff', sampleId);\n                sample = scheduledSamples[sampleId];\n                if (sample) {\n                    sample.unschedule(0, unscheduleCallback.bind(this));\n                }\n            }\n        }\n        this.scheduledSamples = {};\n    };\n\n\n    AudioTrack.prototype.prepareForRecording = function (recordId, callback) {\n        if (this.recorder === false) {\n            return false;\n        }\n        this.recorder.prepare(recordId, callback);\n    };\n\n\n    AudioTrack.prototype.stopRecording = function (callback) {\n        this.recorder.stop(function (recording) {\n            callback(recording);\n        });\n    };\n\n    sequencer.protectedScope.createAudioTrack = function (track) {\n        return new AudioTrack(track);\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        typeString = sequencer.protectedScope.typeString;\n        createAudioRecorder = sequencer.protectedScope.createAudioRecorder;\n    });\n\n}\n\n// Sample.source -> gain (midiEvent.velocity) ->\n// Track.input -> [FX input ~~ FX output] -> Track.panner (Track.setPanning())-> Track.output (Track.setVolume())\n// Song.gain (Song.setVolume()) ->\n// Sequencer.gain (sequencer.setMasterVolume()) -> Sequencer.compressor -> context.destiny\n\nfunction channelEffects() {\n\n    'use strict';\n\n    var\n\n        id = 0,\n        context,\n\n        zeroValue = 0.00000000000000001,\n\n        createClass, // defined in util.js\n        getSample, // defined in instrument_manager.js\n\n        Reverb,\n        Panner,\n        Panner2,\n        Delay,\n        BiQuadFilter,\n        Compressor;\n\n\n    function Effect(config) {\n        this.id = 'FX' + id++ + '' + new Date().getTime();\n        this.type = config.type;\n        this.buffer = config.buffer;\n        this.config = config;\n\n        this.bypass = false;\n        this.amount = 0;//0.5;\n\n        this.output = context.createGainNode();\n        this.wetGain = context.createGainNode();\n        this.dryGain = context.createGainNode();\n\n        this.output.gain.value = 1;\n        this.wetGain.gain.value = this.amount;\n        this.dryGain.gain.value = 1 - this.amount;\n    }\n\n\n    Effect.prototype.setInput = function (input) {\n        // input.connect(this.node);\n        // return;\n\n        // dry channel\n        input.connect(this.dryGain);\n        this.dryGain.connect(this.output);\n\n        // wet channel\n        input.connect(this.node);\n        this.node.connect(this.wetGain);\n        this.wetGain.connect(this.output);\n    };\n\n    /*\n        Effect.prototype.setOutput = function(output){\n            this.output.disconnect(0);\n            this.output.connect(output);\n        };\n    */\n\n    Effect.prototype.setAmount = function (value) {\n        /*\n        this.amount = value < 0 ? 0 : value > 1 ? 1 : value;\n        var gain1 = Math.cos(this.amount * 0.5 * Math.PI),\n            gain2 = Math.cos((1.0 - this.amount) * 0.5 * Math.PI);\n        this.gainNode.gain.value = gain2 * this.ratio;\n        */\n\n        this.amount = value < 0 ? 0 : value > 1 ? 1 : value;\n        this.wetGain.gain.value = this.amount;\n        this.dryGain.gain.value = 1 - this.amount;\n        //console.log('wet',this.wetGain.gain.value,'dry',this.dryGain.gain.value);\n    };\n\n\n    Effect.prototype.copy = function () {\n        switch (this.type) {\n            case 'reverb':\n                return new Reverb(this.config);\n            case 'panner':\n                return new Panner(this.config);\n            case 'panner2':\n                return new Panner2(this.config);\n            case 'delay':\n                return new Delay(this.config);\n            case 'compressor':\n                return new Compressor(this.config);\n        }\n    };\n\n\n    sequencer.createReverb = function (id) {\n        var buffer = getSample(id);\n        if (buffer === false) {\n            console.warn('no reverb with id', id, 'loaded');\n            return false;\n        }\n        var config = {\n            type: 'reverb',\n            buffer: buffer\n        };\n        return new Reverb(config);\n    };\n\n\n    sequencer.createPanner = function (config) {\n        config = config || {};\n        config.type = 'panner';\n        return new Panner(config);\n    };\n\n\n    sequencer.createPanner2 = function (config) {\n        config = config || {};\n        config.type = 'panner2';\n        return new Panner2(config);\n    };\n\n\n    sequencer.createDelay = function (config) {\n        config = config || {};\n        config.type = 'delay';\n        return new Delay(config);\n    };\n\n\n    sequencer.createCompressor = function (config) {\n        config = config || {};\n        config.type = 'compressor';\n        return new Compressor(config);\n    };\n\n\n    sequencer.createBiQuadFilter = function (config) {\n        config = config || {};\n        config.type = 'biquadfilter';\n        return new BiQuadFilter(config);\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        context = sequencer.protectedScope.context;\n        createClass = sequencer.protectedScope.createClass;\n        getSample = sequencer.getSample;\n\n        Reverb = createClass(Effect, function (config) {\n            this.node = context.createConvolver();\n            this.node.buffer = config.buffer;\n            //console.log(this.node.buffer);\n        });\n\n        Panner = createClass(Effect, function (config) {\n            this.node = context.createPanner();\n            this.node.panningModel = 'equalpower';\n            this.node.setPosition(zeroValue, zeroValue, zeroValue);\n        });\n\n        Panner2 = createClass(Effect, function (config) {\n            this.node = context.createPanner();\n            this.node.panningModel = 'HRTF';\n            this.node.setPosition(zeroValue, zeroValue, zeroValue);\n        });\n\n        Delay = createClass(Effect, function (config) {\n            this.node = context.createDelay();\n            this.node.delayTime.value = 0.3;\n        });\n\n        Compressor = createClass(Effect, function (config) {\n            this.node = context.createDynamicsCompressor();\n        });\n\n\n        BiQuadFilter = createClass(Effect, function (config) {\n            this.node = context.createBiquadFilter();\n            this.node.type = 0;\n            this.node.Q.value = 4;\n            this.node.frequency.value = 1600;\n        });\n\n        /*\n        Panner.prototype.setPosition = function(x, y, z){\n            var multiplier = 5;\n            console.log(x * multiplier);\n            this.node.setPosition(x * multiplier, y * multiplier, z * multiplier);\n        };\n        */\n\n        Panner.prototype.setPosition = function (value) {\n            var x = value,\n                y = 0,\n                z = 1 - Math.abs(x);\n\n            x = x === 0 ? zeroValue : x;\n            y = y === 0 ? zeroValue : y;\n            z = z === 0 ? zeroValue : z;\n            this.node.setPosition(x, y, z);\n            //console.log(1,x,y,z);\n        };\n\n        Panner2.prototype.setPosition = function (value) {\n            var xDeg = parseInt(value),\n                zDeg = xDeg + 90,\n                x, y, z;\n            if (zDeg > 90) {\n                zDeg = 180 - zDeg;\n            }\n            x = Math.sin(xDeg * (Math.PI / 180));\n            y = 0;\n            z = Math.sin(zDeg * (Math.PI / 180));\n            x = x === 0 ? zeroValue : x;\n            y = y === 0 ? zeroValue : y;\n            z = z === 0 ? zeroValue : z;\n            this.node.setPosition(x, y, z);\n            //console.log(2,x,y,z);\n        };\n\n        Delay.prototype.setTime = function (value) {\n            this.node.delayTime.value = value;\n        };\n\n    });\n}\n\n\n/*\n\n        // only reverb is currently supported, filter out reverb\n        if(this.numEffects > 0){\n            for(i in this.effects){\n                if(this.effects.hasOwnProperty(i)){\n                   effect = this.effects[i];\n                   if(this.reverb === undefined && effect.type === 'reverb'){\n                        this.reverb = effect;\n                        break;\n                   }\n                }\n            }\n            this.source.connect(this.reverb.node);\n            this.reverb.node.disconnect(0);\n            this.reverb.node.connect(this.wetGain);\n            this.wetGain.gain.value = this.reverb.amount;\n            this.dryGain.gain.value = (1 - this.reverb.amount);\n        }else{\n            this.dryGain.gain.value = 1;\n        }\n\n\n*/\n\n\n\n/*\n\n    operators:\n\n    - max\n    - min\n    - avg\n    - all\n\n\n    eventStats.get('noteNumber max');\n    eventStats.get('noteNumber min');\n    eventStats.get('noteNumber avg');\n\n    eventStats.get('data2 max type = PITCH_BEND');\n    eventStats.get('data2 min');\n    eventStats.get('data2 avg');\n\n    eventStats.get('velocity avg bar = 3');\n\n    eventStats.get('velocity max musical_time > 1,1,1,0 < 8,1,1,0');\n\n\n    return {\n        min: min,\n        max: max,\n        avg: avg\n    };\n\n\n    implementation:\n\n    song.getStats(searchString);\n    track.getStats(searchString);\n    sequencer.getStats(events, searchString);\n\n\n*/\n\nfunction eventStatistics() {\n\n    'use strict';\n\n    var\n        //import\n        createNote = sequencer.createNote, // → defined in note.js\n        findEvent = sequencer.findEvent, // → defined in find_event.js\n        round = sequencer.protectedScope.round, // → defined in util.js\n        getEvents = sequencer.protectedScope.getEvents, // → defined in find_event.js\n        typeString = sequencer.protectedScope.typeString, // → defined in util.js\n\n        supportedOperators = 'max min avg all',\n        supportedProperties = 'data1 data2 velocity noteNumber noteName frequency',\n\n        //public\n        getStats;\n\n\n    /**\n        @memberof sequencer\n        @instance\n        @param {array} events\n        @param {string} searchString\n        @description Get statistics of an array of events, see [documentation]{@link http://heartbeatjs.org/docs/statistics}\n    */\n    getStats = function () {\n        var args = Array.prototype.slice.call(arguments),\n            numArgs = args.length,\n            property,\n            operator,\n            events,\n            searchPattern,\n            patternLength,\n            i, maxi, event, propValue,\n            minNoteName,\n            maxNoteName,\n            min = 128,//Number.MAX_VALUE,\n            max = -1,\n            sum = 0,\n            avg = 0,\n            useNoteName = false;\n\n\n        events = getEvents(args[0]);\n\n        if (events.length === 0) {\n            //console.warn('getStats: no events');\n            return -1;\n        }\n\n        searchPattern = args[1];\n\n        if (typeString(searchPattern) !== 'string') {\n            console.error('please provide a search string like for instance get(\\'velocity max bar >= 1 < 8\\')');\n            return -1;\n        }\n\n        if (numArgs > 2) {\n            console.warn('ignoring invalid arguments, please consult documentation');\n        }\n\n        searchPattern = searchPattern.split(' ');\n        patternLength = searchPattern.length;\n\n        property = searchPattern[0];\n        operator = searchPattern[1];\n\n        if (supportedProperties.indexOf(property) === -1) {\n            console.error('you can\\'t use \\'min\\', \\'max\\' or \\'avg\\'', 'on the property', property);\n            return -1;\n        }\n\n        if (supportedOperators.indexOf(operator) === -1) {\n            console.error(operator, 'is not a valid operator');\n            return -1;\n        }\n\n\n        if (patternLength > 2) {\n\n            //if(patternLength !== 5 && !(patternLength >= 7)){\n            if (patternLength === 6) {\n                console.warn('ignoring cruft found in search string, please consult documentation');\n            }\n\n            searchPattern.shift(); // remove property\n            searchPattern.shift(); // remove operator\n\n            //filter events\n            events = findEvent(events, searchPattern.join(' '));\n        }\n\n        //console.log(events);\n\n        if (property === 'noteName') {\n            property = 'noteNumber';\n            useNoteName = true;\n        }\n\n        for (i = 0, maxi = events.length; i < maxi; i++) {\n            event = events[i];\n            propValue = event[property];\n\n            if (propValue > max) {\n                //console.log('max', propValue, max);\n                max = propValue;\n                maxNoteName = event.noteName;\n            }\n            if (propValue < min) {\n                //console.log('min', propValue, min);\n                min = propValue;\n                minNoteName = event.noteName;\n            }\n\n            if (propValue !== undefined) {\n                sum += propValue;\n            }\n        }\n\n        avg = sum / maxi;\n\n        if (useNoteName) {\n            avg = round(avg);\n            avg = createNote(avg).name;\n            min = minNoteName;\n            max = maxNoteName;\n        }\n\n        if (operator === 'max') {\n            return max;\n        }\n\n        if (operator === 'min') {\n            return min;\n        }\n\n        if (operator === 'avg') {\n            return avg;\n        }\n\n        if (operator === 'all') {\n            return {\n                min: min,\n                max: max,\n                avg: avg\n            };\n        }\n    };\n\n    sequencer.getStats = getStats;\n\n    sequencer.protectedScope.addInitMethod(function () {\n        createNote = sequencer.createNote;\n        findEvent = sequencer.findEvent;\n        round = sequencer.protectedScope.round;\n        getEvents = sequencer.protectedScope.getEvents;\n        typeString = sequencer.protectedScope.typeString;\n    });\n\n}function findEvent() {\r\n\r\n\t'use strict';\r\n\r\n\tvar\r\n\t\t//import\r\n\t\tcreateNote, // → defined in note.js\r\n\t\ttypeString, // → defined in util.js\r\n\t\tcreateMidiNote, // → defined in midi_note.js\r\n\t\tmidiEventNumberByName, // → defined in midi_event_names.js\r\n\r\n\t\t//local\r\n\t\tpatterns,\r\n\t\toperators,\r\n\r\n\t\tproperties = {\r\n\t\t\t'barsbeats': ['bar', 'beat', 'sixteenth', 'tick'],\r\n\t\t\t'time': ['hour', 'minute', 'second', 'millisecond']\r\n\t\t},\r\n\r\n\t\tlogicalOperators = 'OR AND NOT XOR',\r\n\t\tlogicalOperatorsRegex = new RegExp(' ' + logicalOperators.replace(/\\s+/g, ' | ') + ' '),// → replaces logical operator by a white space\r\n\r\n\t\tsupportedProperties = {\r\n\t\t\tbar: 1,\r\n\t\t\tbeat: 1,\r\n\t\t\tsixteenth: 1,\r\n\t\t\ttick: 1,\r\n\t\t\tticks: 1,\r\n\t\t\tbarsbeats: 1,\r\n\t\t\tmusical_time: 1,\r\n\r\n\t\t\thour: 1,\r\n\t\t\tminute: 1,\r\n\t\t\tsecond: 1,\r\n\t\t\tmillisecond: 1,\r\n\t\t\tmillis: 1,\r\n\t\t\ttime: 1,\r\n\t\t\tlinear_time: 1,\r\n\r\n\t\t\tid: 1,\r\n\t\t\ttype: 1,\r\n\t\t\tdata1: 1,\r\n\t\t\tdata2: 1,\r\n\t\t\tvelocity: 1, // only if midi event is note on or note off\r\n\t\t\tnoteNumber: 1, // idem\r\n\t\t\tfrequency: 1, // idem\r\n\t\t\tnoteName: 1 // idem\r\n\t\t},\r\n\r\n\r\n\t\t//public\r\n\t\tfindEvent,\r\n\t\tfindNote,\r\n\r\n\t\t//private\r\n\t\tgetEvents,\r\n\t\tcheckValue,\r\n\t\tcreatePattern,\r\n\t\tcheckOperators,\r\n\t\tcheckCondition,\r\n\t\tcheckCondition2,\r\n\t\tinverseOperator,\r\n\t\tremoveMutualEvents,\r\n\t\tremoveDoubleEvents,\r\n\t\tperformSearch;\r\n\r\n\t/*\r\n\r\n\t\t(bar > 3 AND beat = 2 OR velocity = 60) => ((bar > 3 && beat === 2) || velocity === 60)\r\n\r\n\t\t(beat = 2 OR velocity = 60 AND bar > 3) => ((beat === 2 || velocity === 60) && bar > 3)\r\n\r\n\t\t(beat == 2 XOR velocity == 60) -> all events that are on beat 2 and all events that have on velocity 60, but not the event that match both\r\n\r\n\t\tstep 1: get all events that match beat == 2\r\n\t\tstep 2: add all events that match velocity == 60\r\n\t\tstep 3: remove all events that match both beat == 2 AND velocity == 60\r\n\t*/\r\n\r\n\r\n\tfindEvent = function () {\r\n\t\t//console.time('find events');\r\n\t\tvar args = Array.prototype.slice.call(arguments),\r\n\t\t\ti, maxi,\r\n\t\t\t//j, maxj,\r\n\t\t\t//k, maxk,\r\n\t\t\tsearchString, tmp,\r\n\t\t\toperator, pattern,\r\n\t\t\tprevPattern, prevOperator,\r\n\t\t\tpatternIndex, operatorIndex,\r\n\t\t\tevents, results,\r\n\t\t\tlastResult,\r\n\t\t\tsubResult1,\r\n\t\t\tsubResult2;\r\n\r\n\r\n\t\t//console.log(args[0])\r\n\t\tevents = getEvents(args[0]);\r\n\t\tresults = [];\r\n\r\n\t\tif (events.length === 0) {\r\n\t\t\tconsole.warn('findEvent: no events');\r\n\t\t\treturn results;\r\n\t\t}\r\n\r\n\t\tif (typeString(args[1]) !== 'string') {\r\n\t\t\tconsole.error('please provide a search string like for instance findEvent(\\'beat = 2 AND velocity > 60 < 100\\');');\r\n\t\t\treturn results;\r\n\t\t}\r\n\r\n\t\tsearchString = args[1];\r\n\r\n\t\t//get the operators\r\n\t\ttmp = searchString.split(' ');\r\n\t\tmaxi = tmp.length;\r\n\t\toperators = [];\r\n\r\n\t\tfor (i = 0; i < maxi; i++) {\r\n\t\t\toperator = tmp[i];\r\n\t\t\tif (logicalOperatorsRegex.test(' ' + operator + ' ')) {\r\n\t\t\t\toperators.push(operator);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//get the patterns\r\n\t\ttmp = searchString.split(logicalOperatorsRegex);\r\n\t\tmaxi = tmp.length;\r\n\t\tpatterns = [];\r\n\r\n\t\tfor (i = 0; i < maxi; i++) {\r\n\t\t\tcreatePattern(tmp[i].split(' '));\r\n\t\t}\r\n\r\n\t\t//start loop over events\r\n\t\tmaxi = patterns.length;\r\n\t\tpatternIndex = 0;\r\n\t\toperatorIndex = -1;\r\n\r\n\t\tfor (i = 0; i < maxi; i++) {\r\n\r\n\t\t\tpattern = patterns[patternIndex++];\r\n\t\t\toperator = operators[operatorIndex++];\r\n\t\t\t//console.log(operator,pattern,patternIndex,results.length);\r\n\r\n\r\n\t\t\tif (operator === 'AND') {\r\n\t\t\t\t// perform search on the results of the former search\r\n\t\t\t\tresults = performSearch(results, pattern);\r\n\r\n\t\t\t} else if (operator === 'NOT') {\r\n\t\t\t\t// perform search on the results of the former search\r\n\t\t\t\tresults = performSearch(results, pattern, true);\r\n\r\n\t\t\t} else if (operator === 'XOR') {\r\n\t\t\t\t/*\r\n\t\t\t\t\t\t\t\t//filter events from the previous results\r\n\t\t\t\t\t\t\t\tif(prevOperator === 'OR' || prevOperator === 'XOR'){\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tsubResult1 = performSearch(results,pattern,true);\r\n\t\t\t\t\t\t\t\t\tsubResult1 = performSearch(subResult1,prevPattern,true);\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t//filter results of the left part of the XOR expression by inversing the right part of the expression\r\n\t\t\t\t\t\t\t\t\tsubResult1 = performSearch(results,pattern,true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t//filter events from all events (OR and XOR always operate on all events)\r\n\t\t\t\t\t\t\t\tsubResult2 = performSearch(events,pattern);\r\n\t\t\t\t\t\t\t\tsubResult2 = performSearch(subResult2,prevPattern,true);\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t//combine the 2 result sets\r\n\t\t\t\t\t\t\t\tresults = subResult1.concat(subResult2);//subResult1.concat(subResult1,subResult2);\r\n\t\t\t\t*/\r\n\t\t\t\t//NEW APPROACH\r\n\t\t\t\t//get from all events the events that match the pattern\r\n\t\t\t\tsubResult1 = performSearch(events, pattern);\r\n\t\t\t\t//and then remove all events that match both all previous patterns and the current pattern\r\n\t\t\t\tresults = removeMutualEvents(results, subResult1);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlastResult = performSearch(events, pattern);\r\n\t\t\t\tresults = results.concat(lastResult);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprevPattern = pattern;\r\n\t\t\tprevOperator = operator;\r\n\t\t}\r\n\r\n\t\t//console.log(patterns,operators);\r\n\t\t//console.log(results.length);\r\n\t\t//console.timeEnd('find events');\r\n\t\treturn removeDoubleEvents(results);\r\n\t};\r\n\r\n\r\n\tremoveMutualEvents = function (resultSet1, resultSet2) {\r\n\t\tvar i, maxi = resultSet1.length,\r\n\t\t\tj, maxj = resultSet2.length,\r\n\t\t\tevent, eventId, addEvent,\r\n\t\t\tresult = [];\r\n\r\n\t\tfor (i = 0; i < maxi; i++) {\r\n\r\n\t\t\taddEvent = true;\r\n\r\n\t\t\tevent = resultSet1[i];\r\n\t\t\teventId = event.id;\r\n\r\n\t\t\tfor (j = 0; j < maxj; j++) {\r\n\r\n\t\t\t\tif (resultSet2[j].id === eventId) {\r\n\t\t\t\t\taddEvent = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (addEvent) {\r\n\t\t\t\tresult.push(event);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (j = 0; j < maxj; j++) {\r\n\r\n\t\t\taddEvent = true;\r\n\r\n\t\t\tevent = resultSet2[j];\r\n\t\t\teventId = event.id;\r\n\r\n\t\t\tfor (i = 0; i < maxi; i++) {\r\n\r\n\t\t\t\tif (resultSet1[i].id === eventId) {\r\n\t\t\t\t\taddEvent = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (addEvent) {\r\n\t\t\t\tresult.push(event);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\r\n\tremoveDoubleEvents = function (events) {\r\n\t\tvar i, maxi = events.length,\r\n\t\t\tevent, eventId, lastId,\r\n\t\t\tresult = [];\r\n\r\n\t\tevents.sort(function (a, b) {\r\n\t\t\treturn a.eventNumber - b.eventNumber;\r\n\t\t});\r\n\r\n\t\tfor (i = 0; i < maxi; i++) {\r\n\t\t\tevent = events[i];\r\n\t\t\teventId = event.id;\r\n\t\t\tif (eventId !== lastId) {\r\n\t\t\t\tresult.push(event);\r\n\t\t\t}\r\n\t\t\tlastId = eventId;\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\r\n\tperformSearch = function (events, pattern, inverse) {\r\n\t\tvar\r\n\t\t\tsearchResult = [],\r\n\t\t\tproperty = pattern.property,\r\n\t\t\toperator1 = pattern.operator1,\r\n\t\t\toperator2 = pattern.operator2,\r\n\t\t\tvalue1 = pattern.value1,\r\n\t\t\tvalue2 = pattern.value2,\r\n\t\t\tnumEvents = events.length, event, i,\r\n\t\t\tcondition = false;\r\n\r\n\t\tinverse = inverse || false;\r\n\r\n\t\tif (inverse) {\r\n\t\t\toperator1 = inverseOperator(operator1);\r\n\t\t\toperator2 = inverseOperator(operator2);\r\n\t\t}\r\n\r\n\r\n\t\tfor (i = 0; i < numEvents; i++) {\r\n\r\n\t\t\tevent = events[i];\r\n\t\t\tcondition = checkCondition(property, event[property], operator1, value1, operator2, value2);\r\n\r\n\t\t\tif (condition) {\r\n\t\t\t\tsearchResult.push(event);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn searchResult;\r\n\t};\r\n\r\n\r\n\tcheckCondition = function (property, propValue, operator1, value1, operator2, value2) {\r\n\t\tvar result = false,\r\n\t\t\tisString = false;\r\n\r\n\r\n\t\tif (propValue === undefined) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\r\n\t\tswitch (property) {\r\n\r\n\t\t\tcase 'noteName':\r\n\t\t\t\tif (operator1 === '=') {\r\n\t\t\t\t\t//this situation occurs if you search for the first letter(s) of an note name, e.g C matches C#, C##, Cb and Cbb\r\n\t\t\t\t\tif (value1.length === 3 && propValue.length === 4) {\r\n\t\t\t\t\t\tresult = propValue.indexOf(value1) === 0;\r\n\t\t\t\t\t} else if (value1.length === 4 && propValue.length === 5) {\r\n\t\t\t\t\t\tresult = propValue.indexOf(value1) === 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'type':\r\n\t\t\t\tif (typeString(value1) !== 'number' && isNaN(value1)) {\r\n\t\t\t\t\tvalue1 = midiEventNumberByName(value1);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'bar':\r\n\t\t\tcase 'beat':\r\n\t\t\tcase 'sixteenth':\r\n\t\t\t\t//propValue += 1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\r\n\t\tif (typeString(propValue) === 'string') {\r\n\r\n\t\t\tif (typeString(value1) !== 'string') {\r\n\t\t\t\tvalue1 = '\\'' + value1 + '\\'';\r\n\t\t\t}\r\n\t\t\tif (value2 && typeString(value2) !== 'string') {\r\n\t\t\t\tvalue2 = '\\'' + value2 + '\\'';\r\n\t\t\t}\r\n\t\t\tisString = true;\r\n\r\n\t\t} else if (typeString(propValue) === 'number') {\r\n\r\n\t\t\tif (typeString(value1) !== 'number') {\r\n\t\t\t\tvalue1 = parseInt(value1);//don't use a radix because values can be both decimal and hexadecimal!\r\n\t\t\t}\r\n\t\t\tif (value2 && typeString(value2) !== 'number') {\r\n\t\t\t\tvalue2 = parseInt(value2);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tswitch (operator1) {\r\n\r\n\t\t\tcase '=':\r\n\t\t\tcase '==':\r\n\t\t\tcase '===':\r\n\t\t\t\tresult = propValue === value1;\r\n\t\t\t\tbreak;\r\n\r\n\r\n\t\t\tcase '*=':\r\n\t\t\t\tresult = propValue.indexOf(value1) !== -1;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '^=':\r\n\t\t\t\tresult = propValue.indexOf(value1) === 0;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '$=':\r\n\t\t\t\tresult = propValue.indexOf(value1) === (propValue.length - value1.length);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '%=':\r\n\t\t\t\tif (isString) {\r\n\t\t\t\t\tresult = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = propValue % value1 === 0;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\r\n\t\t\tcase '!*=':\r\n\t\t\t\tresult = !(propValue.indexOf(value1) !== -1);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '!^=':\r\n\t\t\t\tresult = !(propValue.indexOf(value1) === 0);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '!$=':\r\n\t\t\t\tresult = !(propValue.indexOf(value1) === (propValue.length - value1.length));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '!%=':\r\n\t\t\t\tif (isString) {\r\n\t\t\t\t\tresult = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = !(propValue % value1 === 0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\r\n\t\t\tcase '!=':\r\n\t\t\tcase '!==':\r\n\t\t\t\tif (isString) {\r\n\t\t\t\t\tresult = propValue.indexOf(value1) === -1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = propValue !== value1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '>':\r\n\t\t\t\tif (operator2) {\r\n\t\t\t\t\tresult = checkCondition2(propValue, operator1, value1, operator2, value2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = propValue > value1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '>=':\r\n\t\t\t\tif (operator2) {\r\n\t\t\t\t\tresult = checkCondition2(propValue, operator1, value1, operator2, value2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = propValue >= value1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '<':\r\n\t\t\t\tif (operator2) {\r\n\t\t\t\t\tresult = checkCondition2(propValue, operator1, value1, operator2, value2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = propValue < value1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '<=':\r\n\t\t\t\tif (operator2) {\r\n\t\t\t\t\tresult = checkCondition2(propValue, operator1, value1, operator2, value2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = propValue <= value1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.warn('eval is evil!');\r\n\t\t\t//result = eval(propValue + operator + value1);\r\n\r\n\t\t}\r\n\r\n\t\t//console.log(isString,property,propValue,operator,value1,result);\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\r\n\tcheckCondition2 = function (propValue, operator1, value1, operator2, value2) {\r\n\r\n\t\tvar result = false;\r\n\r\n\t\tswitch (operator1) {\r\n\r\n\t\t\tcase '>':\r\n\r\n\t\t\t\tswitch (operator2) {\r\n\t\t\t\t\tcase '<':\r\n\t\t\t\t\t\tresult = propValue > value1 && propValue < value2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '<=':\r\n\t\t\t\t\t\tresult = propValue > value1 && propValue <= value2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '>=':\r\n\r\n\t\t\t\tswitch (operator2) {\r\n\t\t\t\t\tcase '<':\r\n\t\t\t\t\t\tresult = propValue >= value1 && propValue < value2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '<=':\r\n\t\t\t\t\t\tresult = propValue >= value1 && propValue <= value2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '<':\r\n\r\n\t\t\t\tswitch (operator2) {\r\n\t\t\t\t\tcase '>':\r\n\t\t\t\t\t\tresult = propValue < value1 || propValue > value2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '>=':\r\n\t\t\t\t\t\tresult = propValue < value1 || propValue >= value2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '<=':\r\n\r\n\t\t\t\tswitch (operator2) {\r\n\t\t\t\t\tcase '>':\r\n\t\t\t\t\t\tresult = propValue <= value1 || propValue > value2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '>=':\r\n\t\t\t\t\t\tresult = propValue <= value1 || propValue >= value2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\r\n\tgetEvents = function (obj) {\r\n\t\tvar i, numTracks, tracks, events = [];\r\n\r\n\t\tif (typeString(obj) === 'array') {\r\n\t\t\tevents = obj;\r\n\t\t} else if (obj.className === undefined) {\r\n\t\t\tconsole.warn(obj);\r\n\t\t} else if (obj.className === 'Track' || obj.className === 'Part') {\r\n\t\t\tevents = obj.events;\r\n\r\n\t\t} else if (obj.className === 'Song') {\r\n\t\t\t/*\r\n\t\t\t\t\t\ttracks = obj.tracks;\r\n\t\t\t\t\t\tnumTracks = obj.numTracks;\r\n\t\t\t\t\t\tfor(i = 0; i < numTracks; i++){\r\n\t\t\t\t\t\t\tevents = events.concat(tracks[i].events);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tevents = events.concat(obj.timeEvents);\r\n\t\t\t*/\r\n\t\t\tevents = obj.eventsMidiTime;\r\n\t\t}\r\n\t\t//console.log(obj.className,events.length);\r\n\t\treturn events;\r\n\t};\r\n\r\n\r\n\tcreatePattern = function (args) {\r\n\t\tvar pattern = {\r\n\t\t\tproperty: args[0],\r\n\t\t\toperator1: args[1],\r\n\t\t\tvalue1: args[2],\r\n\t\t\toperator2: args[3],\r\n\t\t\tvalue2: args[4]\r\n\t\t},\r\n\t\t\tproperty = args[0],\r\n\t\t\toperator1 = args[1],\r\n\t\t\tvalue1 = args[2],\r\n\t\t\toperator2 = args[3],\r\n\t\t\tvalue2 = args[4],\r\n\t\t\ti;\r\n\r\n\t\tif (supportedProperties[property] !== 1) {\r\n\t\t\tconsole.error(property, 'is not a supported property');\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\r\n\t\tpattern = checkOperators(pattern);\r\n\r\n\r\n\t\tif (property === 'barsbeats' || property === 'time') {\r\n\t\t\tvalue1 = checkValue(value1, property);\r\n\t\t\t//console.log(value1);\r\n\t\t\tfor (i = 0; i < 4; i++) {\r\n\t\t\t\tpattern = {};\r\n\t\t\t\tpattern.property = properties[property][i];\r\n\t\t\t\tpattern.operator1 = operator1;\r\n\t\t\t\tpattern.value1 = value1[i];\r\n\t\t\t\tpatterns.push(pattern);\r\n\t\t\t\toperators.push('AND');\r\n\t\t\t}\r\n\t\t\toperators.pop();\r\n\r\n\t\t\tif (value2) {\r\n\t\t\t\tvalue2 = checkValue(value2, property);\r\n\t\t\t\tfor (i = 0; i < 4; i++) {\r\n\t\t\t\t\tpattern = {};\r\n\t\t\t\t\tpattern.property = properties[property][i];\r\n\t\t\t\t\tpattern.operator2 = operator2;\r\n\t\t\t\t\tpattern.value2 = value2[i];\r\n\t\t\t\t\tpatterns.push(pattern);\r\n\t\t\t\t\toperators.push('AND');\r\n\t\t\t\t}\r\n\t\t\t\toperators.pop();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tpatterns.push(pattern);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tcheckValue = function (value, type) {\r\n\t\t//if the value is provided in array notation strip the brackets\r\n\t\tvalue = value.replace(/(\\[|\\])/g, '');\r\n\r\n\t\tif (typeString(value) !== 'array') {\r\n\t\t\tif (type === 'barsbeats') {\r\n\t\t\t\tif (value.indexOf(',') === -1) {\r\n\t\t\t\t\tvalue = [value, 1, 1, 0];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = value.split(',');\r\n\t\t\t\t}\r\n\t\t\t} else if (type === 'time') {\r\n\t\t\t\tif (value.indexOf(',') === -1) {\r\n\t\t\t\t\tvalue = [0, value, 0, 0];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = value.split(',');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tswitch (value.length) {\r\n\t\t\tcase 1:\r\n\t\t\t\tif (type === 'barsbeats') {\r\n\t\t\t\t\tvalue.push(1, 1, 0);\r\n\t\t\t\t} else if (type === 'time') {\r\n\t\t\t\t\tvalue.push(0, 0, 0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tif (type === 'barsbeats') {\r\n\t\t\t\t\tvalue.push(1, 0);\r\n\t\t\t\t} else if (type === 'time') {\r\n\t\t\t\t\tvalue.push(0, 0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\tvalue.push(0);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\r\n\tcheckOperators = function (pattern) {\r\n\r\n\t\tvar operator1 = pattern.operator1,\r\n\t\t\toperator2 = pattern.operator2,\r\n\t\t\tcheck = function (operator) {\r\n\t\t\t\tif (operator === '<' || operator === '>' || operator === '<=' || operator === '>=') {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tcheck2 = function (operator) {\r\n\t\t\t\tif (operator === '=' || operator === '==' || operator === '===') {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t};\r\n\r\n\r\n\t\tif (pattern.property === 'noteName' && (check(operator1) || check2(operator1))) {\r\n\t\t\tpattern.property = 'noteNumber';\r\n\t\t\tpattern.value1 = createNote(pattern.value1).number;\r\n\t\t}\r\n\r\n\t\tif (pattern.property === 'noteName' && (check(operator2) || check2(operator2))) {\r\n\t\t\tpattern.property = 'noteNumber';\r\n\t\t\tpattern.value2 = createNote(pattern.value2).number;\r\n\t\t}\r\n\r\n\t\t// second operator is wrong, remove it\r\n\t\tif (check(operator1) && !check(operator2)) {\r\n\t\t\tdelete pattern.operator2;\r\n\t\t\tdelete pattern.value2;\r\n\t\t}\r\n\r\n\t\treturn pattern;\r\n\t};\r\n\r\n\r\n\tinverseOperator = function (operator) {\r\n\t\tvar inversedOperator;\r\n\r\n\t\tswitch (operator) {\r\n\t\t\tcase '=':\r\n\t\t\tcase '==':\r\n\t\t\tcase '===':\r\n\t\t\t\tinversedOperator = '!==';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '!=':\r\n\t\t\tcase '!==':\r\n\t\t\t\tinversedOperator = '===';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '<':\r\n\t\t\t\tinversedOperator = '>=';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '>':\r\n\t\t\t\tinversedOperator = '<=';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '<=':\r\n\t\t\t\tinversedOperator = '>';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '>=':\r\n\t\t\t\tinversedOperator = '<';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '*=':\r\n\t\t\tcase '^=':\r\n\t\t\tcase '&=':\r\n\t\t\tcase '%=':\r\n\t\t\t\tinversedOperator = '!' + operator;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tinversedOperator = operator;\r\n\r\n\t\t}\r\n\r\n\t\treturn inversedOperator;\r\n\t};\r\n\r\n\r\n\tfindNote = function () {\r\n\t\tvar results = findEvent.apply(this, arguments),\r\n\t\t\tnumEvents = results.length,\r\n\t\t\ti, event,\r\n\t\t\tnoteOnEvent, noteOnEvents = {},\r\n\t\t\ttmp, resultsFiltered = [];\r\n\r\n\t\t// loop over all events and filter the note on events that have a matching note off event\r\n\t\tfor (i = 0; i < numEvents; i++) {\r\n\t\t\tevent = results[i];\r\n\r\n\t\t\tif (event.type === sequencer.NOTE_ON) {\r\n\r\n\t\t\t\tif (noteOnEvents[event.noteNumber] === undefined) {\r\n\t\t\t\t\tnoteOnEvents[event.noteNumber] = [];\r\n\t\t\t\t}\r\n\t\t\t\tnoteOnEvents[event.noteNumber].push(event);\r\n\r\n\t\t\t} else if (event.type === sequencer.NOTE_OFF) {\r\n\r\n\t\t\t\ttmp = noteOnEvents[event.noteNumber];\r\n\t\t\t\tif (tmp) {\r\n\t\t\t\t\tnoteOnEvent = tmp.shift();\r\n\t\t\t\t\tresultsFiltered.push(createMidiNote(noteOnEvent, event));\r\n\t\t\t\t\t//resultsFiltered.push(noteOnEvent);\r\n\t\t\t\t\t//resultsFiltered.push(event);\r\n\t\t\t\t}\r\n\t\t\t\tif (tmp.length === 0) {\r\n\t\t\t\t\tdelete noteOnEvents[event.noteNumber];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// put the events back into the right order\r\n\t\tresultsFiltered.sort(function (a, b) {\r\n\t\t\treturn a.sortIndex - b.sortIndex;\r\n\t\t});\r\n\r\n\t\treturn resultsFiltered;\r\n\t};\r\n\r\n\tsequencer.findEvent = findEvent;\r\n\tsequencer.findNote = findNote;\r\n\t//sequencer.removeMutualEvents = removeMutualEvents;\r\n\tsequencer.protectedScope.getEvents = getEvents;\r\n\r\n\tsequencer.protectedScope.addInitMethod(function () {\r\n\t\tcreateNote = sequencer.createNote;\r\n\t\ttypeString = sequencer.protectedScope.typeString;\r\n\t\tcreateMidiNote = sequencer.createMidiNote;\r\n\t\tmidiEventNumberByName = sequencer.midiEventNumberByName;\r\n\t});\r\n\r\n}function instrument() {\r\n\r\n  'use strict';\r\n\r\n  var\r\n    debug = sequencer.debug,\r\n\r\n    //import\r\n    context, // → defined in open_module.js\r\n    storage, // → defined in open_module.js\r\n    timedTasks, // → defined in open_module.js\r\n    repetitiveTasks, // → defined in open_module.js\r\n    findItem, // → defined in utils.js\r\n    storeItem, // → defined in utils.js\r\n    typeString, // → defined in utils.js\r\n    pathToArray, // → defined in utils.js\r\n    //createClass, // → defined in utils.js\r\n    isEmptyObject, // → defined in utils.js\r\n    objectForEach, // → defined in utils.js\r\n    createSample, // → defined in sample.js\r\n    createReverb, // → defined in effects.js\r\n    dispatchEvent, // → defined in song.js\r\n    remap, // defined in util.js\r\n    round, // defined in util.js\r\n    getEqualPowerCurve, // defined in util.js\r\n    transpose, // defined in transpose.js\r\n\r\n    Instrument,\r\n    SimpleSynth;\r\n\r\n\r\n  function unscheduleCallback(sample) {\r\n    //console.log(sample.id, 'has been unscheduled');\r\n    sample = null;\r\n  }\r\n\r\n\r\n  Instrument = function (config) {\r\n    //console.log(config);\r\n    this.className = 'Instrument';\r\n    this.config = config;\r\n    this.scheduledEvents = {};\r\n    this.scheduledSamples = {};\r\n    this.sustainPedalDown = false;\r\n    this.sustainPedalSamples = {};\r\n    this.sampleDataByNoteNumber = {};\r\n    this.sampleData = [];\r\n\r\n    this.info = config.info || config.instrument_info;\r\n    this.author = config.author || config.instrument_author;\r\n    this.license = config.license || config.instrument_license;\r\n    this.pack = config.pack;\r\n\r\n    this.parse();\r\n  };\r\n\r\n\r\n  // called by asset manager when a sample pack or an instrument has been unloaded, see asset_manager.js\r\n  Instrument.prototype.reset = function () {\r\n    var instrument = sequencer.getInstrument(this.config.localPath),\r\n      samplepack = sequencer.getSamplePack(this.config.sample_path);\r\n\r\n    if (samplepack === false || instrument === false) {\r\n      this.scheduledEvents = {};\r\n      this.scheduledSamples = {};\r\n      this.sustainPedalSamples = {};\r\n      this.sampleDataByNoteNumber = {};\r\n      this.sampleData = [];\r\n      if (this.update) {\r\n        delete repetitiveTasks[this.updateTaskId];\r\n      }\r\n      // if the instrument has been unloaded, set the track to the default instrument\r\n      if (instrument === false) {\r\n        this.track.setInstrument();\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  Instrument.prototype.parse = function () {\r\n    var i, maxi, v, v1, v2, length, octave, note, noteName, noteNumber,\r\n      pathArray,\r\n      buffer, names,\r\n      id, data, subdata,\r\n      update,\r\n      sample,\r\n      sampleConfig,\r\n      samplePack,\r\n      audioFolder,\r\n      config = this.config,\r\n      noteNameMode = config.notename_mode === undefined ? sequencer.noteNameMode : config.notename_mode,\r\n      mapping = config.mapping,\r\n      me = this;\r\n\r\n    if (config.name === undefined) {\r\n      console.error('instruments must have a name', config);\r\n      return false;\r\n    }\r\n\r\n    if (mapping === undefined) {\r\n      console.error('instruments must have a mapping to samples', config);\r\n      return false;\r\n    }\r\n\r\n    this.name = config.name;\r\n    this.folder = config.folder || '';\r\n    this.autopan = config.autopan || false; // for simple synth\r\n    this.singlePitch = config.single_pitch || false;\r\n    this.samplePath = config.sample_path || this.name;\r\n    this.keyScalingRelease = config.keyscaling_release;\r\n    this.keyScalingPanning = config.keyscaling_panning;\r\n    this.keyRange = config.keyrange || config.key_range;\r\n    //console.log(this.keyRange, config);\r\n    pathArray = this.samplePath.split('/');\r\n\r\n    //console.log(this.keyScalingRelease, config);\r\n\r\n    samplePack = storage.samplepacks;\r\n    for (i = 0, maxi = pathArray.length; i < maxi; i++) {\r\n      if (samplePack === undefined) {\r\n        if (sequencer.debug) {\r\n          console.log('sample pack not found', pathArray.join('/'));\r\n        }\r\n        return;\r\n      }\r\n      samplePack = samplePack[pathArray[i]];\r\n    }\r\n    //console.log(samplePack.name);\r\n\r\n    audioFolder = storage.audio;\r\n    try {\r\n      for (i = 0, maxi = pathArray.length; i < maxi; i++) {\r\n        audioFolder = audioFolder[pathArray[i]];\r\n      }\r\n    } catch (e) {\r\n      if (sequencer.debug) {\r\n        console.log('sample pack \"' + pathArray[i] + '\" is not loaded');\r\n      }\r\n      //sampleConfig = false;\r\n      return;\r\n    }\r\n\r\n    if (audioFolder === undefined) {\r\n      if (sequencer.debug) {\r\n        console.log('sample pack not found', pathArray.join('/'));\r\n      }\r\n      //sampleConfig = false;\r\n      return;\r\n    }\r\n\r\n\r\n    if (typeString(mapping) === 'array') {\r\n      this.keyRange = mapping;\r\n      mapping = {};\r\n      for (i = this.keyRange[0]; i <= this.keyRange[1]; i++) {\r\n        mapping[i] = '';\r\n      }\r\n    }\r\n\r\n    if (this.keyRange === undefined) {\r\n      this.lowestNote = 128;\r\n      this.highestNote = -1;\r\n    } else {\r\n      this.lowestNote = this.keyRange[0];\r\n      this.highestNote = this.keyRange[1];\r\n      this.numNotes = this.highestNote - this.lowestNote;\r\n    }\r\n\r\n\r\n    if (config.release_duration !== undefined) {\r\n      this.releaseDuration = config.release_duration;\r\n    } else {\r\n      this.releaseDuration = 0;\r\n    }\r\n\r\n    this.releaseEnvelope = config.release_envelope || 'equal power';\r\n\r\n\r\n    if (this.autopan) {\r\n      this.autoPanner = createAutoPanner();\r\n    }\r\n\r\n    this.samplepack = samplePack;\r\n    //console.log(samplePack);\r\n\r\n    for (id in mapping) {\r\n      if (mapping.hasOwnProperty(id)) {\r\n        data = mapping[id];\r\n\r\n        if (isNaN(id)) {\r\n          // C3, D#5, Bb0, etc.\r\n          length = id.length;\r\n          octave = id.substring(length - 1);\r\n          note = id.substring(0, length - 1);\r\n          noteName = id;\r\n          noteNumber = sequencer.getNoteNumber(note, octave);\r\n        } else {\r\n          noteName = sequencer.getNoteNameFromNoteNumber(id, noteNameMode);\r\n          noteName = noteName.join('');\r\n          noteNumber = id;\r\n        }\r\n        //console.log(id, noteNameMode);\r\n\r\n        noteNumber = parseInt(noteNumber, 10);\r\n\r\n        if (this.keyRange === undefined) {\r\n          this.lowestNote = noteNumber < this.lowestNote ? noteNumber : this.lowestNote;\r\n          this.highestNote = noteNumber > this.highestNote ? noteNumber : this.highestNote;\r\n        }\r\n\r\n        //console.log(data,typeString(data));\r\n\r\n        if (typeString(data) === 'array') {\r\n          // multi-layered\r\n          this.multiLayered = true;\r\n          for (i = 0, maxi = data.length; i < maxi; i++) {\r\n            subdata = data[i];\r\n            parseSampleData(subdata);\r\n            if (this.sampleDataByNoteNumber[noteNumber] === undefined) {\r\n              this.sampleDataByNoteNumber[noteNumber] = [];\r\n            }\r\n            // store the same sample config for every step in this velocity range\r\n            v1 = subdata.v[0];\r\n            v2 = subdata.v[1];\r\n            for (v = v1; v <= v2; v++) {\r\n              this.sampleDataByNoteNumber[noteNumber][v] = sampleConfig;\r\n            }\r\n            this.sampleData.push(sampleConfig);\r\n          }\r\n        } else {\r\n          // single-layered\r\n          parseSampleData(data);\r\n          //console.log('--->', sampleConfig);\r\n          this.sampleDataByNoteNumber[noteNumber] = sampleConfig;\r\n          this.sampleData.push(sampleConfig);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.keyRange === undefined) {\r\n      //console.log(this.highestNote, this.lowestNote);\r\n      this.numNotes = this.highestNote - this.lowestNote;\r\n      this.keyRange = [this.lowestNote, this.highestNote];\r\n    }\r\n\r\n\r\n    // if a key range is set for the instrument, the mapping object is generated by parseSampleData() so we need to add\r\n    // the mapping object to the config to make it available for unloading\r\n    this.config.mapping = mapping;\r\n\r\n    if (this.singlePitch) {\r\n      // TODO: fix this for multi-layered instruments (low prio)\r\n      for (i = 127; i >= 0; i--) {\r\n        this.sampleData[i] = sampleConfig;\r\n        this.sampleDataByNoteNumber[i] = sampleConfig;\r\n      }\r\n    }\r\n\r\n    if (update) {\r\n      this.updateTaskId = 'update_' + this.name + '_' + new Date().getTime();\r\n      //console.log('start update', this.name);\r\n      repetitiveTasks[this.updateTaskId] = function () {\r\n        //console.log('update');\r\n        if (me.autopan) {\r\n          me.update(this.autoPanner.getValue());\r\n        } else {\r\n          me.update();\r\n        }\r\n      };\r\n    }\r\n\r\n    // inner function of Instrument.parse();\r\n    function parseSampleData(data) {\r\n      var tmp, n;\r\n      //console.log('find', this.samplePath + '/' + data.n);\r\n      //buffer = findItem(this.samplePath + '/' + data.n, storage.audio);\r\n      //console.log(data);\r\n\r\n      if (data.n) {\r\n        // get the buffer by an id\r\n        buffer = audioFolder[data.n];\r\n        //console.log(data.n, buffer);\r\n      } else {\r\n        // get the buffer by a note number or note name if a keyrange is specified\r\n        names = [noteNumber, noteName, noteName.toLowerCase()];\r\n        for (n = 2; n >= 0; n--) {\r\n          buffer = audioFolder[names[n]];\r\n          if (buffer !== undefined) {\r\n            mapping[id] = { n: names[n] };\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (buffer === undefined) {\r\n        if (sequencer.debug) {\r\n          console.log('no buffer found for ' + id + ' (' + me.name + ')');\r\n        }\r\n        sampleConfig = false;\r\n        return;\r\n      }\r\n\r\n      sampleConfig = {\r\n        noteNumber: noteNumber,\r\n        buffer: buffer,\r\n        bufferId: data.n,\r\n        autopan: me.autopan\r\n      };\r\n\r\n      // sample pack sustain\r\n      if (config.sustain === true) {\r\n        sampleConfig.sustain = true;\r\n        update = true;\r\n      }\r\n\r\n      // sustain\r\n      if (data.s !== undefined) {\r\n        sampleConfig.sustain_start = data.s[0];\r\n        sampleConfig.sustain_end = data.s[1];\r\n        sampleConfig.sustain = true;\r\n        update = true;\r\n      } else if (config.sustain === true) {\r\n        tmp = samplePack.samplesById[data.n].sustain;\r\n        if (tmp !== undefined) {\r\n          sampleConfig.sustain_start = tmp[0];\r\n          sampleConfig.sustain_end = tmp[1];\r\n          //sampleConfig.sustain = true;\r\n          //console.log(tmp, update, sampleConfig.sustain);\r\n        } else {\r\n          sampleConfig.sustain = false;\r\n        }\r\n        //console.log(data.n, samplePack.samplesById[data.n]);\r\n      }\r\n\r\n      // global release\r\n      if (config.release_duration !== undefined) {\r\n        sampleConfig.release_duration = config.release_duration;\r\n        sampleConfig.release_envelope = config.release_envelope || me.releaseEnvelope;\r\n        sampleConfig.release = true;\r\n        update = true;\r\n      }\r\n\r\n      // release duration and envelope per sample overrules global release duration and envelope\r\n      if (data.r !== undefined) {\r\n        if (typeString(data.r) === 'array') {\r\n          sampleConfig.release_duration = data.r[0];\r\n          sampleConfig.release_envelope = data.r[1] || me.releaseEnvelope;\r\n        } else if (!isNaN(data.r)) {\r\n          sampleConfig.release_duration = data.r;\r\n          sampleConfig.release_envelope = me.releaseEnvelope;\r\n        }\r\n        sampleConfig.release = true;\r\n        update = true;\r\n        //console.log(data.r, sampleConfig.release_duration, sampleConfig.release_envelope)\r\n      }\r\n\r\n      // panning\r\n      if (data.p !== undefined) {\r\n        sampleConfig.panPosition = data.p;\r\n        sampleConfig.panning = true;\r\n      }\r\n      //console.log(data.p, sampleConfig.panning);\r\n      //console.log('ready', sampleConfig);\r\n    }\r\n  };\r\n\r\n\r\n  Instrument.prototype.getInfoAsHTML = function () {\r\n    var html = '',\r\n      instrumentInfo = '',\r\n      samplepackInfo = '',\r\n      sp = this.samplepack;\r\n\r\n    if (this.info !== undefined) {\r\n      instrumentInfo += '<tr><td>info</td><td>' + this.info + '</td></tr>';\r\n    }\r\n    if (this.author !== undefined) {\r\n      instrumentInfo += '<tr><td>author</td><td>' + this.author + '</td></tr>';\r\n    }\r\n    if (this.license !== undefined) {\r\n      instrumentInfo += '<tr><td>license</td><td>' + this.license + '</td></tr>';\r\n    }\r\n    instrumentInfo += '<tr><td>keyrange</td><td>' + this.lowestNote + '(' + sequencer.getFullNoteName(this.lowestNote) + ')';\r\n    instrumentInfo += ' - ' + this.highestNote + '(' + sequencer.getFullNoteName(this.highestNote) + ')</td></tr>';\r\n\r\n    if (instrumentInfo !== '') {\r\n      instrumentInfo = '<table><th colspan=\"2\">instrument</th>' + instrumentInfo + '</table>';\r\n      html += instrumentInfo;\r\n    }\r\n\r\n    if (sp === undefined) {\r\n      return html;\r\n    }\r\n\r\n    if (sp.info !== undefined) {\r\n      samplepackInfo += '<tr><td>info</td><td>' + sp.info + '</td></tr>';\r\n    }\r\n    if (sp.author !== undefined) {\r\n      samplepackInfo += '<tr><td>author</td><td>' + sp.author + '</td></tr>';\r\n    }\r\n    if (sp.license !== undefined) {\r\n      samplepackInfo += '<tr><td>license</td><td>' + sp.license + '</td></tr>';\r\n    }\r\n    if (sp.compression !== undefined) {\r\n      samplepackInfo += '<tr><td>compression</td><td>' + sp.compression + '</td></tr>';\r\n    }\r\n    if (sp.filesize !== undefined) {\r\n      samplepackInfo += '<tr><td>filesize</td><td>' + round(sp.filesize / 1024 / 1024, 2) + ' MiB</td></tr>';\r\n    }\r\n\r\n    if (samplepackInfo !== '') {\r\n      samplepackInfo = '<table><th colspan=\"2\">samplepack</th>' + samplepackInfo + '</table>';\r\n      html += samplepackInfo;\r\n    }\r\n\r\n    return html;\r\n  };\r\n\r\n\r\n  Instrument.prototype.getInfo = function () {\r\n    var info = {\r\n      instrument: {},\r\n      samplepack: {}\r\n    };\r\n\r\n    if (this.info !== undefined) {\r\n      info.instrument.info = this.info;\r\n    }\r\n    if (this.author !== undefined) {\r\n      info.instrument.author = this.author;\r\n    }\r\n    if (this.license !== undefined) {\r\n      info.instrument.license = this.license;\r\n    }\r\n    if (this.keyrange !== undefined) {\r\n      info.instrument.keyrange = this.keyrange;\r\n    }\r\n\r\n\r\n    if (this.info !== undefined) {\r\n      info.samplepack.info = this.info;\r\n    }\r\n    if (this.author !== undefined) {\r\n      info.samplepack.author = this.author;\r\n    }\r\n    if (this.license !== undefined) {\r\n      info.samplepack.license = this.license;\r\n    }\r\n    if (this.compression !== undefined) {\r\n      info.samplepack.compression = this.compression;\r\n    }\r\n    if (this.filesize !== undefined) {\r\n      info.samplepack.filesize = round(this.samplepack.filesize / 1024 / 1024, 2);\r\n    }\r\n\r\n    return info;\r\n  };\r\n\r\n\r\n  Instrument.prototype.createSample = function (event) {\r\n    var\r\n      noteNumber = event.noteNumber,\r\n      velocity = event.velocity,\r\n      data = this.sampleDataByNoteNumber[noteNumber],\r\n      type = typeString(data);\r\n\r\n    if (type === 'array') {\r\n      data = data[velocity];\r\n      //console.log(velocity, data.bufferId);\r\n    }\r\n\r\n    if (data === undefined || data === false) {\r\n      // no buffer data, return a dummy sample\r\n      return {\r\n        start: function () {\r\n          console.warn('no audio data loaded for', noteNumber);\r\n        },\r\n        stop: function () { },\r\n        update: function () { },\r\n        addData: function () { },\r\n        unschedule: function () { }\r\n      };\r\n    }\r\n    //console.log(data);\r\n    data.track = event.track;\r\n    return createSample(data);\r\n  };\r\n\r\n\r\n  Instrument.prototype.setKeyScalingPanning = function (start, end) {\r\n    //console.log('keyScalingPanning', start, end);\r\n    var i, data, numSamples = this.sampleData.length,\r\n      panStep, currentPan;\r\n\r\n    if (start === false) {\r\n      for (i = 0; i < numSamples; i++) {\r\n        data = this.sampleData[i];\r\n        data.panning = false;\r\n      }\r\n    }\r\n\r\n    if (isNaN(start) === false && isNaN(end) === false) {\r\n      panStep = (end - start) / this.numNotes;\r\n      currentPan = start;\r\n      for (i = 0; i < numSamples; i++) {\r\n        data = this.sampleData[i];\r\n        data.panning = true;\r\n        data.panPosition = currentPan;\r\n        //console.log(currentPan, panStep, highestNote, lowestNote, data.noteNumber);\r\n        currentPan += panStep;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  Instrument.prototype.setRelease = function (millis, envelope) {\r\n    if (millis === undefined) {\r\n      return;\r\n    }\r\n    this.releaseEnvelope = envelope || this.releaseEnvelope;\r\n    this.keyScalingRelease = undefined;\r\n\r\n    var i, data, numSamples = this.sampleData.length;\r\n    for (i = 0; i < numSamples; i++) {\r\n      data = this.sampleData[i];\r\n      data.release = true;\r\n      data.release_duration = millis;\r\n      data.release_envelope = this.releaseEnvelope;\r\n    }\r\n    this.releaseDuration = millis;\r\n  };\r\n\r\n\r\n  Instrument.prototype.setKeyScalingRelease = function (start, end, envelope) {\r\n    var i, data, numSamples = this.sampleData.length,\r\n      releaseStep, currentRelease;\r\n\r\n    this.releaseEnvelope = envelope || this.releaseEnvelope;\r\n\r\n    if (isNaN(start) === false && isNaN(end) === false) {\r\n      this.keyScalingRelease = [start, end];\r\n      this.releaseDuration = 0;\r\n      releaseStep = (end - start) / this.numNotes;\r\n      currentRelease = start;\r\n      for (i = 0; i < numSamples; i++) {\r\n        data = this.sampleData[i];\r\n        data.release_duration = currentRelease;\r\n        data.release_envelope = currentRelease;\r\n        //console.log(currentRelease, releaseStep, data.noteNumber);\r\n        currentRelease += releaseStep;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  Instrument.prototype.transpose = function (semitones, cb1, cb2) {\r\n    if (transpose === undefined) {\r\n      console.log('transpose is still experimental');\r\n      return;\r\n    }\r\n    var numSamples = this.sampleData.length;\r\n    function loop(num, samples) {\r\n      var data;\r\n      if (cb2) {\r\n        cb2('transposing sample ' + (num + 1) + ' of ' + numSamples);\r\n      }\r\n      //console.log(num, numSamples);\r\n      if (num < numSamples) {\r\n        data = samples[num];\r\n        setTimeout(function () {\r\n          transpose(data.buffer, semitones, function (transposedBuffer) {\r\n            data.buffer = transposedBuffer;\r\n            loop(++num, samples);\r\n          });\r\n        }, 10);\r\n      } else {\r\n        if (cb1) {\r\n          console.log('ready');\r\n          cb1();\r\n        }\r\n      }\r\n    }\r\n    loop(0, this.sampleData);\r\n  };\r\n\r\n\r\n  // called when midi events arrive from a midi input, from processEvent or from the scheduler\r\n  Instrument.prototype.processEvent = function (midiEvent) {\r\n    // console.log(midiEvent.type + ' : ' + midiEvent.velocity, midiEvent.time);\r\n    var type = midiEvent.type,\r\n      data1, data2, track, output;\r\n\r\n    //seconds = seconds === undefined ? 0 : seconds;\r\n    if (midiEvent.time === undefined) {\r\n      midiEvent.time = 0;\r\n    }\r\n\r\n    if (type === 128 || type === 144) {\r\n      if (type === 128) {\r\n        if (this.sustainPedalDown === true) {\r\n          midiEvent.sustainPedalDown = true;\r\n        }\r\n        //console.log(type, midiEvent.noteNumber, midiEvent.ticks, midiEvent.midiNote.id);\r\n        this.stopNote(midiEvent);\r\n      } else {\r\n        //console.log(type, midiEvent.noteNumber, midiEvent.ticks, midiEvent.midiNote.noteOff.ticks, midiEvent.midiNote.id);\r\n        this.playNote(midiEvent);\r\n      }\r\n    } else if (midiEvent.type === 176) {\r\n      //return;\r\n      data1 = midiEvent.data1;\r\n      data2 = midiEvent.data2;\r\n      if (data1 === 64) { // sustain pedal\r\n        //console.log(this.sustainPedalDown, data1, data2)\r\n        if (data2 === 127) {\r\n          this.sustainPedalDown = true;\r\n          //console.log('sustain pedal down', this.track.song.id);\r\n          dispatchEvent(this.track.song, 'sustain_pedal', 'down');\r\n        } else if (data2 === 0) {\r\n          this.sustainPedalDown = false;\r\n          //console.log('sustain pedal up');\r\n          dispatchEvent(this.track.song, 'sustain_pedal', 'up');\r\n          this.stopSustain(midiEvent.time);\r\n        }\r\n      } else if (data1 === 10) { // panning\r\n        // panning is *not* exactly timed -> not possible (yet) with WebAudio\r\n        track = this.track;\r\n        //console.log(data2, remap(data2, 0, 127, -1, 1));\r\n        track.setPanning(remap(data2, 0, 127, -1, 1));\r\n      } else if (data1 === 7) { // volume\r\n        track = this.track;\r\n        output = track.output;\r\n        output.gain.setValueAtTime(data2 / 127, midiEvent.time);\r\n        /*\r\n        //@TODO: this should be done by a plugin\r\n        if(track.volumeChangeMethod === 'linear'){\r\n            output.gain.linearRampToValueAtTime(data2/127, seconds);\r\n        }else if(track.volumeChangeMethod === 'equal_power'){\r\n            volume1 = track.getVolume();\r\n            volume2 = data2/127;\r\n            if(volume1 > volume2){\r\n                values = getEqualPowerCurve(100, 'fadeOut', volume2);\r\n            }else{\r\n                values = getEqualPowerCurve(100, 'fadeIn', volume2);\r\n            }\r\n            now = sequencer.getTime();\r\n            output.gain.setValueCurveAtTime(values, seconds, seconds + 0.05);\r\n        }else{\r\n            output.gain.setValueAtTime(data2/127, seconds);\r\n        }\r\n        */\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  Instrument.prototype.stopSustain = function (seconds) {\r\n    var midiNote,\r\n      scheduledSamples = this.scheduledSamples,\r\n      sustainPedalSamples = this.sustainPedalSamples;\r\n\r\n    objectForEach(sustainPedalSamples, function (sample) {\r\n      if (sample !== undefined) {\r\n        midiNote = sample.midiNote;\r\n        midiNote.noteOn.sustainPedalDown = undefined;\r\n        midiNote.noteOff.sustainPedalDown = undefined;\r\n        sample.stop(seconds, function (sample) {\r\n          //console.log('stopped sustain pedal up:', sample.id, sample.sourceId);\r\n          scheduledSamples[sample.sourceId] = null;\r\n          delete scheduledSamples[sample.sourceId];\r\n          //delete sustainPedalSamples[sample.sourceId];\r\n        });\r\n      }\r\n    });\r\n\r\n    this.sustainPedalSamples = {};\r\n  };\r\n\r\n\r\n  Instrument.prototype.playNote = function (midiEvent) {\r\n    var\r\n      sample,\r\n      sourceId;\r\n\r\n    if (!midiEvent.midiNote) {\r\n      if (sequencer.debug) {\r\n        console.warn('playNote() no midi note');\r\n      }\r\n      return;\r\n    }\r\n\r\n    sourceId = midiEvent.midiNote.id;\r\n    sample = this.scheduledSamples[sourceId];\r\n    // console.log('start', sourceId);\r\n\r\n    if (sample !== undefined) {\r\n      // console.log('already scheduled', sourceId);\r\n      sample.unschedule(0);\r\n    }\r\n\r\n    sample = this.createSample(midiEvent);\r\n    // add some extra attributes to the sample\r\n    sample.addData({\r\n      midiNote: midiEvent.midiNote,\r\n      noteName: midiEvent.midiNote.note.fullName,\r\n      sourceId: sourceId\r\n    });\r\n    this.scheduledSamples[sourceId] = sample;\r\n    sample.start(midiEvent);\r\n  };\r\n\r\n\r\n  Instrument.prototype.stopNote = function (midiEvent) {\r\n    if (midiEvent.midiNote === undefined) {\r\n      if (sequencer.debug) {\r\n        console.warn('stopNote() no midi note', midiEvent.ticks, midiEvent.noteNumber);\r\n      }\r\n      return;\r\n    }\r\n\r\n    var sourceId = midiEvent.midiNote.id,\r\n      sample = this.scheduledSamples[sourceId],\r\n      scheduledSamples = this.scheduledSamples,\r\n      sustainPedalSamples = this.sustainPedalSamples;\r\n\r\n    // if(this.song && this.song.bar >= 6 && this.track.name === 'Sonata # 3'){\r\n    //     console.log('stopNote', midiEvent, seconds, sequencer.getTime());\r\n    // }\r\n\r\n    //console.log(midiEvent.sustainPedalDown);\r\n    if (midiEvent.sustainPedalDown === true) {\r\n      // while sustain pedal is pressed, bypass note off events\r\n      //console.log('sustain');\r\n      sustainPedalSamples[sourceId] = sample;\r\n      return;\r\n    }\r\n\r\n    if (sample === undefined) {\r\n      // if(sequencer.debug){\r\n      //     console.log('no sample scheduled (anymore) for this midiEvent', sourceId, seconds);\r\n      // }\r\n      return;\r\n    }\r\n\r\n    sample.stop(midiEvent.time, function () {\r\n      scheduledSamples[sourceId] = null;\r\n      delete scheduledSamples[sourceId];\r\n    });\r\n  };\r\n\r\n\r\n  Instrument.prototype.hasScheduledSamples = function () {\r\n    return isEmptyObject(this.scheduledSamples);\r\n  };\r\n\r\n\r\n  Instrument.prototype.reschedule = function (song) {\r\n    var\r\n      min = song.millis,\r\n      max = min + (sequencer.bufferTime * 1000),\r\n      max2 = min + 20,\r\n      scheduledSamples = this.scheduledSamples,\r\n      id, note, sample;\r\n\r\n    for (id in scheduledSamples) {\r\n      if (scheduledSamples.hasOwnProperty(id)) {\r\n        sample = scheduledSamples[id]; // the sample\r\n        note = sample.midiNote; // the midi note\r\n\r\n        if (note === undefined || note.state === 'removed') {\r\n          sample.unschedule(0, unscheduleCallback);\r\n          delete scheduledSamples[id];\r\n        } else if (\r\n          note.noteOn.millis >= min &&\r\n          note.noteOff.millis < max &&\r\n          sample.noteName === note.fullName\r\n        ) {\r\n          // nothing has changed, skip\r\n          continue;\r\n        } else {\r\n          //console.log('unscheduled', id);\r\n          delete scheduledSamples[id];\r\n          sample.unschedule(null, unscheduleCallback);\r\n        }\r\n      }\r\n    }\r\n    /*\r\n            objectForEach(this.scheduledEvents, function(event, eventId){\r\n                if(event === undefined || event.state === 'removed'){\r\n                    delete sequencer.timedTasks['event_' + eventId];\r\n                    delete this.scheduledEvents[eventId];\r\n                }else if((event.millis >= min && event.millis < max2) === false){\r\n                    delete sequencer.timedTasks['event_' + eventId];\r\n                    delete this.scheduledEvents[eventId];\r\n                }\r\n            });\r\n    */\r\n  };\r\n\r\n\r\n  function loop(data, i, maxi, events) {\r\n    var arg;\r\n    for (i = 0; i < maxi; i++) {\r\n      arg = data[i];\r\n      if (arg === undefined) {\r\n        continue;\r\n      } else if (arg.className === 'MidiNote') {\r\n        events.push(arg.noteOn);\r\n      } else if (typeString(arg) === 'array') {\r\n        loop(arg, 0, arg.length);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // stop specified events or notes, used by stopProcessEvent()\r\n  Instrument.prototype.unschedule = function () {\r\n    var args = Array.prototype.slice.call(arguments),\r\n      events = [],\r\n      i, e, id, sample;\r\n\r\n    loop(args, 0, args.length, events);\r\n\r\n    for (i = events.length - 1; i >= 0; i--) {\r\n      e = events[i];\r\n      if (e.midiNote !== undefined) {\r\n        // note on and note off events\r\n        id = e.midiNote.id;\r\n        sample = this.scheduledSamples[id];\r\n        if (sample !== undefined) {\r\n          sample.unschedule(0, unscheduleCallback);\r\n          delete this.scheduledSamples[id];\r\n        }\r\n      } else if (e.className === 'MidiEvent') {\r\n        // other channel events\r\n        id = e.id;\r\n        delete timedTasks['event_' + id];\r\n        delete this.scheduledEvents[id];\r\n      }\r\n      //console.log(id);\r\n    }\r\n  };\r\n\r\n\r\n  // stop all events and notes\r\n  Instrument.prototype.allNotesOff = function () {\r\n    var sample, sampleId,\r\n      scheduledSamples = this.scheduledSamples;\r\n\r\n    this.stopSustain(0);\r\n    this.sustainPedalDown = false;\r\n\r\n    //console.log(scheduledSamples);\r\n\r\n    if (scheduledSamples === undefined || isEmptyObject(scheduledSamples) === true) {\r\n      return;\r\n    }\r\n\r\n    for (sampleId in scheduledSamples) {\r\n      if (scheduledSamples.hasOwnProperty(sampleId)) {\r\n        //console.log('allNotesOff', sampleId);\r\n        sample = scheduledSamples[sampleId];\r\n        if (sample) {\r\n          sample.unschedule(0, unscheduleCallback);\r\n        }\r\n      }\r\n    }\r\n    this.scheduledSamples = {};\r\n\r\n    objectForEach(this.scheduledEvents, function (event, eventId) {\r\n      delete timedTasks['event_' + eventId];\r\n    });\r\n    this.scheduledEvents = {};\r\n  };\r\n\r\n\r\n  Instrument.prototype.allNotesOffPart = function (partId) {\r\n    var sample, sampleId,\r\n      scheduledSamples = this.scheduledSamples;\r\n\r\n    // make this more subtle\r\n    this.stopSustain(0);\r\n    this.sustainPedalDown = false;\r\n\r\n    //console.log(scheduledSamples);\r\n\r\n    if (scheduledSamples === undefined || isEmptyObject(scheduledSamples) === true) {\r\n      return;\r\n    }\r\n\r\n    for (sampleId in scheduledSamples) {\r\n      if (scheduledSamples.hasOwnProperty(sampleId)) {\r\n        //console.log('allNotesOff', sampleId);\r\n        sample = scheduledSamples[sampleId];\r\n        if (sample) {\r\n          sample.unschedule(0, unscheduleCallback);\r\n        }\r\n      }\r\n    }\r\n    this.scheduledSamples = {};\r\n\r\n    objectForEach(this.scheduledEvents, function (event, eventId) {\r\n      delete timedTasks['event_' + eventId];\r\n    });\r\n    this.scheduledEvents = {};\r\n  };\r\n\r\n  Instrument.prototype.update = function (value) {\r\n    var sampleId, sample;\r\n    //console.log(this.scheduledSamples);\r\n    for (sampleId in this.scheduledSamples) {\r\n      if (this.scheduledSamples.hasOwnProperty(sampleId)) {\r\n        sample = this.scheduledSamples[sampleId];\r\n        if (sample) {\r\n          sample.update(value);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  function createAutoPanner(time) {\r\n    /*\r\n            var osc = context.createOscillator();\r\n            osc.frequency.value = 50;\r\n            osc.type = 0;\r\n            var gain = context.createGain();\r\n            gain.gain.value = 1;\r\n            osc.connect(gain);\r\n            gain.connect(context.destination);\r\n            osc.start();\r\n            console.log(osc);\r\n            return {\r\n                getValue: function(){\r\n                    return osc.frequency.getValueAtTime(time);\r\n                }\r\n            };\r\n    */\r\n    return {\r\n      getValue: function (time) {\r\n        return Math.sin(time * 2 * Math.PI);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n\r\n  sequencer.createInstrument = function (arg) {\r\n    var type = typeString(arg),\r\n      config,\r\n      instrument;\r\n\r\n    //console.log(arg, type, arg.className);\r\n\r\n    if (type === 'object') {\r\n      if (arg.className === 'Instrument') {\r\n        instrument = arg;\r\n      } else if (arg.className === 'InstrumentConfig') {\r\n        if (arg.name === 'sinewave') {\r\n          instrument = new SimpleSynth(arg);\r\n        } else {\r\n          instrument = new Instrument(arg);\r\n        }\r\n      }\r\n      return instrument;\r\n    }\r\n\r\n\r\n    if (type === 'string') {\r\n      //@TODO what happens if we have 2 instruments with the same name?\r\n      config = findItem(arg, storage.instruments);\r\n      //console.log('string', arg, config, storage.instruments);\r\n    }\r\n\r\n    if (config == false || config.className !== 'InstrumentConfig') {\r\n      if (debug >= 2) {\r\n        console.info('can not create instrument from', arg);\r\n      }\r\n      return false;\r\n    }\r\n\r\n\r\n    if (config.name === 'sinewave') {\r\n      instrument = new SimpleSynth(config);\r\n    } else {\r\n      instrument = new Instrument(config);\r\n    }\r\n\r\n    return instrument;\r\n  };\r\n\r\n\r\n  sequencer.protectedScope.addInitMethod(function () {\r\n    var protectedScope = sequencer.protectedScope;\r\n\r\n    storage = sequencer.storage;\r\n    createSample = sequencer.createSample;\r\n    createReverb = sequencer.createReverb;\r\n    dispatchEvent = sequencer.protectedScope.songDispatchEvent;\r\n\r\n    context = protectedScope.context;\r\n    timedTasks = protectedScope.timedTasks;\r\n    repetitiveTasks = protectedScope.repetitiveTasks;\r\n    objectForEach = protectedScope.objectForEach;\r\n    isEmptyObject = protectedScope.isEmptyObject;\r\n    findItem = protectedScope.findItem;\r\n    storeItem = protectedScope.storeItem;\r\n    typeString = protectedScope.typeString;\r\n    pathToArray = protectedScope.pathToArray;\r\n    transpose = protectedScope.transpose;\r\n    SimpleSynth = protectedScope.createClass(Instrument);\r\n\r\n    remap = sequencer.util.remap;\r\n    round = sequencer.util.round;\r\n    getEqualPowerCurve = sequencer.util.getEqualPowerCurve;\r\n\r\n    SimpleSynth.prototype.parse = function () {\r\n      var me = this,\r\n        config = this.config;\r\n\r\n      //console.log(this.config);\r\n      this.name = 'SineWave';\r\n      this.waveForm = config.wave_form || 'sine';\r\n      this.autopan = config.autopan || false;\r\n      this.folder = config.folder || 'heartbeat';\r\n      this.releaseDuration = config.release_duration || 1500;\r\n      if (this.autopan) {\r\n        this.autoPanner = createAutoPanner();\r\n      }\r\n\r\n      repetitiveTasks['update_' + this.name + '_' + new Date().getTime()] = function () {\r\n        if (me.autopan) {\r\n          //console.log('update',me.autoPanner.getValue(context.currentTime), me.autopan);\r\n          //me.update(me.autoPanner.getValue(context.currentTime));\r\n          me.update(Math.sin(context.currentTime * 2 * Math.PI));\r\n        } else {\r\n          me.update();\r\n        }\r\n      };\r\n    };\r\n\r\n    SimpleSynth.prototype.createSample = function (event) {\r\n      var data = {\r\n        oscillator: true,\r\n        track: event.track,\r\n        event: event,\r\n        autopan: this.autopan,\r\n        wave_form: this.waveForm,\r\n        release_envelope: 'equal power',\r\n        release_duration: this.releaseDuration\r\n      };\r\n      //console.log(data);\r\n      return createSample(data);\r\n    };\r\n\r\n    sequencer.createSimpleSynth = function (config) {\r\n      config = config || {};\r\n      //console.log('creating sinewave');\r\n      return new SimpleSynth(config);\r\n    };\r\n  });\r\n}\r\nfunction instrumentConfig() {\n\n    'use strict';\n\n    var\n        ajax, // defined in utils.js\n        parseUrl, // defined in utils.js\n        findItem, // defined in utils.js\n        storeItem, // defined in utils.js\n        typeString, // defined in utils.js\n        objectForEach, // defined in utils.js\n\n        index = 0,\n\n        InstrumentConfig;\n\n\n    InstrumentConfig = function (config) {\n        this.id = 'IC' + index++ + new Date().getTime();\n        this.className = 'InstrumentConfig';\n        var instrument = this;\n        objectForEach(config, function (val, key) {\n            instrument[key] = val;\n        });\n        //console.log(instrument);\n    };\n\n\n    function cleanup(instrument, callback) {\n        instrument = undefined;\n        if (callback) {\n            callback(false);\n        }\n    }\n\n\n    function store(instrument) {\n        var occupied = findItem(instrument.localPath, sequencer.storage.instruments, true),\n            action = instrument.action;\n\n        //console.log(instrument.localPath, occupied);\n        if (occupied && occupied.className === 'InstrumentConfig' && action !== 'overwrite') {\n            if (sequencer.debug >= 2) {\n                console.warn('there is already an Instrument at', instrument.localPath);\n                cleanup(instrument);\n            }\n        } else {\n            storeItem(instrument, instrument.localPath, sequencer.storage.instruments);\n        }\n    }\n\n\n    function load(instrument, callback) {\n\n        if (instrument.url === undefined) {\n            instrument.localPath = instrument.folder !== undefined ? instrument.folder + '/' + instrument.name : instrument.name;\n            callback();\n            return;\n        }\n\n\n        ajax({\n            url: instrument.url,\n            responseType: 'json',\n            onError: function () {\n                cleanup(instrument, callback);\n            },\n            onSuccess: function (data) {\n                // if the json data is corrupt (for instance because of a trailing comma) data will be null\n                if (data === null) {\n                    callback(false);\n                    return;\n                }\n\n                //console.log(data);\n                if (data.name !== undefined && instrument.name === undefined) {\n                    instrument.name = data.name;\n                }\n\n                if (data.folder !== undefined && instrument.folder === undefined) {\n                    instrument.folder = data.folder;\n                }\n\n                if (instrument.name === undefined) {\n                    instrument.name = parseUrl(instrument.url).name;\n                }\n\n                instrument.localPath = instrument.folder !== undefined ? instrument.folder + '/' + instrument.name : instrument.name;\n                objectForEach(data, function (val, key) {\n                    if (key !== 'name' && key !== 'folder') {\n                        instrument[key] = val;\n                    }\n                });\n                callback();\n            }\n        });\n    }\n\n\n    sequencer.addInstrument = function (config, callback, callbackAfterAllTasksAreDone) {\n        var type = typeString(config),\n            instrument, json, name, folder;\n\n\n        if (type !== 'object') {\n            if (sequencer.debug >= 2) {\n                console.warn('can\\'t add an Instrument with this data', config);\n            }\n            return false;\n        }\n\n        //console.log(config);\n\n        if (config.json) {\n            json = config.json;\n            name = config.name;\n            folder = config.folder;\n            if (typeString(json) === 'string') {\n                try {\n                    json = JSON.parse(json);\n                } catch (e) {\n                    if (sequencer.debug >= 2) {\n                        console.warn('can\\'t add an Instrument with this data', config);\n                    }\n                    return false;\n                }\n            }\n            if (json.mapping === undefined) {\n                if (sequencer.debug >= 2) {\n                    console.warn('can\\'t add an Instrument with this data', config);\n                }\n                return false;\n            }\n            config = {\n                mapping: json.mapping,\n                name: name === undefined ? json.name : name,\n                folder: folder === undefined ? json.folder : folder\n            };\n            //console.log('config', name, folder, json.name, json.folder);\n        }\n\n\n        instrument = new InstrumentConfig(config);\n\n        sequencer.addTask({\n            type: 'load instrument config',\n            method: load,\n            params: instrument\n        }, function (value) {\n            //console.log(instrument, callback);\n            store(instrument);\n            if (callback) {\n                //console.log('callback', callback.name)\n                callback(instrument);\n            }\n        }, callbackAfterAllTasksAreDone);\n\n        sequencer.startTaskQueue();\n\n        /*\n        load(instrument, function(){\n            console.log(instrument);\n            store(instrument);\n            if(callback){\n                callback(instrument);\n            }\n        });\n        */\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        ajax = sequencer.protectedScope.ajax;\n        findItem = sequencer.protectedScope.findItem;\n        parseUrl = sequencer.protectedScope.parseUrl;\n        storeItem = sequencer.protectedScope.storeItem;\n        typeString = sequencer.protectedScope.typeString;\n        objectForEach = sequencer.protectedScope.objectForEach;\n    });\n\n}\nfunction keyEditor() {\n\n  'use strict';\n\n  var\n    //private\n    KeyEditor,\n\n    updateDataKeys = 'newEvents newNotes newParts changedEvents changedNotes changedParts removedEvents removedNotes removedParts'.split(' '),\n\n    // default values\n    tickWidth = 0.1,\n    pitchHeight = 10,\n    barsPerPage = 4,\n    snapValueX = 0, // means snaps is off -> ticks value do not get rounded\n    //snapValueX = 1, // means snaps to all ticks\n    snapValueY = 'chromatic',\n    eventWidth = 2,\n\n    ceil = Math.ceil,\n\n    //import\n    createIteratorFactory,\n    getPosition,\n    createPlayhead,\n    getScaffoldingBars,\n    typeString,\n    objectToArray,\n    arrayToObject,\n    debug,\n    round,\n    floor,\n    createNote,\n\n    //public\n    //getLines,\n    //xToTicks,\n    //yToPitch,\n\n    //private\n    setPageData,\n    checkNextPage,\n    checkScrollPosition,\n    dispatchEvent,\n    handleKeys;\n\n\n\n  KeyEditor = function (song, config) {\n    this.song = song;\n    this.song.keyEditor = this;\n    this.playhead = createPlayhead(this.song, 'barsbeats ticks millis', 'keyeditor');\n\n    this.numBars = song.bars;\n    this.newNumBars = this.numBars;\n    this.eventListeners = {};\n    this.interrupt = false;\n\n    this.iteratorFactory = createIteratorFactory(this.song, this);\n    this.verticalLine = this.iteratorFactory.createVerticalLineIterator(this);\n    this.horizontalLine = this.iteratorFactory.createHorizontalLineIterator(this);\n    this.eventIterator = this.iteratorFactory.createEventIterator(this);\n    this.noteIterator = this.iteratorFactory.createNoteIterator(this);\n    this.partIterator = this.iteratorFactory.createPartIterator(this);\n\n\n    this.exactFitVertical = config.exactFitVertical || false;\n    this.exactFitHorizontal = config.exactFitHorizontal || false;\n\n    this.activeEvents = [];\n    this.activeNotes = [];\n    this.activeParts = [];\n\n    this.newEvents = [];\n    this.newNotes = [];\n    this.newParts = [];\n\n    this.changedEvents = [];\n    this.changedNotes = [];\n    this.changedParts = [];\n\n    this.removedEvents = [];\n    this.removedNotes = [];\n    this.removedParts = [];\n\n    this.recordedNotesObj = {};\n    this.recordedEventsObj = {};\n\n    this.snapshot = {\n      activeEvents: this.activeEvents,\n      activeNotes: this.activeNotes,\n      activeParts: this.activeParts,\n\n      newEvents: this.newEvents,\n      newNotes: this.newNotes,\n      newParts: this.newParts,\n\n      changedEvents: this.changedEvents,\n      changedNotes: this.changedNotes,\n      changedParts: this.changedParts,\n\n      removedEvents: this.removedEvents,\n      removedNotes: this.removedNotes,\n      removedParts: this.removedParts\n    };\n\n\n    if (config.paginate) {\n      this.paginate = true;\n      this.pageNo = 0;\n      this.barsPerPage = config.barsPerPage;\n      this.pageWidth = config.pageWidth;\n      this.pageHeight = config.pageHeight;\n      this.width = this.pageWidth;\n      this.lowestNote = config.lowestNote || song.lowestNote;\n      this.highestNote = config.highestNote || song.highestNote;\n      this.pitchRange = this.highestNote - this.lowestNote;\n      if (this.exactFitVertical) {\n        this.pitchHeight = this.height / this.pitchRange;\n        this.height = this.pageHeight;\n      } else {\n        this.pitchHeight = config.pitchHeight || pitchHeight;\n        this.height = this.pitchHeight * this.pitchRange;\n      }\n      //this.startBar = 0;//make this configurable\n      setPageData(this, 0);\n      checkNextPage(this);\n\n    } else {\n\n      this.setStartPosition(config.startPosition || 1);\n      this.setEndPosition(config.endPosition || song.bars + 1);\n      this.numTicks = this.endTicks - this.startTicks;\n\n      if (config.width) {\n        this.width = config.width;\n        this.tickWidth = this.width / this.numTicks;\n      } else if (config.tickWidth) {\n        this.tickWidth = config.tickWidth;\n        this.width = this.numTicks * this.tickWidth;\n        this.exactFitHorizontal = false;\n      } else if (config.barsPerPage && config.viewportWidth) {\n        //@TODO: add support for time measurement changes\n        this.barsPerPage = config.barsPerPage;\n        this.viewportWidth = config.viewportWidth;\n        this.tickWidth = this.viewportWidth / (this.startPosition.ticksPerBar * this.barsPerPage);\n        this.width = this.numTicks * this.tickWidth;\n        this.scrollX = 0;\n        this.scrollPosition = 0;\n        this.viewportTicks = this.viewportWidth / this.tickWidth;\n        this.maxScrollPosition = ceil(this.width / this.viewportWidth);\n        this.scrollLimit = this.viewportWidth / this.tickWidth;\n        checkScrollPosition(this);\n        this.exactFitHorizontal = false;\n      } else if (config.viewportWidth) {\n        this.viewportWidth = this.width = config.viewportWidth;\n        this.tickWidth = this.viewportWidth / this.numTicks;\n        this.exactFitHorizontal = true;\n      } else {\n        this.tickWidth = tickWidth;\n        this.width = this.numTicks * this.tickWidth;\n        this.exactFitHorizontal = false;\n      }\n\n\n      this.lowestNote = config.lowestNote || song.lowestNote;\n      this.highestNote = config.highestNote || song.highestNote;\n      this.pitchRange = config.pitchRange || this.highestNote - this.lowestNote + 1;\n      //console.log(this.pitchRange);\n\n      if (config.height) {\n        this.height = config.height;\n        this.pitchHeight = this.height / this.pitchRange;\n      } else if (config.pitchHeight) {\n        this.pitchHeight = config.pitchHeight;\n        this.height = this.pitchRange * this.pitchHeight;\n        this.exactFitVertical = false;\n      } else if (config.viewportHeight) {\n        this.viewportHeight = this.height = config.viewportHeight;\n        this.pitchHeight = this.viewportHeight / this.pitchRange;\n        this.exactFitVertical = true;\n      } else {\n        this.pitchHeight = pitchHeight;\n        this.height = this.pitchRange * this.pitchHeight;\n        this.exactFitVertical = false;\n      }\n\n      // this.verticalLine.setStartPosition(this.startPosition);\n      // this.verticalLine.setEndPosition(this.endPosition);\n      //this.verticalLine.reset(this.startPosition, this.endPosition);\n      //this.horizontalLine.reset();\n      //this.eventIterator.reset();\n      //this.noteIterator.reset();\n      //this.partIterator.reset();\n      //console.log(this.tickWidth,this.pitchHeight);\n    }\n\n    this.scrollX = 0;\n    this.scrollY = 0;\n    this.currentPage = 1;\n    this.numPages = ceil(this.width / this.viewportWidth);\n\n    this.snapValueX = config.snapX === undefined ? snapValueX : config.snapX;\n    this.snapValueY = config.snapY === undefined ? snapValueY : config.snapY;\n    this.setSnapX(this.snapValueX);\n    this.setSnapY(this.snapValueY);\n\n    //console.log(this.maxScrollPosition);\n  };\n\n\n  KeyEditor.prototype.setBarsPerPage = function (bbp) {\n    this.interrupt = true;\n\n    var tmp = round(this.scrollX / (this.viewportWidth / this.barsPerPage));\n    this.barsPerPage = bbp;\n    this.tickWidth = this.viewportWidth / (this.startPosition.ticksPerBar * this.barsPerPage);\n    this.viewportTicks = this.viewportWidth / this.tickWidth;\n    this.width = this.numTicks * this.tickWidth;\n    this.verticalLine.reset();\n    this.horizontalLine.reset();\n    this.eventIterator.reset();\n    this.partIterator.reset();\n    this.scrollLimit = this.viewportWidth / this.tickWidth;\n    this.maxScrollPosition = ceil(this.width / this.viewportWidth);\n    this.snapWidth = this.tickWidth * this.snapTicks;\n\n    this.numPages = ceil(this.numBars / this.barsPerPage);\n    this.currentPage = floor(this.song.ticks / (this.barsPerPage * this.song.ticksPerBar)) + 1;\n\n    dispatchEvent(this, 'scale', {});\n\n    if (this.song.playing) {\n      this.scrollPosition = floor(this.song.ticks / this.viewportTicks);\n    } else {\n      //console.log(tmp,this.scrollPosition);\n      this.scrollPosition = ((this.viewportWidth / this.barsPerPage) * tmp) / this.viewportWidth;\n      dispatchEvent(this, 'scroll', { x: (this.scrollPosition * this.viewportWidth) });\n    }\n    this.interrupt = false;\n  };\n\n\n  KeyEditor.prototype.setViewport = function (w, h) {\n    var draw = false;\n\n    if (this.barsPerPage && w !== this.viewportWidth) {\n      //@TODO: add support for time measurement changes\n      this.viewportWidth = w;\n      this.tickWidth = this.viewportWidth / (this.startPosition.ticksPerBar * this.barsPerPage);\n      this.viewportTicks = this.viewportWidth / this.tickWidth;\n      this.width = this.numTicks * this.tickWidth;\n      draw = true;\n    } else if (this.exactFitHorizontal === true && w !== this.width) {\n      this.viewportWidth = this.width = w;\n      this.tickWidth = this.width / this.numTicks;\n      draw = true;\n    }\n\n    if (this.exactFitVertical === true && h !== this.height) {\n      this.viewportHeight = this.height = h;\n      this.pitchHeight = this.height / this.pitchRange;\n      draw = true;\n    }\n\n    if (draw) {\n      this.verticalLine.reset();\n      this.horizontalLine.reset();\n      this.eventIterator.reset();\n      this.noteIterator.reset();\n      this.partIterator.reset();\n\n      dispatchEvent(this, 'draw', {});\n    }\n  };\n\n\n  KeyEditor.prototype.updateSong = function (data) {\n    this.iteratorFactory.updateSong();\n\n    var key, i = 0, j, k, arr, tmp;\n\n    for (i = updateDataKeys.length - 1; i >= 0; i--) {\n      key = updateDataKeys[i];\n      switch (key) {\n        case 'newNotes':\n        case 'changedNotes':\n          arr = data[key];\n          for (j = arr.length - 1; j >= 0; j--) {\n            tmp = arr[j];\n            tmp.bbox = this.getNoteRect(tmp);\n          }\n          break;\n\n        case 'newParts':\n        case 'changedParts':\n          arr = data[key];\n          for (j = arr.length - 1; j >= 0; j--) {\n            tmp = arr[j];\n            tmp.bbox = this.getPartRect(tmp);\n          }\n          break;\n      }\n    }\n\n    /*\n            this.newNumBars = data.numBars;\n            // delete numBars otherwise the for loop below doesn't work anymore\n            delete data.numBars;\n    \n            for(key in data){\n                if(data.hasOwnProperty(key)){\n                    arr = data[key];\n                    for(j = arr.length - 1; j >= 0; j--){\n                        tmp = arr[j];\n                        k = floor(i/3);\n                        //console.log(i,k);\n                        switch(k){\n                            case 0: // event arrays\n                                //console.log(k,i);\n                                //tmp.bbox = getEventRect(tmp);\n                                // arr[j] = {\n                                //     event: tmp\n                                // }\n                                break;\n                            case 1: // note arrays\n                                //console.log(k,i);\n                                if(tmp.bbox)\n                                console.log(1,tmp.bbox.x)\n                                tmp.bbox = this.getNoteRect(tmp);\n                                console.log(2,tmp.bbox.x)\n                                // arr[j] = {\n                                //     note: tmp,\n                                //     bbox: this.getNoteRect(tmp)\n                                // }\n                                break;\n                            case 2: // part arrays\n                                //console.log(k,i);\n                                //console.log(tmp);\n                                tmp.bbox = this.getPartRect(tmp);\n                                // arr[j] = {\n                                //     part: tmp,\n                                //     bbox: this.getPartRect(tmp)\n                                // }\n                                break;\n                        }\n                    }\n                    i++;\n                }\n            }\n    */\n    this.newNumBars = data.numBars;\n\n    this.newEvents = this.newEvents.concat(data.newEvents);\n    this.changedEvents = this.changedEvents.concat(data.changedEvents);\n    this.removedEvents = this.removedEvents.concat(data.removedEvents);\n    this.removedEventsObj = arrayToObject(this.removedEvents, 'id');\n\n    this.newNotes = this.newNotes.concat(data.newNotes);\n    this.changedNotes = this.changedNotes.concat(data.changedNotes);\n    this.removedNotes = this.removedNotes.concat(data.removedNotes);\n    this.removedNotesObj = arrayToObject(this.removedNotes, 'id');\n\n    this.newParts = this.newParts.concat(data.newParts);\n    this.changedParts = this.changedParts.concat(data.changedParts);\n    this.removedParts = this.removedParts.concat(data.removedParts);\n    this.removedPartsObj = arrayToObject(this.removedParts, 'id');\n  };\n\n\n  KeyEditor.prototype.setStartPosition = function (pos) {\n    if (typeString(pos) !== 'array') {\n      pos = ['barsandbeats', pos, 1, 1, 0];\n    }\n\n    this.startPosition = getPosition(this.song, pos);\n    this.startTicks = this.startPosition.ticks;\n    this.startMillis = this.startPosition.millis;\n    //console.log('start',pos,this.startTicks);\n  };\n\n\n  KeyEditor.prototype.setEndPosition = function (pos) {\n    if (typeString(pos) !== 'array') {\n      pos = ['barsandbeats', pos, 1, 1, 0];\n    }\n\n    this.endPosition = getPosition(this.song, pos);\n    this.endTicks = this.endPosition.ticks;\n    this.endMillis = this.endPosition.millis;\n    //console.log('end',pos,this.endTicks,this.endPosition);\n  };\n\n\n  KeyEditor.prototype.addEventListener = function (id, cb) {\n    var ids = id.split(' '),\n      tmp,\n      editor = this,\n      eventId;\n\n    ids.forEach(function (id) {\n\n      tmp = editor.eventListeners[id];\n\n      if (tmp === undefined) {\n        editor.eventListeners[id] = [];\n        tmp = editor.eventListeners[id];\n      }\n\n      eventId = id + '-' + tmp.length;\n      tmp.push(cb);\n    });\n  };\n\n\n  KeyEditor.prototype.nextPage = function () {\n    setPageData(this, this.startBar + this.barsPerPage);\n    dispatchEvent(this, 'pagechange', { pageNo: this.pageNo, lastPage: this.lastPage });\n  };\n\n\n  KeyEditor.prototype.prevPage = function () {\n    setPageData(this, this.startBar - this.barsPerPage);\n    dispatchEvent(this, 'pagechange', { pageNo: this.pageNo, lastPage: this.lastPage });\n  };\n\n\n  KeyEditor.prototype.gotoPage = function (n) {\n    console.warn('ooops, not implemented yet!');\n    return;\n    // n = n - 1;\n    // if (n < 0 || n > this.lastPage) {\n    //     return;\n    // }\n    // this.pageNo = n;\n    // dispatchEvent(this, 'pagechange', { pageNo: this.pageNo, lastPage: this.lastPage });\n    // setPageData(this, this.pageNo);\n  };\n\n\n  KeyEditor.prototype.scroll = function (action) {\n\n    //this.scrollPosition = floor(this.scrollX/this.viewportWidth);\n    var x,\n      tmp = round(this.scrollX / (this.viewportWidth / this.barsPerPage));\n\n    this.scrollPosition = ((this.viewportWidth / this.barsPerPage) * tmp) / this.viewportWidth;\n\n    switch (action) {\n      case '>':\n        this.scrollPosition += 1;\n        this.scrollPosition = this.scrollPosition > this.maxScrollPosition ? this.maxScrollPosition : this.scrollPosition;\n        break;\n      case '>>':\n        this.scrollPosition = this.maxScrollPosition;\n        break;\n      case '<':\n        this.scrollPosition -= 1;\n        this.scrollPosition = this.scrollPosition < 0 ? 0 : this.scrollPosition;\n        break;\n      case '<<':\n        this.scrollPosition = 0;\n        break;\n      default:\n        if (isNaN(action)) {\n          return;\n        }\n        this.scrollPosition = parseInt(action);\n    }\n\n    x = this.scrollPosition * this.viewportWidth;\n    this.scrollLimit = (x + this.viewportWidth) / this.tickWidth;\n    this.currentPage = ceil(x / this.viewportWidth) + 1;\n    if (this.currentPage === 0) {\n      this.currentPage = 1;\n    } else if (this.currentPage > this.maxScrollPosition) {\n      this.currentPage = this.maxScrollPosition;\n    }\n    //console.log('bar',(this.scrollPosition * this.barsPerPage),'scroll',this.scrollPosition);\n    dispatchEvent(this, 'scroll', { x: x });\n  };\n\n\n  KeyEditor.prototype.updateScroll = function (scrollX, scrollY) {\n    this.scrollX = scrollX;\n    this.scrollY = scrollY;\n    this.scrollLimit = (scrollX + this.viewportWidth) / this.tickWidth;\n  };\n\n\n  KeyEditor.prototype.getEventRect = function (event) {\n    //console.log(note.number);\n    var\n      x = this.ticksToX(event.ticks - this.startTicks, false),\n      y = this.pitchToY(event.number),\n      w = eventWidth * this.tickWidth,\n      h = this.pitchHeight;\n\n    return {\n      x: x,\n      y: y,\n      width: w,\n      height: h,\n      top: y,\n      left: x,\n      bottom: y + h,\n      right: x + w\n    };\n  };\n\n\n  KeyEditor.prototype.getNoteRect = function (note) {\n    //console.log(note.number);\n    var\n      x = this.ticksToX(note.ticks - this.startTicks, false),//(note.ticks - this.startTicks) * this.tickWidth,\n      y = this.pitchToY(note.number),\n      w = note.durationTicks * this.tickWidth,\n      h = this.pitchHeight,\n      start, end, diff;\n\n    if (note.endless) {\n      w = (this.song.ticks - note.noteOn.ticks) * this.tickWidth;\n    }\n\n    ///*\n    if (this.paginate) {\n\n      start = note.ticks;\n      end = note.noteOff.ticks;\n\n      if (start < this.startTicks) {\n        diff = this.startTicks - start;\n        start = start + diff - this.startTicks;\n        x = start * this.tickWidth;\n\n        end = end > this.endTicks ? this.endTicks : end;\n        w = (end - this.startTicks) * this.tickWidth;\n      } else {\n        return false;\n      }\n    }\n\n    //*/\n\n    return {\n      x: x,\n      y: y,\n      width: w,\n      height: h,\n      top: y,\n      left: x,\n      bottom: y + h,\n      right: x + w\n    };\n  };\n\n\n  KeyEditor.prototype.getPartRect = function (part) {\n    var stats = part.getStats('noteNumber all'),\n      //firstEvent = part.events[0],\n      //lastEvent = part.events[part.events.length - 1],\n      bbox = {\n        // left: (firstEvent.ticks - this.startTicks) * this.tickWidth,\n        // right: (lastEvent.ticks - this.startTicks) * this.tickWidth,\n        // top: this.height - ((stats.max - this.lowestNote + 1) * this.pitchHeight),\n        // bottom: this.height - ((stats.min - this.lowestNote + 1) * this.pitchHeight) + this.pitchHeight,\n        top: this.pitchToY(stats.max),// - this.pitchHeight,\n        bottom: this.pitchToY(stats.min) + this.pitchHeight,\n        left: this.ticksToX(part.start.ticks - this.startTicks, false),\n        right: this.ticksToX(part.end.ticks - this.startTicks, false),\n        //left: this.ticksToX(part.events[0].ticks, false),\n        //right: this.ticksToX(part.events[part.events.length - 1].ticks, false)\n      };\n\n    //console.log(stats.min, stats.max);\n\n    bbox.x = bbox.left;\n    bbox.y = bbox.top;\n    bbox.width = bbox.right - bbox.left;\n    bbox.height = bbox.bottom - bbox.top;\n\n    part.bbox = bbox;\n    part.stats = stats;\n    //console.log(part.id,stats,bbox);\n    return bbox;\n  };\n\n\n  KeyEditor.prototype.getBBox = function (arg) {\n    var type, data;\n    if (typeString(arg) === 'string') {\n      switch (arg.substring(0, 1)) {\n        case 'E':\n          type = 'event';\n          if (event.type === 144 && event.endEvent !== undefined) {\n            data = this.song.findEvent('id = ' + arg);\n          } else {\n            console.error('argument not supported, please check documentation');\n            return;\n          }\n          break;\n        case 'P':\n          type = 'part';\n          data = this.song.getPart(arg);\n          break;\n        case 'T':\n          type = 'track';\n          break;\n        default:\n          console.error('argument not supported, please check documentation');\n          return;\n      }\n    } else {\n      switch (arg.className) {\n        case 'AudioEvent':\n          type = 'audio';\n          break;\n        case 'MidiEvent':\n          type = 'event';\n          break;\n        case 'Part':\n          type = 'part';\n          break;\n        case 'Track':\n          type = 'track';\n          break;\n        default:\n          console.error('argument not supported, please check documentation');\n          return;\n      }\n    }\n\n    if (data === undefined) {\n      console.error(arg, 'could not be found');\n      return;\n    }\n\n    switch (type) {\n      case 'event':\n        return this.getNoteRect(data);\n      //break;\n      case 'part':\n        return this.getPartRect(data);\n      //break;\n    }\n  };\n\n\n  KeyEditor.prototype.startMoveNote = function (note, x, y) {\n    if (note.className !== 'MidiNote') {\n      if (sequencer.debug >= sequencer.WARN) {\n        console.warn(note, 'is not a MidiNote');\n      }\n      return;\n    }\n    //sequencer.unscheduleEvent(note);\n    this.selectedNote = note;\n    this.gripX = x - this.selectedNote.bbox.x;\n  };\n\n\n  KeyEditor.prototype.stopMoveNote = function () {\n    this.selectedNote = undefined;\n  };\n\n\n  KeyEditor.prototype.moveNote = function (x, y) {\n    if (this.selectedNote === undefined) {\n      return;\n    }\n\n    var\n      newPitch = this.yToPitch(y).number,\n      oldPitch = this.selectedNote.pitch,\n      newTicks = this.xToTicks(x - this.gripX),\n      oldTicks = this.selectedNote.ticks,\n      part = this.selectedNote.part,\n      update = false;\n\n    //console.log(newTicks, oldTicks, this.gripX, x);\n\n    if (newPitch !== oldPitch) {\n      part.transposeNote(this.selectedNote, newPitch - oldPitch);\n      update = true;\n    }\n\n    if (newTicks !== oldTicks) {\n      part.moveNote(this.selectedNote, newTicks - oldTicks);\n      update = true;\n    }\n\n    if (update === true) {\n      this.song.update();\n    }\n  };\n\n\n  KeyEditor.prototype.startMovePart = function (part, x, y) {\n    if (part.className !== 'Part') {\n      if (sequencer.debug >= sequencer.WARN) {\n        console.warn(part, 'is not a Part');\n      }\n      return;\n    }\n    this.selectedPart = part;\n    this.selectedPart.pitch = this.yToPitch(y).number;\n    this.gripX = x - this.selectedPart.bbox.x;\n  };\n\n\n  KeyEditor.prototype.stopMovePart = function () {\n    this.selectedPart = undefined;\n  };\n\n\n  KeyEditor.prototype.movePart = function (x, y, autoUpdate) {\n    // console.log(this.selectedPart);\n    if (this.selectedPart === undefined) {\n      return;\n    }\n    if (typeof autoUpdate === 'undefined') {\n      autoUpdate = true;\n    }\n    // console.log(autoUpdate);\n\n    var\n      newPitch = this.yToPitch(y).number,\n      oldPitch = this.selectedPart.pitch,\n      newTicks = this.xToTicks(x - this.gripX),\n      oldTicks = this.selectedPart.ticks,\n      update = false;\n\n    if (newPitch !== oldPitch) {\n      this.selectedPart.track.transposePart(this.selectedPart, newPitch - oldPitch);\n      this.selectedPart.pitch = newPitch;\n      update = true;\n    }\n\n\n    if (newTicks !== oldTicks) {\n      this.selectedPart.track.movePart(this.selectedPart, newTicks - oldTicks);\n      update = true;\n    }\n\n    if (update === true && autoUpdate === true) {\n      this.song.update();\n    }\n  };\n\n\n  KeyEditor.prototype.getTicksAt = KeyEditor.prototype.xToTicks = function (x, snap) {\n    var ticks = ((x + this.scrollX) / this.width) * this.numTicks;\n    //console.log(this.scrollX,this.width,this.numTicks,ticks);\n    if (snap !== false && this.snapTicks !== 0) {\n      //ticks = floor(ticks/this.snapTicks) * this.snapTicks;\n      ticks = round(ticks / this.snapTicks) * this.snapTicks;\n    }\n    //console.log(ticks, this.snapTicks);\n    return ticks;\n  };\n\n\n  KeyEditor.prototype.getPitchAt = KeyEditor.prototype.yToPitch = function (y) {\n    //var note = this.highestNote - floor(((y + this.scrollY)/this.height) * this.pitchRange);\n    var note = this.highestNote - round(((y + this.scrollY) / this.height) * this.pitchRange);\n    note = createNote(note);\n    return note;\n  };\n\n\n  KeyEditor.prototype.getXAt = KeyEditor.prototype.ticksToX = function (ticks, snap) {\n    // var p = ticks/this.numTicks,\n    //     x = (p * this.width) - this.scrollX;\n    var x = (ticks - this.startTicks) * this.tickWidth;\n    if (snap !== false && this.snapWidth !== 0) {\n      //x = (floor(x/this.snapWidth) * this.snapWidth);\n      x = (round(x / this.snapWidth) * this.snapWidth);\n    }\n    return x;\n  };\n\n\n  KeyEditor.prototype.getYAt = KeyEditor.prototype.pitchToY = function (noteNumber) {\n    var y = this.height - ((noteNumber - this.lowestNote + 1) * this.pitchHeight);\n    return y;\n  };\n\n\n  KeyEditor.prototype.getPositionAt = function (x) {\n    var ticks = this.getTicksAt(x);\n    // console.time('get position')\n    // var position = getPosition(this.song,['ticks',ticks]);\n    // console.timeEnd('get position')\n    // return position;\n    //console.time('get position')\n    this.playhead.set('ticks', ticks, false);\n    //console.timeEnd('get position')\n    return this.playhead.get();\n  };\n\n\n  KeyEditor.prototype.getPlayheadX = function (compensateForScroll) {\n    var x = ((this.song.ticks / this.song.durationTicks) * this.width);\n    //var x = ((this.song.millis/this.song.durationMillis) * this.width);\n    //var x = (this.song.percentage * this.width);\n    x = compensateForScroll === true ? x - this.scrollX : x;\n    return x;\n  };\n\n\n  KeyEditor.prototype.setPlayheadToX = function (x) {\n    var ticks = this.xToTicks(x, false);\n    this.song.setPlayhead('ticks', ticks);\n  };\n\n  KeyEditor.prototype.getPlayheadPosition = function (compensateForScroll) {\n    //return (sequencer.percentage * this.width);// - this.scrollX;\n    //return ((sequencer.millis/song.durationMillis) * this.width);// - this.scrollX;\n    //var x = ((this.song.millis/this.song.durationMillis) * this.width);\n    // change to ticks to make tempo changes visible by a faster moving playhead\n    var x = ((this.song.ticks / this.song.durationTicks) * this.width);\n    x = compensateForScroll === true ? x - this.scrollX : x;\n    return x;\n  };\n\n\n  KeyEditor.prototype.setPlayheadPosition = function (type, value) {\n    //console.log(this.scrollX,value, this.scrollX + value);\n    var ticks;\n    switch (type) {\n      case 'x':\n        ticks = this.xToTicks(value, false);\n        break;\n      case 'ticks':\n        ticks = value;\n        break;\n      case 'millis':\n        ticks = this.playhead.set('millis', value).ticks;\n        break;\n      case 'barsbeats':\n      case 'barsandbeats':\n        ticks = getPosition(this.song, ['barsbeats', value]).ticks;\n        break;\n    }\n    this.song.setPlayhead('ticks', ticks);\n  };\n\n\n  KeyEditor.prototype.getEventAt = function (x, y) {\n    var position = this.getSongPosition(x),\n      pitch = this.getPitchAt(y);\n  };\n\n\n  KeyEditor.prototype.getEventsInRect = function (x, y, w, h) {\n    var startPos = this.getSongPosition(x),\n      endPos = this.getSongPosition(x + w),\n      startPitch = this.getPitchAt(y + h),\n      endPitch = this.getPitchAt(y);\n\n  };\n\n\n  KeyEditor.prototype.getNoteAt = function (x, y) {\n    var position = this.getSongPosition(x),\n      pitch = this.getPitchAt(y);\n  };\n\n\n  KeyEditor.prototype.getNotesInRect = function (x, y, w, h) {\n    var startPos = this.getSongPosition(x),\n      endPos = this.getSongPosition(x + w),\n      startPitch = this.getPitchAt(y + h),\n      endPitch = this.getPitchAt(y);\n  };\n\n\n  // takes x,y and returns snapped x,y\n  KeyEditor.prototype.snap = function (x, y) {\n    return {\n      x: this.snapX(x),\n      y: this.snapY(y)\n    };\n  };\n\n\n  // takes x returns snapped x\n  KeyEditor.prototype.snapX = function (x) {\n    //return floor((x + this.scrollX)/this.snapWidth) * this.snapWidth;\n    return round((x + this.scrollX) / this.snapWidth) * this.snapWidth;\n\n  };\n\n\n  // takes y returns snapped y\n  KeyEditor.prototype.snapY = function (y) {\n    //return floor((y + this.scrollY)/this.snapHeight) * this.snapHeight;\n    return round((y + this.scrollY) / this.snapHeight) * this.snapHeight;\n  };\n\n\n  KeyEditor.prototype.setSnapX = function (snapX) {\n    if (snapX === undefined) {\n      return;\n    }\n    //console.log('in', snapX);\n    // 4 -> 1, 8 -> 0.5 16 -> 0.25\n    var beatLength = 4 / this.song.denominator;\n\n    if (snapX === 'off') {\n      this.snapTicks = 0;\n    } else if (snapX === 'tick') {\n      this.snapTicks = 1;\n    } else if (snapX === 'beat') {\n      // TODO: dependent on current time signature!\n      this.snapTicks = this.song.ppq * beatLength;\n    } else if (snapX === 'bar') {\n      // TODO: dependent on current time signature!\n      this.snapTicks = (this.song.ppq * this.song.nominator) * beatLength;\n    } else if (isNaN(snapX) && snapX.indexOf('ticks') !== -1) {\n      this.snapTicks = snapX.replace(/ticks/, '');\n      if (isNaN(this.snapTicks)) {\n        this.snapTicks = this.song.ppq / 4;// sixteenth note\n      } else {\n        this.snapTicks = parseInt(this.snapTicks);\n      }\n    } else {\n      if (isNaN(snapX) || snapX === 0) {\n        // by default snap is off\n        snapX = 0;\n        this.snapTicks = 0;\n      } else {\n        snapX = parseInt(snapX);\n        this.snapTicks = (4 / snapX) * this.song.ppq;\n      }\n    }\n\n    //console.log(snapX,this.snapTicks, beatLength);\n    this.snapValueX = snapX;\n    this.snapWidth = this.tickWidth * this.snapTicks;\n  };\n\n\n  KeyEditor.prototype.setSnapY = function (snapY) {\n    if (snapY === undefined) {\n      return;\n    }\n    this.snapValueY = snapY;\n    //todo: add other scales then chromatic\n    this.snapHeight = this.pitchHeight;\n  };\n\n\n  KeyEditor.prototype.removeNote = function (note) {\n    //note.part.removeNote(note);\n    //console.log(note.id);\n    note.part.removeEvents(note.noteOn, note.noteOff);\n    this.song.update();\n  };\n\n\n  KeyEditor.prototype.removePart = function (part) {\n    part.track.removePart(part);\n    this.song.update();\n  };\n\n\n  KeyEditor.prototype.prepareForRecording = function () {\n    this.recordedEventsObj = {};\n    this.recordedNotesObj = {};\n  };\n\n\n  KeyEditor.prototype.getSnapshot = function () {\n\n    var activeEventsObj,\n      activeNotesObj,\n      activePartsObj,\n\n      recordedNotesSong,\n      //recordingNotesSong,\n      recordedEventsSong,\n\n      nonActiveEvents = [],\n      nonActiveNotes = [],\n      nonActiveParts = [],\n\n      prevActiveEvents = [].concat(this.activeEvents),\n      prevActiveNotes = [].concat(this.activeNotes),\n      prevActiveParts = [].concat(this.activeParts),\n\n      recordedEvents = [],\n      recordedNotes = [],\n      recordingNotes = [],\n\n      //prevRemovedNotes = [].concat(this.removedNotes),\n\n      s, e, n, p, i, j, tmp, length,\n      startBar, endBar;\n\n    this.activeEvents = [];\n    this.activeNotes = [];\n    this.activeParts = [];\n\n    this.activeStateChangedEvents = [];\n    this.activeStateChangedNotes = [];\n    this.activeStateChangedParts = [];\n\n    //if(this.song.bars > this.numBars){\n    if (this.newNumBars !== this.numBars) {\n      startBar = this.numBars;\n      endBar = this.song.lastBar + 1;\n      //console.log(startBar,endBar)\n      //this.verticalLine.setStartPosition(getPosition(song, ['barsbeats', startBar, 1, 1, 0]));\n      //this.verticalLine.setEndPosition(getPosition(song, ['barsbeats', endBar, 1, 1, 0]));\n      this.endPosition = getPosition(this.song, ['barsbeats', endBar, 1, 1, 0, true]);\n      this.verticalLine.reset(getPosition(this.song, ['barsbeats', startBar, 1, 1, 0, true]), this.endPosition);\n      this.numBars = this.song.bars;\n\n      //console.log(this.song.lastBar, this.endPosition.barsAsString);\n\n      this.endTicks = this.endPosition.ticks;\n      this.numTicks = this.song.durationTicks;\n      this.width = this.numTicks * this.tickWidth;\n      //console.log('new width', this.width, this.numTicks, this.tickWidth);\n      //console.log('song has gotten longer boy!', this.song.bars, this.newNumBars, this.numBars, this.width);\n      this.maxScrollPosition = ceil(this.width / this.viewportWidth);\n      //this.numPages = ceil(this.width/this.viewportWidth);\n      this.numPages = ceil(this.numBars / this.barsPerPage);\n    }\n\n\n\n    activeEventsObj = this.song.activeEvents;\n    for (i in activeEventsObj) {\n      if (activeEventsObj.hasOwnProperty(i)) {\n        tmp = activeEventsObj[i];\n        this.activeEvents.push(tmp);\n        if (tmp.active !== true) {\n          tmp.active = true;\n          this.activeStateChangedEvents.push(tmp);\n        }\n      }\n    }\n\n    activeNotesObj = this.song.activeNotes;\n    for (i in activeNotesObj) {\n      if (activeNotesObj.hasOwnProperty(i)) {\n        tmp = activeNotesObj[i];\n        this.activeNotes.push(tmp);\n        //console.log(tmp, tmp.active);\n        if (tmp.active !== true) {\n          tmp.active = true;\n          this.activeStateChangedNotes.push(tmp);\n        }\n      }\n    }\n\n    activePartsObj = this.song.activeParts;\n    for (i in activePartsObj) {\n      if (activePartsObj.hasOwnProperty(i)) {\n        tmp = activePartsObj[i];\n        this.activeParts.push(tmp);\n        if (tmp.active !== true) {\n          tmp.active = true;\n          this.activeStateChangedParts.push(tmp);\n        }\n      }\n    }\n\n    // fixing issue #4\n    recordedEventsSong = this.song.recordedEvents;\n    if (recordedEventsSong) {\n      length = recordedEventsSong.length;\n      for (i = 0; i < length; i++) {\n        tmp = recordedEventsSong[i];\n        if (this.recordedEventsObj[tmp.id] === undefined) {\n          tmp.bbox = this.getEventRect(tmp);\n          recordedEvents.push(tmp);\n          this.recordedEventsObj[tmp.id] = tmp;\n        }\n      }\n    }\n\n    // fixing issue #4\n    recordedNotesSong = this.song.recordedNotes;\n    if (recordedNotesSong) {\n      length = recordedNotesSong.length;\n      for (i = 0; i < length; i++) {\n        tmp = recordedNotesSong[i];\n        if (this.recordedNotesObj[tmp.id] === undefined) {\n          this.recordedNotesObj[tmp.id] = tmp;\n          tmp.bbox = this.getNoteRect(tmp);\n          recordedNotes.push(tmp);\n          //console.log('recordedNotes', tmp);\n        } else if (tmp.endless === true) {\n          tmp.bbox = this.getNoteRect(tmp);\n          recordingNotes.push(tmp);\n          //console.log('endless1', tmp);\n        } else if (tmp.endless === false) {\n          tmp.bbox = this.getNoteRect(tmp);\n          recordingNotes.push(tmp);\n          //console.log('endless2', tmp);\n          tmp.endless = undefined;\n        }\n        //console.log(tmp.bbox.width);\n      }\n    }\n    /*\n            recordingNotesObj = this.song.recordingNotes;\n            for(i in recordingNotesObj){\n                if(recordingNotesObj.hasOwnProperty(i)){\n                    tmp = recordingNotesObj[i];\n                    tmp.bbox = this.getNoteRect(tmp);\n                    recordingNotes.push(tmp);\n                }\n            }\n    */\n\n    for (i = prevActiveEvents.length - 1; i >= 0; i--) {\n      tmp = prevActiveEvents[i];\n      if (tmp === undefined) {\n        console.warn('event is undefined');\n        continue;\n      }\n      if (activeEventsObj[tmp.id] === undefined) {\n        nonActiveEvents.push(tmp);\n        if (tmp.active !== false) {\n          tmp.active = false;\n          this.activeStateChangedEvents.push(tmp);\n        }\n      }\n    }\n\n    for (i = prevActiveNotes.length - 1; i >= 0; i--) {\n      tmp = prevActiveNotes[i];\n      if (tmp === undefined) {\n        console.warn('note is undefined');\n        continue;\n      }\n      if (activeNotesObj[tmp.id] === undefined) {\n        nonActiveNotes.push(tmp);\n        if (tmp.active !== false) {\n          tmp.active = false;\n          this.activeStateChangedNotes.push(tmp);\n        }\n      }\n    }\n\n    for (i = prevActiveParts.length - 1; i >= 0; i--) {\n      tmp = prevActiveParts[i];\n      if (tmp === undefined) {\n        console.warn('part is undefined');\n        continue;\n      }\n      if (activePartsObj[tmp.id] === undefined) {\n        nonActiveParts.push(tmp);\n        if (tmp.active !== false) {\n          tmp.active = false;\n          this.activeStateChangedParts.push(tmp);\n        }\n      }\n    }\n\n    if (this.song.playing) {\n      //            this.currentPage = floor(sequencer.ticks / this.viewportTicks) + 1;\n      this.currentPage = floor(this.song.ticks / (this.barsPerPage * this.song.ticksPerBar)) + 1;\n    }\n\n    /*\n    \n            tmp = this.song.parts;\n            n = false;\n            // check for empty parts and remove them -> @TODO: this should be done in track and/or part!\n            for(i = tmp.length - 1; i >= 0; i--){\n                p = tmp[i];\n                console.log(p.keepWhenEmpty);\n                if(p.keepWhenEmpty === true){\n                    continue;\n                }\n                if(p.events.length === 0){\n                    //console.log('empty part!');\n                    p.track.removePart(p);\n                    n = true;\n                }\n            }\n            if(n){\n                this.song.update();\n            }\n    */\n\n    s = {\n\n      events: {\n        active: this.activeEvents,\n        inActive: this.nonActiveEvents,\n        recorded: recordedEvents,\n        new: this.newEvents,\n        changed: this.changedEvents,\n        removed: this.removedEvents,\n        stateChanged: this.activeStateChangedEvents\n      },\n\n      notes: {\n        active: this.activeNotes,\n        inActive: nonActiveNotes,\n        recorded: recordedNotes,\n        recording: recordingNotes,\n        new: this.newNotes,\n        changed: this.changedNotes,\n        removed: this.removedNotes,\n        stateChanged: this.activeStateChangedNotes\n      },\n\n      parts: {\n        active: this.activeParts,\n        inActive: nonActiveParts,\n        new: this.newParts,\n        changed: this.changedParts,\n        removed: this.removedParts,\n        stateChanged: this.activeStateChangedParts\n\n      },\n\n\n      hasNewBars: startBar !== endBar,\n      newWidth: this.width,\n\n      pageNo: this.currentPage,\n      lastPage: this.numPages\n      //newWidth: song.durationTicks * this.tickWidth\n\n      // hasNewBars: function(){\n      //     if(startBar === endBar){\n      //         return false;\n      //     }\n      // }\n    };\n\n    this.newEvents = [];\n    this.changedEvents = [];\n    this.removedEvents = [];\n\n    this.newNotes = [];\n    this.changedNotes = [];\n    this.removedNotes = [];\n\n    this.newParts = [];\n    this.changedParts = [];\n    this.removedParts = [];\n\n    /*\n            tmp = this.song.parts;\n            n = false;\n    \n            // check for empty parts and remove them -> @TODO: this should be done in track and/or part!\n            for(i = tmp.length - 1; i >= 0; i--){\n                p = tmp[i];\n                if(p.keepWhenEmpty === true){\n                    continue;\n                }\n                if(p.events.length === 0){\n                    //console.log('empty part!');\n                    p.track.removePart(p);\n                    n = true;\n                }\n            }\n            if(n){\n                this.song.update();\n            }\n    */\n\n    return s;\n  };\n\n\n  // flipping pages\n\n  setPageData = function (editor, startBar) {\n    //editor.pageNo = no;\n    editor.numTicks = 0;\n\n    editor.startBar = startBar > 0 ? startBar : 0;\n    editor.startBar = editor.startBar > editor.numBars - editor.barsPerPage ? editor.numBars - editor.barsPerPage : editor.startBar;\n    editor.endBar = startBar + editor.barsPerPage;\n    editor.endBar = editor.endBar > editor.numBars ? editor.numBars : editor.endBar;\n    editor.endBar = editor.endBar < editor.barsPerPage ? editor.barsPerPage : editor.endBar;\n\n    console.log(startBar, editor.startBar, editor.endBar, editor.numBars, editor.numBars - editor.barsPerPage);\n    var i;\n\n    for (i = editor.startBar; i < editor.endBar; i++) {\n      editor.numTicks += editor.bars[i].ticksPerBar;\n    }\n    editor.tickWidth = editor.pageWidth / editor.numTicks;\n\n    editor.startPosition = editor.bars[editor.startBar];\n    editor.endPosition = editor.bars[editor.endBar];\n    editor.startTicks = editor.startPosition.ticks;\n    editor.endTicks = editor.endPosition.ticks;\n\n    editor.verticalLine.reset();\n    editor.horizontalLine.reset();\n    editor.eventIterator.reset();\n    //console.log('nextPage',editor.startPosition,editor.endPosition);\n  };\n\n\n  checkNextPage = function (editor) {\n    if (editor.song.playing() && editor.song.ticks >= editor.endTicks) {\n      //console.log('nextpage');\n      editor.nextPage();\n      //dispatchEvent(this, 'pagechange', {pageNo: this.pageNo, lastPage: this.lastPage});\n    }\n    requestAnimationFrame(function () {\n      checkNextPage(editor);\n    });\n  };\n\n\n  checkScrollPosition = function (editor) {\n    //console.log(editor.song.ticks,editor.scrollLimit,interrupt);\n    if (editor.song.playing && editor.interrupt === false) {\n      if (editor.song.ticks >= editor.scrollLimit) {\n        dispatchEvent(editor, 'scroll', { x: editor.scrollX + editor.viewportWidth });\n        editor.scrollLimit += (editor.viewportWidth / editor.tickWidth);\n        //editor.currentPage++;\n      } else {\n        var x = (floor(editor.song.ticks / editor.viewportTicks) * editor.viewportTicks) * editor.tickWidth;\n        if (editor.scrollX !== x) {\n          dispatchEvent(editor, 'scroll', { x: x });\n        }\n      }\n    }\n    requestAnimationFrame(function () {\n      checkScrollPosition(editor);\n    });\n  };\n\n\n  dispatchEvent = function (editor, id, data) {\n    //console.log(id,eventListeners);\n    var listeners = editor.eventListeners[id];\n    if (listeners) {\n      listeners.forEach(function (cb) {\n        cb(data);\n      });\n    }\n  };\n\n\n  handleKeys = function (editor) {\n    var p = editor.selectedPart,\n      n = editor.selectedNote;\n\n    if (p !== undefined) {\n      p.track.removePart(p);\n      this.song.update();\n    } else if (n !== undefined) {\n      n.part.removeNote(n);\n      this.song.update();\n    }\n  };\n\n\n  sequencer.createKeyEditor = function (song, config) {\n    return new KeyEditor(song, config);\n  };\n\n\n  sequencer.protectedScope.addInitMethod(function () {\n    getPosition = sequencer.protectedScope.getPosition;\n    createPlayhead = sequencer.protectedScope.createPlayhead;\n    createNote = sequencer.createNote;\n    debug = sequencer.debug;\n    floor = sequencer.protectedScope.floor;\n    round = sequencer.protectedScope.round;\n    typeString = sequencer.protectedScope.typeString;\n    objectToArray = sequencer.protectedScope.objectToArray;\n    arrayToObject = sequencer.protectedScope.arrayToObject;\n    getScaffoldingBars = sequencer.protectedScope.getScaffoldingBars;\n    createIteratorFactory = sequencer.protectedScope.createKeyEditorIteratorFactory;\n  });\n\n}\nfunction keyEditorIteratorFactory() {\n\n  'use strict';\n\n  var\n    minWidthSixteenth = 0.042,\n    minWidthBeat = 0.02,\n    /*\n            events,\n            numEvents,\n            notes,\n            numNotes,\n            parts,\n            numParts,\n    \n            song,\n            editor,\n            position,\n    */\n    // import\n    createPlayhead, // defined in playhead.js\n    createNote; // defined in note.js\n\n  //public\n  /*\n          create,\n          updateSong,\n          createVerticalLineIterator,\n          createHorizontalLineIterator,\n          createEventIterator,\n          createNoteIterator,\n          createPartIterator;\n  */\n\n  function Factory(song, editor) {\n    this.song = song;\n    this.editor = editor;\n    //console.log(this.editor);\n    //this.position = createPlayhead(this.song, 'barsbeats ticks millis', 'iterators');\n    this.position = createPlayhead(this.song, 'all', 'iterators');\n    this.updateSong();\n  }\n\n  /*\n      create = function(s, e){\n          song = s;\n          editor = e;\n          updateSong();\n          position = createPlayhead(song, 'barsbeats ticks millis', 'iterators');\n          return {\n              updateSong: updateSong,\n              createVerticalLineIterator: createVerticalLineIterator,\n              createHorizontalLineIterator: createHorizontalLineIterator,\n              createEventIterator: createEventIterator,\n              createNoteIterator: createNoteIterator,\n              createPartIterator: createPartIterator\n          };\n      };\n  */\n\n  Factory.prototype.updateSong = function () {\n    this.events = this.song.events;\n    this.numEvents = this.events.length;\n    this.notes = this.song.notes;\n    this.numNotes = this.notes.length;\n    this.parts = this.song.parts;\n    this.numParts = this.parts.length;\n    this.position.updateSong();\n  };\n\n\n  Factory.prototype.createVerticalLineIterator = function () {\n    var supportedTypes = 'bar beat sixteenth',\n      lineType,\n      numTicks = {},\n      tickWidth,\n      offset,\n      type,\n      ticks,\n      endTicks,\n      bar,\n      beat,\n      sixteenth,\n      nominator,\n      numSixteenth,\n      startPosition,\n      endPosition,\n      editor = this.editor,\n      position = this.position,\n      // widthBar,\n      // widthBeat,\n      // widthSixteenth,\n      data, next, hasNext, reset, getData, setType;\n    //setStartPosition, setEndPosition;\n\n\n    getData = function () {\n      //console.log('ticks',ticks);\n      data = position.update('ticks', ticks);\n      numTicks.bar = data.ticksPerBar;\n      numTicks.beat = data.ticksPerBeat;\n      numTicks.sixteenth = data.ticksPerSixteenth;\n      nominator = data.nominator;\n      numSixteenth = data.numSixteenth;\n      //console.log(numTicks,nominator,numSixteenth);\n      //console.log(ticks, data);\n    };\n\n    next = function (t) {\n      if (t) {\n        type = t;\n        // if (tickWidth < minWidthBeat) {\n        //     type = 'bar';\n        // } else if (tickWidth < minWidthSixteenth) {\n        //     type = 'beat';\n        // }\n      } else {\n        if (tickWidth < minWidthBeat) {\n          type = 'bar';\n        } else if (tickWidth < minWidthSixteenth) {\n          type = 'beat';\n        }\n      }\n\n      switch (type) {\n        case 'sixteenth':\n          lineType = 'sixteenth';\n          sixteenth++;\n          if (sixteenth > numSixteenth) {\n            lineType = 'beat';\n            sixteenth = 1;\n            beat++;\n            if (beat > nominator) {\n              lineType = 'bar';\n              beat = 1;\n              bar++;\n            }\n          }\n          break;\n        case 'beat':\n          lineType = 'beat';\n          sixteenth = 1;\n          beat++;\n          if (beat > nominator) {\n            lineType = 'bar';\n            beat = 1;\n            bar++;\n          }\n          break;\n        case 'bar':\n          lineType = 'bar';\n          sixteenth = 1;\n          beat = 1;\n          bar++;\n          break;\n      }\n      ticks += numTicks[type];\n      getData();\n      if (ticks > endTicks) {\n        return false;\n      }\n      //console.log(bar,beat,sixteenth);\n      return {\n        x: (ticks * tickWidth) - offset,\n        bar: bar,\n        beat: beat,\n        sixteenth: sixteenth,\n        // widthBar: widthBar,\n        // widthBeat: widthBeat,\n        // widthSixteenth: widthSixteenth,\n        type: lineType,\n        position: data\n      };\n    };\n\n    hasNext = function (t) {\n      var diffTicks = endTicks - ticks,\n        result = false;\n\n      if (t) {\n        type = t;\n        if (tickWidth < minWidthBeat) {\n          type = 'bar';\n        } else if (tickWidth < minWidthSixteenth) {\n          type = 'beat';\n        }\n      }\n\n      switch (type) {\n        case 'bar':\n          result = diffTicks >= numTicks[type];\n          break;\n        case 'beat':\n          result = diffTicks >= numTicks[type];\n          break;\n        case 'sixteenth':\n          result = diffTicks >= numTicks[type];\n          break;\n      }\n      //console.log(ticks,endTicks,diffTicks);\n      return result;\n    };\n\n    reset = function (start, end) {\n      startPosition = start || editor.startPosition;\n      endPosition = end || editor.endPosition;\n      ticks = startPosition.ticks;\n      bar = startPosition.bar;\n      beat = startPosition.beat;\n      sixteenth = startPosition.sixteenth;\n      //console.log(startPosition.barsAsString);\n      //console.log(endPosition.barsAsString);\n      //console.log(ticks,bar,beat,sixteenth);\n      endTicks = endPosition.ticks;\n      tickWidth = editor.tickWidth;\n      offset = 0;//ticks * this.editor.tickWidth;\n      position.set('ticks', ticks);\n      //console.log(tickWidth,offset);\n      if (tickWidth < minWidthBeat) {\n        type = 'bar';\n      } else if (tickWidth < minWidthSixteenth) {\n        type = 'beat';\n      }\n      getData();\n      // widthBar = numTicks.bar * this.editor.tickWidth;\n      // widthBeat = numTicks.beat * this.editor.tickWidth;\n      // widthSixteenth = numTicks.sixteenth * this.editor.tickWidth;\n    };\n    /*\n            setStartPosition = function(position){\n                startPosition = position;\n            };\n    \n            setEndPosition = function(position){\n                endPosition = position;\n            };\n    */\n    setType = function (t) {\n      type = t;\n      if (tickWidth < minWidthBeat) {\n        type = 'bar';\n      } else if (tickWidth < minWidthSixteenth) {\n        type = 'beat';\n      }\n    };\n\n    //console.log('ver');\n    return {\n      next: next,\n      reset: reset,\n      hasNext: hasNext,\n      setType: setType\n      //setStartPosition: setStartPosition,\n      //setEndPosition: setEndPosition,\n    };\n  };\n\n\n  Factory.prototype.createHorizontalLineIterator = function () {\n    var index,\n      pitch,\n      range,\n      pitchHeight,\n      data = {},\n      editor = this.editor,\n      next, hasNext, reset;\n\n    next = function (type) {\n      data = {\n        note: createNote(pitch),\n        y: (index * pitchHeight)\n      };\n      pitch--;\n      index++;\n      return data;\n    };\n\n    hasNext = function (type) {\n      var result = false;\n      switch (type) {\n        case 'chromatic':\n          result = index < range;\n          break;\n      }\n      return result;\n    };\n\n    reset = function () {\n      index = 0;\n      pitch = editor.highestNote;\n      range = editor.pitchRange;\n      pitchHeight = editor.pitchHeight;\n      //console.log('reset',pitch,range,pitchHeight);\n    };\n\n    //console.log('hor');\n    return {\n      next: next,\n      reset: reset,\n      hasNext: hasNext\n    };\n  };\n\n\n  Factory.prototype.createEventIterator = function () {\n    var startTicks,\n      endTicks,\n      hasNextCalled,\n      index,\n      nextEvent,\n      editor = this.editor,\n      position = this.position,\n      events = this.events,\n      numEvents = this.numEvents,\n      types = '',\n      next, hasNext, reset, setTypes;\n\n    hasNext = function (t) {\n      types = t || types;\n      hasNextCalled = true;\n      index++;\n      if (index === numEvents) {\n        return false;\n      }\n\n      nextEvent = events[index];\n      if (types === '') {\n        return nextEvent.ticks <= endTicks;\n      }\n      return false;\n    };\n\n    next = function (t) {\n      types = t || types;\n      if (!hasNextCalled) {\n        hasNext(types);\n      }\n      hasNextCalled = false;\n      return nextEvent;\n    };\n\n    reset = function () {\n      var event;\n      startTicks = editor.startTicks;\n      endTicks = editor.endTicks;\n      hasNextCalled = false;\n      if (editor.paginate === true && sequencer.isPlaying() === true) {\n        return;\n      }\n      /*\n      for(index = 0; index < numEvents; index++){\n          event = events[index];\n          if(event.ticks >= startTicks){\n              break;\n          }\n      }\n      index--;\n      */\n      index = position.get().eventIndex - 2;\n      //console.log(events);\n      //console.log('ke',sequencer.isPlaying(),index,sequencer.eventIndex);\n    };\n\n    setTypes = function () {\n      var args = Array.prototype.slice.call(arguments);\n      args.forEach(function (type) {\n        types += type + ' ';\n      });\n    };\n\n    return {\n      next: next,\n      reset: reset,\n      hasNext: hasNext,\n      setTypes: setTypes\n    };\n  };\n\n\n  Factory.prototype.createNoteIterator = function () {\n    var startTicks,\n      endTicks,\n      hasNextCalled,\n      index,\n      newNote,\n      nextNote,\n      editor = this.editor,\n      song = this.song,\n      notes = this.notes,\n      numNotes = this.numNotes,\n      types = '',\n      next, hasNext, reset, setTypes;\n\n    hasNext = function (t) {\n      types = t || types;\n      hasNextCalled = true;\n      index++;\n      if (index === this.numNotes) {\n        return false;\n      }\n\n      newNote = false;\n\n      for (; index < numNotes; index++) {\n        nextNote = notes[index];\n        //console.log(nextNote);\n\n        if (nextNote.ticks >= endTicks) {\n          //console.log('skip',nextNote.ticks);\n          break;\n        }\n\n        if (editor.paginate) {\n          // show note that has started on previous page\n          if (nextNote.ticks < startTicks && nextNote.noteOff.ticks > startTicks) {\n            newNote = true;\n          } else if (nextNote.ticks < endTicks) {\n            newNote = true;\n          }\n          if (newNote) {\n            break;\n          }\n        } else {\n          newNote = nextNote.ticks <= endTicks;\n          //console.log(newNote, nextNote.ticks, nextNote.noteOff.ticks, startTicks, endTicks);\n          if (newNote) {\n            break;\n          }\n        }\n\n        //console.log(types.indexOf(nextEvent.type) !== -1,types,nextEvent.type,nextEvent.ticks,endTicks);\n      }\n      //console.log(index,nextEvent.ticks,endTicks,newEvent);\n      return newNote;\n    };\n\n    next = function (t) {\n      types = t || types;\n      if (!hasNextCalled) {\n        hasNext(types);\n      }\n      hasNextCalled = false;\n      //return nextEvent;\n      nextNote.bbox = editor.getNoteRect(nextNote);\n      return nextNote;\n    };\n\n    reset = function () {\n      var note;\n      startTicks = editor.startTicks;\n      endTicks = editor.endTicks;\n      notes = song.notes;\n      numNotes = song.numNotes;\n      //console.log(startTicks, endTicks);\n      hasNextCalled = false;\n      if (editor.paginate === true && sequencer.isPlaying() === true) {\n        return;\n      }\n\n      for (index = 0; index < numNotes; index++) {\n        note = notes[index];\n        //console.log(note, note.ticks, startTicks);\n        if (note.ticks >= startTicks) {\n          break;\n        }\n      }\n      index--;\n    };\n\n    return {\n      next: next,\n      reset: reset,\n      hasNext: hasNext\n    };\n  };\n\n\n  Factory.prototype.createPartIterator = function () {\n    var index,\n      max,\n      part,\n      data = {},\n      editor = this.editor,\n      song = this.song,\n      parts = this.parts,\n      next, hasNext, reset;\n\n    next = function (type) {\n      part = parts[index++];\n      part.bbox = editor.getPartRect(part);\n      return part;\n    };\n\n    hasNext = function (type) {\n      return index < max;\n    };\n\n    reset = function () {\n      parts = song.parts;\n      max = song.numParts;\n      index = 0;\n    };\n\n    return {\n      next: next,\n      reset: reset,\n      hasNext: hasNext\n    };\n  };\n\n\n  sequencer.protectedScope.createKeyEditorIteratorFactory = function (song, editor) {\n    return new Factory(song, editor);\n  };\n\n\n  sequencer.protectedScope.addInitMethod(function () {\n    createNote = sequencer.createNote;\n    createPlayhead = sequencer.protectedScope.createPlayhead;\n  });\n\n}function metronome() {\n\n  'use strict';\n\n  var\n    //import\n    context, //defined in open_module.js\n    findItem, //defined in asset_manager.js\n    getPosition, //defined in position.js\n    objectForEach, //defined in util.js\n    createMidiNote, //defined in midi_note.js\n    parseEvents, //defined in parse_events.js\n    parseMetronomeEvents, //defined in song_update.js\n\n    methodMap = {\n      volume: 'setVolume',\n      instrument: 'setInstrument',\n      noteNumberAccentedTick: 'setNoteNumberAccentedTick',\n      noteNumberNonAccentedTick: 'setNoteNumberNonAccentedTick',\n      velocityAccentedTick: 'setVelocityAccentedTick',\n      velocityNonAccentedTick: 'setVelocityNonAccentedTick',\n      noteLengthAccentedTick: 'setNoteLengthAccentedTick',\n      noteLengthNonAccentedTick: 'setNoteLengthNonAccentedTick'\n    },\n\n    Metronome;\n\n\n  function checkNumber(value) {\n    //console.log(value);\n    if (isNaN(value)) {\n      if (sequencer.debug) {\n        console.log('please provide a number');\n      }\n      return false;\n    }\n    if (value < 0 || value > 127) {\n      if (sequencer.debug) {\n        console.log('please provide a number between 0 and 127');\n      }\n      return false;\n    }\n    return value;\n  }\n\n\n  Metronome = function (song) {\n    this.song = song;\n    this.track = sequencer.createTrack(this.song.id + '_metronome', 'metronome');\n    this.part = sequencer.createPart();\n    this.track.addPart(this.part);\n    this.track.connect(this.song.gainNode);\n    this.events = [];\n    this.precountEvents = [];\n    this.noteNumberAccented = 61;\n    this.noteNumberNonAccented = 60;\n    this.volume = 1;\n    this.velocityNonAccented = 100;\n    this.velocityAccented = 100;\n    this.noteLengthNonAccented = song.ppq / 4; // sixteenth notes -> don't make this too short if your sample has a long attack!\n    this.noteLengthAccented = song.ppq / 4;\n    this.track.setInstrument('heartbeat/metronome');\n    this.precountDurationInMillis = 0;\n    this.bars = 0;\n    //this.reset();\n  };\n\n\n  function createEvents(metronome, startBar, endBar, id) {\n\n    var i, j,\n      data,\n      velocity,\n      noteLength,\n      noteNumber,\n      beatsPerBar,\n      ticksPerBeat,\n      ticks = 0,\n      events = [],\n      song = metronome.song,\n      noteOn, noteOff, note;\n\n    //console.log(startBar, endBar);\n\n    for (i = startBar; i <= endBar; i++) {\n      data = getPosition(song, ['barsbeats', i]);\n      beatsPerBar = data.nominator;\n      ticksPerBeat = data.ticksPerBeat;\n\n      for (j = 0; j < beatsPerBar; j++) {\n        noteNumber = j === 0 ? metronome.noteNumberAccented : metronome.noteNumberNonAccented;\n        noteLength = j === 0 ? metronome.noteLengthAccented : metronome.noteLengthNonAccented;\n        velocity = j === 0 ? metronome.velocityAccented : metronome.velocityNonAccented;\n\n        noteOn = sequencer.createMidiEvent(ticks, 144, noteNumber, velocity);\n        noteOff = sequencer.createMidiEvent(ticks + noteLength, 128, noteNumber, 0);\n\n        if (id === 'precount') {\n          noteOn.part = { id: 'precount' };\n          noteOn.track = metronome.track;\n          noteOff.part = { id: 'precount' };\n          noteOff.track = metronome.track;\n        }\n\n        note = createMidiNote(noteOn, noteOff);\n        events.push(noteOn, noteOff);\n\n        ticks += ticksPerBeat;\n      }\n    }\n\n    return events;\n  }\n\n\n  Metronome.prototype.init = function (id, startBar, endBar) {\n    id = id === undefined ? 'init' : id;\n    //console.log('metronome', id, this.song.bars, startBar, endBar);\n    if (this.part.numEvents > 0) {\n      this.part.removeEvents(this.part.events);\n    }\n    this.events = createEvents(this, startBar, endBar, id);\n    this.numEvents = this.events.length;\n    this.part.addEvents(this.events);\n    this.bars = this.song.bars;\n    parseMetronomeEvents(this.song, this.events);\n  };\n\n\n  Metronome.prototype.update = function (startBar, endBar) {\n    //console.time('metronome update')\n    if (startBar === 0) {\n      startBar = 1;\n    }\n    //console.log('metronome', this.song.bars, startBar, endBar);\n    // for now, just re-init the metronome\n    if (startBar !== undefined && endBar !== undefined) {\n      this.init('update', startBar, endBar);\n    } else {\n      this.init('update', 1, this.song.bars);\n    }\n    //console.timeEnd('metronome update')\n\n    //this.allNotesOff();\n    //this.song.scheduler.updateSong();\n\n    // var events = createEvents(this, startBar, endBar, 'update');\n    // this.events = this.events.concat(events);\n    // parseMetronomeEvents(this.song, this.events);\n  };\n\n\n  Metronome.prototype.updateConfig = function () {\n    this.init('configure', 1, this.bars);\n    this.allNotesOff();\n    this.song.scheduler.updateSong();\n  };\n\n\n  Metronome.prototype.configure = function (config) {\n    var me = this;\n\n    objectForEach(config, function (value, key) {\n      me[methodMap[key]](value);\n      //console.log(key, me[methodMap[key]]);\n    });\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setInstrument = function (instrument) {\n    if (instrument.className !== 'Instrument') {\n      instrument = sequencer.createInstrument(instrument);\n    }\n    if (instrument !== false) {\n      this.track.setInstrument(instrument);\n    } else {\n      this.track.setInstrument('heartbeat/metronome');\n    }\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setNoteLengthAccentedTick = function (value) {\n    if (isNaN(value)) {\n      if (sequencer.debug >= 2) {\n        console.warn('please provide a number');\n      }\n    }\n    this.noteLengthAccented = value;\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setNoteLengthNonAccentedTick = function (value) {\n    if (isNaN(value)) {\n      if (sequencer.debug >= 2) {\n        console.warn('please provide a number');\n      }\n    }\n    this.noteLengthNonAccented = value;\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setVelocityAccentedTick = function (value) {\n    value = checkNumber(value);\n    if (value !== false) {\n      this.velocityAccented = value;\n    } else if (sequencer.debug >= 2) {\n      console.warn('please provide a number');\n    }\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setVelocityNonAccentedTick = function (value) {\n    value = checkNumber(value);\n    if (value !== false) {\n      this.velocityNonAccented = value;\n    } else if (sequencer.debug >= 2) {\n      console.warn('please provide a number');\n    }\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setNoteNumberAccentedTick = function (value) {\n    value = checkNumber(value);\n    if (value !== false) {\n      this.noteNumberAccented = value;\n    } else if (sequencer.debug >= 2) {\n      console.warn('please provide a number');\n    }\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setNoteNumberNonAccentedTick = function (value) {\n    value = checkNumber(value);\n    if (value !== false) {\n      this.noteNumberNonAccented = value;\n    } else if (sequencer.debug >= 2) {\n      console.warn('please provide a number');\n    }\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.reset = function () {\n    this.volume = 1;\n    this.track.setInstrument('heartbeat/metronome');\n\n    this.noteNumberAccented = 61;\n    this.noteNumberNonAccented = 60;\n\n    this.velocityAccented = 100;\n    this.velocityNonAccented = 100;\n\n    this.noteLengthAccented = this.song.ppq / 4;\n    this.noteLengthNonAccented = this.song.ppq / 4;\n  };\n\n\n  Metronome.prototype.allNotesOff = function () {\n    if (this.track.instrument) {\n      this.track.instrument.allNotesOff();\n    }\n  };\n\n\n  Metronome.prototype.createPrecountEvents = function (precount) {\n    if (precount <= 0) {\n      return;\n    }\n    var endPos = this.song.getPosition('barsbeats', this.song.bar + precount);\n\n    this.index = 0;\n    this.millis = 0;\n    this.startMillis = this.song.millis;\n    this.precountDurationInMillis = endPos.millis - this.startMillis;\n    this.precountEvents = createEvents(this, this.song.bar, endPos.bar - 1, 'precount');\n    parseEvents(this.song, this.precountEvents);\n    //console.log(this.song.bar, endPos.bar, precount, this.precountEvents.length);\n    //console.log(this.precountEvents, this.precountDurationInMillis, startTicks, endTicks);\n  };\n\n\n  // called by scheduler.js\n  Metronome.prototype.getPrecountEvents = function (maxtime) {\n    var events = this.precountEvents,\n      maxi = events.length, i, event,\n      result = [];\n\n    //console.log(maxtime, maxi, this.index, this.millis);\n\n    for (i = this.index; i < maxi; i++) {\n      event = events[i];\n      //console.log(event.millis, maxtime, this.millis);\n      if (event.millis < maxtime) {\n        event.time = this.startTime + event.millis;\n        result.push(event);\n        this.index++;\n      } else {\n        break;\n      }\n    }\n    return result;\n  };\n\n\n  Metronome.prototype.setVolume = function (value) {\n    this.track.setVolume(value);\n  };\n\n\n  sequencer.protectedScope.createMetronome = function (song) {\n    return new Metronome(song);\n  };\n\n  sequencer.protectedScope.addInitMethod(function initMetronome() {\n    context = sequencer.protectedScope.context;\n    findItem = sequencer.protectedScope.findItem;\n    getPosition = sequencer.protectedScope.getPosition;\n    createMidiNote = sequencer.createMidiNote;\n    objectForEach = sequencer.util.objectForEach;\n    parseEvents = sequencer.protectedScope.parseEvents;\n    parseMetronomeEvents = sequencer.protectedScope.parseMetronomeEvents;\n  });\n}function midiEvent() {\r\n\r\n    /*\r\n        @public\r\n        @class MidiEvent\r\n        @param time {int} the time that the event is scheduled\r\n        @param type {int} type of MidiEvent, e.g. NOTE_ON, NOTE_OFF or, 144, 128, etc.\r\n        @param data1 {int} if type is 144 or 128: note number\r\n        @param [data2] {int} if type is 144 or 128: velocity\r\n\r\n\r\n        @example\r\n        // plays the central c at velocity 100\r\n        var event = sequencer.createMidiEvent(120, sequencer.NOTE_ON, 60, 100);\r\n\r\n        // pass arguments as array\r\n        var event = sequencer.createMidiEvent([120, sequencer.NOTE_ON, 60, 100]);\r\n\r\n        // if you pass a MidiEvent instance a copy/clone will be returned\r\n        var copy = sequencer.createMidiEvent(event);\r\n    */\r\n\r\n\r\n    'use strict';\r\n\r\n    var\r\n        slice = Array.prototype.slice,\r\n\r\n        //import\r\n        createNote, // → defined in note.js\r\n        typeString, // → defined in utils.js\r\n\r\n        MidiEvent,\r\n        midiEventId = 0;\r\n\r\n\r\n    /*\r\n       arguments:\r\n       - [ticks, type, data1, data2]\r\n       - ticks, type, data1, data2\r\n\r\n       data1 and data2 are optional but must be numbers if provided\r\n    */\r\n    MidiEvent = function (args) {\r\n        var data, note;\r\n\r\n        this.className = 'MidiEvent';\r\n        this.id = 'M' + midiEventId + new Date().getTime();\r\n        this.eventNumber = midiEventId;\r\n        this.channel = 'any';\r\n        this.time = 0;\r\n        //this.offset = 0;\r\n        //console.log(midiEventId, this.type, this.id);\r\n        this.muted = false;\r\n        //console.log(midiEventId, this.type);\r\n        midiEventId++;\r\n\r\n        if (!args) {\r\n            // bypass for cloning\r\n            return;\r\n        }\r\n\r\n        //console.log('create', args);\r\n\r\n        if (typeString(args[0]) === 'midimessageevent') {\r\n            console.log('midimessageevent');\r\n            return;\r\n            //data = [0].concat(args[0].data);\r\n        } else if (typeString(args[0]) === 'array') {\r\n            data = args[0];\r\n        } else if (typeString(args[0]) === 'number' && typeString(args[1]) === 'number') {\r\n            data = [args[0], args[1]];\r\n            if (args.length >= 3 && typeString(args[2]) === 'number') {\r\n                data.push(args[2]);\r\n            }\r\n            if (args.length === 4 && typeString(args[3]) === 'number') {\r\n                data.push(args[3]);\r\n            }\r\n            if (args.length === 5 && typeString(args[4]) === 'number') {\r\n                data.push(args[4]);//channel\r\n            }\r\n        } else {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('wrong number of arguments, please consult documentation');\r\n            }\r\n            return false;\r\n        }\r\n        //console.log(data);\r\n\r\n        this.ticks = data[0];\r\n        this.status = data[1];\r\n        this.type = (this.status >> 4) * 16;\r\n        //console.log(this.type, this.status);\r\n        if (this.type >= 0x80) {\r\n            //the higher 4 bits of the status byte is the command\r\n            this.command = this.type;\r\n            //the lower 4 bits of the status byte is the channel number\r\n            this.channel = (this.status & 0xF) + 1; // from zero-based to 1-based\r\n        } else {\r\n            this.type = this.status;\r\n            this.channel = data[4] || 'any';\r\n        }\r\n\r\n        //this.sortIndex = parseInt(this.type, 10) + parseInt(this.ticks, 10); // note off events come before note on events\r\n        this.sortIndex = this.type + this.ticks; // note off events come before note on events\r\n        //console.log(this.sortIndex);\r\n\r\n        //console.log(this.status, this.type, this.channel);\r\n\r\n        switch (this.type) {\r\n            case 0x0:\r\n                break;\r\n            case 0x80:\r\n                this.data1 = data[2];\r\n                note = createNote(this.data1);\r\n                this.note = note;\r\n                this.noteName = note.fullName;\r\n                this.noteNumber = note.number;\r\n                this.octave = note.octave;\r\n                this.frequency = note.frequency;\r\n                this.data2 = 0;//data[3];\r\n                this.velocity = this.data2;\r\n                break;\r\n            case 0x90:\r\n                this.data1 = data[2];//note number\r\n                this.data2 = data[3];//velocity\r\n                if (this.data2 === 0) {\r\n                    //if velocity is 0, this is a NOTE OFF event\r\n                    this.type = 0x80;\r\n                }\r\n                note = createNote(this.data1);\r\n                this.note = note;\r\n                this.noteName = note.fullName;\r\n                this.noteNumber = note.number;\r\n                this.octave = note.octave;\r\n                this.frequency = note.frequency;\r\n                this.velocity = this.data2;\r\n                //console.log(data[2], this.note);\r\n                break;\r\n            case 0x51:\r\n                this.bpm = data[2];\r\n                break;\r\n            case 0x58:\r\n                this.nominator = data[2];\r\n                this.denominator = data[3];\r\n                break;\r\n            case 0xB0:// control change\r\n                this.data1 = data[2];\r\n                this.data2 = data[3];\r\n                this.controllerType = data[2];\r\n                this.controllerValue = data[3];\r\n                break;\r\n            case 0xC0:// program change\r\n                this.data1 = data[2];\r\n                this.programNumber = data[2];\r\n                break;\r\n            case 0xD0:// channel pressure\r\n                this.data1 = data[2];\r\n                this.data2 = data[3];\r\n                break;\r\n            case 0xE0:// pitch bend\r\n                this.data1 = data[2];\r\n                this.data2 = data[3];\r\n                //console.log('pitch bend');\r\n                break;\r\n            case 0x2F:\r\n                break;\r\n            default:\r\n                console.warn('not a recognized type of midi event!');\r\n        }\r\n    };\r\n\r\n    /**\r\n        Creates a copy of the MidiEvent\r\n        @memberof MidiEvent\r\n        @function clone\r\n        @instance\r\n    */\r\n    MidiEvent.prototype.clone = MidiEvent.prototype.copy = function () {\r\n        var event = new MidiEvent(),\r\n            property;\r\n\r\n        for (property in this) {\r\n            if (this.hasOwnProperty(property)) {\r\n                //console.log(property);\r\n                if (property !== 'id' && property !== 'eventNumber' && property !== 'midiNote') {\r\n                    event[property] = this[property];\r\n                }\r\n                event.song = undefined;\r\n                event.track = undefined;\r\n                event.trackId = undefined;\r\n                event.part = undefined;\r\n                event.partId = undefined;\r\n            }\r\n        }\r\n        return event;\r\n    };\r\n\r\n\r\n    /**\r\n    *  Transposes the MidiEvent by the provided number of semitones\r\n    *  @param {int} semi\r\n    */\r\n    MidiEvent.prototype.transpose = function (semi) {\r\n        if (this.type !== 0x80 && this.type !== 0x90) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('you can only transpose note on and note off events');\r\n            }\r\n            return;\r\n        }\r\n\r\n        //console.log('transpose', semi);\r\n        if (typeString(semi) === 'array') {\r\n            var type = semi[0];\r\n            if (type === 'hertz') {\r\n                //convert hertz to semi\r\n            } else if (type === 'semi' || type === 'semitone') {\r\n                semi = semi[1];\r\n            }\r\n        } else if (isNaN(semi) === true) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('please provide a number');\r\n            }\r\n            return;\r\n        }\r\n\r\n        var tmp = this.data1 + parseInt(semi, 10);\r\n        if (tmp < 0) {\r\n            tmp = 0;\r\n        } else if (tmp > 127) {\r\n            tmp = 127;\r\n        }\r\n        this.data1 = tmp;\r\n        var note = createNote(this.data1);\r\n        this.note = note;\r\n        this.noteName = note.fullName;\r\n        this.noteNumber = note.number;\r\n        this.octave = note.octave;\r\n        this.frequency = note.frequency;\r\n\r\n        if (this.midiNote !== undefined) {\r\n            this.midiNote.pitch = this.data1;\r\n        }\r\n\r\n        if (this.state !== 'new') {\r\n            this.state = 'changed';\r\n        }\r\n        if (this.part !== undefined) {\r\n            this.part.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    MidiEvent.prototype.setPitch = function (pitch) {\r\n        if (this.type !== 0x80 && this.type !== 0x90) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('you can only set the pitch of note on and note off events');\r\n            }\r\n            return;\r\n        }\r\n        if (typeString(pitch) === 'array') {\r\n            var type = pitch[0];\r\n            if (type === 'hertz') {\r\n                //convert hertz to pitch\r\n            } else if (type === 'semi' || type === 'semitone') {\r\n                pitch = pitch[1];\r\n            }\r\n        } else if (isNaN(pitch) === true) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('please provide a number');\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.data1 = parseInt(pitch, 10);\r\n        var note = createNote(this.data1);\r\n        this.note = note;\r\n        this.noteName = note.fullName;\r\n        this.noteNumber = note.number;\r\n        this.octave = note.octave;\r\n        this.frequency = note.frequency;\r\n\r\n        if (this.midiNote !== undefined) {\r\n            this.midiNote.pitch = this.data1;\r\n        }\r\n        if (this.state !== 'new') {\r\n            this.state = 'changed';\r\n        }\r\n        if (this.part !== undefined) {\r\n            this.part.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    MidiEvent.prototype.move = function (ticks) {\r\n        if (isNaN(ticks)) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('please provide a number');\r\n            }\r\n            return;\r\n        }\r\n        this.ticks += parseInt(ticks, 10);\r\n        if (this.state !== 'new') {\r\n            this.state = 'changed';\r\n        }\r\n        if (this.part !== undefined) {\r\n            this.part.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    MidiEvent.prototype.moveTo = function () {\r\n        var position = slice.call(arguments);\r\n        //console.log(position);\r\n\r\n        if (position[0] === 'ticks' && isNaN(position[1]) === false) {\r\n            this.ticks = parseInt(position[1], 10);\r\n        } else if (this.song === undefined) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('The midi event has not been added to a song yet; you can only move to ticks values');\r\n            }\r\n        } else {\r\n            position = this.song.getPosition(position);\r\n            if (position === false) {\r\n                if (sequencer.debug >= 1) {\r\n                    console.error('wrong position data');\r\n                }\r\n            } else {\r\n                this.ticks = position.ticks;\r\n            }\r\n        }\r\n\r\n        if (this.state !== 'new') {\r\n            this.state = 'changed';\r\n        }\r\n        if (this.part !== undefined) {\r\n            this.part.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    MidiEvent.prototype.reset = function (fromPart, fromTrack, fromSong) {\r\n\r\n        fromPart = fromPart === undefined ? true : false;\r\n        fromTrack = fromTrack === undefined ? true : false;\r\n        fromSong = fromSong === undefined ? true : false;\r\n\r\n        if (fromPart) {\r\n            this.part = undefined;\r\n            this.partId = undefined;\r\n        }\r\n        if (fromTrack) {\r\n            this.track = undefined;\r\n            this.trackId = undefined;\r\n            this.channel = 0;\r\n        }\r\n        if (fromSong) {\r\n            this.song = undefined;\r\n        }\r\n    };\r\n\r\n\r\n    // implemented because of the common interface of midi and audio events\r\n    MidiEvent.prototype.update = function () {\r\n    };\r\n\r\n\r\n    /**@exports sequencer*/\r\n    sequencer.createMidiEvent = function () {\r\n        /**\r\n            @function createMidiEvent\r\n            @param time {int}\r\n            @param type {int}\r\n            @param data1 {int}\r\n            @param data2 {int}\r\n        */\r\n        var args = slice.call(arguments),\r\n            className = args[0].className;\r\n\r\n        if (className === 'MidiEvent') {\r\n            return args[0].copy();\r\n        }\r\n        return new MidiEvent(args);\r\n    };\r\n\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        createNote = sequencer.createNote;\r\n        typeString = sequencer.protectedScope.typeString;\r\n    });\r\n\r\n}function midiEventNames() {\r\n\r\n    /**\r\n        @public\r\n    */\r\n    'use strict';\r\n\r\n    /**\r\n        @var\r\n    */\r\n    var\r\n        lowerCaseToNumber = {\r\n            'note off': 0x80,\r\n            'note on': 0x90,\r\n            'poly pressure': 0xA0,\r\n            'control change': 0xB0,\r\n            'program change': 0xC0,\r\n            'channel pressure': 0xD0,\r\n            'pitch bend': 0xE0,\r\n            'tempo': 0x51,\r\n            'time signature': 0x58,\r\n            'end of track': 0x2F\r\n        },\r\n\r\n        upperCaseToNumber = {\r\n            'NOTE_OFF': 0x80,\r\n            'NOTE_ON': 0x90,\r\n            'POLY_PRESSURE': 0xA0,\r\n            'CONTROL_CHANGE': 0xB0,\r\n            'PROGRAM_CHANGE': 0xC0,\r\n            'CHANNEL_PRESSURE': 0xD0,\r\n            'PITCH_BEND': 0xE0,\r\n            'TEMPO': 0x51,\r\n            'TIME_SIGNATURE': 0x58,\r\n            'END_OF_TRACK': 0x2F\r\n        },\r\n\r\n        numberToLowerCase = {\r\n            0x80: 'note off',\r\n            0x90: 'note on',\r\n            0xA0: 'poly pressure',\r\n            0xB0: 'control change',\r\n            0xC0: 'program change',\r\n            0xD0: 'channel pressure',\r\n            0xE0: 'pitch bend',\r\n            0x51: 'tempo',\r\n            0x58: 'time signature',\r\n            0x2F: 'end of track'\r\n        },\r\n\r\n        numberToUpperCase = {\r\n            0x80: 'NOTE_OFF',\r\n            0x90: 'NOTE_ON',\r\n            0xA0: 'POLY_PRESSURE',\r\n            0xB0: 'CONTROL_CHANGE',\r\n            0xC0: 'PROGRAM_CHANGE',\r\n            0xD0: 'CHANNEL_PRESSURE',\r\n            0xE0: 'PITCH_BEND',\r\n            0x51: 'TEMPO',\r\n            0x58: 'TIME_SIGNATURE',\r\n            0x2F: 'END_OF_TRACK'\r\n        };\r\n\r\n\r\n    function numberByName(name) {\r\n        var no = false\r\n\r\n        name = name.replace(/_/g, ' ');\r\n        no = lowerCaseToNumber[name] || false;\r\n\r\n        if (no !== false) {\r\n            return no;\r\n        }\r\n\r\n        // try upper\r\n        name = name.replace(/\\s/g, '_');\r\n        no = upperCaseToNumber[name] || false;\r\n\r\n        if (no === false && sequencer.debug === true) {\r\n            console.warn(name, 'is not a valid (or supported) midi event name, please consult documentation');\r\n        }\r\n        return no;\r\n    }\r\n\r\n\r\n    function nameByNumber(no, upperOrLower) {\r\n        var name = false;\r\n        upperOrLower = upperOrLower || 'upper'; // return uppercase names by default\r\n        //upperOrLower = upperOrLower || no.indexOf('_') !== -1 ? 'upper' : 'lower';\r\n\r\n        if (upperOrLower === 'lower') {\r\n            name = numberToLowerCase[no] || false;\r\n            if (name === false && sequencer.debug === true) {\r\n                console.warn(no, 'is not a valid (or supported) midi event number, please consult documentation');\r\n            }\r\n            return name;\r\n        }\r\n\r\n        name = numberToUpperCase[no] || false;\r\n        if (name === false && sequencer.debug === true) {\r\n            console.warn(no, 'is not a valid (or supported) midi event number, please consult documentation');\r\n        }\r\n        return name;\r\n    }\r\n\r\n\r\n    function checkEventType(type) {\r\n        if (isNaN(type)) {\r\n            return numberByName(type);\r\n        }\r\n        return nameByNumber(type);\r\n    }\r\n\r\n\r\n    //heartbeat\r\n    /**\r\n        @memberof sequencer\r\n        @instance\r\n    */\r\n    Object.defineProperty(sequencer, 'DUMMY_EVENT', { value: 0x0 }); //0\r\n    Object.defineProperty(sequencer, 'MIDI_NOTE', { value: 0x70 }); //112\r\n    //standard MIDI\r\n    Object.defineProperty(sequencer, 'NOTE_OFF', { value: 0x80 }); //128\r\n    Object.defineProperty(sequencer, 'NOTE_ON', { value: 0x90 }); //144\r\n    Object.defineProperty(sequencer, 'POLY_PRESSURE', { value: 0xA0 }); //160\r\n    Object.defineProperty(sequencer, 'CONTROL_CHANGE', { value: 0xB0 }); //176\r\n    Object.defineProperty(sequencer, 'PROGRAM_CHANGE', { value: 0xC0 }); //192\r\n    Object.defineProperty(sequencer, 'CHANNEL_PRESSURE', { value: 0xD0 }); //208\r\n    Object.defineProperty(sequencer, 'PITCH_BEND', { value: 0xE0 }); //224\r\n    Object.defineProperty(sequencer, 'SYSTEM_EXCLUSIVE', { value: 0xF0 }); //240\r\n    Object.defineProperty(sequencer, 'MIDI_TIMECODE', { value: 241 });\r\n    Object.defineProperty(sequencer, 'SONG_POSITION', { value: 242 });\r\n    Object.defineProperty(sequencer, 'SONG_SELECT', { value: 243 });\r\n    Object.defineProperty(sequencer, 'TUNE_REQUEST', { value: 246 });\r\n    Object.defineProperty(sequencer, 'EOX', { value: 247 });\r\n    Object.defineProperty(sequencer, 'TIMING_CLOCK', { value: 248 });\r\n    Object.defineProperty(sequencer, 'START', { value: 250 });\r\n    Object.defineProperty(sequencer, 'CONTINUE', { value: 251 });\r\n    Object.defineProperty(sequencer, 'STOP', { value: 252 });\r\n    Object.defineProperty(sequencer, 'ACTIVE_SENSING', { value: 254 });\r\n    Object.defineProperty(sequencer, 'SYSTEM_RESET', { value: 255 });\r\n\r\n    Object.defineProperty(sequencer, 'TEMPO', { value: 0x51 });\r\n    Object.defineProperty(sequencer, 'TIME_SIGNATURE', { value: 0x58 });\r\n    Object.defineProperty(sequencer, 'END_OF_TRACK', { value: 0x2F });\r\n\r\n    // public\r\n    /**\r\n        @memberof sequencer\r\n        @instance\r\n        @function checkEventType\r\n    */\r\n    sequencer.checkEventType = checkEventType;\r\n    sequencer.midiEventNameByNumber = nameByNumber;\r\n    sequencer.midiEventNumberByName = numberByName;\r\n\r\n}/*\n    parse method is based on: https://github.com/gasman/jasmid\n    adapted to work with heartbeatjs' type MidiEvent and Track\n*/\n\nfunction midiFile() {\n\n  'use strict';\n\n  var\n    // import\n    parseUrl, // defined in util.js\n    base64ToBinary, // defined in util.js\n    typeString, // defined in util.js\n    ajax, // defined in util.js\n    findItem, // defined in util.js\n    storeItem, // defined in util.js\n    deleteItem, // defined in util.js\n    parseMidiFile, // defined in midi_parse.js\n    createTrack, // defined in track.js\n    createPart, // defined in part.js\n    createMidiEvent, // defined in midi_event.js\n\n    index = 0,\n    MidiFile;\n\n\n  function cleanup(midifile, callback) {\n    midifile = undefined;\n    if (callback) {\n      callback(false);\n    }\n  }\n\n\n  function parse(midifile, buffer, callback) {\n    //console.time('parse midi');\n    var data, i, j, numEvents, part, track, numTracks,\n      events, event, ticks, tmpTicks, channel,\n      parsed, timeEvents, noteNumber, bpm,\n      lastNoteOn, lastNoteOff, ppqFactor,\n      type, lastType, lastData1, lastData2,\n      numNoteOn, numNoteOff, numOther, noteOns, noteOffs;\n\n    // buffer is ArrayBuffer, so convert it\n    buffer = new Uint8Array(buffer);\n    data = parseMidiFile(buffer);\n    //console.log(data);\n    //console.log(data.header.ticksPerBeat);\n\n    // save some memory\n    midifile.base64 = '';\n    midifile.numTracks = 0;\n\n    i = 0;\n    numTracks = data.tracks.length;\n    if (sequencer.overrulePPQ === true && isNaN(sequencer.defaultPPQ) === false && sequencer.defaultPPQ > 0) {\n      ppqFactor = sequencer.defaultPPQ / data.header.ticksPerBeat;\n      midifile.ppq = sequencer.defaultPPQ;\n    } else {\n      ppqFactor = 1;\n      midifile.ppq = data.header.ticksPerBeat;\n    }\n    timeEvents = [];\n    midifile.tracks = [];\n    //console.log(ppqFactor, midifile.ppq, sequencer.overrulePPQ, sequencer.defaultPPQ);\n\n    while (i < numTracks) {\n      events = data.tracks[i];\n      numEvents = events.length;\n      ticks = 0;\n      tmpTicks = 0;\n      channel = -1;\n      part = createPart();\n      track = createTrack();\n      parsed = [];\n      j = 0;\n      numNoteOn = 0;\n      numNoteOff = 0;\n      numOther = 0;\n      noteOns = {};\n      noteOffs = {};\n\n      for (j = 0; j < numEvents; j++) {\n\n        event = events[j];\n\n        tmpTicks += (event.deltaTime * ppqFactor);\n        //console.log(event.subtype, event.deltaTime, tmpTicks);\n\n        if (channel === -1 && event.channel !== undefined) {\n          channel = event.channel;\n          track.channel = channel;\n        }\n\n        type = event.subtype;\n\n        if (type === 'noteOn') {\n          numNoteOn++;\n        } else if (type === 'noteOff') {\n          numNoteOff++;\n        } else {\n          numOther++;\n        }\n\n        switch (event.subtype) {\n\n          case 'trackName':\n            track.name = event.text;\n            //console.log('name', track.name, numTracks);\n            break;\n\n          case 'instrumentName':\n            if (event.text) {\n              track.instrumentName = event.text;\n            }\n            break;\n\n          case 'noteOn':\n            //track.isUseful = true;\n            /*\n            noteNumber = event.noteNumber;\n            if(tmpTicks === ticks && lastType === type && noteNumber === lastNoteOn){\n                if(sequencer.debug >= 3){\n                    console.info('note on events on the same tick', j, tmpTicks, noteNumber, lastNoteOn, numTracks, parsed.length);\n                }\n                //parsed.pop();\n            }\n            lastNoteOn = noteNumber;\n            parsed.push(createMidiEvent(tmpTicks, 0x90, noteNumber, event.velocity));\n            */\n            /*\n            noteNumber = event.noteNumber;\n            if(noteOns[noteNumber] === undefined){\n                noteOns[noteNumber] = [];\n            }\n            noteOns[noteNumber].push(event);\n            */\n            parsed.push(createMidiEvent(tmpTicks, 0x90, event.noteNumber, event.velocity));\n            break;\n\n          case 'noteOff':\n            //track.isUseful = true;\n            /*\n            noteNumber = event.noteNumber;\n            if(tmpTicks === ticks && lastType === type && noteNumber === lastNoteOff){\n                if(sequencer.debug >= 3){\n                    console.info('note off events on the same tick', j, tmpTicks, noteNumber, lastNoteOff, numTracks, parsed.length);\n                }\n                //parsed.pop();\n            }\n            lastNoteOff = noteNumber;\n            parsed.push(createMidiEvent(tmpTicks, 0x80, noteNumber, event.velocity));\n            */\n            /*\n            noteNumber = event.noteNumber;\n            if(noteOffs[noteNumber] === undefined){\n                noteOffs[noteNumber] = [];\n            }\n            noteOns[noteNumber].push(event);\n            */\n            parsed.push(createMidiEvent(tmpTicks, 0x80, event.noteNumber, event.velocity));\n            break;\n\n          case 'endOfTrack':\n            //console.log(track.name, '0x2F', tmpTicks);\n            //parsed.push(createMidiEvent(tmpTicks,0x2F));\n            break;\n\n          case 'setTempo':\n            //sometimes 2 tempo events have the same position in ticks\n            //→ we use the last in these cases (same as Cubase)\n\n            bpm = 60000000 / event.microsecondsPerBeat;\n            //console.log('setTempo',bpm,event.microsecondsPerBeat);\n\n            if (tmpTicks === ticks && lastType === type) {\n              if (sequencer.debug >= 3) {\n                console.info('tempo events on the same tick', j, tmpTicks, bpm);\n              }\n              timeEvents.pop();\n            }\n\n            if (midifile.bpm === undefined) {\n              midifile.bpm = bpm;\n              // }else{\n              //     timeEvents.push(createMidiEvent(tmpTicks, 0x51, bpm));\n            }\n            timeEvents.push(createMidiEvent(tmpTicks, 0x51, bpm));\n            break;\n\n          case 'timeSignature':\n            //see comment above ↑\n            if (tmpTicks === ticks && lastType === type) {\n              if (sequencer.debug >= 3) {\n                console.info('time signature events on the same tick', j, tmpTicks, event.numerator, event.denominator);\n              }\n              timeEvents.pop();\n            }\n\n            if (midifile.nominator === undefined) {\n              midifile.nominator = event.numerator;\n              midifile.denominator = event.denominator;\n              // }else{\n              //     //console.log('timeSignature', event.numerator, event.denominator, event.metronome, event.thirtyseconds);\n              //     timeEvents.push(createMidiEvent(tmpTicks, 0x58, event.numerator, event.denominator));\n            }\n            timeEvents.push(createMidiEvent(tmpTicks, 0x58, event.numerator, event.denominator));\n            break;\n\n\n          case 'controller':\n            //track.isUseful = true;\n            /*\n            if(\n                tmpTicks === ticks &&\n                event.controllerType === lastData1 &&\n                event.value === lastData2 &&\n                lastData1 !== undefined &&\n                lastData2 !== undefined\n            ){\n                if(sequencer.debug >= 3){\n                    console.warn('double controller events on the same tick', j, tmpTicks, event.controllerType, event.value);\n                }\n            }else{\n                parsed.push(createMidiEvent(tmpTicks, 0xB0, event.controllerType, event.value));\n            }\n            lastData1 = event.controllerType;\n            lastData2 = event.value;\n            */\n            parsed.push(createMidiEvent(tmpTicks, 0xB0, event.controllerType, event.value));\n            //console.log('controller:', tmpTicks, event.type, event.controllerType, event.value);\n            break;\n\n          case 'programChange':\n            //track.isUseful = true;\n            parsed.push(createMidiEvent(tmpTicks, 0xC0, event.programNumber));\n            //console.log(event.type,event.controllerType);\n            break;\n\n          case 'channelAftertouch':\n            parsed.push(createMidiEvent(tmpTicks, 0xD0, event.amount));\n            break;\n\n          case 'pitchBend':\n            parsed.push(createMidiEvent(tmpTicks, 0xE0, event.value));\n            break;\n\n          default:\n          //console.log(track.name, event.type);\n        }\n        lastType = type;\n        ticks = tmpTicks;\n      }\n\n      //console.log('NOTE ON', numNoteOn, 'NOTE OFF', numNoteOff, 'OTHER', numOther);\n      // console.log('PARSED', parsed);\n      if (parsed.length > 0) {\n        track.addPart(part);\n        part.addEvents(parsed);\n        midifile.tracks.push(track);\n        midifile.numTracks++;\n      }\n      i++;\n    }\n\n    midifile.timeEvents = timeEvents;\n    midifile.autoSize = true;\n    //console.timeEnd('parse midi');\n    midifile.loaded = true;\n    callback(midifile);\n  }\n\n\n  function load(midifile, callback) {\n\n    if (midifile.base64 !== undefined) {\n      parse(midifile, base64ToBinary(midifile.base64), callback);\n      return;\n    } else if (midifile.arraybuffer !== undefined) {\n      parse(midifile, midifile.arraybuffer, callback);\n      return;\n    }\n\n    ajax({\n      url: midifile.url,\n      responseType: midifile.responseType,\n      onError: function () {\n        cleanup(midifile, callback);\n      },\n      onSuccess: function (data) {\n        if (midifile.responseType === 'json') {\n          // if the json data is corrupt (for instance because of a trailing comma) data will be null\n          if (data === null) {\n            callback(false);\n            return;\n          }\n\n          if (data.base64 === undefined) {\n            cleanup(midifile, callback);\n            if (sequencer.debug) {\n              console.warn('no base64 data');\n            }\n            return;\n          }\n\n          if (data.name !== undefined && midifile.name === undefined) {\n            midifile.name = data.name;\n          }\n\n          if (data.folder !== undefined && midifile.folder === undefined) {\n            midifile.folder = data.folder;\n          }\n\n          if (midifile.name === undefined) {\n            midifile.name = parseUrl(midifile.url).name;\n          }\n\n          midifile.localPath = midifile.folder !== undefined ? midifile.folder + '/' + midifile.name : midifile.name;\n          parse(midifile, base64ToBinary(data.base64), callback);\n        } else {\n          if (midifile.name === undefined) {\n            midifile.name = parseUrl(midifile.url).name;\n          }\n          midifile.localPath = midifile.folder !== undefined ? midifile.folder + '/' + midifile.name : midifile.name;\n          parse(midifile, data, callback);\n        }\n      }\n    });\n  }\n\n\n  function store(midifile) {\n    var occupied = findItem(midifile.localPath, sequencer.storage.midi, true),\n      action = midifile.action;\n\n    //console.log(occupied);\n    if (occupied && occupied.className === 'MidiFile' && action !== 'overwrite') {\n      if (sequencer.debug >= 2) {\n        console.warn('there is already a midifile at', midifile.localPath);\n        cleanup(midifile);\n      }\n    } else {\n      storeItem(midifile, midifile.localPath, sequencer.storage.midi);\n    }\n  }\n\n\n  MidiFile = function (config) {\n    this.id = 'MF' + index++ + new Date().getTime();\n    this.className = 'MidiFile';\n\n    this.url = config.url;\n    this.json = config.json;\n    this.base64 = config.base64;\n    this.arraybuffer = config.arraybuffer;\n\n    this.name = config.name;\n    this.folder = config.folder;\n\n    if (this.url !== undefined) {\n      this.responseType = this.url.indexOf('.json') === this.url.lastIndexOf('.') ? 'json' : 'arraybuffer';\n    } else {\n      if (this.name === undefined && this.folder === undefined) {\n        this.name = this.id;\n        this.localPath = this.id;\n      } else {\n        this.localPath = this.folder !== undefined ? this.folder + '/' + this.name : this.name;\n      }\n    }\n  };\n\n\n  sequencer.addMidiFile = function (config, callback) {\n    var type = typeString(config),\n      midifile, json, name, folder;\n\n    if (type !== 'object') {\n      if (sequencer.debug >= 2) {\n        console.warn('can\\'t create a MidiFile with this data', config);\n      }\n      return false;\n    }\n\n    if (config.json) {\n      json = config.json;\n      name = config.name;\n      folder = config.folder;\n      if (typeString(json) === 'string') {\n        try {\n          json = JSON.parse(json);\n        } catch (e) {\n          if (sequencer.debug >= 2) {\n            console.warn('can\\'t create a MidiFile with this data', config);\n          }\n          return false;\n        }\n      }\n      if (json.base64 === undefined) {\n        if (sequencer.debug >= 2) {\n          console.warn('can\\'t create a MidiFile with this data', config);\n        }\n        return false;\n      }\n      config = {\n        base64: json.base64,\n        name: name === undefined ? json.name : name,\n        folder: folder === undefined ? json.folder : folder\n      };\n      //console.log('config', name, folder, json.name, json.folder);\n    }\n\n    midifile = new MidiFile(config);\n\n    sequencer.addTask({\n      type: 'load midifile',\n      method: load,\n      params: midifile\n    }, function () {\n      //console.log(midifile);\n      store(midifile);\n      if (callback) {\n        callback(midifile);\n      }\n    });\n\n    sequencer.startTaskQueue();\n\n\n    /*\n            load(midifile, function(){\n                //console.log(midifile);\n                store(midifile);\n                if(callback){\n                    callback(midifile);\n                }\n            });\n    */\n  };\n\n\n  function MidiFile2(config) {\n    var reader = new FileReader();\n\n    function executor(resolve, reject) {\n\n      reader.addEventListener('loadend', function () {\n        // reader.result contains the contents of blob as a typed array\n        parse({}, reader.result, function (midifile) {\n          resolve(midifile);\n        });\n      });\n\n      reader.addEventListener('error', function (e) {\n        reject(e);\n      });\n\n      if (config.blob !== undefined) {\n        reader.readAsArrayBuffer(config.blob);\n      } else if (config.arraybuffer !== undefined) {\n        parse({}, config.arraybuffer, function (midifile) {\n          resolve(midifile);\n        });\n      } else if (config.base64 !== undefined) {\n        parse({}, base64ToBinary(config.base64), function (midifile) {\n          resolve(midifile);\n        });\n      }\n    }\n\n    this._promise = new Promise(executor);\n  }\n\n\n  sequencer.createMidiFile = function (config) {\n    var mf = new MidiFile2(config);\n    return mf._promise;\n  };\n\n\n  sequencer.protectedScope.addInitMethod(function () {\n    ajax = sequencer.protectedScope.ajax;\n    findItem = sequencer.protectedScope.findItem;\n    storeItem = sequencer.protectedScope.storeItem;\n    deleteItem = sequencer.protectedScope.deleteItem;\n    parseUrl = sequencer.protectedScope.parseUrl;\n    typeString = sequencer.protectedScope.typeString;\n    parseMidiFile = sequencer.protectedScope.parseMidiFile;\n    base64ToBinary = sequencer.protectedScope.base64ToBinary;\n    createPart = sequencer.createPart;\n    createTrack = sequencer.createTrack;\n    createMidiEvent = sequencer.createMidiEvent;\n  });\n}function midiNote() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        MidiNote,\r\n\r\n        //public\r\n        createMidiEvent,\r\n\r\n        //protected\r\n        typeString,\r\n\r\n        midiNoteId = 0;\r\n\r\n    /*\r\n        @params: noteOn event, noteOff event\r\n        @params: start ticks, end ticks, note number, velocity\r\n\r\n    */\r\n\r\n    MidiNote = function (args) {\r\n        var numArgs = args.length,\r\n            on, off, startTicks, endTicks, noteNumber, velocity;\r\n\r\n        //console.log(args);\r\n\r\n        if (numArgs === 1) {\r\n            on = args[0];\r\n            if (on === undefined) {\r\n                console.error('please provide at least a note on event');\r\n                return;\r\n            }\r\n            this.noteOn = on;\r\n        } else if (numArgs === 2) {\r\n            on = args[0];\r\n            off = args[1];\r\n            if (on === undefined) {\r\n                console.error('please provide at least a note on event');\r\n                return;\r\n            }\r\n            if (on.className === 'MidiEvent' && off & off.className === 'MidiEvent') {\r\n                if (on.ticks >= off.ticks) {\r\n                    console.error('MidiNote has wrong duration');\r\n                    return;\r\n                }\r\n                this.noteOn = on;\r\n                this.noteOff = off;\r\n            }\r\n        } else if (numArgs === 4) {\r\n            startTicks = args[0];\r\n            endTicks = args[1];\r\n            noteNumber = args[2];\r\n            velocity = args[3];\r\n            if (startTicks && endTicks && startTicks >= endTicks) {\r\n                console.error('MidiNote has wrong duration');\r\n                return;\r\n            }\r\n            if (noteNumber < 0 || noteNumber > 127) {\r\n                console.error('MidiNote has wrong note number');\r\n                return;\r\n            }\r\n            if (velocity < 0 || velocity > 127) {\r\n                console.error('MidiNote has wrong velocity');\r\n                return;\r\n            }\r\n            on = createMidiEvent(startTicks, sequencer.NOTE_ON, noteNumber, velocity);\r\n            if (off) {\r\n                off = createMidiEvent(endTicks, sequencer.NOTE_OFF, noteNumber, 0);\r\n            }\r\n        } else {\r\n            console.error('wrong number of arguments, please consult documentation');\r\n            return;\r\n        }\r\n\r\n        on.midiNote = this;\r\n        this.noteOn = on;\r\n\r\n        if (off === undefined) {\r\n            this.endless = true;\r\n        } else {\r\n            off.midiNote = this;\r\n            this.endless = false;\r\n            this.noteOff = off;\r\n            this.durationTicks = off.ticks - on.ticks;\r\n            this.durationMillis = off.millis - on.millis;\r\n        }\r\n\r\n\r\n        this.note = on.note;\r\n        this.number = on.noteNumber;\r\n        this.ticks = on.ticks;\r\n        this.pitch = on.data1;\r\n        this.velocity = on.velocity;\r\n        this.id = 'N' + midiNoteId + new Date().getTime();\r\n        this.name = on.noteName;\r\n        this.className = 'MidiNote';\r\n        this.type = sequencer.MIDI_NOTE;\r\n        midiNoteId++;\r\n    };\r\n\r\n\r\n    MidiNote.prototype.addNoteOff = function (off) {\r\n        if (this.noteOff !== undefined) {\r\n            console.log(off.ticks, off.noteNumber, this.id, 'override note off event');\r\n            this.noteOff.midiNote = undefined;\r\n        }\r\n        var on = this.noteOn;\r\n        off.midiNote = this;\r\n        this.endless = false;\r\n        this.noteOff = off;\r\n        this.durationTicks = off.ticks - on.ticks;\r\n        this.durationMillis = off.millis - on.millis;\r\n        this.endless = false;\r\n    };\r\n\r\n    /*\r\n        MidiNote.prototype.setDuration = function(duration_in_ticks){\r\n            if(duration_in_ticks <= 0){\r\n                console.error('duration of a MidiNote has to be greater then 0');\r\n                return;\r\n            }\r\n            this.noteOff.ticks = this.noteOn.ticks + duration_in_ticks;\r\n            this.durationTicks = this.noteOff.ticks - this.noteOn.ticks;\r\n            //this.durationMillis = this.noteOff.millis - this.noteOn.millis;\r\n            if(this.part){\r\n                this.part.needsUpdate = true;\r\n            }\r\n        };\r\n    */\r\n    /*\r\n        MidiNote.prototype.setEnd = function(ticks){\r\n            this.noteOff.ticks = ticks;\r\n            if(this.part){\r\n                this.part.needsUpdate = true;\r\n            }\r\n        };\r\n    \r\n    \r\n        MidiNote.prototype.setStart = function(ticks){\r\n            this.noteOn.ticks = ticks;\r\n            if(this.part){\r\n                this.part.needsUpdate = true;\r\n            }\r\n        };\r\n    \r\n    \r\n        MidiNote.prototype.setVelocity = function(velocity){\r\n            if(velocity < 0 || velocity > 127){\r\n                return;\r\n            }\r\n            this.velocity = this.noteOn.data1 = this.noteOn.velocity = velocity;\r\n        };\r\n    \r\n    */\r\n    MidiNote.prototype.setPitch = function (pitch) {\r\n        if (pitch < 0 || pitch > 127) {\r\n            return;\r\n        }\r\n        this.noteOn.setPitch(pitch);\r\n        if (this.endless === false) {\r\n            this.noteOff.setPitch(pitch);\r\n        }\r\n        this.number = this.noteOn.noteNumber;\r\n        this.name = this.noteOn.noteName;\r\n        this.pitch = pitch;\r\n    };\r\n\r\n\r\n    MidiNote.prototype.mute = function (flag) {\r\n        if (flag !== undefined) {\r\n            this.mute = flag;\r\n        } else {\r\n            this.mute = !this.mute;\r\n        }\r\n    };\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        createMidiEvent = sequencer.createMidiEvent;\r\n        typeString = sequencer.protectedScope.typeString;\r\n    });\r\n\r\n\r\n    sequencer.createMidiNote = function () {\r\n        return new MidiNote(Array.prototype.slice.call(arguments));\r\n    };\r\n\r\n}/*\n    based on: https://github.com/gasman/jasmid\n    adapted to work with heartbeatjs' type MidiEvent and Track\n*/\n\nfunction midiParse() {\n\n    'use strict';\n\n    var\n        lastEventTypeByte,\n        trackName,\n        instrumentName,\n\n        //import\n        createStream; // defined in midi_stream.js\n\n\n    function readChunk(stream) {\n        var id = stream.read(4, true);\n        var length = stream.readInt32();\n        //console.log(length);\n        return {\n            'id': id,\n            'length': length,\n            'data': stream.read(length, false)\n        };\n    }\n\n\n    function readEvent(stream) {\n        var event = {};\n        //var lastEventTypeByte; // for running status\n        event.deltaTime = stream.readVarInt();\n        var eventTypeByte = stream.readInt8();\n        var length;\n        //console.log(eventTypeByte, eventTypeByte & 0x80, 146 & 0x0f);\n        if ((eventTypeByte & 0xf0) == 0xf0) {\n            /* system / meta event */\n            if (eventTypeByte == 0xff) {\n                /* meta event */\n                event.type = 'meta';\n                var subtypeByte = stream.readInt8();\n                length = stream.readVarInt();\n                switch (subtypeByte) {\n                    case 0x00:\n                        event.subtype = 'sequenceNumber';\n                        if (length !== 2) throw 'Expected length for sequenceNumber event is 2, got ' + length;\n                        event.number = stream.readInt16();\n                        return event;\n                    case 0x01:\n                        event.subtype = 'text';\n                        event.text = stream.read(length);\n                        return event;\n                    case 0x02:\n                        event.subtype = 'copyrightNotice';\n                        event.text = stream.read(length);\n                        return event;\n                    case 0x03:\n                        event.subtype = 'trackName';\n                        event.text = stream.read(length);\n                        trackName = event.text;\n                        return event;\n                    case 0x04:\n                        event.subtype = 'instrumentName';\n                        event.text = stream.read(length);\n                        instrumentName = event.text;\n                        return event;\n                    case 0x05:\n                        event.subtype = 'lyrics';\n                        event.text = stream.read(length);\n                        return event;\n                    case 0x06:\n                        event.subtype = 'marker';\n                        event.text = stream.read(length);\n                        return event;\n                    case 0x07:\n                        event.subtype = 'cuePoint';\n                        event.text = stream.read(length);\n                        return event;\n                    case 0x20:\n                        event.subtype = 'midiChannelPrefix';\n                        if (length !== 1) throw 'Expected length for midiChannelPrefix event is 1, got ' + length;\n                        event.channel = stream.readInt8();\n                        return event;\n                    case 0x2f:\n                        event.subtype = 'endOfTrack';\n                        if (length !== 0) throw 'Expected length for endOfTrack event is 0, got ' + length;\n                        return event;\n                    case 0x51:\n                        event.subtype = 'setTempo';\n                        if (length !== 3) throw 'Expected length for setTempo event is 3, got ' + length;\n                        event.microsecondsPerBeat = (\n                            (stream.readInt8() << 16) +\n                            (stream.readInt8() << 8) +\n                            stream.readInt8()\n                        );\n                        return event;\n                    case 0x54:\n                        event.subtype = 'smpteOffset';\n                        if (length !== 5) throw 'Expected length for smpteOffset event is 5, got ' + length;\n                        var hourByte = stream.readInt8();\n                        event.frameRate = {\n                            0x00: 24, 0x20: 25, 0x40: 29, 0x60: 30\n                        }[hourByte & 0x60];\n                        event.hour = hourByte & 0x1f;\n                        event.min = stream.readInt8();\n                        event.sec = stream.readInt8();\n                        event.frame = stream.readInt8();\n                        event.subframe = stream.readInt8();\n                        return event;\n                    case 0x58:\n                        event.subtype = 'timeSignature';\n                        if (length !== 4) throw 'Expected length for timeSignature event is 4, got ' + length;\n                        event.numerator = stream.readInt8();\n                        event.denominator = Math.pow(2, stream.readInt8());\n                        event.metronome = stream.readInt8();\n                        event.thirtyseconds = stream.readInt8();\n                        return event;\n                    case 0x59:\n                        event.subtype = 'keySignature';\n                        if (length !== 2) throw 'Expected length for keySignature event is 2, got ' + length;\n                        event.key = stream.readInt8(true);\n                        event.scale = stream.readInt8();\n                        return event;\n                    case 0x7f:\n                        event.subtype = 'sequencerSpecific';\n                        event.data = stream.read(length);\n                        return event;\n                    default:\n                        //if(sequencer.debug >= 2){\n                        //    console.warn('Unrecognised meta event subtype: ' + subtypeByte);\n                        //}\n                        event.subtype = 'unknown';\n                        event.data = stream.read(length);\n                        return event;\n                }\n                event.data = stream.read(length);\n                return event;\n            } else if (eventTypeByte == 0xf0) {\n                event.type = 'sysEx';\n                length = stream.readVarInt();\n                event.data = stream.read(length);\n                return event;\n            } else if (eventTypeByte == 0xf7) {\n                event.type = 'dividedSysEx';\n                length = stream.readVarInt();\n                event.data = stream.read(length);\n                return event;\n            } else {\n                throw 'Unrecognised MIDI event type byte: ' + eventTypeByte;\n            }\n        } else {\n            /* channel event */\n            var param1;\n            if ((eventTypeByte & 0x80) === 0) {\n                /* running status - reuse lastEventTypeByte as the event type.\n                    eventTypeByte is actually the first parameter\n                */\n                //console.log('running status');\n                param1 = eventTypeByte;\n                eventTypeByte = lastEventTypeByte;\n            } else {\n                param1 = stream.readInt8();\n                //console.log('last', eventTypeByte);\n                lastEventTypeByte = eventTypeByte;\n            }\n            var eventType = eventTypeByte >> 4;\n            event.channel = eventTypeByte & 0x0f;\n            event.type = 'channel';\n            switch (eventType) {\n                case 0x08:\n                    event.subtype = 'noteOff';\n                    event.noteNumber = param1;\n                    event.velocity = stream.readInt8();\n                    return event;\n                case 0x09:\n                    event.noteNumber = param1;\n                    event.velocity = stream.readInt8();\n                    if (event.velocity === 0) {\n                        event.subtype = 'noteOff';\n                    } else {\n                        event.subtype = 'noteOn';\n                        //console.log('noteOn');\n                    }\n                    return event;\n                case 0x0a:\n                    event.subtype = 'noteAftertouch';\n                    event.noteNumber = param1;\n                    event.amount = stream.readInt8();\n                    return event;\n                case 0x0b:\n                    event.subtype = 'controller';\n                    event.controllerType = param1;\n                    event.value = stream.readInt8();\n                    return event;\n                case 0x0c:\n                    event.subtype = 'programChange';\n                    event.programNumber = param1;\n                    return event;\n                case 0x0d:\n                    event.subtype = 'channelAftertouch';\n                    event.amount = param1;\n                    //if(trackName === 'SH-S1-44-C09 L=SML IN=3'){\n                    //    console.log('channel pressure', trackName, param1);\n                    //}\n                    return event;\n                case 0x0e:\n                    event.subtype = 'pitchBend';\n                    event.value = param1 + (stream.readInt8() << 7);\n                    return event;\n                default:\n                    /*\n                    throw 'Unrecognised MIDI event type: ' + eventType;\n                    console.log('Unrecognised MIDI event type: ' + eventType);\n                    */\n\n\n\n                    event.value = stream.readInt8();\n                    event.subtype = 'unknown';\n                    //console.log(event);\n                    /*\n                                        event.noteNumber = param1;\n                                        event.velocity = stream.readInt8();\n                                        event.subtype = 'noteOn';\n                                        console.log('weirdo', trackName, param1, event.velocity);\n                    */\n\n                    return event;\n            }\n        }\n    }\n\n\n    function parseStream(stream) {\n        var formatType, trackCount, timeDivision, ticksPerBeat,\n            tracks = [], i,\n            trackNames = [],\n            trackChunk, trackStream,\n            headerChunk, headerStream;\n\n        headerChunk = readChunk(stream);\n        if (headerChunk.id !== 'MThd' || headerChunk.length !== 6) {\n            throw 'Bad .mid file - header not found';\n        }\n        //console.log(headerChunk);\n\n        headerStream = createStream(headerChunk.data);\n        formatType = headerStream.readInt16();\n        trackCount = headerStream.readInt16();\n        timeDivision = headerStream.readInt16();\n\n        if (timeDivision & 0x8000) {\n            throw 'Expressing time division in SMTPE frames is not supported yet';\n        } else {\n            ticksPerBeat = timeDivision;\n        }\n\n        var header = {\n            'formatType': formatType,\n            'trackCount': trackCount,\n            'ticksPerBeat': ticksPerBeat\n        };\n\n        for (i = 0; i < trackCount; i++) {\n            tracks[i] = [];\n            trackNames[i] = trackName;\n            trackChunk = readChunk(stream);\n            if (trackChunk.id !== 'MTrk') {\n                throw 'Unexpected chunk - expected MTrk, got ' + trackChunk.id;\n            }\n            trackStream = createStream(trackChunk.data);\n            while (!trackStream.eof()) {\n                var event = readEvent(trackStream);\n                tracks[i].push(event);\n            }\n        }\n\n        return {\n            'header': header,\n            'tracks': tracks,\n            'trackNames': trackNames\n        };\n    }\n\n\n    /* read a MIDI-style variable-length integer\n        (big-endian value in groups of 7 bits,\n        with top bit set to signify that another byte follows)\n    function readVarInt() {\n        var result = 0;\n        while (true) {\n            var b = readInt8();\n            if (b & 0x80) {\n                result += (b & 0x7f);\n                result <<= 7;\n            } else {\n                // b is the last byte\n                return result + b;\n            }\n        }\n    }\n    */\n\n\n    sequencer.protectedScope.parseMidiFile = function (buffer) {\n        return parseStream(createStream(buffer));\n        //var dv = new DataView(buffer);\n        //return parseStream(dv);\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        createStream = sequencer.protectedScope.createStream;\n    });\n}\n\n/* \n\tWrapper for accessing strings through sequential reads \n\t\n\tbased on: https://github.com/gasman/jasmid\n\tadapted to work with ArrayBuffer -> Uint8Array\n*/\n\nfunction midiStream() {\n\n\t'use strict';\n\n\tvar fcc = String.fromCharCode;\n\n\t// buffer is Uint8Array\n\tfunction createStream(buffer) {\n\t\tvar position = 0;\n\n\t\t/* read string or any number of bytes */\n\t\tfunction read(length, toString) {\n\t\t\tvar result, i;\n\t\t\ttoString = toString === undefined ? true : toString;\n\n\t\t\tif (toString) {\n\t\t\t\tresult = '';\n\t\t\t\tfor (i = 0; i < length; i++ , position++) {\n\t\t\t\t\tresult += fcc(buffer[position]);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\tresult = [];\n\t\t\t\tfor (i = 0; i < length; i++ , position++) {\n\t\t\t\t\tresult.push(buffer[position]);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\t/* read a big-endian 32-bit integer */\n\t\tfunction readInt32() {\n\t\t\tvar result = (\n\t\t\t\t(buffer[position] << 24) +\n\t\t\t\t(buffer[position + 1] << 16) +\n\t\t\t\t(buffer[position + 2] << 8) +\n\t\t\t\tbuffer[position + 3]\n\t\t\t);\n\t\t\tposition += 4;\n\t\t\treturn result;\n\t\t}\n\n\t\t/* read a big-endian 16-bit integer */\n\t\tfunction readInt16() {\n\t\t\tvar result = (\n\t\t\t\t(buffer[position] << 8) +\n\t\t\t\tbuffer[position + 1]\n\t\t\t);\n\t\t\tposition += 2;\n\t\t\treturn result;\n\t\t}\n\n\t\t/* read an 8-bit integer */\n\t\tfunction readInt8(signed) {\n\t\t\tvar result = buffer[position];\n\t\t\tif (signed && result > 127) result -= 256;\n\t\t\tposition += 1;\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction eof() {\n\t\t\treturn position >= buffer.length;\n\t\t}\n\n\t\t/* read a MIDI-style variable-length integer\n\t\t\t(big-endian value in groups of 7 bits,\n\t\t\twith top bit set to signify that another byte follows)\n\t\t*/\n\t\tfunction readVarInt() {\n\t\t\tvar result = 0;\n\t\t\twhile (true) {\n\t\t\t\tvar b = readInt8();\n\t\t\t\tif (b & 0x80) {\n\t\t\t\t\tresult += (b & 0x7f);\n\t\t\t\t\tresult <<= 7;\n\t\t\t\t} else {\n\t\t\t\t\t/* b is the last byte */\n\t\t\t\t\treturn result + b;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t'eof': eof,\n\t\t\t'read': read,\n\t\t\t'readInt32': readInt32,\n\t\t\t'readInt16': readInt16,\n\t\t\t'readInt8': readInt8,\n\t\t\t'readVarInt': readVarInt\n\t\t};\n\t}\n\n\tsequencer.protectedScope.createStream = createStream;\n\n}\n\nfunction midiSystem() {\n\n  'use strict';\n\n  var\n    context, // defined in open_module.js\n    typeString, // defined in util.js\n    objectForEach, // defined in util.js\n    createMidiNote, // defined in midi_note.js\n    createMidiEvent, // defined in midi_event.js\n\n    slice = Array.prototype.slice,\n\n    songMidiEventListener,\n\n    midiAccess,\n    midiInputsOrder,\n    midiOutputsOrder,\n    midiInitialized = false,\n    midiEventListenerId = 0;\n\n\n  function initMidi(cb) {\n\n    // console.log(midiInitialized, navigator.requestMIDIAccess);\n\n    if (midiInitialized === true) {\n      cb();\n      return;\n    }\n\n    midiInitialized = true;\n\n    if (navigator.requestMIDIAccess !== undefined) {\n      navigator.requestMIDIAccess().then(\n        // on success\n        function midiAccessOnSuccess(midi) {\n          if (midi._jazzInstances !== undefined) {\n            sequencer.jazz = midi._jazzInstances[0]._Jazz.version;\n            sequencer.midi = true;\n          } else {\n            sequencer.webmidi = true;\n            sequencer.midi = true;\n          }\n          midiAccess = midi;\n          midiAccess.onstatechange = getDevices;\n          if (!midiAccess.inputs || !midiAccess.outputs) {\n            // Firefox WebMIDI API support is still in progress\n            cb();\n          } else {\n            getDevices();\n            //console.log(midi, sequencer.midi, sequencer.webmidi, sequencer.jazz);    \n            cb();\n          }\n        },\n        // on error\n        function midiAccessOnError(e) {\n          console.log('MIDI could not be initialized:', e);\n          cb();\n        }\n      );\n      // browsers without WebMIDI API\n    } else {\n      if (sequencer.browser === 'chrome') {\n        console.log('Web MIDI API not enabled');\n      } else {\n        console.log('Web MIDI API not supported');\n      }\n      cb();\n    }\n  }\n\n\n  function getDevices(e) {\n    //console.log('getDevices', e);\n    var inputs, outputs;\n    midiInputsOrder = [];\n    midiOutputsOrder = [];\n\n    inputs = midiAccess.inputs;\n\n    inputs.forEach(function (input) {\n      midiInputsOrder.push({ name: input.name, id: input.id });\n      sequencer.midiInputs[input.id] = input;\n    });\n\n    midiInputsOrder.sort(function (a, b) {\n      var nameA = a.name.toLowerCase(),\n        nameB = b.name.toLowerCase();\n      if (nameA < nameB) { //sort string ascending\n        return -1;\n      } else if (nameA > nameB) {\n        return 1;\n      }\n      return 0; //default return value (no sorting)\n    });\n\n    sequencer.numMidiInputs = midiInputsOrder.length;\n\n\n    outputs = midiAccess.outputs;\n\n    outputs.forEach(function (output) {\n      midiOutputsOrder.push({ name: output.name, id: output.id });\n      sequencer.midiOutputs[output.id] = output;\n    });\n\n\n    midiOutputsOrder.sort(function (a, b) {\n      var nameA = a.name.toLowerCase(),\n        nameB = b.name.toLowerCase();\n      if (nameA < nameB) { //sort string ascending\n        return -1;\n      } else if (nameA > nameB) {\n        return 1;\n      }\n      return 0; //default return value (no sorting)\n    });\n\n    sequencer.numMidiOutputs = midiOutputsOrder.length;\n  }\n\n\n  function initMidiSong(song) {\n    songMidiEventListener = function (e) {\n      //console.log(e);\n      handleMidiMessageSong(e, song, this);\n    };\n\n    // by default a song listens to all available midi-in ports\n    objectForEach(sequencer.midiInputs, function (port) {\n      //port.addEventListener('midimessage', songMidiEventListener, false);\n      port.onmidimessage = songMidiEventListener;\n      song.midiInputs[port.id] = port;\n      //console.log(port);\n    });\n    //console.log(sequencer.midiInputs);\n\n    objectForEach(sequencer.midiOutputs, function (port) {\n      song.midiOutputs[port.id] = port;\n    });\n\n    song.numMidiInputs = sequencer.numMidiInputs;\n    song.numMidiOutputs = sequencer.numMidiOutputs;\n  }\n\n\n  function setMidiInputSong(id, flag, song) {\n    var input = sequencer.midiInputs[id],\n      tracks = song.tracks,\n      maxi = song.numTracks - 1,\n      i, track;\n\n    flag = flag === undefined ? true : flag;\n\n    if (input === undefined) {\n      if (sequencer.debug === true) {\n        console.log('no midi input with id', id, 'found');\n      }\n      return;\n    }\n\n    if (flag === false) {\n      delete song.midiInputs[id];\n      //input.removeEventListener('midimessage', songMidiEventListener, false);\n      input.onmidimessage = null;\n      song.numMidiInputs--;\n    } else if (input !== undefined) {\n      song.midiInputs[id] = input;\n      //input.addEventListener('midimessage', songMidiEventListener, false);\n      input.onmidimessage = songMidiEventListener;\n      song.numMidiInputs++;\n    }\n\n    for (i = maxi; i >= 0; i--) {\n      track = tracks[i];\n      track.setMidiInput(id, flag);\n      // if(flag === false){\n      //     delete track.midiInputs[id];\n      // }\n    }\n  }\n\n  function setMidiOutputSong(id, flag, song) {\n    var output = sequencer.midiOutputs[id],\n      tracks = song.tracks,\n      maxi = song.numTracks - 1,\n      i, track, time;\n\n    flag = flag === undefined ? true : flag;\n\n    if (output === undefined) {\n      if (sequencer.debug === true) {\n        console.log('no midi output with id', id, 'found');\n      }\n      return;\n    }\n\n    if (flag === false) {\n      delete song.midiOutputs[id];\n      song.numMidiOutputs--;\n      time = song.scheduler.lastEventTime + 100;\n      output.send([0xB0, 0x7B, 0x00], time); // stop all notes\n      output.send([0xB0, 0x79, 0x00], time); // reset all controllers\n    } else if (output !== undefined) {\n      song.midiOutputs[id] = output;\n      song.numMidiOutputs++;\n    }\n\n    for (i = maxi; i >= 0; i--) {\n      track = tracks[i];\n      track.setMidiOutput(id, flag);\n      // if(flag === false){\n      //     delete track.midiOutputs[id];\n      // }\n    }\n  }\n\n  function handleMidiMessageSong(midiMessageEvent, song, input) {\n    var data = midiMessageEvent.data,\n      i, track,\n      tracks = song.tracks,\n      numTracks = song.numTracks,\n      midiEvent,\n      listeners;\n\n    //console.log(midiMessageEvent.data);\n    midiEvent = createMidiEvent(song.ticks, data[0], data[1], data[2]);\n\n    for (i = 0; i < numTracks; i++) {\n      track = tracks[i];\n      //console.log(track.midiInputs, input);\n      /*\n      if(midiEvent.channel === track.channel || track.channel === 0 || track.channel === 'any'){\n          handleMidiMessageTrack(midiEvent, track);\n      }\n      */\n      // like in Cubase, midi events from all devices, sent on any midi channel are forwarded to all tracks\n      // set track.monitor to false if you don't want to receive midi events on a certain track\n      // note that track.monitor is by default set to false and that track.monitor is automatically set to true\n      // if you are recording on that track\n      // console.log(track.monitor, track.id, input.id);\n      if (track.monitor === true && track.midiInputs[input.id] !== undefined) {\n        handleMidiMessageTrack(midiEvent, track, input);\n      }\n    }\n\n    listeners = song.midiEventListeners[midiEvent.type];\n    if (listeners === undefined) {\n      return;\n    }\n\n    objectForEach(listeners, function (listener) {\n      listener(midiEvent, input);\n    });\n  }\n\n\n  //function handleMidiMessageTrack(midiMessageEvent, track, input){\n  function handleMidiMessageTrack(midiEvent, track, input) {\n    var song = track.song,\n      note, listeners, channel;\n    //data = midiMessageEvent.data,\n    //midiEvent = createMidiEvent(song.ticks, data[0], data[1], data[2]);\n\n    //midiEvent.source = midiMessageEvent.srcElement.name;\n    //console.log(midiMessageEvent)\n    //console.log('---->', midiEvent.type);\n\n    // add the exact time of this event so we can calculate its ticks position\n    midiEvent.recordMillis = context.currentTime * 1000; // millis\n    midiEvent.state = 'recorded';\n\n    if (midiEvent.type === 144) {\n      note = createMidiNote(midiEvent);\n      track.recordingNotes[midiEvent.data1] = note;\n      //track.song.recordingNotes[note.id] = note;\n    } else if (midiEvent.type === 128) {\n      note = track.recordingNotes[midiEvent.data1];\n      // check if the note exists: if the user plays notes on her keyboard before the midi system has\n      // been fully initialized, it can happen that the first incoming midi event is a NOTE OFF event\n      if (note === undefined) {\n        return;\n      }\n      note.addNoteOff(midiEvent);\n      delete track.recordingNotes[midiEvent.data1];\n      //delete track.song.recordingNotes[note.id];\n    }\n\n    //console.log(song.preroll, song.recording, track.recordEnabled);\n\n    if ((song.prerolling || song.recording) && track.recordEnabled === 'midi') {\n      if (midiEvent.type === 144) {\n        track.song.recordedNotes.push(note);\n      }\n      track.recordPart.addEvent(midiEvent);\n      // song.recordedEvents is used in the key editor\n      track.song.recordedEvents.push(midiEvent);\n    } else if (track.enableRetrospectiveRecording) {\n      track.retrospectiveRecording.push(midiEvent);\n    }\n\n    // call all midi event listeners\n    listeners = track.midiEventListeners[midiEvent.type];\n    if (listeners !== undefined) {\n      objectForEach(listeners, function (listener) {\n        listener(midiEvent, input);\n      });\n    }\n\n    channel = track.channel;\n    if (channel === 'any' || channel === undefined || isNaN(channel) === true) {\n      channel = 0;\n    }\n\n    objectForEach(track.midiOutputs, function (output) {\n      //console.log('midi out', output, midiEvent.type);\n      if (midiEvent.type === 128 || midiEvent.type === 144 || midiEvent.type === 176) {\n        //console.log(midiEvent.type, midiEvent.data1, midiEvent.data2);\n        output.send([midiEvent.type, midiEvent.data1, midiEvent.data2]);\n        // }else if(midiEvent.type === 192){\n        //     output.send([midiEvent.type + channel, midiEvent.data1]);\n      }\n      //output.send([midiEvent.status + channel, midiEvent.data1, midiEvent.data2]);\n    });\n\n    // @TODO: maybe a track should be able to send its event to both a midi-out port and an internal heartbeat song?\n    //console.log(track.routeToMidiOut);\n    if (track.routeToMidiOut === false) {\n      midiEvent.track = track;\n      track.instrument.processEvent(midiEvent);\n    }\n  }\n\n\n  function addMidiEventListener(args, obj) { // obj can be a track or a song\n    args = slice.call(args);\n\n    var id = midiEventListenerId++,\n      types = {},\n      ids = [],\n      listener,\n      loop;\n\n\n    // should I inline this?\n    loop = function (args, i, maxi) {\n      for (i = 0; i < maxi; i++) {\n        var arg = args[i],\n          type = typeString(arg);\n        //console.log(type);\n        if (type === 'array') {\n          loop(arg, 0, arg.length);\n        } else if (type === 'function') {\n          listener = arg;\n        } else if (isNaN(arg) === false) {\n          arg = parseInt(arg, 10);\n          if (sequencer.checkEventType(arg) !== false) {\n            types[arg] = arg;\n          }\n        } else if (type === 'string') {\n          if (sequencer.checkEventType(arg) !== false) {\n            arg = sequencer.midiEventNumberByName(arg);\n            types[arg] = arg;\n          }\n        }\n      }\n    };\n\n    loop(args, 0, args.length);\n    //console.log('types', types, 'listener', listener);\n\n    objectForEach(types, function (type) {\n      //console.log(type);\n      if (obj.midiEventListeners[type] === undefined) {\n        obj.midiEventListeners[type] = {};\n      }\n      obj.midiEventListeners[type][id] = listener;\n      ids.push(type + '_' + id);\n    });\n\n    //console.log(obj.midiEventListeners);\n    return ids.length === 1 ? ids[0] : ids;\n  }\n\n\n  function removeMidiEventListener(id, obj) {\n    var type;\n    id = id.split('_');\n    type = id[0];\n    id = id[1];\n    delete obj.midiEventListeners[type][id];\n  }\n\n\n  function removeMidiEventListeners() {\n\n  }\n\n\n  function getMidiPortsAsDropdown(config, obj) {\n    var select = document.createElement('select'),\n      option, ports,\n      type = config.type,\n      id = config.id || type,\n      div = config.div,\n      firstOption = config.firstOption;\n\n    if (type !== 'input' && type !== 'output') {\n      console.log('please set type to \"input\" or \"output\"');\n      return;\n    }\n\n    if (firstOption === undefined) {\n      firstOption = type === 'input' ? 'choose MIDI in' : 'choose MIDI out';\n    }\n\n    select.id = id;\n    ports = type === 'input' ? obj.midiInputs : obj.midiOutputs;\n\n    if (firstOption !== false) {\n      option = document.createElement('option');\n      option.value = -1;\n      option.innerHTML = firstOption;\n      select.appendChild(option);\n    }\n\n    objectForEach(ports, function (port) {\n      option = document.createElement('option');\n      option.value = port.id;\n      option.innerHTML = port.name;\n      select.appendChild(option);\n    });\n\n    if (div) {\n      div.appendChild(select);\n    }\n    return select;\n  }\n\n\n  sequencer.getMidiPortsAsDropdown = function () {\n    getMidiPortsAsDropdown(sequencer);\n  };\n\n\n  sequencer.getMidiInputsAsDropdown = function (config) {\n    config = config || {\n      type: 'input'\n    };\n    return getMidiPortsAsDropdown(config, sequencer);\n  };\n\n\n  sequencer.getMidiOutputsAsDropdown = function (config) {\n    config = config || {\n      type: 'output'\n    };\n    return getMidiPortsAsDropdown(config, sequencer);\n  };\n\n\n  function getMidiInputs(cb, obj) {\n    var i, maxi;\n    if (obj === sequencer) {\n      for (i = 0, maxi = midiInputsOrder.length; i < maxi; i++) {\n        cb(obj.midiInputs[midiInputsOrder[i].id], i);\n      }\n    } else {\n      objectForEach(obj.midiInputs, function (port) {\n        cb(port, i);\n      });\n    }\n  }\n\n\n  function getMidiOutputs(cb, obj) {\n    var i, maxi;\n    if (obj === sequencer) {\n      for (i = 0, maxi = midiOutputsOrder.length; i < maxi; i++) {\n        cb(obj.midiOutputs[midiOutputsOrder[i].id], i);\n      }\n    } else {\n      objectForEach(obj.midiOutputs, function (port, i) {\n        cb(port, i);\n      });\n    }\n  }\n\n\n  sequencer.getMidiInputs = function (cb) {\n    getMidiInputs(cb, sequencer);\n  };\n\n\n  sequencer.getMidiOutputs = function (cb) {\n    getMidiOutputs(cb, sequencer);\n  };\n\n\n  sequencer.protectedScope.addInitMethod(function () {\n    context = sequencer.protectedScope.context;\n    createMidiNote = sequencer.createMidiNote;\n    createMidiEvent = sequencer.createMidiEvent;\n    typeString = sequencer.protectedScope.typeString;\n    objectForEach = sequencer.protectedScope.objectForEach;\n  });\n\n\n  // close_module.js\n  sequencer.protectedScope.initMidi = initMidi;\n\n  // song.js\n  sequencer.protectedScope.initMidiSong = initMidiSong;\n  sequencer.protectedScope.getMidiInputs = getMidiInputs;\n  sequencer.protectedScope.getMidiOutputs = getMidiOutputs;\n  sequencer.protectedScope.setMidiInputSong = setMidiInputSong;\n  sequencer.protectedScope.setMidiOutputSong = setMidiOutputSong;\n  sequencer.protectedScope.addMidiEventListener = addMidiEventListener;\n  sequencer.protectedScope.getMidiPortsAsDropdown = getMidiPortsAsDropdown;\n  sequencer.protectedScope.removeMidiEventListener = removeMidiEventListener;\n  sequencer.protectedScope.removeMidiEventListeners = removeMidiEventListeners;\n  sequencer.protectedScope.handleMidiMessageTrack = handleMidiMessageTrack;\n\n}\n\n\n\n\n/*\n    function handleMidiMessageTrack(e, track){\n        var data = e.data,\n            midiEvent,\n            song = track.song,\n            note, listeners;\n\n        //console.log(track.recordPart);\n        if(song){\n            midiEvent = sequencer.createMidiEvent(song.ticks, data[0], data[1], data[2]);\n            //console.log(midiEvent);\n            if(midiEvent.type === 144){\n                note = createMidiNote(midiEvent);\n                track.recordingNotes[midiEvent.data1] = note;\n                //track.song.recordingNotes[note.id] = note;\n            }else if(midiEvent.type === 128){\n                note = track.recordingNotes[midiEvent.data1];\n                note.addNoteOff(midiEvent);\n                delete track.recordingNotes[midiEvent.data1];\n                //delete track.song.recordingNotes[note.id];\n            }\n            if(song.recording && song.playing && track.recordEnabled){\n                if(midiEvent.type === 144){\n                    track.song.recordedNotes.push(note);\n                }\n                track.recordPart.addEvent(midiEvent);\n                track.song.recordedEvents.push(midiEvent);\n            }else if(track.enableRetrospectiveRecording){\n                track.retrospectiveRecording.push(midiEvent);\n            }\n\n            // call all midi event listeners\n            listeners = track.midiEventListeners[midiEvent.type];\n            if(listeners !== undefined){\n                objectForEach(listeners, function(listener, id){\n                    listener(midiEvent);\n                });\n            }\n        }else{\n            console.error('unexpected situation!');\n            // does this ever happen?\n            midiEvent = sequencer.createMidiEvent(0, data[0], data[1], data[2]);\n            midiEvent.millis = song.recordTimestamp - sequencer.getTime();\n            if(track.enableRetrospectiveRecording){\n                track.retrospectiveRecording.push(midiEvent);\n            }\n            //@TODO: add parser for retrospective recording: convert millis to ticks\n        }\n\n        if(track.midiOutput !== undefined){\n            track.midiOutput.send([data[0], data[1], data[2]]);\n        }else{\n            midiEvent.track = track;\n            track.instrument.processEvent(midiEvent);\n        }\n    }\n*///http://www.deluge.co/?q=midi-tempo-bpm\n// This code is based on https://github.com/sergi/jsmidi\n\nfunction midiWrite() {\n\n    'use strict';\n\n    var\n        AP = Array.prototype,\n        PPQ = sequencer.defaultPPQ,\n        HDR_CHUNKID = [\n            'M'.charCodeAt(0),\n            'T'.charCodeAt(0),\n            'h'.charCodeAt(0),\n            'd'.charCodeAt(0)\n        ],\n        HDR_CHUNK_SIZE = [0x0, 0x0, 0x0, 0x6], // Header size for SMF\n        // HDR_TYPE0 = [0x0, 0x0], // Midi Type 0 id\n        HDR_TYPE1 = [0x0, 0x1], // Midi Type 1 id\n        //HDR_PPQ = [0x01, 0xE0], // Defaults to 480 ticks per beat\n        //HDR_PPQ = [0x00, 0x80], // Defaults to 128 ticks per beat\n        HDR_PPQ = str2Bytes(PPQ.toString(16), 2),\n\n        TRK_CHUNKID = [\n            'M'.charCodeAt(0),\n            'T'.charCodeAt(0),\n            'r'.charCodeAt(0),\n            'k'.charCodeAt(0)\n        ],\n\n        // Meta event codes\n        META_SEQUENCE = 0x00,\n        META_TEXT = 0x01,\n        META_COPYRIGHT = 0x02,\n        META_TRACK_NAME = 0x03,\n        META_INSTRUMENT = 0x04,\n        META_LYRIC = 0x05,\n        META_MARKER = 0x06,\n        META_CUE_POINT = 0x07,\n        META_CHANNEL_PREFIX = 0x20,\n        META_END_OF_TRACK = 0x2f,\n        META_TEMPO = 0x51,\n        META_SMPTE = 0x54,\n        META_TIME_SIG = 0x58,\n        META_KEY_SIG = 0x59,\n        META_SEQ_EVENT = 0x7f;\n\n\n    function write(song) {\n        var byteArray = [].concat(HDR_CHUNKID, HDR_CHUNK_SIZE, HDR_TYPE1),\n            tracks = song.tracks,\n            numTracks = song.tracks.length + 1,\n            i, maxi, track, midiFile, destination, b64,\n            arrayBuffer, dataView, uintArray;\n\n\n        byteArray = byteArray.concat(str2Bytes(numTracks.toString(16), 2), HDR_PPQ);\n        //console.log(byteArray);\n        byteArray = byteArray.concat(trackToBytes(song.timeEvents, song.durationTicks, 'tempo'));\n        //console.log(song.durationMillis);\n\n        for (i = 0, maxi = tracks.length; i < maxi; i++) {\n            track = tracks[i];\n            byteArray = byteArray.concat(trackToBytes(track.events, song.durationTicks, track.name, track.instrumentId));\n        }\n\n        //b64 = btoa(codes2Str(byteArray));\n        //window.location.assign(\"data:audio/midi;base64,\" + b64);\n        //console.log(b64);// send to server\n\n        maxi = byteArray.length;\n        arrayBuffer = new ArrayBuffer(maxi);\n        uintArray = new Uint8Array(arrayBuffer);\n        for (i = 0; i < maxi; i++) {\n            uintArray[i] = byteArray[i];\n        }\n        midiFile = new Blob([uintArray], { type: 'application/x-midi', endings: 'transparent' });\n        saveAs(midiFile, song.name);\n        //window.location.assign(window.URL.createObjectURL(midiFile));\n    }\n\n\n    function trackToBytes(events, lastEventTicks, trackName, instrumentName) {\n        var lengthBytes,\n            i, maxi, event, status,\n            trackLength, // number of bytes in track chunk\n            ticks = 0,\n            delta = 0,\n            trackBytes = [];\n\n        if (trackName) {\n            trackBytes.push(0x00);\n            trackBytes.push(0xFF);\n            trackBytes.push(0x03);\n            trackBytes = trackBytes.concat(convertToVLQ(trackName.length));\n            trackBytes = trackBytes.concat(stringToNumArray(trackName));\n        }\n\n        if (instrumentName) {\n            trackBytes.push(0x00);\n            trackBytes.push(0xFF);\n            trackBytes.push(0x04);\n            trackBytes = trackBytes.concat(convertToVLQ(instrumentName.length));\n            trackBytes = trackBytes.concat(stringToNumArray(instrumentName));\n        }\n\n        for (i = 0, maxi = events.length; i < maxi; i++) {\n            event = events[i];\n            delta = event.ticks - ticks;\n            delta = convertToVLQ(delta);\n            //console.log(delta);\n            trackBytes = trackBytes.concat(delta);\n            //trackBytes.push.apply(trackBytes, delta);\n            if (event.type === 0x80 || event.type === 0x90) { // note off, note on\n                //status = parseInt(event.type.toString(16) + event.channel.toString(16), 16);\n                status = event.type + event.channel;\n                trackBytes.push(status);\n                trackBytes.push(event.noteNumber);\n                trackBytes.push(event.velocity);\n            } else if (event.type === 0x51) { // tempo\n                trackBytes.push(0xFF);\n                trackBytes.push(0x51);\n                trackBytes.push(0x03);// length\n                //trackBytes = trackBytes.concat(convertToVLQ(3));// length\n                var microSeconds = Math.round(60000000 / event.bpm);\n                trackBytes = trackBytes.concat(str2Bytes(microSeconds.toString(16), 3));\n            } else if (event.type === 0x58) { // time signature\n                var denom = event.denominator;\n                if (denom === 2) {\n                    denom = 0x01;\n                } else if (denom === 4) {\n                    denom = 0x02;\n                } else if (denom === 8) {\n                    denom = 0x03;\n                } else if (denom === 16) {\n                    denom = 0x04;\n                } else if (denom === 32) {\n                    denom = 0x05;\n                }\n                trackBytes.push(0xFF);\n                trackBytes.push(0x58);\n                trackBytes.push(0x04);// length\n                //trackBytes = trackBytes.concat(convertToVLQ(4));// length\n                trackBytes.push(event.nominator);\n                trackBytes.push(denom);\n                trackBytes.push(PPQ / event.nominator);\n                trackBytes.push(0x08); // 32nd notes per crotchet\n                //console.log(trackName, event.nominator, event.denominator, denom, PPQ/event.nominator);\n            }\n            // set the new ticks reference\n            //console.log(status, event.ticks, ticks);\n            ticks = event.ticks;\n        }\n        delta = lastEventTicks - ticks;\n        //console.log('d', delta, 't', ticks, 'l', lastEventTicks);\n        delta = convertToVLQ(delta);\n        //console.log(trackName, ticks, delta);\n        trackBytes = trackBytes.concat(delta);\n        trackBytes.push(0xFF);\n        trackBytes.push(0x2F);\n        trackBytes.push(0x00);\n        //console.log(trackName, trackBytes);\n        trackLength = trackBytes.length;\n        lengthBytes = str2Bytes(trackLength.toString(16), 4);\n        return [].concat(TRK_CHUNKID, lengthBytes, trackBytes);\n    }\n\n\n    // Helper functions\n\n    /*\n     * Converts an array of bytes to a string of hexadecimal characters. Prepares\n     * it to be converted into a base64 string.\n     *\n     * @param byteArray {Array} array of bytes that will be converted to a string\n     * @returns hexadecimal string\n     */\n\n    function codes2Str(byteArray) {\n        return String.fromCharCode.apply(null, byteArray);\n    }\n\n    /*\n     * Converts a String of hexadecimal values to an array of bytes. It can also\n     * add remaining '0' nibbles in order to have enough bytes in the array as the\n     * |finalBytes| parameter.\n     *\n     * @param str {String} string of hexadecimal values e.g. '097B8A'\n     * @param finalBytes {Integer} Optional. The desired number of bytes that the returned array should contain\n     * @returns array of nibbles.\n     */\n\n    function str2Bytes(str, finalBytes) {\n        if (finalBytes) {\n            while ((str.length / 2) < finalBytes) {\n                str = '0' + str;\n            }\n        }\n\n        var bytes = [];\n        for (var i = str.length - 1; i >= 0; i = i - 2) {\n            var chars = i === 0 ? str[i] : str[i - 1] + str[i];\n            bytes.unshift(parseInt(chars, 16));\n        }\n\n        return bytes;\n    }\n\n\n    /**\n     * Translates number of ticks to MIDI timestamp format, returning an array of\n     * bytes with the time values. Midi has a very particular time to express time,\n     * take a good look at the spec before ever touching this function.\n     *\n     * @param ticks {Integer} Number of ticks to be translated\n     * @returns Array of bytes that form the MIDI time value\n     */\n    function convertToVLQ(ticks) {\n        var buffer = ticks & 0x7F;\n\n        while (ticks = ticks >> 7) {\n            buffer <<= 8;\n            buffer |= ((ticks & 0x7F) | 0x80);\n        }\n\n        var bList = [];\n        while (true) {\n            bList.push(buffer & 0xff);\n\n            if (buffer & 0x80) {\n                buffer >>= 8;\n            } else {\n                break;\n            }\n        }\n\n        //console.log(ticks, bList);\n        return bList;\n    }\n\n\n    /*\n     * Converts a string into an array of ASCII char codes for every character of\n     * the string.\n     *\n     * @param str {String} String to be converted\n     * @returns array with the charcode values of the string\n     */\n    function stringToNumArray(str) {\n        return AP.map.call(str, function (char) {\n            return char.charCodeAt(0);\n        });\n    }\n\n\n    sequencer.protectedScope.saveToMidiFile = write;\n    sequencer.saveSongAsMidiFile = write;\n\n}\nfunction musicXMLParser() {\n\n  'use strict';\n\n  var\n    //import\n    ajax, // → defined in util.js\n    typeString, // → defined in util.js\n    getNoteNumber, // → defined in note.js\n\n    nsResolver;\n\n\n  function load(url, cb, returnAsXML) {\n    if (url === undefined || cb === undefined) {\n      if (sequencer.debug >= sequencer.WARN) {\n        console.warn('please provide an url and a callback method');\n      }\n    }\n\n    ajax({\n      url: url + '?' + new Date().getTime(),\n      method: 'GET',\n      onError: function () {\n        cb(false);\n      },\n      onSuccess: function (response) {\n        if (returnAsXML === true) {\n          cb(response);\n        } else {\n          cb(parse(response));\n        }\n      },\n      responseType: 'xml'\n    });\n  }\n\n\n  function parse(xml) {\n    var parser = new DOMParser(),\n      xmlDoc = parser.parseFromString(xml, 'application/xml'),\n      type = xmlDoc.firstChild.nextSibling.nodeName;\n\n    //console.log('type', type);\n\n    nsResolver = xmlDoc.createNSResolver(xmlDoc.ownerDocument === null ? xmlDoc.documentElement : xmlDoc.ownerDocument.documentElement);\n\n    if (type === 'score-partwise') {\n      return parsePartWise(xmlDoc);\n    } else if (type === 'score-timewise') {\n      return parseTimeWise(xmlDoc);\n    } else {\n      console.log('unknown type', type);\n      return false;\n    }\n  }\n\n\n  function parsePartWise(xmlDoc) {\n    var partIterator = xmlDoc.evaluate('//score-part', xmlDoc, nsResolver, XPathResult.ANY_TYPE, null),\n      partNode,\n      measureIterator,\n      measureNode,\n      noteIterator,\n      noteNode,\n      measureNumber,\n      tracks = [],\n      timeEvents = [],\n      tiedNotes = {},\n      tieStart,\n      tieStop,\n      tieIterator, tieNode,\n      events,\n      song, track, part, noteOn, noteOff,\n      name, id, tmp1, tmp2,\n      step, alter, octave, voice, noteType, noteDuration, noteName, noteNumber, velocity,\n      rest, chord,\n      divisions, numerator, denominator,\n      ppq = sequencer.defaultPPQ,\n      ticks;\n\n    while ((partNode = partIterator.iterateNext()) !== null) {\n      // get id and name of the part\n      id = xmlDoc.evaluate('@id', partNode, nsResolver, XPathResult.STRING_TYPE, null).stringValue;\n      name = xmlDoc.evaluate('part-name', partNode, nsResolver, XPathResult.STRING_TYPE, null).stringValue;\n      velocity = xmlDoc.evaluate('midi-instrument/volume', partNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n      velocity = parseInt((velocity / 100) * 127);\n\n      ticks = 0;\n      track = sequencer.createTrack(name);\n      part = sequencer.createPart();\n      track.addPart(part);\n      tracks.push(track);\n      events = [];\n\n      //console.log(id, name, velocity);\n\n      // get all measures\n      measureIterator = xmlDoc.evaluate('//part[@id=\"' + id + '\"]/measure', partNode, nsResolver, XPathResult.ANY_TYPE, null);\n      while ((measureNode = measureIterator.iterateNext()) !== null) {\n\n        measureNumber = xmlDoc.evaluate('@number', measureNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n\n        tmp1 = xmlDoc.evaluate('attributes/divisions', measureNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n        if (!isNaN(tmp1)) {\n          divisions = tmp1;\n        }\n\n        tmp1 = xmlDoc.evaluate('attributes/time/beats', measureNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n        tmp2 = xmlDoc.evaluate('attributes/time/beat-type', measureNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n        if (!isNaN(tmp1)) {\n          numerator = tmp1;\n          denominator = tmp2;\n          timeEvents.push(sequencer.createMidiEvent(ticks, sequencer.TIME_SIGNATURE, numerator, denominator));\n        }\n        //console.log(divisions, numerator, denominator);\n\n        // get all notes and backups\n        //noteIterator = xmlDoc.evaluate('note', measureNode, nsResolver, XPathResult.ANY_TYPE, null);\n        noteIterator = xmlDoc.evaluate('*[self::note or self::backup or self::forward]', measureNode, nsResolver, XPathResult.ANY_TYPE, null);\n        while ((noteNode = noteIterator.iterateNext()) !== null) {\n          //console.log(noteNode);\n\n          tieStart = false;\n          tieStop = false;\n          tieIterator = xmlDoc.evaluate('tie', noteNode, nsResolver, XPathResult.ANY_TYPE, null);\n          while ((tieNode = tieIterator.iterateNext()) !== null) {\n            tmp1 = xmlDoc.evaluate('@type', tieNode, nsResolver, XPathResult.STRING_TYPE, null).stringValue;\n            //console.log(tmp1);\n            if (tmp1 === 'start') {\n              tieStart = true;\n            } else if (tmp1 === 'stop') {\n              tieStop = true;\n            }\n            //tieStart = xmlDoc.evaluate('@type=\"start\"', tieNode, nsResolver, XPathResult.BOOLEAN_TYPE, null).booleanValue;\n            //tieStop = xmlDoc.evaluate('@type=\"stop\"', tieNode, nsResolver, XPathResult.BOOLEAN_TYPE, null).booleanValue;\n            //console.log(tieStart, tieStop);\n          }\n\n          rest = xmlDoc.evaluate('rest', noteNode, nsResolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n          chord = xmlDoc.evaluate('chord', noteNode, nsResolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n\n          if (rest !== null) {\n            //console.log(rest);\n            noteDuration = xmlDoc.evaluate('duration', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            ticks += (noteDuration / divisions) * ppq;\n\n          } else if (noteNode.nodeName === 'note') {\n\n            step = xmlDoc.evaluate('pitch/step', noteNode, nsResolver, XPathResult.STRING_TYPE, null).stringValue;\n            alter = xmlDoc.evaluate('pitch/alter', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            voice = xmlDoc.evaluate('voice', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            octave = xmlDoc.evaluate('pitch/octave', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            noteDuration = xmlDoc.evaluate('duration', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            noteType = xmlDoc.evaluate('type', noteNode, nsResolver, XPathResult.STRING_TYPE, null).stringValue;\n            noteName = step;\n\n            if (step !== '') {\n              if (!isNaN(alter)) {\n                switch (alter) {\n                  case -2:\n                    noteName += 'bb';\n                    break;\n                  case -1:\n                    noteName += 'b';\n                    break;\n                  case 1:\n                    noteName += '#';\n                    break;\n                  case 2:\n                    noteName += '##';\n                    break;\n                }\n              }\n              noteNumber = getNoteNumber(noteName, octave);\n              noteOn = sequencer.createMidiEvent(ticks, sequencer.NOTE_ON, noteNumber, velocity);\n              ticks += (noteDuration / divisions) * ppq;\n              noteOff = sequencer.createMidiEvent(ticks, sequencer.NOTE_OFF, noteNumber, 0);\n              if (chord !== null) {\n                ticks -= (noteDuration / divisions) * ppq;\n              }\n\n              //console.log('tie', tieStart, tieStop);\n\n              if (tieStart === false && tieStop === false) {\n                // no ties\n                events.push(noteOn, noteOff);\n                //console.log('no ties', measureNumber, voice, noteNumber, tiedNotes);\n              } else if (tieStart === true && tieStop === false) {\n                // start of tie\n                tiedNotes[voice + '-' + noteNumber] = noteOff;\n                events.push(noteOn, noteOff);\n                //console.log('start', measureNumber, voice, noteNumber, tiedNotes);\n              } else if (tieStart === true && tieStop === true) {\n                // tied to yet another note\n                tiedNotes[voice + '-' + noteNumber].ticks += (noteDuration / divisions) * ppq;\n                //console.log('thru', measureNumber, voice, noteNumber, tiedNotes);\n              } else if (tieStart === false && tieStop === true) {\n                // end of tie\n                tiedNotes[voice + '-' + noteNumber].ticks += (noteDuration / divisions) * ppq;\n                delete tiedNotes[voice + '-' + noteNumber];\n                //console.log('end', measureNumber, voice, noteNumber, tiedNotes);\n              }\n              //console.log(noteNumber, ticks);\n            }\n\n          } else if (noteNode.nodeName === 'backup') {\n            noteDuration = xmlDoc.evaluate('duration', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            ticks -= (noteDuration / divisions) * ppq;\n            //console.log(noteDuration, divisions);\n          } else if (noteNode.nodeName === 'forward') {\n            noteDuration = xmlDoc.evaluate('duration', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            ticks += (noteDuration / divisions) * ppq;\n            //console.log(noteDuration, divisions);\n          }\n          //console.log(ticks);\n        }\n      }\n      part.addEvents(events);\n      //console.log(tiedNotes);\n    }\n\n    song = sequencer.createSong({\n      bpm: 110,\n      tracks: tracks[0],\n      timeEvents: timeEvents,\n      useMetronome: false\n    });\n\n    return song;\n  }\n\n\n  function parseTimeWise(xmlDoc) {\n    return xmlDoc;\n  }\n\n  sequencer.loadMusicXML = load;\n  sequencer.parseMusicXML = parse;\n\n  sequencer.protectedScope.addInitMethod(function () {\n    ajax = sequencer.protectedScope.ajax;\n    typeString = sequencer.protectedScope.typeString;\n    getNoteNumber = sequencer.getNoteNumber;\n  });\n\n}\nfunction note() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        //import\r\n        typeString, // → defined in util.js\r\n\r\n        //local\r\n        noteNames,\r\n        getNoteNumber,\r\n        getNoteName,\r\n        checkNoteName,\r\n        getFrequency,\r\n        createNote,\r\n        isNoteMode,\r\n        isBlackKey,\r\n        pow = Math.pow;\r\n\r\n    noteNames = {\r\n        'sharp': ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'],\r\n        'flat': ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'],\r\n        'enharmonic-sharp': ['B#', 'C#', 'C##', 'D#', 'D##', 'E#', 'F#', 'F##', 'G#', 'G##', 'A#', 'A##'],\r\n        'enharmonic-flat': ['Dbb', 'Db', 'Ebb', 'Eb', 'Fb', 'Gbb', 'Gb', 'Abb', 'Ab', 'Bbb', 'Bb', 'Cb']\r\n    };\r\n\r\n\r\n    /*\r\n        arguments\r\n        - noteNumber: 60\r\n        - noteName: 'C#4'\r\n        - name and octave: 'C#', 4\r\n\r\n\r\n        note {\r\n            name: 'C',\r\n            octave: 1,\r\n            fullName: 'C1',\r\n            frequency: 234.16,\r\n            number: 60\r\n        }\r\n    */\r\n    createNote = function () {\r\n        var args = Array.prototype.slice.call(arguments),\r\n            numArgs = args.length,\r\n            data,\r\n            warn = false,\r\n            error = false,\r\n            octave,\r\n            noteName,\r\n            noteNumber,\r\n            noteNameMode,\r\n            frequency,\r\n            arg0 = args[0],\r\n            arg1 = args[1],\r\n            arg2 = args[2];\r\n\r\n\r\n        // arg: note number\r\n        if (numArgs === 1 && !isNaN(arg0)) {\r\n            if (arg0 < 0 || arg0 > 127) {\r\n                error = 'please provide a note number >= 0 and <= 127', arg0;\r\n            } else {\r\n                noteNumber = arg0;\r\n                data = getNoteName(noteNumber);\r\n                noteName = data[0];\r\n                octave = data[1];\r\n            }\r\n\r\n            // arguments: full note name\r\n        } else if (numArgs === 1 && typeString(arg0) === 'string') {\r\n            data = checkNoteName(arg0);\r\n            if (!data) {\r\n                error = arg0 + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb, followed by a number for the octave';\r\n            } else {\r\n                noteName = data[0];\r\n                octave = data[1];\r\n                noteNumber = getNoteNumber(noteName, octave);\r\n                if (!noteNumber) {\r\n                    error = arg0 + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb, followed by a number for the octave';\r\n                } else if (noteNumber < 0 || noteNumber > 127) {\r\n                    error = 'please provide a note between C0 and G10';\r\n                }\r\n            }\r\n\r\n            // arguments: note name, octave\r\n        } else if (numArgs === 2 && typeString(arg0) === 'string' && !isNaN(arg1)) {\r\n            data = checkNoteName(arg0, arg1);\r\n            if (!data) {\r\n                error = arg0 + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb';\r\n            } else {\r\n                noteName = data[0];\r\n                octave = data[1];\r\n                noteNumber = getNoteNumber(noteName, octave);\r\n                if (!noteNumber) {\r\n                    error = noteName + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb';\r\n                } else if (noteNumber < 0 || noteNumber > 127) {\r\n                    error = 'please provide a note between C0 and G10';\r\n                }\r\n            }\r\n\r\n            // arguments: full note name, note name mode\r\n        } else if (numArgs === 2 && typeString(arg0) === 'string' && typeString(arg1) === 'string') {\r\n            data = checkNoteName(arg0);\r\n            if (!data) {\r\n                error = arg0 + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb, followed by a number for the octave';\r\n            } else {\r\n                noteNameMode = isNoteMode(arg1);\r\n                if (!noteNameMode) {\r\n                    noteNameMode = sequencer.noteNameMode;\r\n                    warn = arg1 + ' is not a valid note name mode, using ' + noteNameMode;\r\n                }\r\n                noteName = data[0];\r\n                octave = data[1];\r\n                noteNumber = getNoteNumber(noteName, octave);\r\n                if (!noteNumber) {\r\n                    error = noteName + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb, followed by a number for the octave';\r\n                } else if (noteNumber < 0 || noteNumber > 127) {\r\n                    error = 'please provide a note between C0 and G10';\r\n                }\r\n                noteName = getNoteName(noteNumber, noteNameMode)[0];\r\n            }\r\n\r\n\r\n            // arguments: note number, note name mode\r\n        } else if (numArgs === 2 && typeString(arg0) === 'number' && typeString(arg1) === 'string') {\r\n            if (arg0 < 0 || arg0 > 127) {\r\n                error = 'please provide a note number >= 0 and <= 127', arg0;\r\n            } else {\r\n                noteNameMode = isNoteMode(arg1);\r\n                if (!noteNameMode) {\r\n                    noteNameMode = sequencer.noteNameMode;\r\n                    warn = arg1 + ' is not a valid note name mode, using ' + noteNameMode;\r\n                }\r\n                noteNumber = arg0;\r\n                data = getNoteName(noteNumber, noteNameMode);\r\n                noteName = data[0];\r\n                octave = data[1];\r\n                noteName = getNoteName(noteNumber, noteNameMode)[0];\r\n            }\r\n\r\n\r\n            // arguments: note name, octave, note name mode\r\n        } else if (numArgs === 3 && typeString(arg0) === 'string' && !isNaN(arg1) && typeString(arg2) === 'string') {\r\n            data = checkNoteName(arg0, arg1);\r\n            if (!data) {\r\n                error = arg0 + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb, followed by a number for the octave';\r\n            } else {\r\n                noteNameMode = isNoteMode(arg2);\r\n                if (!noteNameMode) {\r\n                    noteNameMode = sequencer.noteNameMode;\r\n                    warn = arg2 + ' is not a valid note name mode, using ' + noteNameMode;\r\n                }\r\n                noteName = data[0];\r\n                octave = data[1];\r\n                noteNumber = getNoteNumber(noteName, octave);\r\n                if (!noteNumber) {\r\n                    error = noteName + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb, followed by a number for the octave';\r\n                } else if (noteNumber < 0 || noteNumber > 127) {\r\n                    error = 'please provide a note between C0 and G10';\r\n                }\r\n                noteName = getNoteName(noteNumber, noteNameMode)[0];\r\n            }\r\n        } else {\r\n            error = 'wrong arguments, please consult documentation';\r\n        }\r\n\r\n        if (error) {\r\n            console.error(error);\r\n            return false;\r\n        }\r\n\r\n        if (warn) {\r\n            console.warn(warn);\r\n        }\r\n\r\n        frequency = getFrequency(noteNumber);\r\n        //console.log(noteName,octave,noteNumber,frequency);\r\n\r\n        return {\r\n            name: noteName,\r\n            octave: octave,\r\n            fullName: noteName + octave,\r\n            number: noteNumber,\r\n            frequency: frequency,\r\n            blackKey: isBlackKey(noteNumber)\r\n        };\r\n\r\n    };\r\n\r\n\r\n    getNoteName = function (number, mode) {\r\n        mode = mode || sequencer.noteNameMode;\r\n        //console.log(mode);\r\n        //var octave = Math.floor((number / 12) - 2), // → in Cubase central C = C3 instead of C4\r\n        var octave = Math.floor((number / 12) - 1),\r\n            noteName = noteNames[mode][number % 12];\r\n        return [noteName, octave];\r\n    };\r\n\r\n\r\n    getNoteNumber = function (name, octave, mode) {\r\n        var key, index, i, maxi, number;\r\n        //mode = mode || sequencer.noteNameMode;\r\n\r\n        //if(mode){}\r\n\r\n        for (key in noteNames) {\r\n            if (noteNames.hasOwnProperty(key)) {\r\n                mode = noteNames[key];\r\n                //console.log(key);\r\n                for (i = 0, maxi = mode.length; i < maxi; i = i + 1) {\r\n                    //console.log(mode[i],name,i);\r\n                    if (mode[i] === name) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (index === -1) {\r\n            return false;\r\n        }\r\n\r\n        //number = (index + 12) + (octave * 12) + 12; // → in Cubase central C = C3 instead of C4\r\n        number = (index + 12) + (octave * 12);// → midi standard + scientific naming, see: http://en.wikipedia.org/wiki/Middle_C and http://en.wikipedia.org/wiki/Scientific_pitch_notation\r\n        return number;\r\n    };\r\n\r\n\r\n    getFrequency = function (number) {\r\n        return sequencer.pitch * pow(2, (number - 69) / 12); // midi standard, see: http://en.wikipedia.org/wiki/MIDI_Tuning_Standard\r\n    };\r\n\r\n\r\n    function getPitch(hertz) {\r\n        //fm  =  2(m−69)/12(440 Hz).\r\n    }\r\n\r\n\r\n    checkNoteName = function () {\r\n        var\r\n            args = Array.prototype.slice.call(arguments),\r\n            numArgs = args.length,\r\n            arg0 = args[0],\r\n            arg1 = args[1],\r\n            length, i, char,\r\n            name,\r\n            octave;\r\n\r\n\r\n        if (numArgs === 1 && typeString(arg0) === 'string') {\r\n\r\n            length = arg0.length;\r\n            name = '';\r\n            octave = '';\r\n\r\n            for (i = 0; i < length; i++) {\r\n                char = arg0[i];\r\n                if (isNaN(char) && char !== '-') {\r\n                    name += char;\r\n                } else {\r\n                    octave += char;\r\n                }\r\n            }\r\n\r\n            if (octave === '') {\r\n                octave = 0;\r\n            }\r\n\r\n        } else if (numArgs === 2 && typeString(arg0) === 'string' && !isNaN(arg1)) {\r\n\r\n            name = arg0;\r\n            octave = arg1;\r\n\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n        octave = parseInt(octave, 10);\r\n        name = name.substring(0, 1).toUpperCase() + name.substring(1);\r\n\r\n        //console.log(name,'|',octave);\r\n        return [name, octave];\r\n    };\r\n\r\n\r\n    isNoteMode = function (mode) {\r\n        var result = false;\r\n        switch (mode) {\r\n            case 'sharp':\r\n            case 'flat':\r\n            case 'enharmonic-sharp':\r\n            case 'enharmonic-flat':\r\n                result = mode;\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n\r\n    isBlackKey = function (noteNumber) {\r\n        var black;\r\n\r\n        switch (true) {\r\n            case noteNumber % 12 === 1://C#\r\n            case noteNumber % 12 === 3://D#\r\n            case noteNumber % 12 === 6://F#\r\n            case noteNumber % 12 === 8://G#\r\n            case noteNumber % 12 === 10://A#\r\n                black = true;\r\n                break;\r\n            default:\r\n                black = false;\r\n        }\r\n\r\n        return black;\r\n    };\r\n\r\n    ///*\r\n    sequencer.getNoteNumber = function () {\r\n        var note = createNote.apply(this, arguments);\r\n        if (note) {\r\n            return note.number;\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    sequencer.getNoteName = function () {\r\n        var note = createNote.apply(this, arguments);\r\n        if (note) {\r\n            return note.name;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    sequencer.getNoteNameFromNoteNumber = function (number, mode) {\r\n        return getNoteName(number, mode);\r\n    };\r\n\r\n\r\n    sequencer.getNoteOctave = function () {\r\n        var note = createNote.apply(this, arguments);\r\n        if (note) {\r\n            return note.octave;\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    sequencer.getFullNoteName = function () {\r\n        var note = createNote.apply(this, arguments);\r\n        if (note) {\r\n            return note.fullName;\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    sequencer.getFrequency = function () {\r\n        var note = createNote.apply(this, arguments);\r\n        if (note) {\r\n            return note.frequency;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    //*/\r\n    sequencer.isBlackKey = function () {\r\n        var note = createNote.apply(this, arguments);\r\n        if (note) {\r\n            return note.blackKey;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /*\r\n        sequencer.SHARP = 'sharp';\r\n        sequencer.FLAT = 'flat';\r\n        sequencer.ENHARMONIC_SHARP = 'enharmonic-sharp';\r\n        sequencer.ENHARMONIC_FLAT = 'enharmonic-flat';\r\n    */\r\n\r\n    Object.defineProperty(sequencer, 'SHARP', { value: 'sharp' });\r\n    Object.defineProperty(sequencer, 'FLAT', { value: 'flat' });\r\n    Object.defineProperty(sequencer, 'ENHARMONIC_SHARP', { value: 'enharmonic-sharp' });\r\n    Object.defineProperty(sequencer, 'ENHARMONIC_FLAT', { value: 'enharmonic-flat' });\r\n\r\n    sequencer.createNote = createNote;\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        typeString = sequencer.protectedScope.typeString;\r\n    });\r\n\r\n}function parseEvents() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        round = Math.round,\r\n\r\n        precision = Math.pow(10, sequencer.precision),\r\n\r\n        //local\r\n        factor,\r\n        nominator,\r\n        denominator,\r\n\r\n        bar,\r\n        beat,\r\n        sixteenth,\r\n        tick,\r\n\r\n        ticksPerBar,\r\n        ticksPerBeat,\r\n        ticksPerSixteenth,\r\n        numSixteenth,\r\n        millisPerTick,\r\n        secondsPerTick,\r\n\r\n        millis,\r\n\r\n        bpm;\r\n\r\n    // public\r\n    function parse(song, events) {\r\n\r\n        var event,\r\n            numEvents,\r\n            startEvent = 0,\r\n            lastEventTick = 0,\r\n            diffTicks,\r\n            i;\r\n\r\n        numEvents = events.length;\r\n        //console.log('parseEvents', numEvents);\r\n        events.sort(function (a, b) {\r\n            return a.sortIndex - b.sortIndex;\r\n        });\r\n\r\n        getDataFromEvent(song.timeEvents[0]);\r\n\r\n        for (i = startEvent; i < numEvents; i++) {\r\n\r\n            event = events[i];\r\n            //console.log(i, event);\r\n            diffTicks = event.ticks - lastEventTick;\r\n            tick += diffTicks;\r\n\r\n            while (tick >= ticksPerSixteenth) {\r\n                sixteenth++;\r\n                tick -= ticksPerSixteenth;\r\n                while (sixteenth > numSixteenth) {\r\n                    sixteenth -= numSixteenth;\r\n                    beat++;\r\n                    while (beat > nominator) {\r\n                        beat -= nominator;\r\n                        bar++;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            switch (event.type) {\r\n\r\n                case 0x51:\r\n                    bpm = event.bpm;\r\n                    millis = event.millis;\r\n                    millisPerTick = event.millisPerTick;\r\n                    secondsPerTick = event.secondsPerTick;\r\n                    //console.log(millisPerTick,event.millisPerTick);\r\n                    //console.log(event);\r\n                    break;\r\n\r\n                case 0x58:\r\n                    factor = event.factor;\r\n                    nominator = event.nominator;\r\n                    denominator = event.denominator;\r\n                    numSixteenth = event.numSixteenth;\r\n                    ticksPerBar = event.ticksPerBar;\r\n                    ticksPerBeat = event.ticksPerBeat;\r\n                    ticksPerSixteenth = event.ticksPerSixteenth;\r\n                    millis = event.millis;\r\n                    //console.log(nominator,numSixteenth,ticksPerSixteenth);\r\n                    //console.log(event);\r\n                    break;\r\n\r\n                default:\r\n                    millis = millis + (diffTicks * millisPerTick);\r\n                    updateEvent(event);\r\n            }\r\n\r\n            lastEventTick = event.ticks;\r\n        }\r\n        song.lastEventTmp = event;\r\n    }\r\n\r\n\r\n    function getDataFromEvent(event) {\r\n\r\n        bpm = event.bpm;\r\n        factor = event.factor;\r\n        nominator = event.nominator;\r\n        denominator = event.denominator;\r\n\r\n        ticksPerBar = event.ticksPerBar;\r\n        ticksPerBeat = event.ticksPerBeat;\r\n        ticksPerSixteenth = event.ticksPerSixteenth;\r\n\r\n        numSixteenth = event.numSixteenth;\r\n\r\n        millisPerTick = event.millisPerTick;\r\n        secondsPerTick = event.secondsPerTick;\r\n\r\n        millis = event.millis;\r\n\r\n        bar = event.bar;\r\n        beat = event.beat;\r\n        sixteenth = event.sixteenth;\r\n        tick = event.tick;\r\n    }\r\n\r\n\r\n    function updateEvent(event) {\r\n        var timeData, tickAsString;\r\n\r\n        timeData = sequencer.getNiceTime(millis);\r\n\r\n        event.bpm = bpm;\r\n        event.factor = factor;\r\n        event.nominator = nominator;\r\n        event.denominator = denominator;\r\n\r\n        event.ticksPerBar = ticksPerBar;\r\n        event.ticksPerBeat = ticksPerBeat;\r\n        event.ticksPerSixteenth = ticksPerSixteenth;\r\n\r\n        event.numSixteenth = numSixteenth;\r\n\r\n        event.millisPerTick = millisPerTick;\r\n        event.secondsPerTick = secondsPerTick;\r\n\r\n        event.millis = round(millis * precision) / precision;\r\n        //event.millis = millis;\r\n        //event.seconds = millis/1000;\r\n\r\n        event.hour = timeData.hour;\r\n        event.minute = timeData.minute;\r\n        event.second = timeData.second;\r\n        event.millisecond = timeData.millisecond;\r\n        event.timeAsString = timeData.timeAsString;\r\n        event.timeAsArray = timeData.timeAsArray;\r\n\r\n        event.bar = bar;\r\n        event.beat = beat;\r\n        event.sixteenth = sixteenth;\r\n        event.tick = tick;\r\n        tickAsString = tick === 0 ? '000' : tick < 10 ? '00' + tick : tick < 100 ? '0' + tick : tick;\r\n        event.barsAsString = bar + ':' + beat + ':' + sixteenth + ':' + tickAsString;\r\n        event.barsAsArray = [bar, beat, sixteenth, tick];\r\n\r\n        event.state = 'clean';\r\n        event.update();\r\n\r\n        //console.log(event.nominator, event.ticks);\r\n    }\r\n\r\n\r\n\r\n    sequencer.protectedScope.parseEvents = parse;\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n    });\r\n\r\n}\r\nfunction parseTimeEvents() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        //import\r\n        createMidiEvent, // → defined in midi_event.js\r\n\r\n        //local\r\n        ppq,\r\n        bpm,\r\n        factor,\r\n        nominator,\r\n        denominator,\r\n        playbackSpeed,\r\n\r\n        bar,\r\n        beat,\r\n        sixteenth,\r\n        tick,\r\n        ticks,\r\n        millis,\r\n\r\n        millisPerTick,\r\n        secondsPerTick,\r\n\r\n        ticksPerBeat,\r\n        ticksPerBar,\r\n        ticksPerSixteenth,\r\n        numSixteenth,\r\n\r\n        timeEvents,\r\n        numTimeEvents,\r\n        index;\r\n\r\n\r\n    function setTickDuration() {\r\n        secondsPerTick = (1 / playbackSpeed * 60) / bpm / ppq;\r\n        millisPerTick = secondsPerTick * 1000;\r\n        //console.log(millisPerTick, bpm, ppq, playbackSpeed, (ppq * millisPerTick));\r\n        //console.log(ppq);\r\n    }\r\n\r\n\r\n    function setTicksPerBeat() {\r\n        factor = (4 / denominator);\r\n        numSixteenth = factor * 4;\r\n        ticksPerBeat = ppq * factor;\r\n        ticksPerBar = ticksPerBeat * nominator;\r\n        ticksPerSixteenth = ppq / 4;\r\n        //console.log(denominator, factor, numSixteenth, ticksPerBeat, ticksPerBar, ticksPerSixteenth);\r\n    }\r\n\r\n\r\n    function parse(song) {\r\n        //console.time('parse time events ' + song.name);\r\n        var diffTicks,\r\n            event,\r\n            type,\r\n            i = 0;\r\n\r\n        if (song === undefined) {\r\n            timeEvents = [];\r\n            console.log('reset', timeEvents);\r\n            return;\r\n        }\r\n\r\n        reset(song);\r\n\r\n        //console.log('parse time events', numTimeEvents);\r\n        setTickDuration();\r\n        setTicksPerBeat();\r\n\r\n        timeEvents.sort(function (a, b) {\r\n            return a.ticks - b.ticks;\r\n        });\r\n\r\n        for (i = 0; i < numTimeEvents; i++) {\r\n\r\n            event = timeEvents[i];\r\n            event.song = song;\r\n            diffTicks = event.ticks - ticks;\r\n            tick += diffTicks;\r\n            ticks = event.ticks;\r\n            type = event.type;\r\n            //console.log(diffTicks, millisPerTick);\r\n            millis += diffTicks * millisPerTick;\r\n\r\n            while (tick >= ticksPerSixteenth) {\r\n                sixteenth++;\r\n                tick -= ticksPerSixteenth;\r\n                while (sixteenth > numSixteenth) {\r\n                    sixteenth -= numSixteenth;\r\n                    beat++;\r\n                    while (beat > nominator) {\r\n                        beat -= nominator;\r\n                        bar++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            switch (type) {\r\n\r\n                case 0x51:\r\n                    bpm = event.bpm;\r\n                    setTickDuration();\r\n                    break;\r\n\r\n                case 0x58:\r\n                    nominator = event.nominator;\r\n                    denominator = event.denominator;\r\n                    setTicksPerBeat();\r\n                    break;\r\n\r\n                default:\r\n                    continue;\r\n            }\r\n\r\n            //time data of time event is valid from (and included) the position of the time event\r\n            updateEvent(event);\r\n            //console.log(event.barsAsString);\r\n        }\r\n\r\n        song.lastEventTmp = event;\r\n        //console.log(event);\r\n        //console.log(timeEvents);\r\n    }\r\n\r\n\r\n    function reset(song) {\r\n        playbackSpeed = song.playbackSpeed;\r\n        timeEvents = song.timeEvents;\r\n        numTimeEvents = timeEvents.length;\r\n        ppq = song.ppq;\r\n        bpm = song.bpm;\r\n        nominator = song.nominator;\r\n        denominator = song.denominator;\r\n\r\n        //console.log('reset', timeEvents, numTimeEvents, bpm, ppq, nominator, denominator);\r\n        //console.log('reset', numTimeEvents, bpm, ppq, nominator, denominator);\r\n\r\n        index = 0;\r\n\r\n        bar = 1;//0\r\n        beat = 1;//0\r\n        sixteenth = 1;//0\r\n        tick = 0;\r\n        ticks = 0;\r\n        millis = 0;\r\n    }\r\n\r\n\r\n    function updateEvent(event) {\r\n\r\n        //console.log(event, bpm, millisPerTick, ticks, millis);\r\n\r\n        event.bpm = bpm;\r\n        event.nominator = nominator;\r\n        event.denominator = denominator;\r\n\r\n        event.ticksPerBar = ticksPerBar;\r\n        event.ticksPerBeat = ticksPerBeat;\r\n        event.ticksPerSixteenth = ticksPerSixteenth;\r\n\r\n        event.factor = factor;\r\n        event.numSixteenth = numSixteenth;\r\n        event.secondsPerTick = secondsPerTick;\r\n        event.millisPerTick = millisPerTick;\r\n\r\n\r\n        event.ticks = ticks;\r\n\r\n        event.millis = millis;\r\n        event.seconds = millis / 1000;\r\n\r\n\r\n        event.bar = bar;\r\n        event.beat = beat;\r\n        event.sixteenth = sixteenth;\r\n        event.tick = tick;\r\n        //event.barsAsString = (bar + 1) + ':' + (beat + 1) + ':' + (sixteenth + 1) + ':' + tick;\r\n        var tickAsString = tick === 0 ? '000' : tick < 10 ? '00' + tick : tick < 100 ? '0' + tick : tick;\r\n        event.barsAsString = bar + ':' + beat + ':' + sixteenth + ':' + tickAsString;\r\n        event.barsAsArray = [bar, beat, sixteenth, tick];\r\n\r\n\r\n        var timeData = sequencer.getNiceTime(millis);\r\n\r\n        event.hour = timeData.hour;\r\n        event.minute = timeData.minute;\r\n        event.second = timeData.second;\r\n        event.millisecond = timeData.millisecond;\r\n        event.timeAsString = timeData.timeAsString;\r\n        event.timeAsArray = timeData.timeAsArray;\r\n    }\r\n\r\n\r\n    sequencer.protectedScope.parseTimeEvents = parse;\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        createMidiEvent = sequencer.createMidiEvent;\r\n    });\r\n\r\n}\r\n\r\n\r\n/*\r\n    scaffoldingTicks = function(song){\r\n        var end = song.ticks,\r\n            interval = 480,\r\n            range = 0,\r\n            event,\r\n            events,\r\n            numEvents,\r\n            diffTicks,\r\n            diffMillis;\r\n\r\n        song.eventRanges.ticks = {};\r\n        reset();\r\n\r\n        while(range <= end){\r\n            events = getNextTimeEvents('ticks',range);\r\n            numEvents = events.length;\r\n\r\n            if(numEvents === 0){\r\n                //add at least one event in this range\r\n                event = createMidiEvent(0,sequencer.DUMMY_EVENT);\r\n                //calculate position\r\n                diffTicks = range - ticks;\r\n                tick += diffTicks;\r\n                diffMillis = diffTicks * millisPerTick;\r\n                millis += diffMillis;\r\n\r\n                while(tick >= ticksPerSixteenth){\r\n                    sixteenth++;\r\n                    tick -= ticksPerSixteenth;\r\n                    while(sixteenth >= numSixteenth){\r\n                        sixteenth -= numSixteenth;\r\n                        beat++;\r\n                        while(beat >= nominator){\r\n                            beat -= nominator;\r\n                            bar++;\r\n                        }\r\n                    }\r\n                }\r\n                ticks = range;\r\n                updateEvent(event);\r\n                events.push(event);\r\n            }else{\r\n                getDataFromEvent(events[numEvents - 1]);\r\n            }\r\n            song.eventRanges.ticks[range] = events;\r\n            //console.log(bar+1,beat+1,sixteenth+1,tick+1);\r\n            range += interval;\r\n        }\r\n    };\r\n\r\n\r\n    scaffoldingMillis = function(song){\r\n        var end = song.durationMillis,\r\n            interval = 500,\r\n            events,\r\n            numEvents,\r\n            event,\r\n            range = 0,\r\n            diffTicks;\r\n\r\n        song.eventRanges.millis = {};\r\n        reset();\r\n\r\n        while(range <= end){\r\n            events = getNextTimeEvents('millis',range);\r\n            numEvents = events.length;\r\n            if(numEvents === 0){\r\n                //add at least one event in this range\r\n                event = createMidiEvent(range,sequencer.DUMMY_EVENT);\r\n                //calculate position data\r\n                diffTicks = (range - millis)/millisPerTick;\r\n                tick += diffTicks;\r\n                ticks += diffTicks;\r\n\r\n                while(tick >= ticksPerSixteenth){\r\n                    sixteenth++;\r\n                    tick -= ticksPerSixteenth;\r\n                    tick = tick;\r\n                    while(sixteenth >= numSixteenth){\r\n                        sixteenth -= numSixteenth;\r\n                        beat++;\r\n                        while(beat >= nominator){\r\n                            beat -= nominator;\r\n                            bar++;\r\n                        }\r\n                    }\r\n                }\r\n                millis = range;\r\n                updateEvent(event);\r\n                events.push(event);\r\n            }else{\r\n                getDataFromEvent(events[numEvents - 1]);\r\n            }\r\n            song.eventRanges.millis[range] = events;\r\n            //console.log(bar+1,beat+1,sixteenth+1,tick+1);\r\n            range += interval;\r\n        }\r\n    };\r\n\r\n\r\n    scaffoldingBars = function(){\r\n        var song = sequencer.song,\r\n            end = song.durationTicks,\r\n            range = 0,\r\n            bars = [],\r\n            event,\r\n            events,\r\n            numEvents,\r\n            diffTicks,\r\n            diffMillis;\r\n\r\n        index = 0;\r\n        getDataFromEvent(song.timeEvents[0]);\r\n\r\n        while(range <= end){\r\n            events = getNextTimeEvents('ticks',ticksPerBar);\r\n            numEvents = events.length;\r\n            if(numEvents > 0){\r\n                getDataFromEvent(events[numEvents - 1]);\r\n            }\r\n            event = createMidiEvent(0,sequencer.DUMMY_EVENT);\r\n\r\n            //calculate position of newly created event\r\n            diffTicks = range - ticks;\r\n            tick += diffTicks;\r\n            diffMillis = diffTicks * millisPerTick;\r\n            millis += diffMillis;\r\n\r\n            while(tick >= ticksPerSixteenth){\r\n                sixteenth++;\r\n                tick -= ticksPerSixteenth;\r\n                while(sixteenth >= numSixteenth){\r\n                    sixteenth -= numSixteenth;\r\n                    beat++;\r\n                    while(beat >= nominator){\r\n                        beat -= nominator;\r\n                        bar++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            ticks = range;\r\n            updateEvent(event);\r\n            bars.push(event);\r\n            range += ticksPerBar;\r\n        }\r\n        return bars;\r\n    };\r\n\r\n\r\n\r\n    sequencer.protectedScope.createScaffolding = function(song){\r\n        reset(song);\r\n        scaffoldingTicks(song);\r\n        scaffoldingMillis(song);\r\n        console.log(song.eventRanges);\r\n    };\r\n\r\n    sequencer.protectedScope.getScaffoldingBars = scaffoldingBars;\r\n\r\n\r\n*/\r\nfunction part() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        //import\r\n        createMidiNote, // → defined in midi_note.js\r\n        createMidiEvent, // → defined in midi_event.js\r\n        copyName, // → defined in utils.js\r\n        typeString, // → defined in utils.js\r\n\r\n        findEvent, // → defined in find_event.js\r\n        findNote, // → defined in find_event.js\r\n        getStats, // → defined in event_statistics.js\r\n\r\n        //private\r\n        getEvent,\r\n        addEvents,\r\n        moveEvents,\r\n        removeEvents,\r\n        transposeEvents,\r\n        getEventsAndConfig,\r\n\r\n        reverseByPitch,\r\n        reverseByTicks,\r\n\r\n        partId = 0,\r\n\r\n        //public/protected\r\n        Part;\r\n\r\n\r\n    Part = function (name) {\r\n        this.className = 'Part';\r\n        this.id = 'P' + partId++ + '' + new Date().getTime();\r\n        this.partIndex = partId;\r\n        this.name = name || this.id;\r\n\r\n        this.events = [];\r\n        this.eventsById = {};\r\n        this.numEvents = 0;\r\n\r\n        this.notes = [];\r\n        this.notesById = {};\r\n        this.numNotes = 0;\r\n\r\n        this.dirtyEvents = {};\r\n        this.dirtyNotes = {};\r\n\r\n        this.song = undefined;\r\n        this.autoSize = 'right'; // 'right' or 'both'\r\n\r\n        this.ticks = 0;\r\n        this.millis = 0;\r\n        this.start = {\r\n            ticks: this.ticks,\r\n            millis: this.millis\r\n        };\r\n        this.end = {\r\n            ticks: 0,\r\n            millis: 0\r\n        };\r\n        this.duration = {\r\n            ticks: 0,\r\n            millis: 0\r\n        };\r\n        this.startPosition = undefined;\r\n        this.endPosition = undefined;\r\n\r\n        //this.fixedPitch = false;\r\n        this.needsUpdate = false;\r\n        this.state = 'clean';\r\n        this.mute = false;\r\n        this.solo = false;\r\n        this.keepWhenEmpty = true; // if set to false, the parts gets deleted automatically if it contains no events\r\n    };\r\n\r\n    getEventsAndConfig = function (args, part) {\r\n\r\n        args = Array.prototype.slice.call(args);\r\n\r\n        var\r\n            j = 0,\r\n            i = 0,\r\n            maxi,\r\n            e,\r\n            arg,\r\n            arg0 = args[0],\r\n            events = [],\r\n            config = [];\r\n\r\n        //console.log(args, arg0);\r\n\r\n        if (typeString(arg0) === 'array') {\r\n\r\n            for (i = arg0.length - 1; i >= 0; i--) {\r\n                arg = arg0[i];\r\n                e = getEvent(arg, part);\r\n                if (e) {\r\n                    events.push(e);\r\n                }\r\n            }\r\n            j = events.length === 0 ? 0 : 1;\r\n        }\r\n\r\n        maxi = args.length;\r\n        for (i = j; i < maxi; i++) {\r\n            arg = args[i];\r\n            e = getEvent(arg, part);\r\n            if (e) {\r\n                events.push(e);\r\n            } else {\r\n                config.push(arg);\r\n            }\r\n        }\r\n\r\n        if (events.length === 0) {\r\n            //console.error('Please provide one or more events, event ids, event indices, or an array of events, events ids, event indices');\r\n            if (sequencer.debug) {\r\n                console.warn('no events added', part.name);\r\n            }\r\n            return false;\r\n        }\r\n\r\n        if (config.length === 1 && typeString(config[0]) === 'array') {\r\n            config = config[0];\r\n        }\r\n\r\n        //console.log(events, config);\r\n\r\n        return {\r\n            events: events,\r\n            config: config\r\n        };\r\n    };\r\n\r\n\r\n\r\n    getEvent = function (data, part) {\r\n        var event = false;\r\n        if (!data) {\r\n            event = false;\r\n        } else if (data.className === 'MidiEvent' || data.className === 'AudioEvent') {\r\n            // new event\r\n            event = data;\r\n        } else if (typeString(data) === 'array' && data.length === 4) {\r\n            // new event as array\r\n            event = createMidiEvent(data);\r\n        } else if (typeString(data) === 'string') {\r\n            // get by id\r\n            event = part.eventsById[data];\r\n        } else if (isNaN(data) === false) {\r\n            // get by index\r\n            event = part.events[data];\r\n        }\r\n        return event;\r\n    };\r\n\r\n\r\n\r\n    addEvents = function (args, part, relative) {\r\n        if (args === false) {\r\n            return;\r\n        }\r\n        var i, e,\r\n            newEvents = args.events,\r\n            ticks = part.ticks,\r\n            maxi = newEvents.length,\r\n            track = part.track,\r\n            eventsById = part.eventsById;\r\n\r\n        //console.log(newEvents);\r\n\r\n        //for(i = newEvents.length - 1; i >=0; i--){\r\n        for (i = 0; i < maxi; i++) {\r\n\r\n            e = newEvents[i];\r\n\r\n            if (e.type === sequencer.END_OF_TRACK || (e.className !== 'MidiEvent' && e.className !== 'AudioEvent')) {\r\n                continue;\r\n            }\r\n            if (e.className === 'AudioEvent' && part.hasAudioEvents !== true) {\r\n                part.hasAudioEvents = true;\r\n            }\r\n\r\n            if (e.part !== undefined) {\r\n                //console.warn('this event has already been added to part', e.part.id, ', adding a copy to', part.id);\r\n                e = e.clone();\r\n            }\r\n\r\n            e.part = part;\r\n            e.partId = part.id;\r\n\r\n            if (relative) {\r\n                ticks += e.ticks;\r\n                e.ticks = ticks;\r\n            }\r\n\r\n            e.track = track;\r\n            e.trackId = track ? track.id : undefined;\r\n\r\n            e.song = undefined;\r\n            if (track !== undefined) {\r\n                e.song = track.song;\r\n            }\r\n\r\n            if (e.state !== 'recorded') {\r\n                e.state = 'new';\r\n            }\r\n            eventsById[e.id] = e;\r\n        }\r\n\r\n        if (part.state !== 'new') {\r\n            part.state = 'changed';\r\n        }\r\n        part.needsUpdate = true;\r\n    };\r\n\r\n\r\n    transposeEvents = function (args, part) {\r\n        //if(args === false || part.fixedPitch === true){\r\n        if (args === false) {\r\n            return;\r\n        }\r\n        var i, e,\r\n            events = args.events,\r\n            semi = args.config[0];\r\n\r\n        //console.log(semi, args);\r\n\r\n        for (i = events.length - 1; i >= 0; i--) {\r\n            e = events[i];\r\n            e.transpose(semi);\r\n            /*\r\n                // moved to midi_event.js\r\n                if(e.state !== 'new'){\r\n                    e.state = 'changed';\r\n                }\r\n            */\r\n            //console.log(e.state);\r\n        }\r\n        //part.needsUpdate = true; -> moved to midi_event.js\r\n        if (part.state !== 'new' && part.track !== undefined) {\r\n            part.state = 'changed';\r\n            part.track.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    moveEvents = function (args, part) {\r\n        if (args === false) {\r\n            return;\r\n        }\r\n        var i, e, newTicks,\r\n            events = args.events,\r\n            ticks = args.config[0];\r\n        //console.log('moveEvents', events, ticks, events.length);\r\n        if (isNaN(ticks)) {\r\n            console.warn('Part.moveEvent(s) -> please provide a number');\r\n            return;\r\n        }\r\n\r\n        for (i = events.length - 1; i >= 0; i--) {\r\n            e = events[i];\r\n            newTicks = e.ticks + ticks;\r\n\r\n            if (newTicks < 0) {\r\n                newTicks = 0;\r\n            }\r\n            e.ticks = newTicks;\r\n\r\n            if (e.state !== 'new') {\r\n                e.state = 'changed';\r\n            }\r\n        }\r\n        part.needsUpdate = true;\r\n        if (part.state !== 'new' && part.track) {\r\n            part.state = 'changed';\r\n            part.track.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    removeEvents = function (tobeRemoved, part) {\r\n        var i, event,\r\n            removed = [];\r\n\r\n        //console.log('removeEvents', tobeRemoved);\r\n\r\n        for (i = tobeRemoved.length - 1; i >= 0; i--) {\r\n            event = getEvent(tobeRemoved[i], part);\r\n            if (event === false) {\r\n                continue;\r\n            }\r\n            // console.log('removing event', e);\r\n            if (event.part !== part && event.part !== null) {\r\n                console.warn('can\\'t remove: this event belongs to part', event.part.id);\r\n                continue;\r\n            }\r\n            event.state = 'removed';\r\n            event.reset();\r\n            removed.push(event);\r\n        }\r\n        if (part.track !== undefined) {\r\n            part.track.needsUpdate = true;\r\n        }\r\n        part.needsUpdate = true;\r\n        return removed;\r\n    };\r\n\r\n\r\n    reverseByPitch = function (part) {\r\n        var notes = part.notes,\r\n            min = part.lowestNote,\r\n            max = part.highestNote,\r\n            on, off,\r\n            i, note;\r\n\r\n        for (i = notes.length - 1; i >= 0; i--) {\r\n            note = notes[i];\r\n            note.setPitch(min + (max - note.number));\r\n            on = note.noteOn;\r\n            off = note.noteOff;\r\n            on.state = 'changed';\r\n            off.state = 'changed';\r\n            note.state = 'changed';\r\n        }\r\n        part.needsUpdate = true;\r\n        if (part.state !== 'new' && part.track) {\r\n            part.state = 'changed';\r\n            part.track.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    reverseByTicks = function (part, durationTicks) {\r\n        var notes = part.notes,\r\n            note, on, off, onTicks, offTicks, i;\r\n\r\n        durationTicks = durationTicks || part.duration.ticks;\r\n\r\n        for (i = notes.length - 1; i >= 0; i--) {\r\n            note = notes[i];\r\n            on = note.noteOn;\r\n            off = note.noteOff;\r\n\r\n            onTicks = durationTicks - off.ticks;\r\n            offTicks = durationTicks - on.ticks;\r\n\r\n            on.ticks = onTicks;\r\n            off.ticks = offTicks;\r\n            note.ticks = onTicks;\r\n            //console.log('on', onTicks, 'off', offTicks, note.noteOn.ticks, note.noteOff.ticks);\r\n            on.state = 'changed';\r\n            off.state = 'changed';\r\n            note.state = 'changed';\r\n        }\r\n        part.needsUpdate = true;\r\n        if (part.state !== 'new' && part.track) {\r\n            part.state = 'changed';\r\n            part.track.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    Part.prototype.addEvent = Part.prototype.addEvents = function () {//events\r\n        //console.log(arguments);\r\n        var args = getEventsAndConfig(arguments, this);\r\n        //console.log(args.events, args.config);\r\n        addEvents(args, this, false);\r\n    };\r\n\r\n\r\n    Part.prototype.addEventsRelative = function () {//events\r\n        var args = getEventsAndConfig(arguments, this);\r\n        addEvents(args, this, true);\r\n    };\r\n\r\n\r\n    Part.prototype.removeEvent = Part.prototype.removeEvents = function () {//events\r\n        var args = getEventsAndConfig(arguments, this);\r\n        if (args === false) {\r\n            return false;\r\n        }\r\n        return removeEvents(args.events, this);\r\n    };\r\n\r\n\r\n    Part.prototype.moveEvent = Part.prototype.moveEvents = function () {//events, ticks\r\n        var args = getEventsAndConfig(arguments, this);\r\n        //console.log(args)\r\n        moveEvents(args, this);\r\n    };\r\n\r\n    Part.prototype.moveAllEvents = function (ticks) {//events, ticks\r\n        //console.log(args)\r\n        moveEvents({ events: this.events, config: [ticks] }, this);\r\n    };\r\n\r\n\r\n    Part.prototype.moveNote = function (note, ticks) {\r\n        moveEvents({ events: [note.noteOn, note.noteOff], config: [ticks] }, this);\r\n    };\r\n\r\n\r\n    Part.prototype.transposeEvents = function () {//events, semi\r\n        var args = getEventsAndConfig(arguments, this);\r\n        transposeEvents(args, this);\r\n    };\r\n\r\n\r\n    Part.prototype.transposeAllEvents = function (semi) {\r\n        //console.log('transposeAllEvents', semi);\r\n        transposeEvents({ events: this.events, config: [semi] }, this);\r\n    };\r\n\r\n\r\n    Part.prototype.transposeNote = function (note, semi) {\r\n        //console.log('transposeNote', semi);\r\n        transposeEvents({ events: [note.noteOn, note.noteOff], config: [semi] }, this);\r\n    };\r\n    /*\r\n        Part.prototype.setNotePitch = function(note, pitch){\r\n            note.setPitch(pitch);\r\n        };\r\n    */\r\n\r\n    Part.prototype.reverseByTicks = function (duration) {\r\n        if (this.needsUpdate) {\r\n            this.update();\r\n        }\r\n        reverseByTicks(this, duration);\r\n    };\r\n\r\n\r\n    Part.prototype.reverseByPitch = function () {\r\n        if (this.needsUpdate) {\r\n            this.update();\r\n        }\r\n        reverseByPitch(this);\r\n    };\r\n\r\n\r\n    Part.prototype.findEvents = function (pattern) {\r\n        return findEvent(this, pattern);\r\n    };\r\n\r\n\r\n    Part.prototype.findNotes = function (pattern) {\r\n        return findNote(this, pattern);\r\n    };\r\n\r\n\r\n    Part.prototype.getStats = function (pattern) {\r\n        return getStats(this, pattern);\r\n    };\r\n\r\n\r\n    Part.prototype.getIndex = function () {\r\n        var parts, part, i;\r\n\r\n        if (this.track) {\r\n            parts = this.track.parts;\r\n\r\n            for (i = this.track.numParts - 1; i >= 0; i--) {\r\n                part = parts[i];\r\n                if (part.id === this.id) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n\r\n\r\n    Part.prototype.copy = function () {\r\n        var part = new Part(copyName(this.name)),\r\n            partTicks = this.ticks,\r\n            eventsById = this.eventsById,\r\n            copies = [],\r\n            copy, id, event;\r\n        //console.log('Part.copy', events);\r\n\r\n        part.song = undefined;\r\n        part.track = undefined;\r\n        part.trackId = undefined;\r\n\r\n        for (id in eventsById) {\r\n            if (eventsById.hasOwnProperty(id)) {\r\n                event = eventsById[id];\r\n                copy = event.copy();\r\n                //console.log(copy.ticks, partTicks);\r\n                copy.ticks = copy.ticks - partTicks;\r\n                copies.push(copy);\r\n            }\r\n        }\r\n        part.addEvents(copies);\r\n        return part;\r\n    };\r\n\r\n    Part.prototype.setSolo = function (flag) {\r\n        if (flag === undefined) {\r\n            flag = !this.solo;\r\n        }\r\n        this.mute = false;\r\n        this.solo = flag;\r\n        // stop all sounds here\r\n        this.allNotesOff();\r\n        if (this.track) {\r\n            this.track.setPartSolo(this, flag);\r\n        }\r\n        //console.log(this.solo, this.mute);\r\n    };\r\n\r\n\r\n    Part.prototype.allNotesOff = function () {\r\n        if (this.track === undefined) {\r\n            return;\r\n        }\r\n        this.track.instrument.allNotesOffPart(this.id);\r\n    };\r\n\r\n\r\n    // called by Track if a part gets removed from a track\r\n    Part.prototype.reset = function (fromTrack, fromSong) {\r\n        var eventsById = this.eventsById,\r\n            id, event;\r\n\r\n        if (fromSong) {\r\n            this.song = undefined;\r\n        }\r\n        if (fromTrack) {\r\n            this.track = undefined;\r\n        }\r\n        this.trackId = undefined;\r\n        this.start.millis = undefined;\r\n        this.end.millis = undefined;\r\n\r\n        for (id in eventsById) {\r\n            if (eventsById.hasOwnProperty(id)) {\r\n                event = eventsById[id];\r\n                event.ticks -= this.ticks;\r\n                event.reset(false, fromTrack, fromSong);\r\n                //event.state = 'removed';\r\n            }\r\n        }\r\n        this.ticks = 0;\r\n        this.needsUpdate = true;\r\n    };\r\n\r\n\r\n    Part.prototype.update = function () {\r\n        //console.log('part update');\r\n\r\n        var i, maxi, j, maxj, id, event, noteNumber, note, onEvents, onEvent,\r\n            firstEvent, lastEvent, stats,\r\n            noteOnEvents = [],\r\n            notes = [],\r\n            numNotes = 0,\r\n            part = this,\r\n            partId = this.id,\r\n            track = this.track,\r\n            trackId = this.track ? this.track.id : undefined;\r\n\r\n        // if(!trackId){\r\n        //     console.log(this, 'does not belong to a track anymore');\r\n        // }\r\n\r\n        //console.log('Part.update()', this.state, this.eventsById);\r\n\r\n        this.events = [];\r\n\r\n        for (id in this.eventsById) {\r\n            if (this.eventsById.hasOwnProperty(id)) {\r\n                event = this.eventsById[id];\r\n                //console.log(event);\r\n                if (event.state !== 'clean') {\r\n                    //console.log(event.state);\r\n                    this.dirtyEvents[event.id] = event;\r\n                }\r\n\r\n                if (event.state !== 'removed') {\r\n                    this.events.push(event);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.events.sort(function (a, b) {\r\n            return a.sortIndex - b.sortIndex;\r\n        });\r\n\r\n\r\n        for (i = 0, maxi = this.notes.length; i < maxi; i++) {\r\n            note = this.notes[i];\r\n            //console.log(note.noteOn.state);\r\n            if (note.noteOn.state === 'removed' || (note.noteOff !== undefined && note.noteOff.state === 'removed')) {\r\n                note.state = 'removed';\r\n                this.dirtyNotes[note.id] = note;\r\n                delete this.notesById[note.id];\r\n            } else if (note.noteOn.state === 'changed' || (note.noteOff !== undefined && note.noteOff.state === 'changed')) {\r\n                note.state = 'changed';\r\n                this.dirtyNotes[note.id] = note;\r\n            }\r\n        }\r\n\r\n        //console.log('part', this.events.length);\r\n\r\n        for (i = 0, maxi = this.events.length; i < maxi; i++) {\r\n            event = this.events[i];\r\n            noteNumber = event.noteNumber;\r\n\r\n            if (event.type === sequencer.NOTE_ON) {\r\n                if (event.midiNote === undefined) {\r\n\r\n                    /*\r\n                    if(noteOnEvents[noteNumber] === undefined){\r\n                        noteOnEvents[noteNumber] = [];\r\n                    }\r\n                    noteOnEvents[noteNumber].push(event);\r\n                    */\r\n\r\n\r\n                    //console.log(i, 'NOTE_ON', event.eventNumber, noteNumber, noteOnEvents[noteNumber]);\r\n                    note = createMidiNote(event);\r\n                    note.part = part;\r\n                    note.partId = partId;\r\n                    note.track = track;\r\n                    note.trackId = trackId;\r\n                    note.state = 'new';\r\n                    this.notesById[note.id] = note;\r\n                    this.dirtyNotes[note.id] = note;\r\n                    if (notes[noteNumber] === undefined) {\r\n                        notes[noteNumber] = [];\r\n                    }\r\n                    notes[noteNumber].push(note);\r\n                    //console.log('create note:', note.id, 'for:', noteNumber, 'ticks:', event.ticks);\r\n                }\r\n            } else if (event.type === sequencer.NOTE_OFF) {\r\n                //console.log(event.midiNote);\r\n                if (event.midiNote === undefined) {\r\n                    if (notes[noteNumber] === undefined) {\r\n                        //console.log('no note!', noteNumber);\r\n                        continue;\r\n                    }\r\n\r\n                    var l = notes[noteNumber].length - 1;\r\n                    note = notes[noteNumber][l];\r\n                    if (note.noteOff !== undefined && note.durationTicks > 0) {\r\n                        //console.log('has already a note off event!', noteNumber, note.durationTicks, note.noteOff.ticks, event.ticks);\r\n                        continue;\r\n                    }\r\n                    /*\r\n                                        // get the lastly added note\r\n                                        var l = notes[noteNumber].length - 1;\r\n                                        var t = 0;\r\n                                        note = null;\r\n                    \r\n                                        while(t <= l){\r\n                                            note = notes[noteNumber][t];\r\n                                            if(note.noteOff === undefined){\r\n                                                break;\r\n                                            }\r\n                                            t++\r\n                                        }\r\n                    */\r\n                    if (note === null) {\r\n                        continue;\r\n                    }\r\n\r\n                    //console.log('add note off to note:', note.id, 'for:', noteNumber, 'ticks:', event.ticks, 'num note on:', l, 'index:', t);\r\n                    if (note.noteOn === undefined) {\r\n                        //console.log('no NOTE ON');\r\n                        continue;\r\n                    }\r\n                    if (note.state !== 'new') {\r\n                        note.state = 'changed';\r\n                    }\r\n                    this.dirtyNotes[note.id] = note;\r\n                    note.addNoteOff(event);\r\n\r\n\r\n                    /*\r\n                    onEvents = noteOnEvents[noteNumber];\r\n                    if(onEvents){\r\n                        onEvent = onEvents.shift();\r\n                        //console.log(note.midiNote);\r\n                        if(onEvent && onEvent.midiNote){\r\n                            note = onEvent.midiNote;\r\n                            if(note.state !== 'new'){\r\n                                note.state = 'changed';\r\n                            }\r\n                            this.dirtyNotes[note.id] = note;\r\n                            if(event.ticks - note.noteOn.ticks === 0){\r\n                                console.log(note.noteOn.ticks, event.ticks);\r\n                                note.adjusted = true;\r\n                                //event.ticks += 120;\r\n                            }\r\n                            note.addNoteOff(event);\r\n                            //console.log(i, 'NOTE_OFF', event.midiNote);\r\n                        }\r\n                    }else{\r\n                        maxj = this.notes.length;\r\n                        for(j = maxj - 1; j >= 0; j--){\r\n                            note = this.notes[j];\r\n                            if(note.number === event.noteNumber){\r\n                                note.state = 'changed';\r\n                                note.addNoteOff(event);\r\n                                this.dirtyNotes[note.id] = note;\r\n                                //console.log(note.id);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    */\r\n\r\n                } else if (this.notesById[event.midiNote.id] === undefined) {\r\n                    //console.log('not here');\r\n                    // note is recorded and has already a duration\r\n                    note = event.midiNote;\r\n                    //console.log('recorded notes', note.id);\r\n                    //note.state = 'new';\r\n                    note.part = part;\r\n                    note.partId = partId;\r\n                    note.track = track;\r\n                    note.trackId = trackId;\r\n                    //this.dirtyNotes[note.id] = note;\r\n                    this.notesById[note.id] = note;\r\n                } else {\r\n                    //console.log('certainly not here');\r\n                }\r\n            }\r\n        }\r\n\r\n        this.notes = [];\r\n        notes = null;\r\n        for (id in this.notesById) {\r\n            if (this.notesById.hasOwnProperty(id)) {\r\n                note = this.notesById[id];\r\n                this.notes.push(note);\r\n            }\r\n        }\r\n\r\n        this.notes.sort(function (a, b) {\r\n            return a.ticks - b.ticks;\r\n        });\r\n\r\n        this.numEvents = this.events.length;\r\n        this.numNotes = this.notes.length;\r\n\r\n        //console.log(this.numEvents, this.numNotes);\r\n\r\n        firstEvent = this.events[0];\r\n        lastEvent = this.events[this.numEvents - 1];\r\n\r\n        //console.log(firstEvent.ticks, lastEvent.ticks);\r\n\r\n        if (firstEvent) {\r\n            if (firstEvent.ticks < this.ticks) {\r\n                this.autoSize = 'both';\r\n            }\r\n\r\n            switch (this.autoSize) {\r\n                case 'right':\r\n                    this.start.ticks = this.ticks;\r\n                    this.end.ticks = lastEvent.ticks;\r\n                    this.duration.ticks = lastEvent.ticks - this.start.ticks;\r\n                    break;\r\n                case 'both':\r\n                    this.start.ticks = firstEvent.ticks;\r\n                    this.end.ticks = lastEvent.ticks;\r\n                    this.duration.ticks = lastEvent.ticks - firstEvent.ticks;\r\n                    break;\r\n            }\r\n        } else {\r\n            // fixing issue #6\r\n            this.start.ticks = this.ticks;\r\n            this.end.ticks = this.ticks + 100; // give the part a minimal duration of 100 ticks\r\n            this.duration.ticks = 100;\r\n        }\r\n\r\n        stats = this.getStats('noteNumber all');\r\n        this.lowestNote = stats.min;\r\n        this.highestNote = stats.max;\r\n\r\n        this.ticks = this.start.ticks;\r\n\r\n        if (this.state === 'clean') {\r\n            //@TODO: check if this is the preferred way of doing it after all, add: part.track.needsUpdate = true;\r\n            //console.log('part sets its own status in update() -> this shouldn\\'t happen');\r\n            this.state = 'changed';\r\n        }\r\n\r\n        this.needsUpdate = false;\r\n    };\r\n\r\n    sequencer.createPart = function () {\r\n        return new Part();\r\n    };\r\n\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n\r\n        createMidiNote = sequencer.createMidiNote;\r\n        createMidiEvent = sequencer.createMidiEvent;\r\n\r\n        copyName = sequencer.protectedScope.copyName;\r\n        typeString = sequencer.protectedScope.typeString;\r\n\r\n        findEvent = sequencer.findEvent;\r\n        findNote = sequencer.findNote;\r\n        getStats = sequencer.getStats;\r\n    });\r\n\r\n}function playhead() {\n\n    'use strict';\n    var\n        instanceId = 0,\n        range = 10,\n\n        debug,\n\n        Playhead,\n\n        //import\n        getPosition2, // → defined in position.js\n        objectForEach; // → defined in util.js\n\n\n    Playhead = function (song, type, name, data) {\n        this.id = 'POS' + instanceId++ + '' + new Date().getTime();\n        //console.log(name);\n        this.song = song;\n        this.type = type || '';\n        this.name = name || this.id;\n        this.data = data || {};\n        this.lastEvent = undefined;\n\n        this.activeParts = [];\n        this.activeNotes = [];\n        this.activeEvents = [];\n    };\n\n\n    Playhead.prototype.set = function (u, v) {\n        //console.log(this.name, 'set', u, v);\n        this.unit = u;\n        this.currentValue = v;\n        this.eventIndex = 0;\n        this.noteIndex = 0;\n        this.partIndex = 0;\n        this.calculate();\n        return this.data;\n    };\n\n\n    Playhead.prototype.get = function () {\n        return this.data;\n    };\n\n\n    Playhead.prototype.update = function (u, diff) {\n        //console.log(this.name, 'update', u, diff);\n        if (diff === 0) {\n            return this.data;\n        }\n        this.unit = u;\n        this.currentValue += diff;\n        this.calculate();\n        return this.data;\n    };\n\n\n    Playhead.prototype.updateSong = function () {\n        this.events = this.song.eventsMidiTime;\n        this.numEvents = this.events.length;\n        this.notes = this.song.notes;\n        this.numNotes = this.song.numNotes;\n        this.parts = this.song.parts;\n        this.numParts = this.song.numParts;\n\n        this.set('millis', this.song.millis || 0);\n    };\n\n\n    Playhead.prototype.setType = function (t) {\n        this.type = t;\n        this.set(this.unit, this.currentValue);\n        //console.log(type,activeParts);\n    };\n\n\n    Playhead.prototype.addType = function (t) {\n        this.type += ' ' + t;\n        this.set(this.unit, this.currentValue);\n        //console.log(type,activeParts);\n    };\n\n\n    Playhead.prototype.removeType = function (t) {\n        var arr = this.type.split(' ');\n        this.type = '';\n        arr.forEach(function (type) {\n            if (type !== t) {\n                this.type += t + ' ';\n            }\n        });\n        this.type.trim();\n        this.set(this.currentValue);\n        //console.log(type,activeParts);\n    };\n\n\n    Playhead.prototype.calculate = function () {\n        var\n            i,\n            event,\n            note,\n            part,\n            position,\n            newParts = [],\n            stillActiveNotes = [],\n            stillActiveEvents = [],\n            collectedParts = [],\n            collectedNotes = [],\n            collectedEvents = [];\n\n        for (i = this.eventIndex; i < this.numEvents; i++) {\n            event = this.events[i];\n            //console.log(event);\n            //event.mute = event.mute || event.part.mute || event.track.mute;\n            if (event[this.unit] <= this.currentValue) {\n                //console.log(event[this.unit], this.currentValue, event.type)\n                //if(event.mute === false && event.type !== sequencer.MIDI_NOTE && event.type !== sequencer.DUMMY_EVENT){\n                if (event.type !== sequencer.MIDI_NOTE && event.type !== sequencer.DUMMY_EVENT) {\n                    //console.log(event.mute, event.part.mute, event.track.mute);\n                    collectedEvents.push(event);\n                }\n                this.lastEvent = event;\n                this.eventIndex++;\n            } else {\n                break;\n            }\n        }\n\n        // if a song has no events yet, use the first time event as reference\n        if (this.lastEvent === undefined) {\n            this.lastEvent = this.song.timeEvents[0];\n        }\n\n        position = getPosition2(this.song, this.unit, this.currentValue, 'all', this.lastEvent);\n        this.data.eventIndex = this.eventIndex;\n        this.data.millis = position.millis;\n        this.data.ticks = position.ticks;\n\n        //console.log('millis:', position.millis, 'ticks:', position.ticks, this.unit, ':', this.currentValue);\n        // if(this.name === 'iterators'){\n        //     console.log('nominator:', position.nominator, 'ticks:', position.ticks, this.unit, ':', this.currentValue);\n        // }\n\n        if (this.type.indexOf('all') !== -1) {\n            var data = this.data;\n            objectForEach(position, function (value, key) {\n                data[key] = value;\n            });\n        } else if (this.type.indexOf('barsbeats') !== -1) {\n            this.data.bar = position.bar;\n            this.data.beat = position.beat;\n            this.data.sixteenth = position.sixteenth;\n            this.data.tick = position.tick;\n            this.data.barsAsString = position.barsAsString;\n\n            this.data.ticksPerBar = position.ticksPerBar;\n            this.data.ticksPerBeat = position.ticksPerBeat;\n            this.data.ticksPerSixteenth = position.ticksPerSixteenth;\n            this.data.numSixteenth = position.numSixteenth;\n        } else if (this.type.indexOf('time') !== -1) {\n            this.data.hour = position.hour;\n            this.data.minute = position.minute;\n            this.data.second = position.second;\n            this.data.millisecond = position.millisecond;\n            this.data.timeAsString = position.timeAsString;\n        } else if (this.type.indexOf('percentage') !== -1) {\n            this.data.percentage = position.percentage;\n        }\n\n        if (this.type.indexOf('events') !== -1 || this.type.indexOf('all') !== -1) {\n\n            this.collectedEvents = collectedEvents;\n\n            for (i = this.activeEvents.length - 1; i >= 0; i--) {\n                event = this.activeEvents[i];\n\n                // skip the tempo and time signature events\n                if (event.type === 0x51 || event.type === 0x58) {\n                    continue;\n                }\n                //event.mute = event.mute || event.part.mute || event.track.mute;\n                /*\n                if(event.mute === true){\n                    //console.log('skipping muted event', event.id);\n                    continue;\n                }\n                */\n                if (event.state.indexOf('removed') === 0 || this.song.eventsById[event.id] === undefined) {\n                    //console.log('skipping removed event', event.id);\n                    continue;\n                }\n\n                if (event[this.unit] <= this.currentValue && event[this.unit] > this.currentValue - range) {\n                    stillActiveEvents.push(event);\n                }\n            }\n\n            this.activeEvents = [].concat(stillActiveEvents);\n\n            // find and add new active events\n            for (i = collectedEvents.length - 1; i >= 0; i--) {\n                event = collectedEvents[i];\n                //console.log(event.mute);\n                if (event[this.unit] > this.currentValue - range) {\n                    this.activeEvents.push(event);\n                }\n            }\n\n            this.song.activeEvents = {};\n\n            for (i = this.activeEvents.length - 1; i >= 0; i--) {\n                event = this.activeEvents[i];\n                //console.log('active', event);\n                this.song.activeEvents[event.id] = event;\n            }\n        }\n\n\n        if (this.type.indexOf('notes') !== -1 || this.type.indexOf('all') !== -1) {\n\n            // get all events between the noteIndex and the current playhead position\n            for (i = this.noteIndex; i < this.numNotes; i++) {\n                note = this.notes[i];\n                if (note.noteOn[this.unit] <= this.currentValue) {\n                    //note.mute = note.noteOn.mute || note.noteOff.mute;\n                    //if(note.mute === false){\n                    collectedNotes.push(note);\n                    //}\n                    this.noteIndex++;\n                } else {\n                    break;\n                }\n            }\n\n\n            // filter notes that are no longer active\n            for (i = this.activeNotes.length - 1; i >= 0; i--) {\n                note = this.activeNotes[i];\n                //note.mute = note.noteOn.mute || note.noteOff.mute;\n                //if(note.mute){\n                //    continue;\n                //}\n                if (note.noteOn.state.indexOf('removed') === 0 || this.song.notesById[note.id] === undefined) {\n                    //console.log('skipping removed note', note.id);\n                    continue;\n                }\n\n                if (note.noteOff === undefined) {\n                    if (sequencer.debug) {\n                        console.warn('note with id', note.id, 'has no noteOff event', note.noteOn.track.name);\n                    }\n                    continue;\n                }\n\n                if (note.noteOn[this.unit] <= this.currentValue && note.noteOff[this.unit] > this.currentValue) {\n                    //note.active = true;\n                    stillActiveNotes.push(note);\n                } else {\n                    //note.active = false;\n\n                    //@TODO: do something here to unschedule notes\n                }\n            }\n\n\n            // add the still active notes back to the active notes array\n            this.activeNotes = [].concat(stillActiveNotes);\n\n\n            // find and add new active notes\n            for (i = collectedNotes.length - 1; i >= 0; i--) {\n                note = collectedNotes[i];\n\n                if (note.noteOff === undefined) {\n                    if (sequencer.debug) {\n                        console.warn('note with id', note.id, 'has no noteOff event', note.noteOn.track.name);\n                    }\n                    continue;\n                }\n\n                if (note.noteOff[this.unit] > this.currentValue) {\n                    this.activeNotes.push(note);\n                    //note.active = true;\n                } else {\n                    //note.active = false;\n                }\n            }\n\n            this.song.activeNotes = {};\n\n            for (i = this.activeNotes.length - 1; i >= 0; i--) {\n                note = this.activeNotes[i];\n                //console.log('active', note);\n                this.song.activeNotes[note.id] = note;\n            }\n        }\n\n\n\n        // get active parts\n        if (this.type.indexOf('parts') !== -1 || this.type.indexOf('all') !== -1) {\n\n\n            for (i = this.partIndex; i < this.numParts; i++) {\n                part = this.parts[i];\n                //console.log(part, this.unit, this.currentValue);\n                if (part.start[this.unit] <= this.currentValue) {// && part.end[this.unit] > this.currentValue){\n                    //part.mute = part.mute || part.track.mute;\n                    //if(part.mute === false){\n                    collectedParts.push(part);\n                    //}\n                    this.partIndex++;\n                } else {\n                    break;\n                }\n            }\n\n            // filter existing active parts\n            for (i = this.activeParts.length - 1; i >= 0; i--) {\n                part = this.activeParts[i];\n                //part.mute = part.mute || part.track.mute;\n                //if(part.mute){\n                //    continue;\n                //}\n                if (part.start[this.unit] <= this.currentValue && part.end[this.unit] > this.currentValue) {\n                    newParts.push(part);\n                }\n            }\n\n            this.activeParts = [].concat(newParts);\n\n            for (i = collectedParts.length - 1; i >= 0; i--) {\n                part = collectedParts[i];\n                if (part.end[this.unit] > this.currentValue) {\n                    this.activeParts.push(part);\n                }\n            }\n\n            this.song.activeParts = {};\n            for (i = this.activeParts.length - 1; i >= 0; i--) {\n                part = this.activeParts[i];\n                //console.log('active part', part);\n                this.song.activeParts[part.id] = part;\n            }\n        }\n\n        if (this.busy === true) {\n            this.busy = false;\n        }\n    };\n\n\n    sequencer.protectedScope.createPlayhead = function (song, type, name, data) {\n        return new Playhead(song, type, name, data);\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        getPosition2 = sequencer.protectedScope.getPosition2;\n        objectForEach = sequencer.protectedScope.objectForEach;\n        debug = sequencer.debug;\n    });\n\n}function position() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        //import\r\n        round, // → defined in util.js\r\n        floor, // → defined in util.js\r\n        typeString, // → defined in util.js\r\n\r\n        supportedTypes = 'barsandbeats barsbeats time millis ticks perc percentage',\r\n        supportedReturnTypes = 'barsandbeats barsbeats time millis ticks all',\r\n\r\n        //local\r\n        bpm,\r\n        nominator,\r\n        denominator,\r\n\r\n        ticksPerBeat,\r\n        ticksPerBar,\r\n        ticksPerSixteenth,\r\n\r\n        millisPerTick,\r\n        secondsPerTick,\r\n        numSixteenth,\r\n\r\n        ticks,\r\n        millis,\r\n        diffTicks,\r\n        diffMillis,\r\n\r\n        bar,\r\n        beat,\r\n        sixteenth,\r\n        tick,\r\n\r\n        type,\r\n        index,\r\n        returnType = 'all',\r\n        beyondEndOfSong = true,\r\n\r\n        //public (song)\r\n        millisToTicks,\r\n        ticksToMillis,\r\n        barsToMillis,\r\n        barsToTicks,\r\n        ticksToBars,\r\n        millisToBars,\r\n\r\n        //private\r\n        checkBarsAndBeats,\r\n        getDataFromEvent,\r\n        getPositionData,\r\n        calculateBarsAndBeats,\r\n\r\n        //protected\r\n        getPosition,\r\n        checkPosition,\r\n        fromMillis,\r\n        fromTicks,\r\n        fromBars;\r\n\r\n\r\n    function getTimeEvent(song, unit, target) {\r\n        // finds the time event that comes the closest before the target position\r\n        var timeEvents = song.timeEvents,\r\n            i, event;\r\n\r\n        for (i = timeEvents.length - 1; i >= 0; i--) {\r\n            event = timeEvents[i];\r\n            if (event[unit] <= target) {\r\n                index = i;\r\n                return event;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    millisToTicks = function (song, targetMillis, beos) {\r\n        beyondEndOfSong = beos === undefined ? true : false;\r\n        fromMillis(song, targetMillis);\r\n        //return round(ticks);\r\n        return ticks;\r\n    };\r\n\r\n\r\n    ticksToMillis = function (song, targetTicks, beos) {\r\n        beyondEndOfSong = beos === undefined ? true : false;\r\n        fromTicks(song, targetTicks);\r\n        return millis;\r\n    };\r\n\r\n\r\n    barsToMillis = function (song, position, beos) { // beos = beyondEndOfSong\r\n        position = ['barsbeats'].concat(position);\r\n        getPosition(song, position, 'millis', beos);\r\n        return millis;\r\n    };\r\n\r\n\r\n    barsToTicks = function (song, position, beos) { // beos = beyondEndOfSong\r\n        position = ['barsbeats'].concat(position);\r\n        getPosition(song, position, 'ticks', beos);\r\n        //return round(ticks);\r\n        return ticks;\r\n    };\r\n\r\n\r\n    ticksToBars = function (song, ticks, beos) {\r\n        beyondEndOfSong = beos === undefined ? true : false;\r\n        fromTicks(song, ticks);\r\n        calculateBarsAndBeats();\r\n        returnType = 'barsandbeats';\r\n        return getPositionData();\r\n    };\r\n\r\n\r\n    millisToBars = function (song, millis, beos) {\r\n        beyondEndOfSong = beos === undefined ? true : false;\r\n        fromMillis(song, millis);\r\n        calculateBarsAndBeats();\r\n        returnType = 'barsandbeats';\r\n        return getPositionData();\r\n    };\r\n\r\n\r\n    fromMillis = function (song, targetMillis, event) {\r\n        var lastEvent = song.lastEvent;\r\n\r\n        if (beyondEndOfSong === false) {\r\n            if (targetMillis > lastEvent.millis) {\r\n                targetMillis = lastEvent.millis;\r\n            }\r\n        }\r\n\r\n        if (event === undefined) {\r\n            event = getTimeEvent(song, 'millis', targetMillis);\r\n        }\r\n        getDataFromEvent(event);\r\n\r\n        // if the event is not exactly at target millis, calculate the diff\r\n        if (event.millis === targetMillis) {\r\n            diffMillis = 0;\r\n            diffTicks = 0;\r\n        } else {\r\n            diffMillis = targetMillis - event.millis;\r\n            diffTicks = diffMillis / millisPerTick;\r\n        }\r\n\r\n        millis += diffMillis;\r\n        ticks += diffTicks;\r\n\r\n        return ticks;\r\n    };\r\n\r\n\r\n    fromTicks = function (song, targetTicks, event) {\r\n        var lastEvent = song.lastEvent;\r\n\r\n        if (beyondEndOfSong === false) {\r\n            if (targetTicks > lastEvent.ticks) {\r\n                targetTicks = lastEvent.ticks;\r\n            }\r\n        }\r\n\r\n        if (event === undefined) {\r\n            event = getTimeEvent(song, 'ticks', targetTicks);\r\n        }\r\n        getDataFromEvent(event);\r\n\r\n        // if the event is not exactly at target ticks, calculate the diff\r\n        if (event.ticks === targetTicks) {\r\n            diffTicks = 0;\r\n            diffMillis = 0;\r\n        } else {\r\n            diffTicks = targetTicks - ticks;\r\n            diffMillis = diffTicks * millisPerTick;\r\n        }\r\n\r\n        ticks += diffTicks;\r\n        millis += diffMillis;\r\n\r\n        return millis;\r\n    };\r\n\r\n\r\n    fromBars = function (song, targetBar, targetBeat, targetSixteenth, targetTick, event) {\r\n        //console.time('fromBars');\r\n        var i = 0,\r\n            diffBars,\r\n            diffBeats,\r\n            diffSixteenth,\r\n            diffTick,\r\n            lastEvent = song.lastEvent;\r\n\r\n        if (beyondEndOfSong === false) {\r\n            if (targetBar > lastEvent.bar) {\r\n                targetBar = lastEvent.bar;\r\n            }\r\n        }\r\n\r\n        targetBar = checkBarsAndBeats(targetBar);\r\n        targetBeat = checkBarsAndBeats(targetBeat);\r\n        targetSixteenth = checkBarsAndBeats(targetSixteenth);\r\n        targetTick = checkBarsAndBeats(targetTick, true);\r\n\r\n        if (event === undefined) {\r\n            event = getTimeEvent(song, 'bar', targetBar);\r\n        }\r\n        getDataFromEvent(event);\r\n\r\n        //correct wrong position data, for instance: '3,3,2,788' becomes '3,4,4,068' in a 4/4 measure at PPQ 480\r\n        while (targetTick >= ticksPerSixteenth) {\r\n            targetSixteenth++;\r\n            targetTick -= ticksPerSixteenth;\r\n        }\r\n\r\n        while (targetSixteenth > numSixteenth) {\r\n            targetBeat++;\r\n            targetSixteenth -= numSixteenth;\r\n        }\r\n\r\n        while (targetBeat > nominator) {\r\n            targetBar++;\r\n            targetBeat -= nominator;\r\n        }\r\n\r\n        event = getTimeEvent(song, 'bar', targetBar, index);\r\n        for (i = index; i >= 0; i--) {\r\n            event = song.timeEvents[i];\r\n            if (event.bar <= targetBar) {\r\n                getDataFromEvent(event);\r\n                break;\r\n            }\r\n        }\r\n\r\n        // get the differences\r\n        diffTick = targetTick - tick;\r\n        diffSixteenth = targetSixteenth - sixteenth;\r\n        diffBeats = targetBeat - beat;\r\n        diffBars = targetBar - bar; //bar is always less then or equal to targetBar, so diffBars is always >= 0\r\n\r\n        //console.log('diff',diffBars,diffBeats,diffSixteenth,diffTick);\r\n        //console.log('millis',millis,ticksPerBar,ticksPerBeat,ticksPerSixteenth,millisPerTick);\r\n\r\n        // convert differences to milliseconds and ticks\r\n        diffMillis = (diffBars * ticksPerBar) * millisPerTick;\r\n        diffMillis += (diffBeats * ticksPerBeat) * millisPerTick;\r\n        diffMillis += (diffSixteenth * ticksPerSixteenth) * millisPerTick;\r\n        diffMillis += diffTick * millisPerTick;\r\n        diffTicks = diffMillis / millisPerTick;\r\n        //console.log(diffBars, ticksPerBar, millisPerTick, diffMillis, diffTicks);\r\n\r\n        // set all current position data\r\n        bar = targetBar;\r\n        beat = targetBeat;\r\n        sixteenth = targetSixteenth;\r\n        tick = targetTick;\r\n        //console.log(tick, targetTick)\r\n\r\n        millis += diffMillis;\r\n        //console.log(targetBar, targetBeat, targetSixteenth, targetTick, ' -> ', millis);\r\n        ticks += diffTicks;\r\n\r\n        //console.timeEnd('fromBars');\r\n    };\r\n\r\n\r\n    calculateBarsAndBeats = function () {\r\n        // spread the difference in tick over bars, beats and sixteenth\r\n        var tmp = round(diffTicks);\r\n        while (tmp >= ticksPerSixteenth) {\r\n            sixteenth++;\r\n            tmp -= ticksPerSixteenth;\r\n            while (sixteenth > numSixteenth) {\r\n                sixteenth -= numSixteenth;\r\n                beat++;\r\n                while (beat > nominator) {\r\n                    beat -= nominator;\r\n                    bar++;\r\n                }\r\n            }\r\n        }\r\n        tick = round(tmp);\r\n    };\r\n\r\n\r\n    getDataFromEvent = function (event) {\r\n\r\n        bpm = event.bpm;\r\n        nominator = event.nominator;\r\n        denominator = event.denominator;\r\n\r\n        ticksPerBar = event.ticksPerBar;\r\n        ticksPerBeat = event.ticksPerBeat;\r\n        ticksPerSixteenth = event.ticksPerSixteenth;\r\n        numSixteenth = event.numSixteenth;\r\n        millisPerTick = event.millisPerTick;\r\n        secondsPerTick = event.secondsPerTick;\r\n\r\n        bar = event.bar;\r\n        beat = event.beat;\r\n        sixteenth = event.sixteenth;\r\n        tick = event.tick;\r\n\r\n        ticks = event.ticks;\r\n        millis = event.millis;\r\n\r\n        //console.log(bpm, event.type);\r\n        //console.log('ticks', ticks, 'millis', millis, 'bar', bar);\r\n    };\r\n\r\n\r\n    getPositionData = function (song) {\r\n        var timeData,\r\n            tickAsString,\r\n            positionData = {};\r\n\r\n        switch (returnType) {\r\n\r\n            case 'millis':\r\n                //positionData.millis = millis;\r\n                positionData.millis = round(millis * 1000) / 1000;\r\n                positionData.millisRounded = round(millis);\r\n                break;\r\n\r\n            case 'ticks':\r\n                //positionData.ticks = ticks;\r\n                positionData.ticks = round(ticks);\r\n                //positionData.ticksUnrounded = ticks;\r\n                break;\r\n\r\n            case 'barsbeats':\r\n            case 'barsandbeats':\r\n                positionData.bar = bar;\r\n                positionData.beat = beat;\r\n                positionData.sixteenth = sixteenth;\r\n                positionData.tick = tick;\r\n                tickAsString = tick === 0 ? '000' : tick < 10 ? '00' + tick : tick < 100 ? '0' + tick : tick;\r\n                //positionData.barsAsString = (bar + 1) + ':' + (beat + 1) + ':' + (sixteenth + 1) + ':' + tickAsString;\r\n                positionData.barsAsString = bar + ':' + beat + ':' + sixteenth + ':' + tickAsString;\r\n                break;\r\n\r\n            case 'time':\r\n                timeData = sequencer.getNiceTime(millis);\r\n                positionData.hour = timeData.hour;\r\n                positionData.minute = timeData.minute;\r\n                positionData.second = timeData.second;\r\n                positionData.millisecond = timeData.millisecond;\r\n                positionData.timeAsString = timeData.timeAsString;\r\n                break;\r\n\r\n            case 'all':\r\n                // millis\r\n                //positionData.millis = millis;\r\n                positionData.millis = round(millis * 1000) / 1000;\r\n                positionData.millisRounded = round(millis);\r\n\r\n                // ticks\r\n                //positionData.ticks = ticks;\r\n                positionData.ticks = round(ticks);\r\n                //positionData.ticksUnrounded = ticks;\r\n\r\n                // barsbeats\r\n                positionData.bar = bar;\r\n                positionData.beat = beat;\r\n                positionData.sixteenth = sixteenth;\r\n                positionData.tick = tick;\r\n                tickAsString = tick === 0 ? '000' : tick < 10 ? '00' + tick : tick < 100 ? '0' + tick : tick;\r\n                //positionData.barsAsString = (bar + 1) + ':' + (beat + 1) + ':' + (sixteenth + 1) + ':' + tickAsString;\r\n                positionData.barsAsString = bar + ':' + beat + ':' + sixteenth + ':' + tickAsString;\r\n\r\n                // time\r\n                timeData = sequencer.getNiceTime(millis);\r\n                positionData.hour = timeData.hour;\r\n                positionData.minute = timeData.minute;\r\n                positionData.second = timeData.second;\r\n                positionData.millisecond = timeData.millisecond;\r\n                positionData.timeAsString = timeData.timeAsString;\r\n\r\n                // extra data\r\n                positionData.bpm = round(bpm * song.playbackSpeed, 3);\r\n                positionData.nominator = nominator;\r\n                positionData.denominator = denominator;\r\n\r\n                positionData.ticksPerBar = ticksPerBar;\r\n                positionData.ticksPerBeat = ticksPerBeat;\r\n                positionData.ticksPerSixteenth = ticksPerSixteenth;\r\n\r\n                positionData.numSixteenth = numSixteenth;\r\n                positionData.millisPerTick = millisPerTick;\r\n                positionData.secondsPerTick = secondsPerTick;\r\n\r\n                // use ticks to make tempo changes visible by a faster moving playhead\r\n                positionData.percentage = ticks / song.durationTicks;\r\n                //positionData.percentage = millis / song.durationMillis;\r\n                break;\r\n        }\r\n\r\n        return positionData;\r\n    };\r\n\r\n\r\n    checkBarsAndBeats = function (value, isTick) {\r\n        value = isNaN(value) ? isTick ? 0 : 1 : value;\r\n        value = round(value);\r\n        //value = value > maxValue ? maxValue : value;\r\n        if (isTick) {\r\n            value = value < 0 ? 0 : value;\r\n        } else {\r\n            value = value < 1 ? 1 : value;\r\n        }\r\n        return value;\r\n    };\r\n\r\n\r\n    //@param: 'millis', 1000, [true]\r\n    //@param: 'ticks', 1000, [true]\r\n    //@param: 'barsandbeats', 1, ['all', true]\r\n    //@param: 'barsandbeats', 60, 4, 3, 120, ['all', true]\r\n    //@param: 'barsandbeats', 60, 4, 3, 120, [true, 'all']\r\n\r\n    checkPosition = function (args) {\r\n        returnType = 'all';\r\n        beyondEndOfSong = true;\r\n        //console.log('----> checkPosition:', args);\r\n\r\n        if (typeString(args) === 'array') {\r\n            var\r\n                numArgs = args.length,\r\n                position,\r\n                i, a, positionLength;\r\n\r\n            type = args[0];\r\n\r\n            // support for [['millis', 3000]]\r\n            if (typeString(args[0]) === 'array') {\r\n                //console.warn('this shouldn\\'t happen!');\r\n                args = args[0];\r\n                type = args[0];\r\n                numArgs = args.length;\r\n            }\r\n\r\n            position = [type];\r\n\r\n            //console.log('check position', args, numArgs);\r\n\r\n            //console.log('arg', 0, '->', type);\r\n\r\n            if (supportedTypes.indexOf(type) !== -1) {\r\n                for (i = 1; i < numArgs; i++) {\r\n                    a = args[i];\r\n                    //console.log('arg', i, '->', a);\r\n                    if (a === true || a === false) {\r\n                        beyondEndOfSong = a;\r\n                    } else if (isNaN(a)) {\r\n                        if (supportedReturnTypes.indexOf(a) !== -1) {\r\n                            returnType = a;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    } else {\r\n                        position.push(a);\r\n                    }\r\n                }\r\n                //check number of arguments -> either 1 number or 4 numbers in position, e.g. ['barsbeats', 1] or ['barsbeats', 1, 1, 1, 0],\r\n                // or ['perc', 0.56, numberOfTicksToSnapTo]\r\n                positionLength = position.length;\r\n                if (positionLength !== 2 && positionLength !== 3 && positionLength !== 5) {\r\n                    return false;\r\n                }\r\n                //console.log(position, returnType, beyondEndOfSong);\r\n                //console.log('------------------------------------')\r\n                return position;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    function getPosition2(song, unit, target, type, event) {\r\n        if (unit === 'millis') {\r\n            fromMillis(song, target, event);\r\n        } else if (unit === 'ticks') {\r\n            fromTicks(song, target, event);\r\n        }\r\n        if (type === 'all') {\r\n            calculateBarsAndBeats();\r\n        }\r\n        return getPositionData(song);\r\n    }\r\n\r\n    getPosition = function (song, args) {\r\n        //console.log('getPosition', args);\r\n\r\n        var position = checkPosition(args),\r\n            millis, tmp, snap;\r\n\r\n        if (position === false) {\r\n            console.error('wrong position data');\r\n            return false;\r\n        }\r\n\r\n        switch (type) {\r\n\r\n            case 'barsbeats':\r\n            case 'barsandbeats':\r\n                fromBars(song, position[1], position[2], position[3], position[4]);\r\n                return getPositionData(song);\r\n\r\n            case 'time':\r\n                // calculate millis out of time array: hours, minutes, seconds, millis\r\n                millis = 0;\r\n                tmp = position[1] || 0;\r\n                millis += tmp * 60 * 60 * 1000; //hours\r\n                tmp = position[2] || 0;\r\n                millis += tmp * 60 * 1000; //minutes\r\n                tmp = position[3] || 0;\r\n                millis += tmp * 1000; //seconds\r\n                tmp = position[4] || 0;\r\n                millis += tmp; //milliseconds\r\n\r\n                fromMillis(song, millis);\r\n                calculateBarsAndBeats();\r\n                return getPositionData(song);\r\n\r\n            case 'millis':\r\n                fromMillis(song, position[1]);\r\n                calculateBarsAndBeats();\r\n                return getPositionData(song);\r\n\r\n            case 'ticks':\r\n                fromTicks(song, position[1]);\r\n                calculateBarsAndBeats();\r\n                return getPositionData(song);\r\n\r\n            case 'perc':\r\n            case 'percentage':\r\n                snap = position[2];\r\n\r\n                //millis = position[1] * song.durationMillis;\r\n                //fromMillis(song, millis);\r\n                //console.log(millis);\r\n\r\n                ticks = position[1] * song.durationTicks;\r\n                if (snap !== undefined) {\r\n                    ticks = floor(ticks / snap) * snap;\r\n                    //fromTicks(song, ticks);\r\n                    //console.log(ticks);\r\n                }\r\n                fromTicks(song, ticks);\r\n                calculateBarsAndBeats();\r\n                tmp = getPositionData(song);\r\n                //console.log('diff', position[1] - tmp.percentage);\r\n                return tmp;\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    sequencer.protectedScope.getPosition = getPosition;\r\n    sequencer.protectedScope.getPosition2 = getPosition2;\r\n    sequencer.protectedScope.checkPosition = checkPosition;\r\n\r\n    sequencer.protectedScope.millisToTicks = millisToTicks;\r\n    sequencer.protectedScope.ticksToMillis = ticksToMillis;\r\n    sequencer.protectedScope.ticksToBars = ticksToBars;\r\n    sequencer.protectedScope.millisToBars = millisToBars;\r\n    sequencer.protectedScope.barsToTicks = barsToTicks;\r\n    sequencer.protectedScope.barsToMillis = barsToMillis;\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        round = sequencer.protectedScope.round;\r\n        floor = sequencer.protectedScope.floor;\r\n        typeString = sequencer.protectedScope.typeString;\r\n    });\r\n}\r\nfunction quantizeFixedLength() {\n\n  'use strict';\n\n  var\n    copyObject, // defined in util.js\n\n    floor = Math.floor,\n    round = Math.round,\n\n    noteFractions =\n    {\n      '1': 1 * 4, // whole note\n      '1.': 1.5 * 4,\n      '1..': 1.75 * 4,\n      '1...': 1.875 * 4,\n      '1T': 2 / 3 * 4,\n\n      '2': 1 * 2, // half note\n      '2.': 1.5 * 2,\n      '2..': 1.75 * 2,\n      '2...': 1.875 * 2,\n      '2T': 2 / 3 * 2,\n\n      '4': 1 * 1, // quarter note (beat)\n      '4.': 1.5 * 1,\n      '4..': 1.75 * 1,\n      '4...': 1.875 * 1,\n      '4T': 2 / 3 * 1,\n\n      '8': 1 * 1 / 2, // eighth note\n      '8.': 1.5 * 1 / 2,\n      '8..': 1.75 * 1 / 2,\n      '8...': 1.875 * 1 / 2,\n      '8T': 2 / 3 * 1 / 2,\n\n      '16': 1 * 1 / 4, // sixteenth note\n      '16.': 1.5 * 1 / 4,\n      '16..': 1.75 * 1 / 4,\n      '16...': 1.875 * 1 / 4,\n      '16T': 2 / 3 * 1 / 4,\n\n      '32': 1 * 1 / 8,\n      '32.': 1.5 * 1 / 8,\n      '32..': 1.75 * 1 / 8,\n      '32...': 1.875 * 1 / 8,\n      '32T': 2 / 3 * 1 / 8,\n\n      '64': 1 * 1 / 16,\n      '64.': 1.5 * 1 / 16,\n      '64..': 1.75 * 1 / 16,\n      '64...': 1.875 * 1 / 16,\n      '64T': 2 / 3 * 1 / 16,\n\n      '128': 1 * 1 / 32,\n      '128.': 1.5 * 1 / 32,\n      '128..': 1.75 * 1 / 32,\n      '128...': 1.875 * 1 / 32,\n      '128T': 2 / 3 * 1 / 32\n    };\n\n\n\n\n  function quantize(events, value, ppq, history) {\n    var track;\n\n    value = '' + value;\n    value = value.toUpperCase();\n    ppq = ppq || sequencer.defaultPPQ;\n    //console.log('quantize', value);\n    if (value === 0) {// pass by\n      return {};\n    }\n    var i, event, ticks, quantized, diff, quantizeTicks,\n      quantizeHistory = history || {};\n\n    if (quantizeHistory.events === undefined) {\n      quantizeHistory.events = {};\n    }\n\n    if (quantizeHistory.tracks === undefined) {\n      quantizeHistory.tracks = {};\n    }\n\n    //console.log(events, value, ppq, history);\n\n    if (value.indexOf('TICKS') !== -1) {\n      quantizeTicks = parseInt(value.replace(/TICKS/, ''), 10);\n    } else {\n      quantizeTicks = noteFractions[value] * ppq;\n    }\n\n    //console.log('quantize', quantizeTicks);\n\n    if (quantizeTicks === undefined) {\n      if (sequencer.debug) {\n        console.warn('invalid quantize value');\n      }\n      return;\n    }\n\n    for (i = events.length - 1; i >= 0; i--) {\n      event = events[i];\n\n      quantizeHistory.events[event.id] = {\n        event: event,\n        ticks: event.ticks\n      };\n\n      if (event.type !== 128) {\n        ticks = event.ticks;\n        quantized = round(ticks / quantizeTicks) * quantizeTicks;\n        //console.log(ticks, quantized, '[', ppq, ']');\n        diff = quantized - ticks;\n        event.ticks = quantized;\n        event.state = 'changed';\n        event.part.needsUpdate = true;\n        event.track.needsUpdate = true;\n\n        // add quantize history per track as well\n        track = event.track;\n        if (quantizeHistory.tracks[track.id] === undefined) {\n          quantizeHistory.tracks[track.id] = {\n            track: track,\n            quantizedEvents: []\n          };\n        }\n        quantizeHistory.tracks[track.id].quantizedEvents.push(event);\n\n        // quantize the note off event\n        if (event.midiNote !== undefined) {\n          event.midiNote.noteOff.ticks += diff;\n          event.midiNote.noteOff.state = 'changed';\n          event.midiNote.state = 'changed';\n          quantizeHistory.tracks[track.id].quantizedEvents.push(event.midiNote.noteOff);\n        }\n      }\n    }\n\n    return quantizeHistory;//copyObject(quantizeHistory);\n  }\n\n\n  function fixedLength(events, value, ppq, history) {\n    var fixedLengthHistory = history || {};\n\n  }\n\n\n  sequencer.protectedScope.addInitMethod(function () {\n    copyObject = sequencer.protectedScope.copyObject;\n  });\n\n  sequencer.quantize = quantize;\n  sequencer.fixedLength = fixedLength;\n\n}\n\n\nfunction sample() {\n\n    'use strict';\n\n    var\n        //import\n        context, // defined in open_module.js\n        timedTasks, // defined in open_module.js\n        legacy, // defined in open_module.js\n        typeString, // defined in util.js\n        getSampleId, // defined in open_module.js\n        createPanner, // defined in effects.js\n        getEqualPowerCurve, // defined in util.js\n\n        //private\n        stopSample,\n        fadeOut,\n\n        SampleSynth,\n        SampleRelease,\n        SampleSustainRelease,\n        SampleReleasePanning,\n        SampleSustainReleasePanning,\n\n\n        Sample = function (config) {\n            this.id = getSampleId();\n            this.output = context.createGainNode();\n            this.output.connect(config.track.input);\n            this.buffer = config.buffer;\n            if (this.buffer) {\n                this.duration = this.buffer.duration;\n            }\n            this.noteNumber = config.noteNumber;\n            this.stopCallback = function () { };\n            this.track = config.track;\n            //console.log(this.buffer, this.noteNumber)\n        };\n\n\n    stopSample = function (sample, time) {\n        sample.source.onended = function () {\n            sample.stopCallback(sample);\n        };\n        time = time || 0;\n        try {\n            sample.source.stop(time);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n\n    fadeOut = function (sample) {\n        var now = context.currentTime,\n            values,\n            i, maxi;\n\n        if (sample.release_duration > 0) {\n            //console.log(sample.releaseEnvelope);\n            try {\n                switch (sample.releaseEnvelope) {\n\n                    case 'linear':\n                        sample.output.gain.linearRampToValueAtTime(sample.volume, now);\n                        sample.output.gain.linearRampToValueAtTime(0, now + sample.releaseDuration);\n                        break;\n\n                    case 'equal power':\n                        values = getEqualPowerCurve(100, 'fadeOut', sample.volume);\n                        sample.output.gain.setValueCurveAtTime(values, now, sample.releaseDuration);\n                        break;\n\n                    case 'array':\n                        maxi = sample.releaseEnvelopeArray.length;\n                        values = new Float32Array(maxi);\n                        for (i = 0; i < maxi; i++) {\n                            values[i] = sample.releaseEnvelopeArray[i] * sample.volume;\n                        }\n                        sample.output.gain.setValueCurveAtTime(values, now, sample.releaseDuration);\n                        break;\n                }\n            } catch (e) {\n                console.error(sample.id, e);\n            }\n        }\n    };\n\n\n    Sample.prototype.addData = function (obj) {\n        this.sourceId = obj.sourceId;\n        this.noteName = obj.noteName;\n        this.midiNote = obj.midiNote;\n    };\n\n    Sample.prototype.createSource = function () {\n        // overrule to do or add other stuff\n        this.source = context.createBufferSource();\n        this.source.buffer = this.buffer;\n    };\n\n    Sample.prototype.route = function () {\n        // overrule to do or add other stuff\n        this.source.connect(this.output);\n    };\n\n\n    // called on a NOTE ON event\n    Sample.prototype.start = function (event) {\n        // console.log('NOTE ON', event.velocity, legacy);\n        if (this.source !== undefined) {\n            console.error('this should never happen');\n            return;\n        }\n\n        this.volume = event.velocity / 127;\n        this.output.gain.value = this.volume;\n\n        this.createSource();\n        this.phase = 'decay'; // -> naming of phases is not completely correct, we skip attack\n        this.route();\n\n        if (legacy === true) {\n            this.source.start = this.source.noteOn;\n            this.source.stop = this.source.noteOff;\n        }\n\n        try {\n            // if(event.offset !== undefined){\n            //     console.log(event.offset);\n            // }\n            this.source.start(event.time, event.offset || 0, event.duration || this.duration);\n            //alert(event.offset + ':' + event.duration);\n            //this.source.start(event.time, 0, 0);\n            //this.source.start(event.time);\n            //console.log('start', event.time, event.offset, event.duration, sequencer.getTime());\n            //console.log('start', time, sequencer.getTime());\n        } catch (e) {\n            console.warn(e);\n        }\n    };\n\n\n    // called on a NOTE OFF event\n    Sample.prototype.stop = function (seconds, cb) {\n        //console.log('NOTE OFF', cb);\n        //console.log('NOTE OFF', this.source);\n        //console.log('NOTE OFF', this.release);\n        if (this.source === undefined) {\n            if (sequencer.debug) {\n                console.log('Sample.stop() source is undefined');\n            }\n            return;\n        }\n\n        // this happens when midi events are sent live from a midi device\n        if (seconds === 0 || seconds === undefined) {\n            //console.log('seconds is undefined!');\n            seconds = sequencer.getTime();\n        }\n        this.stopCallback = cb || function () { };\n\n        if (this.release) {\n            this.source.loop = false;\n            this.startReleasePhase = seconds;\n            this.stopTime = seconds + this.releaseDuration;\n            //console.log(this.stopTime, seconds, this.releaseDuration);\n        } else {\n            stopSample(this, seconds);\n        }\n    };\n\n\n    Sample.prototype.unschedule = function (when, cb) {\n        var now = context.currentTime,\n            sample = this,\n            fadeOut = when === null ? 100 : when;//milliseconds\n\n        this.source.onended = undefined;\n        // Comment this out, see fix by Nicolar Lair below:\n        // this.output.gain.cancelScheduledValues(now);\n\n        //console.log(this.volume, now);\n        //this.output.gain.linearRampToValueAtTime(this.volume, now);\n\n        try {\n            // Fix by Nicolar Lair:\n            /*\n              A DOM Exception occurs when a fade out is called while the sound is playing / planned to play\n              until a later value in time:\n              \"Failed to execute 'linearRampToValueAtTime' on 'AudioParam': linearRampToValueAtTime()\n              overlaps setValueCurveAt()\"\n            */\n            this.output.gain.cancelScheduledValues(0);\n            this.output.gain.linearRampToValueAtTime(0, now + fadeOut / 1000); // fade out in seconds\n\n            if (fadeOut === 0) {\n                if (sample.source !== undefined) {\n                    sample.source.disconnect(0);\n                    sample.source = undefined;\n                    if (typeof cb === 'function') {\n                        cb(sample);\n                    }\n                }\n            } else {\n                timedTasks['unschedule_' + this.id] = {\n                    time: now + fadeOut / 1000,\n                    execute: function () {\n                        if (!sample) {\n                            console.log('sample is gone');\n                            return;\n                        }\n                        if (sample.panner) {\n                            sample.panner.node.disconnect(0);\n                        }\n                        if (sample.source !== undefined) {\n                            sample.source.disconnect(0);\n                            sample.source = undefined;\n                        }\n                        if (cb) {\n                            cb(sample);\n                        }\n                    }\n                };\n            }\n        } catch (e) {\n            // firefox gives sometimes an error \"SyntaxError: An invalid or illegal string was specified\"\n            console.log(e);\n        }\n\n    };\n\n\n    // called every frame\n    Sample.prototype.update = function (value) {\n        var doLog = this.track.name === 'Sonata # 3' && this.track.song.bar >= 6 && this.track.song.bar <= 10;\n        //var doLog = true;\n        //console.log('update', this.phase);\n        if (this.autopan) {\n            this.panner.setPosition(value);\n        }\n\n        if (this.startReleasePhase !== undefined && context.currentTime >= this.startReleasePhase && this.phase === 'decay') {\n            if (doLog === true) {\n                console.log(this.phase, '-> release', this.releaseDuration);\n            }\n            this.phase = 'release';\n            fadeOut(this);\n        } else if (this.stopTime !== undefined && context.currentTime >= this.stopTime && this.phase === 'release') {\n            if (doLog === true) {\n                console.log(this.phase, '-> stopped', this.stopTime, context.currentTime);\n            }\n            this.phase = 'stopped';\n            stopSample(this);\n        }\n    };\n\n\n    sequencer.createSample = function (config) {\n        var debug = false;\n        //return new Sample(config);\n        //console.log(config.release_duration);\n        if (debug) console.log(config);\n\n        if (config.oscillator) {\n            if (debug) console.log('synth');\n            return new SampleSynth(config);\n\n        } else if (config.sustain && config.release && config.panning) {\n            if (debug) console.log('sustain, release, panning');\n            return new SampleSustainReleasePanning(config);\n\n        } else if (config.release && config.panning) {\n            if (debug) console.log('release, panning');\n            return new SampleReleasePanning(config);\n\n        } else if (config.release && config.sustain) {\n            if (debug) console.log('release, sustain');\n            return new SampleSustainRelease(config);\n\n        } else if (config.release) {\n            if (debug) console.log('release');\n            return new SampleRelease(config);\n\n        } else {\n            if (debug) console.log('simple');\n            return new Sample(config);\n        }\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        var createClass = sequencer.protectedScope.createClass;\n\n        context = sequencer.protectedScope.context;\n        timedTasks = sequencer.protectedScope.timedTasks;\n        getEqualPowerCurve = sequencer.util.getEqualPowerCurve;\n        legacy = sequencer.legacy;\n        getSampleId = sequencer.protectedScope.getSampleId;\n        typeString = sequencer.protectedScope.typeString;\n        createPanner = sequencer.createPanner;\n\n\n        SampleRelease = createClass(Sample, function (config) {\n            this.release = true;\n\n            this.releaseDuration = config.release_duration / 1000;\n            this.releaseEnvelope = config.release_envelope;\n            //console.log(this.releaseDuration, this.releaseEnvelope);\n        });\n\n\n        SampleSustainRelease = createClass(Sample, function (config) {\n            this.release = true;\n\n            this.sustainStart = config.sustain_start / 1000;\n            this.sustainEnd = config.sustain_end / 1000;\n            this.releaseDuration = config.release_duration / 1000;\n            this.releaseEnvelope = config.release_envelope;\n            if (this.releaseEnvelope === undefined) {\n                this.releaseEnvelope = 'equal power';\n            } else if (typeString(this.releaseEnvelope) === 'array') {\n                this.releaseEnvelopeArray = config.release_envelope_array;\n                this.releaseEnvelope = 'array';\n            }\n        });\n\n        SampleSustainRelease.prototype.route = function () {\n            this.source.loop = true;\n            this.source.loopStart = this.sustainStart;\n            this.source.loopEnd = this.sustainEnd;\n            this.source.connect(this.output);\n            //console.log(this.sustainStart, this.sustainEnd);\n        };\n\n\n        SampleReleasePanning = createClass(Sample, function (config) {\n            this.release = true;\n\n            this.releaseDuration = config.release_duration / 1000;\n            this.releaseEnvelope = config.release_envelope;\n            if (this.releaseEnvelope === undefined) {\n                this.releaseEnvelope = 'equal power';\n            } else if (typeString(this.releaseEnvelope) === 'array') {\n                this.releaseEnvelopeArray = config.release_envelope_array;\n                this.releaseEnvelope = 'array';\n            }\n            this.panPosition = config.panPosition;\n        });\n\n\n        SampleReleasePanning.prototype.route = function () {\n            //console.log(this.panning);\n            this.panner = createPanner();\n            this.panner.setPosition(this.panPosition || 0);\n            this.source.connect(this.panner.node);\n            this.panner.node.connect(this.output);\n        };\n\n        SampleSustainReleasePanning = createClass(Sample, function (config) {\n            this.release = true;\n\n            this.sustainStart = config.sustain_start / 1000;\n            this.sustainEnd = config.sustain_end / 1000;\n            this.releaseDuration = config.release_duration / 1000;\n            this.releaseEnvelope = config.release_envelope;\n            if (this.releaseEnvelope === undefined) {\n                this.releaseEnvelope = 'equal power';\n            } else if (typeString(this.releaseEnvelope) === 'array') {\n                this.releaseEnvelopeArray = config.release_envelope_array;\n                this.releaseEnvelope = 'array';\n            }\n            this.panPosition = config.panPosition;\n        });\n\n\n        SampleSustainReleasePanning.prototype.route = function () {\n            this.source.loop = true;\n            this.source.loopStart = this.sustainStart;\n            this.source.loopEnd = this.sustainEnd;\n\n            this.panner = createPanner();\n            this.panner.setPosition(this.panPosition || 0);\n            this.source.connect(this.panner.node);\n            this.panner.node.connect(this.output);\n        };\n\n\n        SampleSynth = createClass(Sample, function (config) {\n            this.release = true;\n            this.panPosition = 0;\n            this.autopan = config.autopan || false;\n            this.frequency = config.event.frequency;\n            this.waveForm = config.wave_form || 0;//'sine';\n            this.releaseDuration = config.release_duration / 1000 || 1.5;\n            this.releaseEnvelope = config.release_envelope || 'equal power';\n            //console.log(config);\n        });\n\n        SampleSynth.prototype.createSource = function () {\n            this.source = context.createOscillator();\n            this.source.type = this.waveForm;\n            this.source.frequency.value = this.frequency;\n        };\n\n        SampleSynth.prototype.route = function () {\n            //create some headroom for multi-timbrality\n            this.volume *= 0.3;\n            this.output.gain.value = this.volume;\n\n            if (this.autopan) {\n                this.panner = createPanner();\n                this.panner.setPosition(0);\n                this.source.connect(this.panner.node);\n                this.panner.node.connect(this.output);\n            } else {\n                //alert(this.source + ':' + this.output.gain.value);\n                this.source.connect(this.output);\n            }\n        };\n/*\n        SampleSynth.prototype.createSource = function(){\n            this.autoPanner = context.createOscillator();\n            this.autoPanner.type = 0;\n            this.autoPanner.frequency.value = 50;\n\n\n            var tmp = context.createScriptProcessor(256,1,1);\n            tmp.onaudioprocess = function(e){\n                console.log(e.inputBuffer.getChannelData(0)[0]);\n            };\n            this.autoPanner.connect(tmp);\n            tmp.connect(context.destination);\n\n            this.source = context.createOscillator();\n            this.source.type = this.waveForm;\n            this.source.frequency.value = this.frequency;\n        };\n\n        SampleSynth.prototype.route = function(){\n            this.panner = createPanner();\n            this.panner.setPosition(0);\n            this.source.connect(this.panner.node);\n            this.panner.node.connect(this.output);\n            this.autoPanner.start();\n\n            //create some headroom for multi-timbrality\n            this.volume *= 0.3;\n            this.output.gain.value = this.volume;\n        };\n*/\n    });\n}\nfunction samplePack() {\n\n    'use strict';\n\n    var\n        ajax, //defined in util.js\n        findItem, //defined in util.js\n        storeItem, //defined in util.js\n        deleteItem, //defined in util.js\n        typeString, //defined in util.js\n        parseUrl, //defined in util.js\n        base64ToBinary, // defined in util.js\n        context, //defined in open_module.js\n        storage, //defined in open_module.js\n\n        parseTime,\n\n        folder,\n        sampleId,\n        index = 0,\n        SamplePack;\n\n\n    function parse(samplepack, config) {\n        var i, mapping = config.mapping, url, path, name, ext, slash, dot, data,\n            remotePath,\n            sampleData,\n            extension;\n\n        samplepack.samples = [];\n        samplepack.samplesById = {};\n\n        remotePath = config.remote_path;\n        remotePath = remotePath === undefined ? false : remotePath;\n\n        //console.log(samplepack.folder, samplepack.name);\n        //console.log(samplepack, config);\n\n        for (i in mapping) {\n            if (mapping.hasOwnProperty(i)) {\n                sampleData = {\n                    id: i,\n                    folder: samplepack.folder + '/' + samplepack.name,\n                };\n\n                //@TODO: this is not correct! A remote_path is not mandatory for a sample pack with urls!\n                if (remotePath !== false) {\n                    url = mapping[i];\n                    if (url.indexOf('http://') === 0 || url.indexOf('https://') === 0) {\n                        sampleData.url = url;\n                    } else {\n                        name = url;\n                        // check if the url has a path and/or an extension\n                        slash = url.lastIndexOf('/');\n                        if (slash !== -1) {\n                            name = url.substring(slash + 1);\n                        }\n                        path = url.substring(0, slash);\n                        dot = url.lastIndexOf('.');\n                        extension = config.extension;\n                        if (dot !== -1) {\n                            ext = url.substring(dot + 1);\n                            if (ext.length >= 3 && ext.length <= 4) {\n                                extension = ext;\n                                name = url.substring(slash, dot);\n                            }\n                        }\n                        //console.log('u', url, 'r',remotePath, 'p', path, 'n', name, 'e', extension);\n                        url = remotePath + '/' + path + '/' + name + '.' + extension;\n                        url = url.replace(/\\/{2,}/g, '/');\n                        url = url.replace(/^\\//, '');\n                        url = url.replace(/$\\//, '');\n                        sampleData.url = url;\n                    }\n                    //console.log('loading sample from:', sampleData.url);\n                } else {\n                    data = mapping[i];\n                    if (data.d !== undefined) {\n                        sampleData.base64 = mapping[i].d;\n                        // get the sustain loop start and end\n                        if (data.s !== undefined) {\n                            sampleData.sustain = data.s;\n                        }\n                        // get the sample specific release duration and envelope, or reference to group release duration\n                        if (data.r !== undefined) {\n                            sampleData.release = data.r;\n                        }\n                    } else {\n                        sampleData.base64 = mapping[i];\n                    }\n                    // store sample data by id so the instrument can easily retreive the loop information per sample\n                    samplepack.samplesById[i] = sampleData;\n                    //console.log(sampleData)\n                }\n                samplepack.samples.push(sampleData);\n            }\n        }\n    }\n\n\n    function loadLoop(pack, callback) {\n        //console.log('load sample pack', pack.name);\n        loadSamples(pack.samples, function (buffer) {\n            //console.log('kheb er een ferig', buffer);\n        }, function () {\n            pack.loaded = true;\n            pack.parseTime = parseTime;\n            if (sequencer.debug >= 2) {\n                console.info('parsing', pack.name, 'took', parseTime * 1000, 'ms');\n            }\n            //console.log(pack.localPath, pack.loaded);\n            if (callback) {\n                callback(true);\n            }\n        });\n    }\n\n\n    function cleanup(samplepack, callback) {\n        samplepack.reset();\n        samplepack = undefined;\n        callback(false);\n    }\n\n\n    function store(samplepack) {\n        var occupied = findItem(samplepack.localPath, sequencer.storage.samplepacks, true),\n            action = samplepack.action,\n            i, samples, sample;\n\n\n        //console.log(action, occupied);\n\n        if (occupied && occupied.className === 'SamplePack') {\n            if (action === 'overwrite') {\n                samples = occupied.samples;\n                for (i = samples.length - 1; i >= 0; i--) {\n                    sample = samples[i];\n                    deleteItem(sample.name + '/' + sample.folder, sequencer.storage.audio);\n                }\n            } else if (action === 'append') {\n                samples = occupied.samples;\n                for (i = samples.length - 1; i >= 0; i--) {\n                    samplepack.samples.push(samples[i]);\n                }\n            } else {\n                if (sequencer.debug >= 2) {\n                    console.warn('there is already a samplepack at', samplepack.localPath);\n                }\n                return false;\n            }\n        }\n\n        storeItem(samplepack, samplepack.localPath, sequencer.storage.samplepacks);\n        return true;\n    }\n\n\n    function load(pack, callback) {\n        // check if sample pack file needs to be loaded first\n        if (pack.hasMapping !== true) {\n            ajax({\n                url: pack.url,\n                responseType: 'json',\n                onError: function () {\n                    cleanup(pack, callback);\n                },\n                onSuccess: function (data) {\n                    // if the json data is corrupt (for instance because of a trailing comma) data will be null\n                    if (data === null) {\n                        callback(false);\n                        return;\n                    }\n\n                    if (data.mapping === undefined) {\n                        if (sequencer.debug >= 2) {\n                            console.warn('can\\'t create a SamplePack with this data', data);\n                        }\n                        cleanup(pack, callback);\n                        return;\n                    }\n                    if (data.name !== undefined && pack.name === undefined) {\n                        pack.name = data.name;\n                    }\n\n                    if (data.folder !== undefined && pack.folder === undefined) {\n                        pack.folder = data.folder;\n                    }\n\n                    if (pack.name === undefined) {\n                        pack.name = parseUrl(pack.url).name;\n                    }\n\n                    pack.action = data.action;\n                    pack.localPath = pack.folder !== undefined ? pack.folder + '/' + pack.name : pack.name;\n\n                    if (store(pack) === true) {\n                        parse(pack, data);\n                        loadLoop(pack, callback);\n                    } else {\n                        callback(false);\n                    }\n                }\n            });\n        } else {\n            if (store(pack) === true) {\n                loadLoop(pack, callback);\n            } else {\n                //console.log(callback);\n                callback(false);\n            }\n        }\n    }\n\n\n\n    // private\n    function loadSamples(samples, callback1, callback2) {\n        var i = 0,\n            numSamples = samples.length,\n            sample = samples[i];\n\n        function loaded(buffer) {\n            //console.log('store item', folder + '/' + sampleId);\n            // sample.buffer = buffer;\n            // storeItem(sample, folder + '/' + sampleId, storage.audio);\n            storeItem(buffer, folder + '/' + sampleId, storage.audio);\n            if (callback1) {\n                callback1(buffer);\n            }\n            i++;\n            if (i < numSamples) {\n                sample = samples[i];\n                loadSample(sample, loaded);\n            } else {\n                callback2();\n            }\n        }\n        loadSample(sample, loaded);\n    }\n\n\n    // private\n    function loadSample(data, callback) {\n        var sample,\n            url = data.url,\n            base64 = data.base64;\n\n        sampleId = data.id;\n        folder = data.folder;\n        sample = findItem(folder + '/' + sampleId, storage.audio, true);\n\n        //console.log('load sample', sample, folder, sampleId, callback.name);\n        //console.log(url);\n\n        if (sample !== false) {\n            // sample has already been loaded\n            callback(sample);\n        } else if (base64) {\n            // sample is stored as base64 data\n            //console.log(data.id, sample)\n            //sample = atob(base64);\n            //console.log(base64.substring(0,10));\n            if (base64 !== 'TWAAAP') {\n                sample = base64ToBinary(base64);\n                parseAudioData(sample, callback);\n            } else {\n                callback(sample);\n            }\n            data.base64 = '';\n        } else if (url) {\n            // sample needs to be loaded from the server\n            ajax({\n                url: url,\n                responseType: 'arraybuffer',\n                onError: function () {\n                    callback();\n                },\n                onSuccess: function (buffer) {\n                    //console.log(sampleId, buffer);\n                    parseAudioData(buffer, callback);\n                }\n            });\n        } else {\n            console.error('could not load sample', folder + '/' + sampleId);\n            //callback();\n        }\n    }\n\n    // private\n    function parseAudioData(audiodata, callback) {\n        //console.log(audiodata, typeString(audiodata), audiodata.byteLength, ArrayBuffer.isView(audiodata));\n        var ts = sequencer.getTime();\n        //console.log(ts);\n        if (audiodata !== null) {\n            try {\n                context.decodeAudioData(audiodata, function (buffer) {\n                    //console.log(buffer);\n                    parseTime += (sequencer.getTime() - ts);\n                    callback(buffer);\n                }, function (e) {\n                    console.log('error decoding audiodata', sampleId, e);\n                    callback();\n                });\n            } catch (e) {\n                console.log(sampleId, e);\n                callback();\n            }\n        }\n    }\n\n\n    SamplePack = function (config) {\n        this.id = 'SP' + index++ + new Date().getTime();\n        this.className = 'SamplePack';\n\n        this.loaded = false;\n        this.loadTime = 0;\n        this.parseTime = parseTime = 0;\n\n        this.url = config.url;\n        this.name = config.name;\n        this.folder = config.folder;\n\n        this.info = config.info || config.samplepack_info;\n        this.author = config.author || config.samplepack_author;\n        this.license = config.license || config.samplepack_license;\n        this.compression = config.compression || config.samplepack_compression;\n        if (this.compression === undefined) {\n            if (config.compression_type !== undefined) {\n                this.compression = config.compression_type + ' ' + config.compression_level;\n            }\n        }\n        this.pack = config.pack;\n        this.filesize = config.filesize;\n\n        if (this.filesize === undefined && this.pack !== undefined) {\n            this.filesize = this.pack.filesize;\n            //console.log(this.filesize);\n        }\n\n\n        if (config.mapping) {\n            if (this.name === undefined && this.folder === undefined) {\n                this.name = this.id;\n                this.localPath = this.id;\n            } else {\n                this.localPath = this.folder !== undefined ? this.folder + '/' + this.name : this.name;\n            }\n            // set hasMapping to \"true\" so we know that we don't have to load json data from the server\n            this.hasMapping = true;\n            this.action = config.action;\n            parse(this, config);\n        } else if (config.url) {\n            this.url = config.url;\n            //console.log(this.url);\n        }\n    };\n\n\n    SamplePack.prototype.reset = function () {\n        this.samples = [];\n    };\n\n\n    sequencer.addSamplePack = function (config, callback, callbackAfterAllTasksAreDone) {\n        var type = typeString(config),\n            samplepack, json, name, folder;\n\n        callbackAfterAllTasksAreDone = callbackAfterAllTasksAreDone === undefined ? false : callbackAfterAllTasksAreDone;\n\n        //console.log(config);\n\n        if (type !== 'object') {\n            if (sequencer.debug >= 2) {\n                console.warn('can\\'t create a SamplePack with this data', config);\n            }\n            return false;\n        }\n\n        if (config.json) {\n            json = config.json;\n            name = config.name;\n            folder = config.folder;\n            if (typeString(json) === 'string') {\n                try {\n                    json = JSON.parse(json);\n                } catch (e) {\n                    if (sequencer.debug >= 2) {\n                        console.warn('can\\'t create a SamplePack with this data', config);\n                    }\n                    return false;\n                }\n            }\n            if (json.mapping === undefined) {\n                if (sequencer.debug >= 2) {\n                    console.warn('can\\'t create a SamplePack with this data', config);\n                }\n                return false;\n            }\n            config = {\n                mapping: json.mapping,\n                name: name === undefined ? json.name : name,\n                folder: folder === undefined ? json.folder : folder\n            };\n            //console.log('config', name, folder, json.name, json.folder);\n        }\n\n\n        samplepack = new SamplePack(config);\n        //console.log(samplepack.filesize);\n\n        sequencer.addTask({\n            type: 'load sample pack',\n            method: load,\n            params: samplepack\n        }, function (value) {\n            //console.log(samplepack, value);\n            if (callback) {\n                if (value === false) {\n                    samplepack = null;\n                    callback(null);\n                } else {\n                    callback(samplepack);\n                }\n            }\n        }, callbackAfterAllTasksAreDone);\n\n        sequencer.startTaskQueue();\n\n        /*\n                load(samplepack, function(){\n                    //console.log(samplepack);\n                    store(samplepack);\n                    if(callback){\n                        callback(samplepack);\n                    }\n                });\n        */\n    };\n\n    sequencer.protectedScope.addInitMethod(function () {\n        storage = sequencer.storage;\n        ajax = sequencer.protectedScope.ajax;\n        context = sequencer.protectedScope.context;\n        findItem = sequencer.protectedScope.findItem;\n        parseUrl = sequencer.protectedScope.parseUrl;\n        storeItem = sequencer.protectedScope.storeItem;\n        deleteItem = sequencer.protectedScope.deleteItem;\n        typeString = sequencer.protectedScope.typeString;\n        base64ToBinary = sequencer.protectedScope.base64ToBinary;\n    });\n\n}function scheduler() {\n\n  'use strict';\n\n  var\n    typeString, // defined in util.js\n    objectForEach, // defined in util.js\n    context,\n    getTimeDiff,\n\n    // the amount of time in millis that events are scheduled ahead relative to the current playhead position, defined in open_module.js\n    //bufferTime = sequencer.bufferTime * 1000,\n\n    Scheduler;\n\n\n  Scheduler = function (song) {\n    this.song = song;\n    this.looped = false;\n    this.notes = {};\n    this.audioEvents = {};\n    this.timeDiff = getTimeDiff();\n  };\n\n\n  Scheduler.prototype.updateSong = function () {\n    this.events = this.song.eventsMidiAudioMetronome;\n    this.numEvents = this.events.length;\n    this.index = 0;\n    this.maxtime = 0;\n    this.notes = {};\n    this.audioEvents = this.song.audioEvents;\n    this.numAudioEvents = this.audioEvents.length;\n    this.scheduledAudioEvents = {};\n    this.looped = false;\n    this.setIndex(this.song.millis);\n    //console.log('Scheduler.setIndex', this.index, this.numEvents);\n  };\n\n\n  Scheduler.prototype.setIndex = function (millis) {\n    var i;\n    for (i = 0; i < this.numEvents; i++) {\n      if (this.events[i].millis >= millis) {\n        this.index = i;\n        break;\n      }\n    }\n    //console.log(millis);\n    this.beyondLoop = false;\n    if (millis > this.song.loopEnd) {\n      this.beyondLoop = true;\n    }\n\n    this.scheduledAudioEvents = {};\n  };\n\n  /*\n      A dangling audio event start before, and ends after the current position of the playhead. We have to calculate the difference between\n      the start of the sample (event.millis) and the position of the playhead (song.millis). This value is the playheadOffset, and the sample\n      starts the number of seconds of the playheadOffset into the sample.\n\n      Also the audio event is scheduled the number of milliseconds of the playhead later to keep it in sync with the rest of the song.\n\n      The playheadOffset is applied to the audio sample in audio_track.js\n  */\n  Scheduler.prototype.getDanglingAudioEvents = function (millis, events) {\n    var i, event, num = 0;\n\n    for (i = 0; i < this.numAudioEvents; i++) {\n      event = this.audioEvents[i];\n      if (event.millis < millis && event.endMillis > millis) {\n        event.playheadOffset = (millis - event.millis);\n        event.time = this.startTime + event.millis - this.songStartMillis + event.playheadOffset;\n        event.playheadOffset /= 1000;\n        this.scheduledAudioEvents[event.id] = event;\n        //console.log('getDanglingAudioEvents', event.id);\n        events.push(event);\n        num++;\n      } else {\n        event.playheadOffset = 0;\n      }\n      //console.log('playheadOffset', event.playheadOffset);\n    }\n    //console.log('getDanglingAudioEvents', num);\n    return events;\n  };\n\n\n  Scheduler.prototype.getEvents = function () {\n    var i, event, events = [], note, noteOn, noteOff, endMillis, endTicks, diff, buffertime, audioEvent;\n\n    buffertime = sequencer.bufferTime * 1000;\n    if (this.song.doLoop === true && this.song.loopDuration < buffertime) {\n      this.maxtime = this.songMillis + this.song.loopDuration - 1;\n      //console.log(maxtime, this.song.loopDuration);\n    }\n\n    if (this.song.doLoop === true) {\n\n      if (this.maxtime >= this.song.loopEnd && this.beyondLoop === false) {\n        //if(this.maxtime >= this.song.loopEnd && this.prevMaxtime < this.song.loopEnd){\n        //if(this.maxtime >= this.song.loopEnd && this.song.jump !== true){\n\n        diff = this.maxtime - this.song.loopEnd;\n        this.maxtime = this.song.loopStart + diff;\n\n        //console.log(maxtime, this.song.loopEnd, diff);\n        if (this.looped === false) {\n          //console.log(this.song.millis, maxtime, diff);\n          this.looped = true;\n          //console.log('LOOP', this.song.loopEnd, this.maxtime);\n          for (i = this.index; i < this.numEvents; i++) {\n            event = this.events[i];\n            if (event.millis < this.song.loopEnd) {\n              //console.log('  ', event.track.name, maxtime, this.index, this.numEvents);\n              event.time = this.startTime + event.millis - this.songStartMillis;\n              events.push(event);\n              this.index++;\n            } else {\n              break;\n            }\n          }\n\n          // stop overflowing notes-> move the note off event to the position of the right locator (end of the loop)\n          endTicks = this.song.loopEndTicks - 1;\n          endMillis = this.song.getPosition('ticks', endTicks).millis;\n          for (i in this.notes) {\n            if (this.notes.hasOwnProperty(i)) {\n              note = this.notes[i];\n              noteOn = note.noteOn;\n              noteOff = note.noteOff;\n              if (noteOff.millis <= this.song.loopEnd) {\n                continue;\n              }\n              event = sequencer.createMidiEvent(endTicks, 128, noteOn.data1, 0);\n              event.millis = endMillis;\n              event.part = noteOn.part;\n              event.track = noteOn.track;\n              event.midiNote = noteOn.midiNote;\n              event.time = this.startTime + event.millis - this.songStartMillis;\n              events.push(event);\n            }\n          }\n          // stop overflowing audio samples\n          for (i in this.scheduledAudioEvents) {\n            if (this.scheduledAudioEvents.hasOwnProperty(i)) {\n              audioEvent = this.scheduledAudioEvents[i];\n              if (audioEvent.endMillis > this.song.loopEnd) {\n                audioEvent.stopSample(this.song.loopEnd / 1000);\n                delete this.scheduledAudioEvents[i];\n                //console.log('stopping audio event', i);\n              }\n            }\n          }\n          this.notes = {};\n          this.setIndex(this.song.loopStart);\n          this.song.startTime += this.song.loopDuration;\n          this.startTime = this.song.startTime;\n          // get the audio events that start before song.loopStart\n          this.getDanglingAudioEvents(this.song.loopStart, events);\n        }\n      } else {\n        this.looped = false;\n      }\n    }\n\n    if (this.firstRun === true) {\n      this.getDanglingAudioEvents(this.song.millis, events);\n      this.firstRun = false;\n    }\n\n    for (i = this.index; i < this.numEvents; i++) {\n      event = this.events[i];\n\n      if (event.millis < this.maxtime) {\n        // if(this.song.bar >= 6 && event.track.name === 'Sonata # 3'){\n        //     console.log('  song:', this.song.millis, 'event:', event.millis, ('(' + event.type + ')'), 'max:', maxtime, 'id:', event.midiNote.id);\n        // }\n        event.time = this.startTime + event.millis - this.songStartMillis;\n\n        if (event.type === 144 || event.type === 128) {\n          if (event.midiNote !== undefined && event.midiNote.noteOff !== undefined) {\n            if (event.type === 144) {\n              this.notes[event.midiNote.id] = event.midiNote;\n            } else if (event.type === 128) {\n              delete this.notes[event.midiNote.id];\n            }\n            events.push(event);\n          }\n        } else if (event.type === 'audio') {\n          if (this.scheduledAudioEvents[event.id] !== undefined) {\n            // @TODO: delete the entry in this.scheduledAudioEvents after the sample has finished\n            // -> this happens when you move the playhead outside a loop if doLoop is true\n            //console.log('this shouldn\\'t happen!');\n            //continue;\n            audioEvent = this.scheduledAudioEvents[event.id];\n            if (audioEvent.sample !== undefined && audioEvent.sample.source !== undefined) {\n              audioEvent.stopSample(0);\n              // }else{\n              //     continue;\n            }\n          }\n          this.scheduledAudioEvents[event.id] = event;\n          //console.log('scheduling', event.id);\n          // the scheduling time has to be compensated with the playheadOffset (in millis)\n          event.time = event.time + (event.playheadOffset * 1000);\n          events.push(event);\n        } else {\n          // controller events\n          events.push(event);\n        }\n        this.index++;\n      } else {\n        break;\n      }\n    }\n    // const f = events.filter(e => e.type === 144).map(e => e.time);\n    // if (f.length > 0) {\n    //     console.log(Math.round(context.currentTime * 1000000) / 1000);\n    //     console.log(f);\n    //     console.log('---');\n    // }\n    return events;\n  };\n\n\n  Scheduler.prototype.update = function () {\n    var i,\n      event,\n      numEvents,\n      events,\n      track,\n      channel,\n      // timeDiff = this.timeDiff;\n      timeDiff = getTimeDiff();\n\n    this.prevMaxtime = this.maxtime;\n\n    if (this.song.precounting === true) {\n      this.songMillis = this.song.metronome.millis;\n      this.maxtime = this.songMillis + (sequencer.bufferTime * 1000);\n      events = [].concat(this.song.metronome.getPrecountEvents(this.maxtime));\n\n      if (this.maxtime > this.song.metronome.endMillis) {\n        // start scheduling events of the song -> add the first events of the song\n        this.songMillis = 0;//this.song.millis;\n        this.maxtime = this.song.millis + (sequencer.bufferTime * 1000);\n        this.startTime = this.song.startTime;\n        this.songStartMillis = this.song.startMillis;\n        events = this.getEvents();\n      }\n    } else {\n      this.songMillis = this.song.millis;\n      this.maxtime = this.songMillis + (sequencer.bufferTime * 1000);\n      this.startTime = this.song.startTime;\n      this.songStartMillis = this.song.startMillis;\n      events = this.getEvents();\n    }\n\n    numEvents = events.length;\n\n    //for(i = events.length - 1; i >= 0; i--){\n    for (i = 0; i < numEvents; i++) {\n      event = events[i];\n      track = event.track;\n      // if(event.muted) {\n      //     console.log(event.ticks, event.noteNumber);\n      // }\n      if (\n        track === undefined ||\n        event.muted === true ||\n        event.part.mute === true ||\n        event.track.mute === true ||\n        (event.track.type === 'metronome' && this.song.useMetronome === false)\n      ) {\n        continue;\n      }\n\n\n      if (event.type === 'audio') {\n        event.time /= 1000;\n        track.audio.processEvent(event);\n      } else {\n\n        if (track.routeToMidiOut === false) {\n          // if(event.type === 144){\n          //     console.log(event.time/1000, sequencer.getTime(), event.time/1000 - sequencer.getTime());\n          // }\n          event.time /= 1000;\n          //console.log('scheduled', event.type, event.time, event.midiNote.id);\n          //console.log(track.instrument.processEvent);\n          track.instrument.processEvent(event);\n        } else {\n          channel = track.channel;\n          if (channel === 'any' || channel === undefined || isNaN(channel) === true) {\n            channel = 0;\n          }\n          objectForEach(track.midiOutputs, function (midiOutput) {\n            if (event.type === 128 || event.type === 144 || event.type === 176) {\n              // midiOutput.send([event.type, event.data1, event.data2], event.time + sequencer.midiOutLatency);\n              // console.log(context.currentTime, performance.now(), timeDiff, event.time + track.audioLatency);\n              let vel = event.data2;\n              if (event.type === 128 || event.type === 144) {\n                vel *= track.volume;\n              }\n              midiOutput.send([event.type + channel, event.data1, vel], event.time + track.audioLatency + timeDiff);\n              // console.log('TIMEDIFF', timeDiff);\n            } else if (event.type === 192 || event.type === 224) {\n              midiOutput.send([event.type + channel, event.data1], event.time + track.audioLatency);\n            }\n          });\n          // needed for Song.resetExternalMidiDevices()\n          this.lastEventTime = event.time;\n        }\n      }\n    }\n  };\n\n\n  function loop(data, i, maxi, events) {\n    var arg;\n    for (i = 0; i < maxi; i++) {\n      arg = data[i];\n      if (arg === undefined) {\n        continue;\n      } else if (arg.className === 'MidiEvent') {\n        events.push(arg);\n      } else if (arg.className === 'MidiNote') {\n        events.push(arg.noteOn);\n      } else if (typeString(arg) === 'array') {\n        loop(arg, 0, arg.length);\n      }\n    }\n  }\n\n\n  Scheduler.prototype.unschedule = function () {\n    var args = Array.prototype.slice.call(arguments),\n      events = [],\n      i, e, track, instrument;\n\n    loop(args, 0, args.length, events);\n\n    for (i = events.length - 1; i >= 0; i--) {\n      e = events[i];\n      track = e.track;\n      instrument = track.instrument;\n      if (instrument) {\n        instrument.unscheduleEvent(e);\n      }\n    }\n  };\n\n\n  Scheduler.prototype.reschedule = function () {\n    var i, track,\n      numTracks = this.song.numTracks,\n      tracks = this.song.tracks;\n\n    for (i = 0; i < numTracks; i++) {\n      track = tracks[i];\n      track.instrument.reschedule(this.song);\n    }\n  };\n\n  sequencer.protectedScope.addInitMethod(function () {\n    getTimeDiff = sequencer.getTimeDiff;\n    context = sequencer.protectedScope.context;\n    typeString = sequencer.protectedScope.typeString;\n    objectForEach = sequencer.protectedScope.objectForEach;\n  });\n\n\n  sequencer.protectedScope.createScheduler = function (song) {\n    return new Scheduler(song);\n  };\n\n}function createSequencer() {\n\n    'use strict';\n\n    var\n        slice = Array.prototype.slice,\n\n        //import\n        typeString, // defined in util.js\n        isEmptyObject, // defined in util.js\n        objectToArray, // defined in util.js\n        objectForEach, // defined in util.js\n        createMidiEvent, // defined in midi_event.js\n        context, // defined in open_module.js\n        timedTasks, // defined in open_module.js\n        scheduledTasks, // defined in open_module.js\n        repetitiveTasks, // defined in open_module.js\n        masterGainNode, // defined in open_module.js\n        parseTimeEvents, // defined in parse_time_events.js\n\n        r = 0,\n\n        heartbeat, // the heartbeat of the sequencer\n        lastTimeStamp,\n\n        processEventTracks = {},\n        events, // the events that are currently been processed\n\n        pausedSongs = [],\n        activeSongs = {},\n        snapshots = {};\n\n\n    function addSong(song) {\n        activeSongs[song.id] = song;\n    }\n\n\n    sequencer.getSongs = function () {\n        return activeSongs;\n    };\n\n\n    function removeProperties(obj) {\n        var i;\n        for (i in obj) {\n            if (obj.hasOwnProperty(i)) {\n                //console.log(i);\n                obj[i] = null;\n            }\n        }\n    }\n\n    sequencer.deleteSong = function (song) {\n        if (song === undefined || song === null || song.className !== 'Song') {\n            return;\n        }\n\n        // clean up\n        song.stop();\n        song.disconnect(masterGainNode);\n        //parseTimeEvents();\n\n        // remove reference\n        delete activeSongs[song.id];\n\n        var i, track,\n            j, part,\n            k, note, event;\n\n        //console.log(allEvents.length, song.events.length, metronome.events.length);\n        ///*\n        for (i = song.eventsMidiAudioMetronome.length - 1; i >= 0; i--) {\n            event = song.eventsMidiAudioMetronome[i];\n            removeProperties(event);\n        }\n\n        for (i = song.timeEvents.length - 1; i >= 0; i--) {\n            event = song.timeEvents[i];\n            //removeProperties(event);\n        }\n        //*/\n\n        for (i = song.numTracks - 1; i >= 0; i--) {\n\n            track = song.tracks[i];\n\n            if (track.audio !== undefined) {\n                track.audio.recorder.cleanup();\n            }\n\n            for (j = track.numParts - 1; j >= 0; j--) {\n                part = track.parts[j];\n\n                for (k = part.numNotes - 1; k >= 0; k--) {\n                    note = part.notes[k];\n                    removeProperties(note);\n                }\n\n                // for(k = part.numEvents - 1; k >= 0; k--){\n                //     event = part.events[k];\n                //     removeProperties(event);\n                // }\n\n                removeProperties(part);\n                part = null;\n            }\n            removeProperties(track);\n            track = null;\n        }\n        removeProperties(song);\n        song = null;\n        return null;\n    };\n\n\n    sequencer.getSnapshot = function (song, id) {\n\n        if (song === undefined) {\n            console.error('song is undefined');\n            return;\n        }\n\n        id = id || song.id;\n\n        var snapshot = snapshots[id],\n            activeEvents = song.activeEvents,\n            activeNotes = song.activeNotes,\n            activeParts = song.activeParts,\n            nonActiveEvents = [],\n            nonActiveNotes = [],\n            nonActiveParts = [],\n            prevActiveEvents,\n            prevActiveNotes,\n            prevActiveParts,\n            e, n, p, i;\n\n        if (snapshot !== undefined) {\n            prevActiveEvents = snapshot.activeEvents;\n            prevActiveNotes = snapshot.activeNotes;\n            prevActiveParts = snapshot.activeParts;\n\n            for (i = prevActiveEvents.length - 1; i >= 0; i--) {\n                e = prevActiveEvents[i];\n                if (activeEvents[e.id] === undefined) {\n                    if (song.eventsLib[e.id] !== undefined) {\n                        nonActiveEvents.push(e);\n                    }\n                }\n            }\n\n            for (i = prevActiveNotes.length - 1; i >= 0; i--) {\n                n = prevActiveNotes[i];\n                if (activeNotes[n.id] === undefined) {\n                    if (song.notesLib[n.id] !== undefined) {\n                        nonActiveNotes.push(n);\n                    }\n                }\n            }\n\n            for (i = prevActiveParts.length - 1; i >= 0; i--) {\n                p = prevActiveParts[i];\n                if (activeParts[p.id] === undefined) {\n                    nonActiveParts.push(p);\n                }\n            }\n        }\n\n        snapshot = {\n            activeEvents: objectToArray(activeEvents),\n            activeNotes: objectToArray(activeNotes),\n            activeParts: objectToArray(activeParts),\n            nonActiveEvents: nonActiveEvents,\n            nonActiveNotes: nonActiveNotes,\n            nonActiveParts: nonActiveParts\n        };\n\n        snapshots[id] = snapshot;\n\n        return snapshot;\n    };\n\n\n    heartbeat = function (timestamp) {\n        var i, diff, task, now = sequencer.getTime();\n\n        // if(isEmptyObject(timedTasks) === false){\n        //     console.log(timedTasks);\n        // }\n\n        // for instance: the callback of sample.unschedule;\n        for (i in timedTasks) {\n            if (timedTasks.hasOwnProperty(i)) {\n                task = timedTasks[i];\n                if (task.time >= now) {\n                    task.execute();\n                    task = null;\n                    delete timedTasks[i];\n                }\n            }\n        }\n\n\n        // for instance: song.update();\n        for (i in scheduledTasks) {\n            if (scheduledTasks.hasOwnProperty(i)) {\n                scheduledTasks[i]();\n            }\n        }\n\n        // for instance: song.pulse();\n        for (i in repetitiveTasks) {\n            if (repetitiveTasks.hasOwnProperty(i)) {\n                repetitiveTasks[i]();\n            }\n        }\n\n        // skip the first 10 frames because they tend to have weird intervals\n        if (r >= 10) {\n            diff = (timestamp - lastTimeStamp) / 1000;\n            sequencer.diff = diff;\n            // if(r < 40){\n            //     console.log(diff);\n            //     r++;\n            // }\n            if (diff > sequencer.bufferTime && sequencer.autoAdjustBufferTime === true) {\n                if (sequencer.debug) {\n                    console.log('adjusted buffertime:' + sequencer.bufferTime + ' -> ' + diff);\n                }\n                sequencer.bufferTime = diff;\n            }\n        } else {\n            r++;\n        }\n        lastTimeStamp = timestamp;\n        scheduledTasks = {};\n\n        //setTimeout(heartbeat, 100);\n        window.requestAnimationFrame(heartbeat);\n    };\n\n\n    sequencer.processEvent = sequencer.processEvents = function () {\n        var args = slice.call(arguments),\n            loop, arg, i, maxi, time, contextTime, event,\n            bpm = 60,\n            midiEvent, type,\n            instrument, part, track,\n            secondsPerTick;\n\n        events = [];\n\n        loop = function (data, i, maxi) {\n            for (i = 0; i < maxi; i++) {\n                arg = data[i];\n                type = typeString(arg);\n                if (arg === undefined) {\n                    //console.log(i, arg);\n                    continue;\n                } else if (type === 'midimessageevent') {\n                    data = arg.data;\n                    midiEvent = createMidiEvent(0, data[0], data[1], data[2]);\n                    events.push(midiEvent);\n                } else if (arg.className === 'MidiEvent') {\n                    events.push(arg);\n                } else if (type === 'array') {\n                    loop(arg, 0, arg.length);\n                } else if (type === 'string') {\n                    instrument = arg;\n                } else if (isNaN(arg) === false) {\n                    bpm = arg;\n                }\n            }\n        };\n\n        loop(args, 0, args.length);\n\n        part = sequencer.createPart();\n        track = sequencer.createTrack();\n        track.setInstrument(instrument);\n\n        if (processEventTracks[track.instrumentId] === undefined) {\n            processEventTracks[track.instrumentId] = track;\n            track.addPart(part);\n            track.connect(context.destination);\n        } else {\n            track = processEventTracks[track.instrumentId];\n            part = track.parts[0];\n        }\n\n        part.addEvents(events);\n        track.update();\n\n        maxi = events.length;\n        contextTime = sequencer.getTime();\n        secondsPerTick = 60 / bpm / sequencer.defaultPPQ;\n        for (i = 0; i < maxi; i++) {\n            event = events[i];\n            event.time = contextTime + (event.ticks * secondsPerTick) + (2 / 1000);//ms -> sec, add 2 ms prebuffer time\n            //time = contextTime + (event.ticks * secondsPerTick) + (2/1000);//ms -> sec, add 2 ms prebuffer time\n            //console.log(event.ticks, time, contextTime);\n            //track.instrument.processEvent(event, time);\n            track.instrument.processEvent(event);\n        }\n    };\n\n\n    sequencer.stopProcessEvent = sequencer.stopProcessEvents = function () {\n        objectForEach(processEventTracks, function (track) {\n            track.instrument.allNotesOff();\n            track = undefined;\n        });\n        processEventTracks = {};\n    };\n\n\n    sequencer.play = function () {\n        var args = slice.call(arguments),\n            events = [],\n            parts = [],\n            tracks = [],\n            songs = [],\n            timeEvents = [],\n            i, arg, loop, store = false,\n            song, track, part, bpm, nominator, denominator, instrument;\n\n        //console.log('sequencer.play()', args);\n\n        loop = function (data, i, maxi, indentation) {\n            for (i = 0; i < maxi; i++) {\n                arg = data[i];\n                if (arg === undefined) {\n                    //console.log(indentation, i, arg);\n                    continue;\n                } else if (typeString(arg) === 'string') {\n                    instrument = arg;\n                } else if (arg.className === 'Song') {\n                    if (bpm === undefined) {\n                        bpm = arg.bpm;\n                        nominator = arg.nominator;\n                        denominator = arg.denominator;\n                    }\n                    songs.push(arg);\n                } else if (arg.className === 'Track') {\n                    if (bpm === undefined) {\n                        song = arg.song;\n                        if (song !== undefined) {\n                            bpm = song.bpm;\n                            nominator = song.nominator;\n                            denominator = song.denominator;\n                        }\n                    }\n                    tracks.push(arg);\n                } else if (arg.className === 'Part') {\n                    if (bpm === undefined) {\n                        song = arg.song;\n                        if (song !== undefined) {\n                            bpm = song.bpm;\n                            nominator = song.nominator;\n                            denominator = song.denominator;\n                        }\n                    }\n                    parts.push(arg);\n                } else if (arg.className === 'MidiEvent' || arg.className === 'AudioEvent') {\n                    if (bpm === undefined) {\n                        part = arg.part;\n                        if (part !== undefined) {\n                            song = part.song;\n                            if (song !== undefined) {\n                                bpm = song.bpm;\n                                nominator = song.nominator;\n                                denominator = song.denominator;\n                            }\n                        }\n                    }\n                    if (arg.type === 0x51 || arg.type === 0x58) {\n                        timeEvents.push(arg);\n                    } else {\n                        events.push(arg);\n                    }\n                } else if (typeString(arg) === 'array') {\n                    //console.log('recursive loop')\n                    loop(arg, 0, arg.length, '    ');\n                } else if (arg === true || arg === false) {\n                    store = arg;\n                } else if (arg.indexOf('S') === 0) {\n                    // play song by id, not sure if this is useful\n                    song = activeSongs[arg];\n                    if (song) {\n                        song.play();\n                    }\n                }\n            }\n        };\n\n        loop(args, 0, args.length, '  ');\n\n        for (i = songs.length - 1; i >= 0; i--) {\n            song = songs[i];\n            //console.log(song.numEvents);\n            tracks = tracks.concat(song.tracks);\n            //parts = parts.concat(song.parts);\n            //events = events.concat(song.events);\n            timeEvents = timeEvents.concat(song.timeEvents);\n        }\n\n        if (parts.length > 0) {\n            track = sequencer.createTrack();\n            track.instrument = instrument;\n            track.addParts(parts);\n            tracks.push(track);\n        }\n\n        if (events.length > 0) {\n            track = sequencer.createTrack();\n            track.instrument = instrument;\n            part = sequencer.createPart();\n            part.addEvents(events);\n            track.addPart(part);\n            tracks.push(track);\n        }\n\n\n        //console.log(songs.length, tracks.length, parts.length, events.length, bpm, nominator, denominator);\n\n        song = sequencer.createSong({\n            bpm: bpm || 120,\n            nominator: nominator || 4,\n            denominator: denominator || 4,\n            timeEvents: timeEvents,\n            tracks: tracks\n        });\n\n        addSong(song);\n        song.play();\n        return song;\n    };\n\n\n    /*\n        animationFrame = function(cb) {\n            animationFrameRequests.push(cb);\n    \n            if (animationFrameTimer !== undefined) {\n                return animationFrameTimer;\n            }\n    \n            animationFrameTimer = setTimeout(function() {\n                while (animationFrameRequests.length > 0) {\n                    animationFrameRequests.shift()();\n                }\n                animationFrameTimer = undefined;\n            }, animationFrameInterval);\n    \n            return animationFrameTimer;\n        };\n    */\n\n\n    sequencer.setAnimationFrameType = function (type, interval) {\n        type = type || 'default';\n        type = type.toLowerCase();\n        interval = interval || 15;\n        switch (type) {\n            case 'settimeout':\n                /*\n                animationFrameInterval = interval || animationFrameInterval;\n                animationFrameRequests = [];\n                window.requestAnimationFrame = animationFrame;\n                */\n                // quick and dirty\n                window.requestAnimationFrame = function (cb) {\n                    setTimeout(cb, interval);\n                };\n                break;\n            default:\n                /*\n                clearTimeout(animationFrameTimer);\n                */\n                window.requestAnimationFrame = window.webkitRequestAnimationFrame || window.requestAnimationFrame;\n        }\n    };\n\n\n    // used by asset_manager.js if an instrument or a sample pack has been unloaded\n    sequencer.protectedScope.updateInstruments = function () {\n        var i, j, tracks, track, song;\n\n        for (i in activeSongs) {\n            if (activeSongs.hasOwnProperty(i)) {\n                song = activeSongs[i];\n                tracks = song.tracks;\n                for (j = tracks.length - 1; j >= 0; j--) {\n                    track = tracks[j];\n                    //console.log(track.id);\n                    track.instrument.reset();\n                }\n            }\n        }\n    };\n\n\n    sequencer.allNotesOff = function () {\n        objectForEach(activeSongs, function (song) {\n            song.allNotesOff();\n        });\n    };\n\n\n    window.onblur = function () {\n        if (sequencer.pauseOnBlur === false) {\n            return;\n        }\n        //console.log('blur', sequencer.getTime() * 1000);\n        sequencer.allNotesOff();\n        pausedSongs = [];\n        objectForEach(activeSongs, function (song) {\n            if (song.playing === true) {\n                if (sequencer.debug) {\n                    console.log('pause song', song.id);\n                }\n                pausedSongs.push(song);\n                song.pause();\n                //song.stop();\n            }\n        });\n    };\n\n\n    window.onfocus = function () {\n        if (sequencer.pauseOnBlur === false) {\n            return;\n        }\n        //console.log('focus', sequencer.getTime() * 1000);\n        var song, millis, i, maxi = pausedSongs.length;\n        for (i = 0; i < maxi; i++) {\n            song = pausedSongs[i];\n            millis = song.millis;\n            song.stop();\n            song.setPlayhead('millis', millis);\n            if (sequencer.restartOnFocus) {\n                song.play();\n            }\n        }\n        pausedSongs = [];\n    };\n\n\n    sequencer.protectedScope.addSong = addSong;\n\n    sequencer.protectedScope.addInitMethod(function () {\n        objectToArray = sequencer.protectedScope.objectToArray;\n        isEmptyObject = sequencer.protectedScope.isEmptyObject;\n        isEmptyObject = sequencer.protectedScope.isEmptyObject;\n        objectForEach = sequencer.protectedScope.objectForEach;\n        timedTasks = sequencer.protectedScope.timedTasks;\n        scheduledTasks = sequencer.protectedScope.scheduledTasks;\n        repetitiveTasks = sequencer.protectedScope.repetitiveTasks;\n        typeString = sequencer.protectedScope.typeString;\n        context = sequencer.protectedScope.context;\n        createMidiEvent = sequencer.createMidiEvent;\n        masterGainNode = sequencer.protectedScope.masterGainNode;\n        parseTimeEvents = sequencer.protectedScope.parseTimeEvents;\n        heartbeat();\n    });\n\n}\n\n\n\n\n/*\n    // removed for clarity\n\n    sequencer.play = function(song){\n        song = checkSong(song);\n        if(song === false){\n            console.error('no song loaded or specified');\n            return;\n        }\n        song.play();\n    };\n\n\n    sequencer.pause = function(song){\n        song = checkSong(song);\n        if(song === false){\n            console.error('no song loaded or specified');\n            return;\n        }\n        song.pause();\n    };\n\n\n    sequencer.stop = function(song){\n        song = checkSong(song);\n        if(song === false){\n            console.error('no song loaded or specified');\n            return;\n        }\n        song.stop();\n    };\n\n\n    sequencer.addEventListener = function(){\n        if(sequencer.song === undefined){\n            console.error('no song in sequencer');\n            return;\n        }\n        return sequencer.song.addEventListener.apply(sequencer.song, arguments);\n    };\n\n\n    sequencer.removeEventListener = function(){\n        if(sequencer.song === undefined){\n            console.error('no song in sequencer');\n            return;\n        }\n        return sequencer.song.removeEventListener.apply(sequencer.song, arguments);\n    };\n\n\n    checkSong = function(song){\n        if(song){\n            return song.className === 'Song' ? song : false;\n        }else if(sequencer.song){\n            return sequencer.song.className === 'Song' ? sequencer.song : false;\n        }else{\n            return false;\n        }\n    };\n\n\n\n*/\n\n\n/*\n    sequencer.playEvents = function(){\n        var args = slice.call(arguments),\n            i, arg, loop, bpm, nominator, denominator,\n            part, song, events = [];\n\n        loop = function(data){\n            for(i = data.length - 1; i >= 0; i--){\n                arg = data[i];\n                if(typeString(arg) === 'array'){\n                    loop(arg);\n                }else if(arg.className === 'MidiEvent' || arg.className === 'AudioEvent'){\n                    if(bpm === undefined){\n                        part = arg.part;\n                        if(part !== undefined){\n                            song = part.song\n                            if(song !== undefined){\n                                bpm = song.bpm;\n                                nominator = song.nominator;\n                                denominator = song.denominator;\n                            }\n                        }\n                    }\n                    events.push(arg);\n                }\n            }\n        };\n\n        loop(args);\n\n        //console.log(events, bpm, nominator, denominator);\n\n        song = sequencer.createSong({\n            bpm: bpm || 120,\n            nominator: nominator || 4,\n            denominator: denominator || 4,\n            events: events\n        });\n\n        songs[song.id] = song;\n        //console.log(song.durationMillis);\n        //console.log(songs);\n\n        song.addEventListener('end', function(){\n            console.log('end', this.id);\n            //delete songs[this.id];\n            //console.log(songs);\n        });\n        song.play();\n        return song.id;\n    };\n*/\n\n/*\n    // moved to song\n\n    sequencer.midiIn = function(){// events, [song|track|part]\n\n    };\n\n\n    sequencer.midiOut = function(){// channel\n\n    };\n\n\n    sequencer.midiThru = function(){// channel\n\n    };\n\n*/\nfunction song() {\n\n  'use strict';\n\n  var\n    slice = Array.prototype.slice,\n\n    //import\n    createMidiEvent, // → defined in midi_event.js\n    createPlayhead, // → defined in playhead.js\n    createFollowEvent, // → defined in song_follow_event.js\n    createScheduler, // → defined in scheduler.js\n    createMetronome, // → defined in metronome.js\n    followEvent, // → defined in follow_event_song.js\n    masterGainNode, // -> defined in open_module.js\n    context, // -> defined in open_module.js\n    timedTasks, // -> defined in open_module.js\n    repetitiveTasks, // -> defined in open_module.js\n    initMidi, // defined in midi_system.js\n    addMidiEventListener, // defined in midi_system.js\n    removeMidiEventListener, // defined in midi_system.js\n    setMidiInput, // defined in midi_system.js\n    setMidiOutput, // defined in midi_system.js\n    getMidiInputs, // defined in midi_system.js\n    getMidiOutputs, // defined in midi_system.js\n    getMidiPortsAsDropdown, // defined in midi_system.js\n\n    getPosition, // → defined in position.js\n    millisToTicks, // → defined in position.js\n    ticksToMillis, // → defined in position.js\n    ticksToBars, // → defined in position.js\n    millisToBars, // → defined in position.js\n    barsToTicks, // → defined in position.js\n    barsToMillis, // → defined in position.js\n\n    addEventListener, // → defined in song_event_listener.js\n    removeEventListener, // → defined in song_event_listener.js\n    dispatchEvent, // → defined in song_event_listener.js\n\n    update, // → defined in song_update.js\n    checkDuration, // → defined in song_update.js\n    addMetronomeEvents, // → defined in song_update.js\n\n    gridToSong, // → defined in song_grid.js\n    noteToGrid, // → defined in song_grid.js\n    eventToGrid, // → defined in song_grid.js\n    positionToGrid, // → defined in song_grid.js\n\n    //createTrack, // → defined in track.js\n    typeString, // → defined in util.js\n    removeFromArray, // → defined in util.js\n    removeFromArray2, // → defined in util.js\n    getNoteLengthName, // → defined in util.js\n    getStats, // → defined in event_statistics.js\n    findEvent, // → defined in find_event.js\n    findNote, // → defined in find_event.js\n\n    objectForEach, // → defined in util.js\n    addSong, // → defined in sequencer.js\n    getTimeDiff, // → defined in open_module.js\n\n    //private\n    _removeTracks,\n    pulse,\n    getArguments,\n    getTrack,\n    addTracks,\n    getPart,\n    getParts,\n    getTimeEvents,\n    setRecordingStatus,\n    _getRecordingPerTrack,\n\n    songIndex = 0,\n\n    //protected\n    createGrid,\n\n    //public\n    Song;\n\n  Song = function (config) {\n    //Object.defineProperty(this,'tracks',{value: []});\n    //Object.defineProperty(this, 'events', {value: 'val'});\n\n    config = config || {};\n\n    this.id = 'S' + songIndex++ + '' + new Date().getTime();\n    this.name = config.name || this.id;\n    this.className = 'Song';\n    addSong(this);\n\n    this.midiInputs = {};\n    this.midiOutputs = {};\n    initMidi(this);\n\n    this.bpm = config.bpm || 120;\n    this.ppq = config.ppq || sequencer.defaultPPQ;\n    this.bars = config.bars || 30; //default song duration is 30 bars @ 120 bpm is 1 minute\n    this.lastBar = this.bars;\n    this.lowestNote = config.lowestNote || 0;\n    this.highestNote = config.highestNote || 127;\n    this.pitchRange = this.highestNote - this.lowestNote + 1;\n    this.nominator = config.nominator || 4;\n    this.denominator = config.denominator || 4;\n    this.factor = 4 / this.denominator;\n    this.ticksPerBeat = this.ppq * this.factor;\n    this.ticksPerBar = this.ticksPerBeat * this.nominator;\n    this.millisPerTick = (60000 / this.bpm / this.ppq);\n    this.quantizeValue = config.quantizeValue || '8';\n    this.fixedLengthValue = config.fixedLengthValue || false;\n    this.positionType = config.positionType || 'all';\n    this.useMetronome = config.useMetronome;\n    this.autoSize = config.autoSize === undefined ? true : config.autoSize === true;\n    this.playbackSpeed = 1;\n    this.defaultInstrument = config.defaultInstrument || sequencer.defaultInstrument;\n    this.recordId = -1;\n    this.autoQuantize = false;\n    this.loop = config.loop || false;\n    this.doLoop = false;\n    this.illegalLoop = true;\n    this.loopStart = 0;\n    this.loopEnd = 0;\n    this.loopDuration = 0;\n    this.audioRecordingLatency = 0;\n\n    //console.log('PPQ song', this.ppq)\n\n    if (this.useMetronome !== true && this.useMetronome !== false) {\n      this.useMetronome = false;\n    }\n    //console.log(this.useMetronome);\n\n    this.grid = undefined;\n\n    if (config.timeEvents && config.timeEvents.length > 0) {\n      this.timeEvents = [].concat(config.timeEvents);\n\n      this.tempoEvent = getTimeEvents(sequencer.TEMPO, this)[0];\n      this.timeSignatureEvent = getTimeEvents(sequencer.TIME_SIGNATURE, this)[0];\n\n      if (this.tempoEvent === undefined) {\n        this.tempoEvent = createMidiEvent(0, sequencer.TEMPO, this.bpm);\n        this.timeEvents.unshift(this.tempoEvent);\n      } else {\n        this.bpm = this.tempoEvent.bpm;\n      }\n      if (this.timeSignatureEvent === undefined) {\n        this.timeSignatureEvent = createMidiEvent(0, sequencer.TIME_SIGNATURE, this.nominator, this.denominator);\n        this.timeEvents.unshift(this.timeSignatureEvent);\n      } else {\n        this.nominator = this.timeSignatureEvent.nominator;\n        this.denominator = this.timeSignatureEvent.denominator;\n      }\n      //console.log(1, this.nominator, this.denominator, this.bpm);\n    } else {\n      // there has to be a tempo and time signature event at ticks 0, otherwise the position can't be calculated, and moreover, it is dictated by the MIDI standard\n      this.tempoEvent = createMidiEvent(0, sequencer.TEMPO, this.bpm);\n      this.timeSignatureEvent = createMidiEvent(0, sequencer.TIME_SIGNATURE, this.nominator, this.denominator);\n      this.timeEvents = [\n        this.tempoEvent,\n        this.timeSignatureEvent\n      ];\n    }\n\n    // TODO: A value for bpm, nominator and denominator in the config overrules the time events specified in the config -> maybe this should be the other way round\n\n    // if a value for bpm is set in the config, and this value is different from the bpm value of the first\n    // tempo event, all tempo events will be updated to the bpm value in the config.\n    if (config.timeEvents !== undefined && config.bpm !== undefined) {\n      if (this.bpm !== config.bpm) {\n        this.setTempo(config.bpm, false);\n      }\n    }\n\n    // if a value for nominator and/or denominator is set in the config, and this/these value(s) is/are different from the values\n    // of the first time signature event, all time signature events will be updated to the values in the config.\n    // @TODO: maybe only the first time signature event should be updated?\n    if (config.timeEvents !== undefined && (config.nominator !== undefined || config.denominator !== undefined)) {\n      if (this.nominator !== config.nominator || this.denominator !== config.denominator) {\n        this.setTimeSignature(config.nominator || this.nominator, config.denominator || this.denominator, false);\n      }\n    }\n\n    //console.log(2, this.nominator, this.denominator, this.bpm);\n\n    this.tracks = [];\n    this.parts = [];\n    this.notes = [];\n    this.events = [];//.concat(this.timeEvents);\n    this.allEvents = []; // all events plus metronome ticks\n\n    this.tracksById = {};\n    this.tracksByName = {};\n    this.partsById = {};\n    this.notesById = {};\n    this.eventsById = {};\n\n    this.activeEvents = null;\n    this.activeNotes = null;\n    this.activeParts = null;\n\n    this.recordedNotes = [];\n    this.recordedEvents = [];\n    this.recordingNotes = {}; // notes that don't have their note off events yet\n\n    this.numTracks = 0;\n    this.numParts = 0;\n    this.numNotes = 0;\n    this.numEvents = 0;\n    this.instruments = [];\n\n    this.playing = false;\n    this.paused = false;\n    this.stopped = true;\n    this.recording = false;\n    this.prerolling = false;\n    this.precounting = false;\n    this.preroll = true;\n    this.precount = 0;\n    this.listeners = {};\n\n    this.playhead = createPlayhead(this, this.positionType, this.id, this);//, this.position);\n    this.playheadRecording = createPlayhead(this, 'all', this.id + '_recording');\n    this.scheduler = createScheduler(this);\n    this.followEvent = createFollowEvent(this);\n\n    this.volume = 1;\n    this.gainNode = context.createGainNode();\n    this.gainNode.gain.value = this.volume;\n    this.metronome = createMetronome(this, dispatchEvent);\n    this.connect();\n\n\n    if (config.className === 'MidiFile' && config.loaded === false) {\n      if (sequencer.debug) {\n        console.warn('midifile', config.name, 'has not yet been loaded!');\n      }\n    }\n\n    //if(config.tracks && config.tracks.length > 0){\n    if (config.tracks) {\n      this.addTracks(config.tracks);\n    }\n\n    if (config.parts) {\n      this.addParts(config.parts);\n    }\n\n    if (config.events) {\n      this.addEvents(config.events);\n    }\n\n    if (config.events || config.parts || config.tracks) {\n      //console.log(config.events, config.parts, config.tracks)\n      // the length of the song will be determined by the events, parts and/or tracks that are added to the song\n      if (config.bars === undefined) {\n        this.lastBar = 0;\n      }\n      this.lastEvent = createMidiEvent([this.lastBar, sequencer.END_OF_TRACK]);\n    } else {\n      this.lastEvent = createMidiEvent([this.bars * this.ticksPerBar, sequencer.END_OF_TRACK]);\n    }\n    //console.log('update');\n    this.update(true);\n\n    this.numTimeEvents = this.timeEvents.length;\n    this.playhead.set('ticks', 0);\n    this.midiEventListeners = {};\n    //console.log(this.timeEvents);\n  };\n\n\n  getPart = function (data, song) {\n    var part = false;\n    if (data === undefined) {\n      part = false;\n    } else if (part.className === 'Part') {\n      part = data;\n    } else if (typeString(data) === 'string') {\n      part = song.partsById[data];\n    } else if (isNaN(data) === false) {\n      part = song.parts[data];\n    }\n    return part;\n  };\n\n\n  getTrack = function (data, song) {\n    var track = false;\n    //console.log(data);\n    if (data === undefined) {\n      track = false;\n    } else if (data.className === 'Track') {\n      track = data;\n    } else if (typeString(data) === 'string') {\n      track = song.tracksById[data];\n      if (track === undefined) {\n        track = song.tracksByName[data];\n        // objectForEach(song.tracksById, function(t){\n        //     if(t.name === data){\n        //         track = t;\n        //     }\n        // });\n      }\n    } else if (isNaN(data) === false) {\n      track = song.tracks[data];\n    }\n\n    if (track === undefined) {\n      track = false;\n    }\n    return track;\n  };\n\n\n  addTracks = function (newTracks, song) {\n    //console.log('addTracks');\n    var tracksById = song.tracksById,\n      tracksByName = song.tracksByName,\n      addedIds = [],\n      i, part, track;\n\n    for (i = newTracks.length - 1; i >= 0; i--) {\n      track = getTrack(newTracks[i]);\n      if (track === false) {\n        continue;\n      }\n      //console.log(track.song);\n      if (track.song !== undefined && track.song !== null) {\n        track = track.copy();\n      }\n      track.song = song;\n      track.instrument.song = song;\n      track.quantizeValue = song.quantizeValue;\n      track.connect(song.gainNode);\n      /*\n                  // -> not possible because of the endless midi feedback loop with IAC virtual midi ports on OSX\n                  //console.log(song.midiInputs);\n                  objectForEach(song.midiInputs, function(port){\n                      //console.log(port.id);\n                      track.setMidiInput(port.id, true);\n                  });\n      */\n\n      track.state = 'new';\n      track.needsUpdate = true;\n      tracksById[track.id] = track;\n      tracksByName[track.name] = track;\n      addedIds.push(track.id);\n\n      objectForEach(track.partsById, function (part) {\n        part.state = 'new';\n      });\n      /*\n                  for(j in track.partsById){\n                      if(track.partsById.hasOwnProperty(j)){\n                          //console.log('addTracks, part', part);\n                          part = track.partsById[j];\n                          //part.song = song;\n                          part.state = 'new';\n                      }\n                  }\n      */\n    }\n    return addedIds;\n  };\n\n\n  _removeTracks = function (tobeRemoved) {\n    var i, track, removed = [];\n\n    for (i = tobeRemoved.length - 1; i >= 0; i--) {\n      track = getTrack(tobeRemoved[i]);\n      if (track === false) {\n        continue;\n      }\n      //console.log(track);\n      if (track.song !== undefined && track.song !== this) {\n        console.warn('can\\'t remove: this track belongs to song', track.song.id);\n        continue;\n      }\n      track.state = 'removed';\n      track.disconnect(this.gainNode);\n      track.reset();\n      delete this.tracksById[track.id];\n      delete this.tracksByName[track.name];\n      removed.push(track);\n    }\n    return removed;\n  };\n\n  /*\n      getParts = function(args, song){\n          var part, i,\n              result = [];\n          for(i = args.length - 1; i >= 0; i--){\n              part = getPart(args[i], song);\n              if(part){\n                  result.push(part);\n              }\n          }\n          return result;\n      };\n  */\n\n  getParts = function (args) {\n    var part, i,\n      result = [];\n    for (i = args.length - 1; i >= 0; i--) {\n      part = getPart(args[i], this);\n      if (part) {\n        result.push(part);\n      }\n    }\n    return result;\n  };\n\n\n  function getEvents(args, song) {\n    var result = [];\n\n    args = slice.call(args);\n    //console.log(args);\n\n    function loop(data, i, maxi) {\n      var arg, type, event;\n\n      for (i = 0; i < maxi; i++) {\n        arg = data[i];\n        type = typeString(arg);\n\n        if (type === 'array') {\n          loop(arg, 0, arg.length);\n        }\n\n        else if (type === 'string') {\n          event = song.eventsById[arg];\n          if (event !== undefined) {\n            result.push(arg);\n          }\n        }\n\n        else if (arg.className === 'MidiEvent') {\n          result.push(arg);\n        }\n      }\n    }\n\n    loop(args, 0, args.length);\n    return result;\n  }\n\n\n  getTimeEvents = function (type, song) {\n    var events = [];\n    song.timeEvents.forEach(function (event) {\n      if (event.type === type) {\n        events.push(event);\n      }\n    });\n    return events;\n  };\n\n\n  pulse = function (song) {\n    var\n      //now = window.performance.now(),\n      now = sequencer.getTime() * 1000,\n      diff = now - song.timeStamp,\n      millis = song.millis + diff;\n\n    song.diff = diff;\n    //console.log(diff);\n    //console.log(now, song.recordTimestamp, song.eventsMidiAudioMetronome[0].time);\n\n    song.timeStamp = now;\n\n    if (song.precounting === true) {\n      song.metronome.millis += diff;\n      song.scheduler.update(diff);\n      // now return otherwise the position of the song gets updated\n      return;\n    }\n\n    // is this comment still valid?\n    // put followEvent and scheduler before playhead.update(), otherwise followEvent will miss the first event (scheduler could come after playhead.update)\n    song.prevMillis = song.millis;\n    //song.playhead.update('millis', diff);\n    // song.followEvent.update();\n    // song.scheduler.update();\n    //console.log(song.millis, diff, song.loopEnd);\n    //console.log(song.doLoop, song.scheduler.looped, song.millis > song.loopEnd);\n    //console.log(song.scheduler.prevMaxtime, song.loopEnd);\n    if (song.doLoop && song.scheduler.looped && millis >= song.loopEnd) {// && song.jump !== true){\n      //console.log(song.prevMillis, song.millis);\n      //song.scheduler.looped = false;\n      song.followEvent.resetAllListeners();\n      song.playhead.set('millis', song.loopStart + (millis - song.loopEnd));\n      song.followEvent.update();\n      //console.log('-->', song.millis);\n      song.scheduler.update();\n      dispatchEvent(song, 'loop');\n      //song.startTime += (song.loopEnd - song.loopStart);\n    } else if (millis >= song.durationMillis) {\n      song.playhead.update('millis', song.durationMillis - song.millis);\n      song.followEvent.update();\n      song.pause();\n      song.endOfSong = true;\n      dispatchEvent(song, 'end');\n    } else {\n      song.playhead.update('millis', diff);\n      song.followEvent.update();\n      song.scheduler.update();\n    }\n\n    song.jump = false;\n\n    //console.log(now, sequencer.getTime());\n    //console.log(song.barsAsString);\n    //console.log('pulse', song.playhead.barsAsString, song.playhead.millis);\n    //console.log(song.millis);\n  };\n\n\n  Song.prototype.remove = function () {\n    console.warn('Song.remove() is deprecated, please use sequencer.deleteSong()');\n    sequencer.deleteSong(this);\n  };\n\n\n  Song.prototype.play = function () {\n    sequencer.unlockWebAudio();\n    var song, playstart;\n\n    //console.log(this.playing);\n    if (this.playing) {\n      this.pause();\n      return;\n    }\n    // tell the scheduler to schedule the audio events that start before the current position of the playhead\n    this.scheduler.firstRun = true;\n\n    // only loop when the loop is legal and this.loop is set to true\n    this.doLoop = (this.illegalLoop === false && this.loop === true);\n    //console.log('play', this.doLoop, this.illegalLoop, this.loop);\n    // or should I move to loopStart here if loop is enabled?\n    if (this.endOfSong) {\n      this.followEvent.resetAllListeners();\n      this.playhead.set('millis', 0);\n      this.scheduler.setIndex(0);\n    }\n    // timeStamp is used for calculating the diff in time of every consecutive frame\n    this.timeStamp = sequencer.getTime() * 1000;\n    this.startTime = this.timeStamp;\n    try {\n      this.startTime2 = window.performance.now();\n      //this.startTime2 = undefined;\n    } catch (e) {\n      if (sequencer.debug) {\n        console.log('window.performance.now() not supported');\n      }\n    }\n\n    if (this.precounting) {\n      this.metronome.startTime = this.startTime;\n      this.metronome.startTime2 = this.startTime2;\n      this.startTime += this.metronome.precountDurationInMillis;\n      this.startTime2 += this.metronome.precountDurationInMillis;\n\n      //console.log(this.metronome.startTime, this.recordTimestamp);\n\n      song = this;\n      playstart = this.startTime / 1000;\n\n      //console.log(this.startTime, playstart, this.recordTimestamp/1000 - playstart);\n\n      repetitiveTasks.playAfterPrecount = function () {\n        if (sequencer.getTime() >= playstart) {\n          song.precounting = false;\n          song.prerolling = false;\n          song.recording = true;\n          song.playing = true;\n          dispatchEvent(song, 'record_start');\n          dispatchEvent(song, 'play');\n          //console.log('playAfterPrecount', sequencer.getTime(), playstart, song.metronome.precountDurationInMillis);\n          repetitiveTasks.playAfterPrecount = undefined;\n          delete repetitiveTasks.playAfterPrecount;\n        }\n      };\n    }\n    // this value will be deducted from the millis value of the event as soon as the event get scheduled\n    this.startMillis = this.millis;\n    //console.log(this.startMillis);\n\n    // make first call right after setting a time stamp to avoid delay\n    //pulse(this);\n\n    song = this;\n\n    // fixes bug: when an event listener is added to a midi note, the listener sometimes misses the first note\n    song.playhead.update('millis', 0);\n    song.followEvent.update();\n\n    repetitiveTasks[this.id] = function () {\n      pulse(song);\n    };\n\n    this.paused = false;\n    this.stopped = false;\n    this.endOfSong = false;\n    if (this.precounting !== true) {\n      this.playing = true;\n      dispatchEvent(this, 'play');\n    }\n  };\n\n\n  Song.prototype.pause = function () {\n    if (this.recording === true || this.precounting === true) {\n      this.stop();\n      return;\n    }\n    if (this.stopped || this.paused) {\n      this.play();\n      return;\n    }\n    delete repetitiveTasks[this.id];\n    this.allNotesOff();\n    this.playing = false;\n    this.paused = true;\n    dispatchEvent(this, 'pause');\n  };\n\n\n  Song.prototype.stop = function () {\n    if (this.stopped) {\n      // is this necessary?\n      this.followEvent.resetAllListeners();\n      this.playhead.set('millis', 0);\n      this.scheduler.setIndex(0);\n      return;\n    }\n    if (this.recording === true || this.precounting === true) {\n      this.stopRecording();\n    }\n    delete repetitiveTasks[this.id];\n    // remove unschedule callback of all samples\n    objectForEach(timedTasks, function (task, id) {\n      //console.log(id);\n      if (id.indexOf('unschedule_') === 0 || id.indexOf('event_') === 0) {\n        task = null;\n        delete timedTasks[id];\n      }\n    });\n    this.allNotesOff();\n\n    this.playing = false;\n    this.paused = false;\n    this.stopped = true;\n    this.endOfSong = false;\n\n    this.followEvent.resetAllListeners();\n    this.playhead.set('millis', 0);\n    this.scheduler.setIndex(0);\n    dispatchEvent(this, 'stop');\n  };\n\n\n  Song.prototype.adjustLatencyForAllRecordings = function (value) {\n    // @todo: add callback here!\n    this.audioRecordingLatency = value;\n    this.tracks.forEach(function (track) {\n      track.setAudioRecordingLatency(value);\n    });\n  };\n\n\n  Song.prototype.setAudioRecordingLatency = function (recordId, value, callback) {\n    var i, event, sampleId;\n\n    for (i = this.audioEvents.length - 1; i >= 0; i--) {\n      event = this.audioEvents[i];\n      sampleId = event.sampleId;\n      if (sampleId === undefined) {\n        continue;\n      }\n      if (recordId === sampleId) {\n        break;\n      }\n    }\n    //console.log(recordId, value, callback);\n    event.track.setAudioRecordingLatency(recordId, value, callback);\n  };\n\n\n  Song.prototype.startRecording = Song.prototype.record = function (precount) {\n    //console.log(this.recording, this.precounting, precount);\n    if (this.recording === true || this.precounting === true) {\n      this.stop();\n      return;\n    }\n\n    var userFeedback = false,\n      audioRecording = false,\n      i, track, self = this;\n\n    this.metronome.precountDurationInMillis = 0;\n\n    // allow to start a recording while playing\n    if (this.playing) {\n      this.precount = 0;\n      this.recordStartMillis = this.millis;\n    } else {\n      if (precount === undefined) {\n        this.precount = 0;\n        this.recordStartMillis = this.millis;\n      } else {\n        // a recording with a precount always starts at the beginning of a bar\n        this.setPlayhead('barsbeats', this.bar);\n        this.metronome.createPrecountEvents(precount);\n        this.precount = precount;\n        this.recordStartMillis = this.millis - this.metronome.precountDurationInMillis;\n        //console.log(this.metronome.precountDurationInMillis);\n      }\n      /*\n                  if(this.preroll === true){\n                      // TODO: improve this -> leave it, preroll is always on unless the user sets it to false\n                      //this.preroll = (this.bar - this.precount) > 0;\n                  }\n      */\n    }\n    //console.log('preroll', this.preroll);\n    //console.log('precount', this.precount);\n    //console.log('precountDurationInMillis', this.metronome.precountDurationInMillis);\n    //console.log('recordStartMillis', this.recordStartMillis);\n\n\n    this.recordTimestampTicks = this.ticks;\n    this.recordId = 'REC' + new Date().getTime();\n    this.recordedNotes = [];\n    this.recordedEvents = [];\n    this.recordingNotes = {};\n    this.recordingAudio = false;\n\n    if (this.keyEditor !== undefined) {\n      this.keyEditor.prepareForRecording(this.recordId);\n    }\n\n    for (i = this.numTracks - 1; i >= 0; i--) {\n      track = this.tracks[i];\n      if (track.recordEnabled === 'audio') {\n        this.recordingAudio = true;\n      }\n      //console.log(track.name, track.index);\n      if (track.recordEnabled === 'audio') {\n        audioRecording = true;\n        track.prepareForRecording(this.recordId, function () {\n          if (userFeedback === false) {\n            userFeedback = true;\n            setRecordingStatus.call(self);\n          }\n        });\n      } else {\n        track.prepareForRecording(this.recordId);\n      }\n    }\n\n    if (audioRecording === false) {\n      setRecordingStatus.call(this);\n    }\n\n    return this.recordId;\n  };\n\n\n  setRecordingStatus = function () {\n\n    this.recordTimestamp = context.currentTime * 1000; // millis\n\n    if (this.playing === false) {\n      if (this.precount > 0) {\n        // recording with precount always starts at the beginning of a bar\n        //this.setPlayhead('barsbeats', this.bar);\n        this.precounting = true;\n        this.prerolling = this.preroll;\n        if (this.prerolling) {\n          dispatchEvent(this, 'record_preroll');\n        } else {\n          dispatchEvent(this, 'record_precount');\n        }\n      } else {\n        this.recording = true;\n        dispatchEvent(this, 'record_start');\n      }\n      this.play();\n    } else {\n      this.recording = true;\n      this.precounting = false;\n      dispatchEvent(this, 'record_start');\n    }\n  };\n\n\n  _getRecordingPerTrack = function (index, recordingHistory, callback) {\n    var track, scope = this;\n\n    if (index < this.numTracks) {\n      track = this.tracks[index];\n      track.stopRecording(this.recordId, function (events) {\n        if (events !== undefined) {\n          recordingHistory[track.name] = events;\n        }\n        index++;\n        _getRecordingPerTrack.call(scope, index, recordingHistory, callback);\n      });\n    } else {\n      callback(recordingHistory);\n    }\n  };\n\n\n  Song.prototype.stopRecording = function () {\n    if (this.recording === false) {\n      return;\n    }\n    this.recording = false;\n    this.prerolling = false;\n    this.precounting = false;\n\n    //repetitiveTasks.playAfterPrecount = undefined;\n    delete repetitiveTasks.playAfterPrecount;\n    var scope = this;\n\n    _getRecordingPerTrack.call(this, 0, {}, function (history) {\n      scope.update();\n      dispatchEvent(scope, 'recorded_events', history);\n    });\n\n    // perform update immediately for midi recordings\n    this.update();\n\n    dispatchEvent(this, 'record_stop');\n\n    return this.recordId;\n  };\n\n\n  Song.prototype.undoRecording = function (history) {\n    var i, tracksByName;\n\n    if (history === undefined) {\n      for (i = this.numTracks - 1; i >= 0; i--) {\n        this.tracks[i].undoRecording(this.recordId);\n      }\n    } else {\n      tracksByName = this.tracksByName;\n      objectForEach(history, function (events, name) {\n        var track = tracksByName[name];\n        track.undoRecording(events);\n      });\n    }\n    //this.update();\n  };\n\n\n  Song.prototype.getAudioRecordingData = function (recordId) {\n    var i, event, sampleId;\n\n    for (i = this.audioEvents.length - 1; i >= 0; i--) {\n      event = this.audioEvents[i];\n      sampleId = event.sampleId;\n      if (sampleId === undefined) {\n        continue;\n      }\n      if (recordId === sampleId) {\n        break;\n      }\n    }\n    if (event === undefined) {\n      return false;\n    }\n    return event.track.getAudioRecordingData(recordId);\n  };\n\n\n  // non-mandatory arguments: quantize value, history object\n  Song.prototype.quantize = function () {\n    var i, track, arg, type,\n      args = slice.call(arguments),\n      numArgs = args.length,\n      value,\n      historyObject = {};\n\n    //console.log(arguments);\n\n    for (i = 0; i < numArgs; i++) {\n      arg = args[i];\n      type = typeString(arg);\n      //console.log(arg, type);\n      if (type === 'string' || type === 'number') {\n        // overrule the quantize values of all tracks in this song, but the song's quantizeValue doesn't change\n        value = arg;\n      } else if (type === 'object') {\n        historyObject = arg;\n      }\n    }\n\n    //console.log(value, historyObject)\n    for (i = this.numTracks - 1; i >= 0; i--) {\n      track = this.tracks[i];\n      // if no value is specified, use the value of the track\n      if (value === undefined) {\n        value = track.quantizeValue;\n      }\n      sequencer.quantize(track.events, value, this.ppq, historyObject);\n    }\n\n    return historyObject;\n    //this.update();\n  };\n\n\n  Song.prototype.undoQuantize = function (history) {\n    if (history === undefined) {\n      if (sequencer.debug >= 2) {\n        console.warn('please pass a quantize history object');\n      }\n      return;\n    }\n\n    var i, track;\n    for (i = this.numTracks - 1; i >= 0; i--) {\n      track = this.tracks[i];\n      track.undoQuantize(history);\n    }\n  };\n\n\n  Song.prototype.quantizeRecording = function (value) {\n    var i, track;\n    for (i = this.numTracks - 1; i >= 0; i--) {\n      track = this.tracks[i];\n      if (track.recordId === this.recordId) {\n        track.quantizeRecording(value);\n      }\n    }\n    //this.update();\n  };\n\n\n  // left: song position >= left locator\n  Song.prototype.setLeftLocator = function () {\n    //var pos = getPosition(this, [].concat(type, value));\n    //this.leftLocator = AP.slice.call(arguments);\n    var pos = getPosition(this, slice.call(arguments));\n    if (pos !== undefined) {\n      this.loopStartPosition = pos;\n      this.loopStart = pos.millis;\n      this.loopStartTicks = pos.ticks;\n    }\n    this.illegalLoop = this.loopStart >= this.loopEnd;\n    this.doLoop = (this.illegalLoop === false && this.loop === true);\n    this.loopDuration = this.illegalLoop === true ? 0 : this.loopEnd - this.loopStart;\n    // if(this.doLoop === false && this.loop === true){\n    //     dispatchEvent('loop_off', this);\n    // }\n    //console.log('left', this.doLoop, this.illegalLoop, this.loop);\n    //console.log(pos.millis, pos.millis, pos.ticks);\n    //console.log('l', this.loopStartPosition, pos);\n  };\n\n\n  // right: song position < right locator\n  Song.prototype.setRightLocator = function () {//(value){\n    //var pos = getPosition(this, [].concat(type, value));\n    //this.rightLocator = AP.slice.call(arguments);\n    var pos = getPosition(this, slice.call(arguments)),\n      previousState = this.illegalLoop;\n    //var pos = getPosition(this, value);\n    if (pos !== undefined) {\n      this.loopEndPosition = pos;\n      this.loopEnd = pos.millis;\n      this.loopEndTicks = pos.ticks;\n    }\n    //console.log(this.loopEnd);\n    this.illegalLoop = this.loopEnd <= this.loopStart;\n    this.doLoop = (this.illegalLoop === false && this.loop === true);\n    this.loopDuration = this.illegalLoop === true ? 0 : this.loopEnd - this.loopStart;\n    // if(previousState !== false && this.loop === true){\n    //     dispatchEvent('loop_off', this);\n    // }\n    //console.log('right', this.doLoop, this.illegalLoop, this.loop);\n    //console.log(pos.millis, pos.millis, pos.ticks);\n    //console.log('r', this.loopEndPosition);\n  };\n\n\n  Song.prototype.setLoop = function (flag) {\n    if (flag === undefined) {\n      this.loop = !this.loop;\n    } else if (flag === true || flag === false) {\n      this.loop = flag;\n    } else {\n      if (sequencer.debug >= 1) {\n        console.error('pass \"true\", \"false\" or no value');\n      }\n      return;\n    }\n    this.doLoop = (this.illegalLoop === false && this.loop === true);\n  };\n\n\n  Song.prototype.setPlayhead = function () {\n    //console.log('setPlayhead');\n    this.jump = true;\n    this.scheduler.looped = false;\n    this.scheduler.firstRun = true;\n    this.timeStamp = sequencer.getTime() * 1000;\n    this.startTime = this.timeStamp;\n\n    if (this.playing) {\n      this.allNotesOff();\n    }\n\n    //console.log(slice.call(arguments));\n    var pos = getPosition(this, slice.call(arguments)),\n      millis = pos.millis;\n    this.startMillis = millis;\n    this.playhead.set('millis', millis);\n    this.scheduler.setIndex(millis);\n    //console.log(pos.bar, this.bar);\n    //console.log(this.playhead.activeEvents);\n  };\n\n\n  Song.prototype.addEventListener = function () {\n    return addEventListener.apply(this, arguments);\n  };\n\n\n  Song.prototype.removeEventListener = function () {\n    removeEventListener.apply(this, arguments);\n  };\n\n\n  Song.prototype.addEvent = Song.prototype.addEvents = function () {\n    var track, part;\n\n    track = this.tracks[0];\n    if (track === undefined) {\n      track = sequencer.createTrack();\n      this.addTrack(track);\n    }\n    // we need to find the first part on the track, so update the track if necessary\n    if (track.needsUpdate) {\n      track.update();\n    }\n\n    part = track.parts[0];\n    if (part === undefined) {\n      part = sequencer.createPart();\n      track.addPart(part);\n    }\n    part.addEvents.apply(part, arguments);\n    //console.log(part.needsUpdate);\n    return this;\n  };\n\n\n  Song.prototype.addPart = Song.prototype.addParts = function () {\n    var track = this.tracks[0];\n    if (track === undefined) {\n      //console.log('-> create track for parts')\n      track = sequencer.createTrack();\n      this.addTrack(track);\n    }\n    //console.log(arguments);\n    track.addParts.apply(track, arguments);\n    return this;\n  };\n\n\n  Song.prototype.addTrack = function () {\n    var args = getArguments(arguments),\n      arg0 = args[0],\n      numArgs = args.length;\n\n    if (typeString(arg0) === 'array' || numArgs > 1) {\n      console.warn('please use addTracks() if you want to get more that one tracks');\n      args = [arg0];\n    }\n    return addTracks(args, this)[0];\n  };\n\n\n  Song.prototype.addTracks = function () {\n    //console.log(arguments, getArguments(arguments));\n    return addTracks(getArguments(arguments), this);\n  };\n\n\n  Song.prototype.getTrack = function (arg) {\n    return getTrack(arg, this);\n  };\n\n\n  Song.prototype.getTracks = function () {\n    var args = getArguments(arguments),\n      track, i,\n      result = [];\n    for (i = args.length - 1; i >= 0; i--) {\n      track = getTrack(args[i], this);\n      if (track) {\n        result.push(track);\n      }\n    }\n    return result;\n  };\n\n\n  Song.prototype.getPart = function () {\n    var args = getArguments(arguments);\n    if (args.length > 1) {\n      console.warn('please use getParts() if you want to get more that one part');\n    }\n    //@TODO: check if a call is faster\n    //return getParts(args, this)[0];\n    return getParts.call(this, args)[0];\n  };\n\n\n  Song.prototype.getParts = function () {\n    var args = getArguments(arguments);\n    //return getParts(args, this);\n    return getParts.call(this, args);\n  };\n\n\n  Song.prototype.removeTrack = function () {\n    var args = getArguments(arguments);\n    //var args = getArguments.apply(null, arguments);\n    if (args.length > 1) {\n      console.warn('please use removeTracks() if you want to remove more that one tracks');\n    }\n    //return _removeTracks(args, this)[0];\n    return _removeTracks.call(this, args)[0];\n  };\n\n\n  Song.prototype.removeTracks = function () {\n    return _removeTracks.call(this, getArguments(arguments));\n  };\n\n\n  Song.prototype.setPlaybackSpeed = function (speed) {\n    if (speed < 0.01 || speed > 100) {\n      console.error('playback speed has to be > 0.01 and < 100');\n      return;\n    }\n    var ticks = this.ticks,\n      startLoop, endLoop, newPos;\n\n    this.playbackSpeed = speed;\n    //console.log('setPlaybackSpeed -> update()');\n    this.update(true);\n\n    // get the new position of the locators after the update\n    if (this.loopStartTicks !== undefined) {\n      startLoop = this.getPosition('ticks', this.loopStartTicks);\n      this.loopStart = startLoop.millis;\n      this.loopStartTicks = startLoop.ticks;\n    }\n    if (this.loopEndTicks !== undefined) {\n      endLoop = this.getPosition('ticks', this.loopEndTicks);\n      this.loopEnd = endLoop.millis;\n      this.loopEndTicks = endLoop.ticks;\n    }\n\n    // get the new position of the playhead after the update\n    newPos = this.getPosition('ticks', ticks);\n    this.setPlayhead('ticks', newPos.ticks);\n  };\n\n\n  Song.prototype.gridToSong = function (x, y, width, height) {\n    return gridToSong(this, x, y, width, height);\n  };\n\n\n  Song.prototype.noteToGrid = function (note, height) {\n    return noteToGrid(note, height, this);\n  };\n\n\n  Song.prototype.eventToGrid = function (event, width, height) {\n    return eventToGrid(event, width, height, this);\n  };\n\n\n  Song.prototype.positionToGrid = function (position, width) {\n    return positionToGrid(position, width, this);\n  };\n\n\n  Song.prototype.getPosition = function () {\n    //console.log(slice.call(arguments));\n    return getPosition(this, slice.call(arguments));\n  };\n\n\n  Song.prototype.ticksToMillis = function (ticks, beyondEndOfSong) {\n    return ticksToMillis(this, ticks, beyondEndOfSong);\n  };\n\n\n  Song.prototype.millisToTicks = function (millis, beyondEndOfSong) {\n    return millisToTicks(this, millis, beyondEndOfSong);\n  };\n\n\n  Song.prototype.ticksToBars = function (ticks, beyondEndOfSong) {\n    return ticksToBars(this, ticks, beyondEndOfSong);\n  };\n\n\n  Song.prototype.millisToBars = function (millis, beyondEndOfSong) {\n    return millisToBars(this, millis, beyondEndOfSong);\n  };\n\n\n  Song.prototype.barsToTicks = function () {\n    return barsToTicks(this, slice.call(arguments));\n  };\n\n\n  Song.prototype.barsToMillis = function () {\n    return barsToMillis(this, slice.call(arguments));\n  };\n\n\n  Song.prototype.findEvent = Song.prototype.findEvents = function (pattern) {\n    return findEvent(this, pattern);\n  };\n\n\n  Song.prototype.findNote = Song.prototype.findNotes = function (pattern) {\n    return findNote(this, pattern);\n  };\n\n\n  Song.prototype.getStats = function (pattern) {\n    return getStats(this, pattern);\n  };\n\n\n  Song.prototype.createGrid = function (config) {\n    if (this.grid === undefined) {\n      this.grid = createGrid(this, config);\n    } else {\n      this.grid.update(config);\n    }\n    return this.grid;\n  };\n\n\n  Song.prototype.update = function (updateTimeEvents) {\n    //console.log('Song.update()');\n    update(this, updateTimeEvents);\n  };\n\n\n  Song.prototype.updateGrid = function (config) {\n    this.grid.update(config);\n    return this.grid;\n  };\n\n\n  Song.prototype.updateTempoEvent = function (event, bpm) {\n    if (event.type !== sequencer.TEMPO) {\n      if (sequencer.debug >= 4) {\n        console.error('this is not a tempo event');\n      }\n      return;\n    }\n    if (event.song !== this) {\n      if (sequencer.debug >= 4) {\n        console.error('this event has not been added to this song yet');\n      }\n      return;\n    }\n    var ticks = this.ticks,\n      percentage = this.percentage;\n    event.bpm = bpm;\n    this.update(true);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n\n  Song.prototype.updateTimeSignatureEvent = function (event, nominator, denominator) {\n    if (event.type !== sequencer.TIME_SIGNATURE) {\n      if (sequencer.debug >= 4) {\n        console.error('this is not a time signature event');\n      }\n      return;\n    }\n    if (event.song !== this) {\n      if (sequencer.debug >= 4) {\n        console.error('this event has not been added to this song yet');\n      }\n      return;\n    }\n    var ticks = this.ticks,\n      percentage = this.percentage;\n    event.nominator = nominator || event.nominator;\n    event.denominator = denominator || event.denominator;\n    this.update(true);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n\n  Song.prototype.getTempoEvents = function () {\n    return getTimeEvents(sequencer.TEMPO, this);\n  };\n\n\n  Song.prototype.getTimeSignatureEvents = function () {\n    return getTimeEvents(sequencer.TIME_SIGNATURE, this);\n  };\n\n\n  Song.prototype.updatePlayheadAndLocators = function (ticks) {\n    var newStartPos,\n      newEndPos,\n      startPos = this.loopStartPosition,\n      endPos = this.loopEndPosition,\n      newPos;\n\n    // get the new position of the locators after the update\n    if (startPos !== undefined) {\n      /*\n      newStartPos = this.getPosition('barsbeats', startPos.bar, startPos.beat, startPos.sixteenth, startPos.tick);\n      if(newStartPos.ticks > this.durationTicks || newStartPos.bar > this.bars + 1){\n          newStartPos = this.getPosition('barsbeats', 1, 1, 1, 0);\n          console.log('start', newStartPos.barsAsString);\n      }\n      */\n      newStartPos = this.getPosition('ticks', startPos.ticks);\n      this.loopStart = newStartPos.millis;\n      this.loopStartTicks = newStartPos.ticks;\n      this.loopStartPosition = newStartPos;\n    }\n    if (endPos !== undefined) {\n      /*\n      newEndPos = this.getPosition('barsbeats', endPos.bar, endPos.beat, endPos.sixteenth, endPos.tick);\n      if(newEndPos.ticks > this.durationTicks || newEndPos.bar > this.bars + 1){\n          newEndPos = this.getPosition('barsbeats', this.bars, 1, 1, 0);\n          console.log('end', newEndPos.barsAsString);\n      }\n      */\n      //console.log('right locator', endPos.barsAsString, endPos.ticks);\n      newEndPos = this.getPosition('ticks', endPos.ticks);\n      if (newEndPos.ticks > this.durationTicks) {\n        //console.log('right locator beyond end of song');\n        newEndPos = this.getPosition('ticks', this.bars);\n      }\n      this.loopEnd = newEndPos.millis;\n      this.loopEndTicks = newEndPos.ticks;\n      this.loopEndPosition = newEndPos;\n      //console.log('right locator', newEndPos.barsAsString, newEndPos.ticks);\n    }\n    //console.log('l', this.loopStartPosition, 'r', this.loopEndPosition);\n\n    // get the new position of the playhead after the update\n    /*\n            newPos = this.getPosition('ticks', ticks);\n            if(newPos.ticks > this.durationTicks || newPos.bar > this.bars + 1){\n                newPos = this.getPosition('barsbeats', 1, 1, 1, 0);\n                //console.log('playhead', newPos.barsAsString);\n            }\n    */\n    newPos = this.getPosition('ticks', ticks);\n    if (this.doLoop && newPos.ticks > this.durationTicks) {\n      //console.log('playhead beyond end of song');\n      this.setPlayhead('ticks', 0);\n    } else {\n      this.setPlayhead('ticks', newPos.ticks);\n    }\n\n\n    this.loopDuration = this.illegalLoop === true ? 0 : this.loopEnd - this.loopStart;\n    /*\n            console.log(percentage);\n            newPos = this.getPosition('percentage', percentage);\n            this.setPlayhead('ticks', newPos.ticks);\n    */\n  };\n\n\n  Song.prototype.setTempo = function (bpm, update) {\n    var timeEvents = getTimeEvents(sequencer.TEMPO, this),\n      i, event,\n      ticks = this.ticks,\n      percentage = this.percentage,\n      ratio = bpm / timeEvents[0].bpm;\n\n    for (i = timeEvents.length - 1; i >= 0; i--) {\n      event = timeEvents[i];\n      event.bpm = ratio * event.bpm;\n    }\n    this.bpm = bpm;\n\n    if (update === false) {\n      return;\n    }\n    //console.log('setTempo -> update()');\n    this.update(true);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n\n  Song.prototype.setTimeSignature = function (nominator, denominator, update) {\n    var timeEvents = getTimeEvents(sequencer.TIME_SIGNATURE, this),\n      i, event,\n      percentage = this.percentage,\n      ticks = this.ticks;\n\n    for (i = timeEvents.length - 1; i >= 0; i--) {\n      event = timeEvents[i];\n      event.nominator = nominator;\n      event.denominator = denominator;\n    }\n    this.nominator = nominator;\n    this.denominator = denominator;\n\n    if (update === false) {\n      return;\n    }\n\n    //console.log('setTimeSignature -> update()');\n    this.update(true);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n\n  Song.prototype.resetTempo = function (bpm) {\n    var firstTempoEvent = getTimeEvents(sequencer.TEMPO, this)[0],\n      timeEvents = this.timeEvents;\n\n    firstTempoEvent.bpm = bpm;\n\n    timeEvents = removeFromArray2(timeEvents, function (event) {\n      if (event.type === 0x51) {\n        return true;\n      }\n      return false;\n    });\n\n    this.numTimeEvents = timeEvents.length;\n    this.update(true);\n  };\n\n\n  Song.prototype.resetTimeSignature = function (nominator, denominator) {\n    var firstTimeSignatureEvent = getTimeEvents(sequencer.TIME_SIGNATURE, this)[0],\n      timeEvents = this.timeEvents,\n      ticks = this.ticks;\n\n    firstTimeSignatureEvent.nominator = nominator;\n    firstTimeSignatureEvent.denominator = denominator;\n\n    timeEvents = removeFromArray2(timeEvents, function (event) {\n      if (event.type === 0x58) {\n        return true;\n      }\n      return false;\n    });\n\n    this.numTimeEvents = timeEvents.length;\n    this.update(true);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n\n  Song.prototype.addTimeEvent = Song.prototype.addTimeEvents = function () {\n    var events = getArguments(arguments),\n      ticks = this.ticks,\n      i, event, position;\n\n    // console.log(events);\n\n    for (i = events.length - 1; i >= 0; i--) {\n      event = events[i];\n      if (event.className === 'MidiEvent') {\n        if (event.type === sequencer.TEMPO) {\n          this.timeEvents.push(event);\n        } else if (event.type === sequencer.TIME_SIGNATURE) {\n          /*\n              A time signature event can only be positioned at the beginning of a bar,\n              so we look for the nearest bar and put the event there.\n          */\n          position = this.getPosition('ticks', event.ticks);\n          if (position.beat > position.nominator / 2) {\n            position = this.getPosition('barsbeats', position.bar + 1);\n          } else {\n            position = this.getPosition('barsbeats', position.bar);\n          }\n          event.ticks = position.ticks;\n          this.timeEvents.push(event);\n        }\n      }\n    }\n    this.numTimeEvents = this.timeEvents.length;\n    this.update(true);\n    //console.log('addTimeEvents', this.timeEvents);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n  /*\n      Song.prototype.addTimeEvent = function(){\n          var events = getArguments(arguments),\n              arg0 = events[0],\n              numArgs = events.length;\n  \n          if(typeString(arg0) === 'array' || numArgs > 1){\n              console.warn('please use addTimeEvents() if you want to add more that one time event');\n              events = [arg0];\n          }\n          addTimeEvents(events, this);\n      };\n  */\n\n  Song.prototype.removeTimeEvent = Song.prototype.removeTimeEvents = function () {\n    var tmp = getArguments(arguments),\n      i, maxi = tmp.length,\n      event,\n      ticks = this.ticks,\n      events = [];\n\n    for (i = 0; i < maxi; i++) {\n      event = tmp[i];\n      if (event !== this.tempoEvent && event !== this.timeSignatureEvent) {\n        events.push(event);\n      }\n    }\n    //console.log(events);\n\n    this.timeEvents = removeFromArray(events, this.timeEvents);\n    this.numTimeEvents = this.timeEvents.length;\n    this.update(true);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n\n  Song.prototype.removeDoubleTimeEvents = function () {\n    var events = [],\n      i, event, ticks, type,\n      eventsByTicks = {\n        '81': {},\n        '88': {},\n      };\n\n    //console.log('before', this.timeEvents);\n\n    for (i = this.timeEvents.length - 1; i >= 0; i--) {\n      event = this.timeEvents[i];\n      if (eventsByTicks[event.type][event.ticks] !== undefined) {\n        continue;\n      }\n\n      type = event.type;\n      ticks = event.ticks;\n      eventsByTicks[type][ticks] = event;\n\n      if (ticks === 0) {\n        if (type === 0x51) {\n          this.tempoEvent = event;\n        } else if (type === 0x58) {\n          this.timeSignatureEvent = event;\n        }\n      }\n    }\n\n    objectForEach(eventsByTicks['81'], function (event) {\n      events.push(event);\n    });\n\n    objectForEach(eventsByTicks['88'], function (event) {\n      events.push(event);\n    });\n\n    this.timeEvents = events;\n    this.update(true);\n\n    //console.log('after', this.timeEvents);\n    //this.timeEvents.forEach(function(event){\n    //    console.log(event.barsAsString, event.bpm, event.nominator, event.denominator);\n    //});\n    //console.log('tempo', this.tempoEvent.bpm, this.tempoEvent.nominator, this.tempoEvent.denominator, this.tempoEvent.barsAsString);\n    //console.log('time signature', this.timeSignatureEvent.bpm, this.timeSignatureEvent.nominator, this.timeSignatureEvent.denominator, this.timeSignatureEvent.barsAsString);\n  };\n\n\n  Song.prototype.setPitchRange = function (min, max) {\n    var me = this;\n    me.lowestNote = min;\n    me.highestNote = max;\n    me.numNotes = me.pitchRange = me.highestNote - me.lowestNote + 1;\n  };\n\n\n  Song.prototype.trim = function () {\n    checkDuration(this, true);\n  };\n\n\n  Song.prototype.setDurationInBars = function (bars) {\n    var me = this,\n      removedEvents = me.findEvent('bar > ' + bars),\n      removedParts = [],\n      changedTracks = [],\n      changedParts = [],\n      dirtyTracks = {},\n      dirtyParts = {};\n\n    //console.log(removedEvents);\n\n    removedEvents.forEach(function (event) {\n      var trackId = event.trackId,\n        partId = event.partId;\n\n      if (dirtyTracks[trackId] === undefined) {\n        dirtyTracks[trackId] = [];\n      }\n      dirtyTracks[trackId].push(event);\n\n      if (dirtyParts[partId] === undefined) {\n        dirtyParts[partId] = event.part;\n        //console.log(me.getPart(partId));\n      }\n    });\n\n    objectForEach(dirtyTracks, function (events, trackId) {\n      var track = me.getTrack(trackId);\n      //console.log(track.name)\n      track.removeEvents(events);\n      changedTracks.push(track);\n    });\n\n    objectForEach(dirtyParts, function (part, partId) {\n      if (part.events.length === 0) {\n        //console.log(partId, 'has no events');\n        part.track.removePart(part);\n        removedParts.push(part);\n      } else {\n        changedParts.push(part);\n      }\n    });\n\n    me.bars = bars;\n    me.lastBar = bars;\n\n    // user needs to call song.update() after setDurationInBars()!\n    //checkDuration(this);\n\n    //console.log(this.ticks);\n\n    return {\n      removedEvents: removedEvents,\n      removedParts: removedParts,\n      changedTracks: changedTracks,\n      changedParts: changedParts\n    };\n  };\n\n\n  Song.prototype.addEffect = function () {\n  };\n\n\n  Song.prototype.removeEffect = function () {\n  };\n\n\n  Song.prototype.setVolume = function () { // value, Track, Track, Track, etc. in any order\n    var args = slice.call(arguments),\n      numArgs = args.length,\n      tracks = [],\n      value, i;\n\n    function loop(data, i, maxi) {\n      for (i = 0; i < maxi; i++) {\n        var arg = data[i],\n          type = typeString(arg);\n\n        if (type === 'array') {\n          loop(arg, 0, arg.length);\n        } else if (type === 'number') {\n          value = arg;\n        } else if (arg.className === 'Track') {\n          tracks.push(arg);\n        }\n      }\n    }\n\n    if (numArgs === 1) {\n      value = args[0];\n      if (isNaN(value)) {\n        console.warn('please pass a number');\n        return;\n      }\n      this.volume = value < 0 ? 0 : value > 1 ? 1 : value;\n      this.gainNode.gain.value = this.volume;\n    } else {\n      loop(args, 0, numArgs);\n      for (i = tracks.length - 1; i >= 0; i--) {\n        tracks[i].setVolume(value);\n      }\n    }\n  };\n\n\n  Song.prototype.getVolume = function () {\n    return this.gainNode.gain.value;\n  };\n\n\n  Song.prototype.connect = function () {\n    this.gainNode.connect(masterGainNode);\n    //this.gainNode.connect(context.destination);\n  };\n\n\n  Song.prototype.disconnect = function () {\n    this.gainNode.disconnect(masterGainNode);\n    //this.gainNode.disconnect(context.destination);\n  };\n\n  /*\n      Song.prototype.cleanUp = function(){\n          // add other references that need to be removed\n          this.disconnect(masterGainNode);\n          //this.disconnect(context.destination);\n      };\n  */\n\n  Song.prototype.getMidiInputs = function (cb) {\n    getMidiInputs(cb, this);\n  };\n\n\n  Song.prototype.getMidiOutputs = function (cb) {\n    getMidiOutputs(cb, this);\n  };\n\n\n  Song.prototype.setTrackSolo = function (soloTrack, flag) {\n    var i, track;\n    for (i = this.numTracks - 1; i >= 0; i--) {\n      track = this.tracks[i];\n      if (flag === true) {\n        track.mute = track === soloTrack ? !flag : flag;\n      } else if (flag === false) {\n        track.mute = false;\n      }\n      track.solo = track === soloTrack ? flag : false;\n    }\n  };\n\n\n  Song.prototype.muteAllTracks = function (flag) {\n    var i, track;\n    for (i = this.numTracks - 1; i >= 0; i--) {\n      track = this.tracks[i];\n      track.mute = flag;\n    }\n  };\n\n\n  Song.prototype.setMetronomeVolume = function (value) {\n    this.metronome.setVolume(value);\n  };\n\n  Song.prototype.configureMetronome = function (config) {\n    //console.log(config)\n    this.metronome.configure(config);\n  };\n\n  Song.prototype.resetMetronome = function () {\n    this.metronome.reset();\n  };\n\n\n  Song.prototype.setPrecount = function (value) {\n    this.precount = value;\n  };\n\n\n  Song.prototype.allNotesOff = function () {\n    //console.log('song.allNotesOff');\n    /*\n    var i;\n    for(i in this.tracks){\n        if(this.tracks.hasOwnProperty(i)){\n            this.tracks[i].instrument.allNotesOff();\n        }\n    }\n    */\n    var time = this.scheduler.lastEventTime + 100;\n    objectForEach(this.tracks, function (track) {\n      track.allNotesOff();\n      if (track.routeToMidiOut) {\n        // console.log(track.channel);\n        objectForEach(track.midiOutputs, function (midiOutput) {\n          midiOutput.send([0xB0 + track.channel, 0x7B, 0x00], time + getTimeDiff() + 100 + track.audioLatency); // stop all notes\n          midiOutput.send([0xB0 + track.channel, 0x79, 0x00], time + getTimeDiff() + 100 + track.audioLatency); // reset all controllers\n        });\n      }\n      // track.audio.allNotesOff();\n      // track.instrument.allNotesOff();\n    });\n    this.metronome.allNotesOff();\n    this.scheduler.unschedule();\n    // this.resetExternalMidiDevices();\n  };\n\n\n  Song.prototype.resetExternalMidiDevices = function () {\n    //var time = this.millis + (sequencer.bufferTime * 1000); // this doesn't work, why? -> because the scheduler uses a different time\n    var time = this.scheduler.lastEventTime + 100;\n    if (isNaN(time)) {\n      time = 100;\n    }\n\n\n    // console.log('allNotesOff', this.millis, time);\n    objectForEach(this.midiOutputs, function (output) {\n      // console.log(output)\n      for (let i = 0xB0; i < 0xC0; i++) {\n        output.send([i, 0x7B, 0x00], time + getTimeDiff() + 100); // stop all notes\n        output.send([i, 0x79, 0x00], time + getTimeDiff() + 100); // reset all controllers\n      }\n      //output.send([176, 123, 0], sequencer.getTime());\n    });\n  };\n\n\n  Song.prototype.addMidiEventListener = function () {\n    return addMidiEventListener(arguments, this);\n  };\n\n\n  Song.prototype.removeMidiEventListener = function (id) {\n    removeMidiEventListener(id, this);\n  };\n\n\n  Song.prototype.removeMidiEventListeners = function () {\n    removeMidiEventListener(arguments, this);\n  };\n\n\n  Song.prototype.getMidiInputsAsDropdown = function (config) {\n    config = config || {\n      type: 'input'\n    };\n    return getMidiPortsAsDropdown(config, this);\n  };\n\n\n  Song.prototype.getMidiOutputsAsDropdown = function (config) {\n    config = config || {\n      type: 'output'\n    };\n    return getMidiPortsAsDropdown(config, this);\n  };\n\n  Song.prototype.setMidiInput = function (id, flag) {\n    setMidiInput(id, flag, this);\n  };\n\n\n  Song.prototype.setMidiOutput = function (id, flag) {\n    setMidiOutput(id, flag, this);\n  };\n\n\n  Song.prototype.getNoteLengthName = function (ticks) {\n    return getNoteLengthName(this, ticks);\n\n    /*\n            var args = slice(arguments);\n            if(args.length > 0){\n                pos = getPosition.apply(this, args);\n            }\n    */\n  };\n\n  //sequencer.Song = Song;\n\n  sequencer.createSong = function (config) {\n    return new Song(config);\n  };\n\n\n  sequencer.protectedScope.addInitMethod(function () {\n    context = sequencer.protectedScope.context;\n    timedTasks = sequencer.protectedScope.timedTasks;\n    repetitiveTasks = sequencer.protectedScope.repetitiveTasks;\n    masterGainNode = sequencer.protectedScope.masterGainNode;\n\n    createMidiEvent = sequencer.createMidiEvent;\n    createGrid = sequencer.protectedScope.createGrid;\n\n    initMidi = sequencer.protectedScope.initMidiSong;\n    setMidiInput = sequencer.protectedScope.setMidiInputSong;\n    setMidiOutput = sequencer.protectedScope.setMidiOutputSong;\n    getMidiInputs = sequencer.protectedScope.getMidiInputs;\n    getMidiOutputs = sequencer.protectedScope.getMidiOutputs;\n    addMidiEventListener = sequencer.protectedScope.addMidiEventListener;\n    getMidiPortsAsDropdown = sequencer.protectedScope.getMidiPortsAsDropdown;\n    removeMidiEventListener = sequencer.protectedScope.removeMidiEventListener;\n\n    getPosition = sequencer.protectedScope.getPosition;\n    millisToTicks = sequencer.protectedScope.millisToTicks;\n    ticksToMillis = sequencer.protectedScope.ticksToMillis;\n    ticksToBars = sequencer.protectedScope.ticksToBars;\n    millisToBars = sequencer.protectedScope.millisToBars;\n    barsToTicks = sequencer.protectedScope.barsToTicks;\n    barsToMillis = sequencer.protectedScope.barsToMillis;\n\n    typeString = sequencer.protectedScope.typeString;\n    removeFromArray = sequencer.protectedScope.removeFromArray;\n    removeFromArray2 = sequencer.protectedScope.removeFromArray2;\n    findEvent = sequencer.findEvent;\n    findNote = sequencer.findNote;\n    getStats = sequencer.getStats;\n\n    gridToSong = sequencer.gridToSong;\n    noteToGrid = sequencer.noteToGrid;\n    eventToGrid = sequencer.eventToGrid;\n    positionToGrid = sequencer.positionToGrid;\n\n    getArguments = sequencer.protectedScope.getArguments;\n    objectForEach = sequencer.protectedScope.objectForEach;\n    getNoteLengthName = sequencer.protectedScope.getNoteLengthName;\n\n    update = sequencer.protectedScope.update;\n    checkDuration = sequencer.protectedScope.checkDuration;\n    addMetronomeEvents = sequencer.protectedScope.addMetronomeEvents;\n\n    followEvent = sequencer.protectedScope.followEvent;\n    createPlayhead = sequencer.protectedScope.createPlayhead;\n    createScheduler = sequencer.protectedScope.createScheduler;\n    createFollowEvent = sequencer.protectedScope.createFollowEvent;\n    createMetronome = sequencer.protectedScope.createMetronome;\n\n    addEventListener = sequencer.protectedScope.songAddEventListener;\n    removeEventListener = sequencer.protectedScope.songRemoveEventListener;\n    dispatchEvent = sequencer.protectedScope.songDispatchEvent;\n    addSong = sequencer.protectedScope.addSong;\n\n    getTimeDiff = sequencer.getTimeDiff;\n\n  });\n}\nfunction songEventListener() {\n\n  'use strict';\n\n  var\n    slice = Array.prototype.slice,\n\n    // import\n    typeString, // defined in util.js\n    listenerIndex = 0,\n\n    addEventListener,\n    removeEventListener,\n    dispatchEvent;\n\n\n  dispatchEvent = function () {\n    var i, tmp, listener,\n      args = slice.call(arguments),\n      numArgs = args.length,\n      song = args[0],\n      type = args[1],\n      params = [];\n\n    //console.log(arguments, args);\n\n    // if there are arguments specified, put them before the argument song\n    if (numArgs > 2) {\n      i = 2;\n      while (i < numArgs) {\n        params.push(args[i]);\n        i++;\n      }\n    }\n    params.push(song);\n\n    tmp = song.listeners[type];\n    if (tmp === undefined || tmp.length === undefined) {\n      return;\n    }\n\n    for (i = tmp.length - 1; i >= 0; i--) {\n      listener = tmp[i];\n      if (listener.callback) {\n        listener.callback.apply(null, params);\n      }\n    }\n  };\n\n\n  //@param: type, callback\n  //@param: type, data, callback\n  addEventListener = function () {\n    var args = slice.call(arguments),\n      listenerId,\n      type = args[0];\n\n    switch (type) {\n      case 'play':\n      case 'stop':\n      case 'pause':\n      case 'end':\n      case 'record_start':\n      case 'record_stop':\n      case 'record_precount':\n      case 'record_preroll':\n      case 'recorded_events':\n      case 'latency_adjusted':\n      case 'loop_off':\n      case 'loop_on':\n      case 'loop': // the playhead jumps from the loop end position to the loop start position\n      case 'sustain_pedal':\n        if (this.listeners[type] === undefined) {\n          this.listeners[type] = [];\n        }\n        listenerId = type + '_' + listenerIndex++;\n        this.listeners[type].push({\n          id: listenerId,\n          callback: args[1]\n        });\n        //console.log(type, listenerId);\n        return listenerId;\n      case 'note':\n      case 'event':\n      case 'position':\n        //console.log(type, args[1], args[2]);\n        return this.followEvent.addEventListener(type, args[1], args[2]);\n      default:\n        console.log(type, 'is not a supported event');\n    }\n  };\n\n\n  removeEventListener = function () {\n    var args = slice.call(arguments),\n      tmp,\n      arg0 = args[0],\n      callback = args[1],\n      type, id,\n      filteredListeners = [],\n      i, listener;\n\n    if (arg0.indexOf('_') !== -1) {\n      tmp = arg0.split('_');\n      type = tmp[0];\n      id = arg0;\n    } else {\n      type = arg0;\n    }\n\n    // an array of listener ids is provided so this is not a transport event -> send to FollowEvent\n    if (typeString(type) === 'array') {\n      return this.followEvent.removeEventListener(args);\n    }\n\n\n    switch (type) {\n      case 'play':\n      case 'stop':\n      case 'pause':\n      case 'end':\n      case 'record_start':\n      case 'record_stop':\n      case 'record_precount':\n      case 'record_preroll':\n      case 'recorded_events':\n      case 'latency_adjusted':\n      case 'loop_off':\n      case 'loop_on':\n      case 'loop': // the playhead jumps from the loop end position to the loop start position\n      case 'sustain_pedal':\n        tmp = this.listeners[type];\n        if (tmp && tmp.length > 0) {\n          for (i = tmp.length - 1; i >= 0; i--) {\n            listener = tmp[i];\n            // remove by id\n            if (id !== undefined) {\n              if (listener.id !== id) {\n                filteredListeners.push(listener);\n              }\n              // remove by callback\n            } else if (callback !== undefined && listener.callback !== callback) {\n              filteredListeners.push(listener);\n            }\n          }\n          this.listeners[type] = [].concat(filteredListeners);\n        }\n        break;\n      case 'note':\n      case 'event':\n      case 'position':\n        return this.followEvent.removeEventListener(args);\n      default:\n        console.error('unsupported event');\n    }\n  };\n\n\n  sequencer.protectedScope.songAddEventListener = addEventListener;\n  sequencer.protectedScope.songRemoveEventListener = removeEventListener;\n  sequencer.protectedScope.songDispatchEvent = dispatchEvent;\n\n  sequencer.protectedScope.addInitMethod(function () {\n    typeString = sequencer.protectedScope.typeString;\n  });\n\n}function songFollowEvent() {\r\n\r\n  'use strict';\r\n\r\n  var\r\n    //import\r\n    findEvent, // → defined in find_position.js\r\n    typeString, // → defined in util.js\r\n    getPosition, // → defined in get_position.js\r\n    midiEventNameByNumber, // → defined in midi_event_names.js\r\n    midiEventNumberByName, // → defined in midi_event_names.js\r\n\r\n    listenerIndex = 0, // global id that increases per created eventlistener\r\n\r\n    supportedTimeEvents = {\r\n\r\n      //bars and beats\r\n      bar: 1,\r\n      beat: 1,\r\n      sixteenth: 1,\r\n      tick: 0, // the granularity of requestAnimationFrame is too coarse for tick values\r\n      ticks: 1, // from start of song\r\n      barsbeats: 1, // as number (will be interpreted as bar) or as array of numbers: [bar,beat,sixteenth,tick]\r\n      barsandbeats: 1, // same as above\r\n\r\n      //time\r\n      hour: 1,\r\n      minute: 1,\r\n      second: 1,\r\n      millisecond: 0, // the granularity of requestAnimationFrame is too coarse for millisecond values\r\n      millis: 1, // from start of song\r\n      time: 1 // as number (will be interpreted as second) or as array of numbers: [hour,minute,second,millisecond]\r\n    },\r\n\r\n    supportedOperators = '= == === > >= < <= != !== %=', //'= == === > >= < <= != !== *= ^= ~= $=',\r\n    //supportedOperatorsRegex = new RegExp(' ' + supportedOperators.replace(/\\s+/g,' | ').replace(/\\*/,'\\\\*') + ' '),\r\n    supportedOperatorsRegex = new RegExp(' ' + supportedOperators.replace(/\\s+/g, ' | ') + ' '),\r\n\r\n\r\n    //private\r\n    getEvents,\r\n    checkOperatorConflict,\r\n\r\n    //private class, only accessible in Song\r\n    FollowEvent;\r\n\r\n\r\n  FollowEvent = function (song) {\r\n    this.song = song;\r\n\r\n    this.allListenersById = {};\r\n    this.allListenersByType = {};\r\n    this.searchPatterns = [];\r\n\r\n    this.eventListenersBySearchstring = {};\r\n    this.positionListenersBySearchstring = {};\r\n\r\n    this.allListenersByType = {\r\n      'event': {\r\n        // all events that are registered as event, keys are the event ids, values are array with listener ids\r\n        'instance': {},\r\n        // all events that are registered after a search action, for instance: addEventListener('event', 'velocity > 50', callback)\r\n        'searchstring': {}\r\n      },\r\n      'position': {\r\n        // millis, ticks, time, barsbeats\r\n        'ticks': [],\r\n        // every bar, beat, sixteenth, hour, minute, second\r\n        'repetitive': {},\r\n        // on single conditional values of bar, beat, sixteenth, hour, minute, second, e.g. bar > 3, bar %= 2, bar === 3\r\n        'conditional_simple': {},\r\n        // on conditional values of bar, beat, sixteenth, hour, minute, second, e.g. bar > 3 < 10\r\n        'conditional_complex': {}\r\n      }\r\n    };\r\n  };\r\n\r\n\r\n  FollowEvent.prototype.updateSong = function () {\r\n\r\n    //adjust all event listeners based on registered events and events found by a searchstring\r\n\r\n    var i, j, e, eventId, events, tmp, data,\r\n      listenerIds = [], listeners,\r\n      listener, listenerId;\r\n\r\n    listeners = this.allListenersByType.event.instance;\r\n    // loop over event ids\r\n    for (eventId in listeners) {\r\n      if (listeners.hasOwnProperty(eventId)) {\r\n        // check if event has been removed\r\n        if (this.song.eventsById[eventId] === undefined) {\r\n          // get all listeners that are registered to this event and delete them\r\n          listenerIds = listeners[eventId];\r\n          for (i = listenerIds.length - 1; i >= 0; i--) {\r\n            listenerId = listenerIds[i];\r\n            delete this.allListenersById[listenerId];\r\n          }\r\n          //delete listeners[eventId];\r\n          delete this.allListenersByType.event.instance[eventId];\r\n        }\r\n      }\r\n    }\r\n\r\n    //console.log(listeners);\r\n\r\n    // remove all listeners that are currently bound to found events\r\n    listeners = this.allListenersByType.event.searchstring;\r\n    listenerIds = [];\r\n    for (eventId in listeners) {\r\n      // step 1: collect all ids of listeners\r\n      if (listeners.hasOwnProperty(eventId)) {\r\n        listenerIds = listenerIds.concat(listeners[eventId]);\r\n      }\r\n    }\r\n    // step 2: delete the listeners\r\n    for (i = listenerIds.length - 1; i >= 0; i--) {\r\n      delete this.allListenersById[listenerIds[i]];\r\n    }\r\n\r\n    // all event listeners have been removed, now create a new object and run search string on updated song\r\n    this.allListenersByType.event.searchstring = {};\r\n    tmp = this.allListenersByType.event.searchstring;\r\n\r\n    //@TODO: this can't possibly work!! -> but it actually does..\r\n\r\n    for (i = this.searchPatterns.length - 1; i >= 0; i--) {\r\n      data = this.searchPatterns[i];\r\n      events = findEvent(this.song, data.searchstring);\r\n      //console.log(data, events);\r\n\r\n      //add listeners for both note on and note off and ignore the other event types\r\n      if (tmp.type === 'note') {\r\n        events = findEvent(events, 'type = NOTE_ON OR type = NOTE_OFF');\r\n      }\r\n\r\n      for (j = events.length - 1; j >= 0; j--) {\r\n        e = events[j];\r\n\r\n        listenerId = 'event_' + listenerIndex++;\r\n        listener = {\r\n          id: listenerId,\r\n          event: e,\r\n          type: data.type,\r\n          subtype: data.subtype,\r\n          callback: data.callback\r\n        };\r\n\r\n        this.allListenersById[listenerId] = listener;\r\n\r\n        if (tmp[e.id] === undefined) {\r\n          tmp[e.id] = [];\r\n        }\r\n        tmp[e.id].push(listenerId);\r\n        //listenerIds.push(listenerId);\r\n      }\r\n    }\r\n\r\n    //console.log(allListenersByType.event.searchstring);\r\n    //console.log(allListenersByType.event.instance);\r\n    //console.log(allListenersById);\r\n  };\r\n\r\n\r\n  FollowEvent.prototype.update = function () {\r\n    var\r\n      i,\r\n      position = this.song,\r\n      ticks = position.ticks,\r\n      events = [],\r\n      numEvents,\r\n      event;\r\n\r\n    //events = this.song.playhead.activeEvents;\r\n    events = this.song.playhead.collectedEvents;\r\n    //      events = this.song.playhead.changedEvents; -> do something with a snapshot here\r\n    numEvents = events.length;\r\n    /*\r\n            if(numEvents !== undefined && numEvents > 0){\r\n                console.log(numEvents, position.barsAsString, this.bar, this.beat);\r\n            }\r\n    */\r\n    //call event listeners registered to specific midi events\r\n    for (i = 0; i < numEvents; i++) {\r\n      event = events[i];\r\n      //console.log(event, event.ticks);\r\n      this.callEventListeners(event.id, event);\r\n    }\r\n\r\n    this.callListenersPositionTicks(ticks);\r\n\r\n    if (position.bar !== this.bar) {\r\n      this.bar = position.bar;\r\n      this.callListenersPositionRepetitive('bar');\r\n      this.callListenersPositionConditionalSimple('bar', this.bar);\r\n      this.callListenersPositionConditionalComplex('bar', this.bar);\r\n    }\r\n\r\n    if (position.beat !== this.beat) {\r\n      this.beat = position.beat;\r\n      this.callListenersPositionRepetitive('beat');\r\n      this.callListenersPositionConditionalSimple('beat', this.beat);\r\n      this.callListenersPositionConditionalComplex('beat', this.beat);\r\n    }\r\n\r\n    if (position.sixteenth !== this.sixteenth) {\r\n      this.sixteenth = position.sixteenth;\r\n      this.callListenersPositionRepetitive('sixteenth');\r\n      this.callListenersPositionConditionalSimple('sixteenth', this.sixteenth);\r\n      this.callListenersPositionConditionalComplex('sixteenth', this.sixteenth);\r\n    }\r\n\r\n    if (position.hour !== this.hour) {\r\n      this.hour = position.hour;\r\n      this.callListenersPositionRepetitive('hour');\r\n      this.callListenersPositionConditionalSimple('hour', this.hour);\r\n      this.callListenersPositionConditionalComplex('hour', this.hour);\r\n    }\r\n\r\n    if (position.minute !== this.minute) {\r\n      this.minute = position.minute;\r\n      this.callListenersPositionRepetitive('minute');\r\n      this.callListenersPositionConditionalSimple('minute', this.minute);\r\n      this.callListenersPositionConditionalComplex('minute', this.minute);\r\n    }\r\n\r\n    if (position.second !== this.second) {\r\n      this.second = position.second;\r\n      this.callListenersPositionRepetitive('second');\r\n      this.callListenersPositionConditionalSimple('second', this.second);\r\n      this.callListenersPositionConditionalComplex('second', this.second);\r\n    }\r\n  };\r\n\r\n\r\n  // call callbacks that are bound to a specific event\r\n  FollowEvent.prototype.callEventListeners = function (eventId, event) {\r\n    var i, id, tmp,\r\n      listener,\r\n      listenerIds = [];\r\n\r\n    tmp = this.allListenersByType.event.instance;\r\n    if (tmp[eventId]) {\r\n      listenerIds = listenerIds.concat(tmp[eventId]);\r\n    }\r\n\r\n    tmp = this.allListenersByType.event.searchstring;\r\n    if (tmp[eventId]) {\r\n      listenerIds = listenerIds.concat(tmp[eventId]);\r\n    }\r\n\r\n    if (listenerIds.length > 0) {\r\n      //console.log(listenerIds, event.id, event.ticks);\r\n    }\r\n\r\n    for (i = listenerIds.length - 1; i >= 0; i--) {\r\n      id = listenerIds[i];\r\n      listener = this.allListenersById[id];\r\n      if (listener.called !== true) {\r\n        listener.called = true;\r\n        listener.callback(event);\r\n        //console.log('called', event.id)\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // for instance: addEventListener('position', 'bar') -> call callback every bar\r\n  FollowEvent.prototype.callListenersPositionRepetitive = function (positionType) {\r\n    var listener,\r\n      listenerIds = this.allListenersByType.position.repetitive[positionType],\r\n      me = this;\r\n\r\n    if (listenerIds) {\r\n      listenerIds.forEach(function (id) {\r\n        listener = me.allListenersById[id];\r\n        listener.callback(listener.searchstring);\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  // can be repetitive or fire once:\r\n  // addEventListener('position', 'beat === 2') -> call callback every second beat\r\n  // addEventListener('position', 'bar === 2') -> call callback at start of bar 2\r\n  FollowEvent.prototype.callListenersPositionConditionalSimple = function (positionType, value) {\r\n    var listener,\r\n      data,\r\n      operator,\r\n      call = false,\r\n      listenerIds = this.allListenersByType.position.conditional_simple[positionType],\r\n      me = this;\r\n\r\n    //console.log(positionType, listenerIds);\r\n\r\n    if (listenerIds) {\r\n      listenerIds.forEach(function (id) {\r\n        // -> check condition\r\n        listener = me.allListenersById[id];\r\n        data = listener.data;\r\n        operator = listener.operator;\r\n\r\n        switch (operator) {\r\n          case '>':\r\n            call = value > data;\r\n            break;\r\n          case '<':\r\n            call = value < data;\r\n            break;\r\n          case '%=':\r\n            //call = (value + 1) % (data + 1) === 0;\r\n            call = value % data === 0;\r\n            break;\r\n          case '!=':\r\n          case '!==':\r\n            call = value !== data;\r\n            break;\r\n          case '===':\r\n            call = value === data;\r\n            break;\r\n        }\r\n\r\n        if (call === true) {\r\n          listener.callback(listener.searchstring);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  // for instance: addEventListener('position', 'bar > 2 < 7') -> call callback every bar from bar 3 to 6\r\n  FollowEvent.prototype.callListenersPositionConditionalComplex = function (positionType, value) {\r\n    var listener,\r\n      value1,\r\n      value2,\r\n      operator1,\r\n      operator2,\r\n      listenerIds = this.allListenersByType.position.conditional_complex[positionType],\r\n      me = this;\r\n\r\n    if (listenerIds) {\r\n      listenerIds.forEach(function (id) {\r\n        // -> check condition(s)\r\n        listener = me.allListenersById[id];\r\n        value1 = listener.value1;\r\n        value2 = listener.value2;\r\n        operator1 = listener.operator1;\r\n        operator2 = listener.operator2;\r\n        if (operator1 === '<') {\r\n          if (value < value1 || value > value2) {\r\n            listener.callback(listener.searchstring);\r\n          }\r\n        } else if (operator1 === '>') {\r\n          //console.log(value1,value2,value,operator1,operator2);\r\n          if (value > value1 && value < value2) {\r\n            listener.callback(listener.searchstring);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  FollowEvent.prototype.callListenersPositionTicks = function (ticks) {\r\n    var tmp = this.allListenersByType.position.ticks,\r\n      i, maxi = tmp.length,\r\n      listener;\r\n\r\n    for (i = 0; i < maxi; i++) {\r\n      listener = this.allListenersById[tmp[i]];\r\n      //console.log(listener,ticks);\r\n      if (ticks >= listener.ticks && !listener.called) {\r\n        listener.callback(listener.searchstring);\r\n        listener.called = true;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n      event types: event, note or position\r\n\r\n      event → when the playhead passes the event\r\n\r\n      note → both on the note on and the note off event, the events array may be an array of notes or an array of events\r\n\r\n      position\r\n          'bar' -> every bar\r\n          'bar = 3' -> start of bar 3\r\n          'bar > 3 < 7' -> every bar after bar 3 and before bar 7\r\n\r\n          'beat' -> every beat\r\n          'beat = 3' -> start of beat 3\r\n          'beat > 3' -> every beat after beat 3\r\n\r\n          etc.\r\n\r\n\r\n      addEventListener('event',eventsArray,callback)\r\n      addEventListener('event',findEvent(eventsArray,'type = NOTE_ON'),callback)\r\n\r\n      addEventListener('note',eventsArray,callback)\r\n      addEventListener('note',findEvent(eventsArray,'velocity = 90'),callback)\r\n\r\n      addEventListener('event','bar > 5', callback)\r\n      addEventListener('note','id = 45654544345',callback)\r\n\r\n      addEventListener('position','bar',callback)\r\n      addEventListener('position','bar > 5 < 17',callback)\r\n      addEventListener('position','beat',callback)\r\n\r\n      addEventListener('position','second',callback)\r\n      addEventListener('position','second > 5',callback)\r\n\r\n      addEventListener('position','barsbeats = 1,2,0,0',callback)\r\n\r\n\r\n  */\r\n\r\n  FollowEvent.prototype.addEventListener = function (type, data, callback) {\r\n    var i, events, event, storeArray, tmp, subtype,\r\n      listener, listenerId, listenerIds = [],\r\n      dataType = typeString(data);\r\n\r\n    //console.log(type,data,callback);\r\n    //console.log(dataType, data);\r\n\r\n    if (typeString(callback) !== 'function') {\r\n      console.error(callback, 'is not a function; please provide a function for callback');\r\n      return -1;\r\n    }\r\n\r\n\r\n    if (type === 'position') {\r\n      listenerId = this.addPositionEventListener(data, callback);\r\n      //console.log(allListenersByType, allListenersById);\r\n      return listenerId;\r\n    }\r\n\r\n\r\n    if (dataType === 'string') {\r\n      events = findEvent(this.song, data);\r\n      // store the search string so we can run it again after the song has changed\r\n      this.searchPatterns.push({\r\n        searchstring: data,\r\n        callback: callback,\r\n        type: 'event',\r\n        subtype: 'searchstring'\r\n      });\r\n      //console.log(data, events);\r\n\r\n      if (events.length === 0) {\r\n        return -1;\r\n      }\r\n      subtype = 'searchstring';\r\n      storeArray = this.allListenersByType.event.searchstring;\r\n      this.eventListenersBySearchstring[data] = tmp = [];\r\n    } else {\r\n      events = getEvents(type, data);\r\n      if (events === -1) {\r\n        return -1;\r\n      }\r\n      subtype = 'instance';\r\n      storeArray = this.allListenersByType.event.instance;\r\n    }\r\n\r\n\r\n    //add listeners for both note on and note off and ignore the other event types\r\n    if (type === 'note') {\r\n      events = findEvent(events, 'type = NOTE_ON OR type = NOTE_OFF');\r\n    }\r\n\r\n    for (i = events.length - 1; i >= 0; i--) {\r\n      event = events[i];\r\n      listenerId = 'event_' + listenerIndex++;\r\n      listener = {\r\n        id: listenerId,\r\n        event: event,\r\n        type: type,\r\n        subtype: subtype,\r\n        callback: callback\r\n      };\r\n\r\n      //allListeners.push(listener);\r\n      this.allListenersById[listenerId] = listener;\r\n\r\n      if (storeArray[event.id] === undefined) {\r\n        storeArray[event.id] = [];\r\n      }\r\n      storeArray[event.id].push(listenerId);\r\n      listenerIds.push(listenerId);\r\n\r\n      if (subtype === 'searchstring') {\r\n        tmp.push(listenerId);\r\n      }\r\n    }\r\n    //console.log(this.allListenersById, this.allListenersByType);\r\n\r\n    if (subtype === 'searchstring' || dataType === 'array' || type === 'note') {\r\n      return listenerIds;\r\n    } else {\r\n      //console.log('num listeners:', listenerIds.length);\r\n      return listenerIds[0];\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n\r\n      'bar'; -> repetitive\r\n      'bar == 3'; -> fire once\r\n      'bar < 3 > 5'; -> conditionally repetitive\r\n      'bar = 3 AND beat > 1' -> not supported here! (doesn't make sense, use events or position instead)\r\n\r\n      - check if has valid operators\r\n      - some types need an operator -> filter\r\n      - check values that the operator has to act upon\r\n      - split into repetitive and one-shot listeners\r\n\r\n  */\r\n  FollowEvent.prototype.addPositionEventListener = function (data, callback) {\r\n    var tmp,\r\n      listenerId, listener,\r\n      millis,\r\n      searchString = data.split(/[\\s+]/g),\r\n      len = searchString.length,\r\n      type = searchString[0],\r\n      operator1 = searchString[1],\r\n      value1 = searchString[2],\r\n      operator2 = searchString[3],\r\n      value2 = searchString[4],\r\n      value1Type = typeString(value1);\r\n    //hasOperator = supportedOperatorsRegex.test(data);\r\n\r\n    //console.log(data, searchString, len);\r\n    //console.log(type, value1, operator1, value2, operator2);\r\n\r\n    if (len !== 1 && len !== 3 && len !== 5) {\r\n      console.error('invalid search string, please consult documentation');\r\n      return false;\r\n    }\r\n    /*\r\n            //split position data into an array -> is now done in find_event.js -> not anymore ;)\r\n            if(value1 && value1.indexOf(',') !== -1){\r\n                value1 = value1.split(',');\r\n            }\r\n    \r\n            if(value2 && value2.indexOf(',') !== -1){\r\n                value2 = value2.split(',');\r\n            }\r\n    */\r\n\r\n    if (supportedTimeEvents[type] !== 1) {\r\n      console.error(type, 'is not a supported event id, please consult documentation');\r\n      return -1;\r\n    }\r\n\r\n    if (operator1 === '=' || operator1 === '==') {\r\n      operator1 = '===';\r\n    }\r\n\r\n\r\n    // check values per type\r\n\r\n    switch (type) {\r\n      // these type can only fire once\r\n      case 'barsbeats':\r\n      case 'barsandbeats':\r\n      case 'time':\r\n      //case 'musical_time':\r\n      //case 'linear_time':\r\n      case 'ticks':\r\n      case 'millis':\r\n        if (operator1 === undefined || operator1 !== '===') {\r\n          console.error(type, 'can only be used conditionally with the operators \\'===\\', \\'==\\' or \\'=\\'');\r\n          return -1;\r\n        }\r\n        // if(isNaN(value1) && typeString(value1) !== 'array'){\r\n        //  console.error('please provide a number or an array of numbers');\r\n        //  return -1;\r\n        // }\r\n        if (operator2) {\r\n          console.warn('this position event type can only be used with a single condition, ignoring second condition');\r\n        }\r\n        break;\r\n\r\n      // these type fire repeatedly or once\r\n      case 'bar': // -> fired once if used with === operator\r\n      case 'beat':\r\n      case 'sixteenth':\r\n      //case 'tick':\r\n      case 'hour': // -> fired once if used with === operator\r\n      case 'minute':\r\n      case 'second':\r\n        //case 'millisecond':\r\n\r\n        if (value1 && isNaN(value1)) {\r\n          console.error('please provide a number');\r\n          return -1;\r\n        }\r\n        if (value2 && isNaN(value2)) {\r\n          console.error('please provide a number');\r\n          return -1;\r\n        }\r\n        break;\r\n    }\r\n\r\n\r\n    // check operators\r\n\r\n    if (operator1 && supportedOperators.indexOf(operator1) === -1) {\r\n      console.error(operator1, 'is not a supported operator, please use any of', supportedOperators);\r\n      return -1;\r\n    }\r\n\r\n    if (operator1 && value1 === undefined) {\r\n      console.error('operator without value');\r\n      return;\r\n    }\r\n\r\n    if (operator2 && supportedOperators.indexOf(operator1) === -1) {\r\n      console.error(operator2, 'is not a supported operator, please use any of', supportedOperators);\r\n      return -1;\r\n    }\r\n\r\n    if (operator2 && value2 === undefined) {\r\n      console.error('operator without value');\r\n      return;\r\n    }\r\n\r\n    if (operator1 && operator2 && checkOperatorConflict(operator1, operator2) === false) {\r\n      console.error('you can\\'t use ' + operator1 + ' together with ' + operator2);\r\n      return -1;\r\n    }\r\n\r\n\r\n    // check callback\r\n\r\n    if (typeString(callback) !== 'function') {\r\n      console.error(callback, 'is not a function; please provide a function for callback');\r\n      return -1;\r\n    }\r\n\r\n\r\n    // simplify searchstring and adjust values\r\n\r\n    switch (type) {\r\n\r\n      // event types that fire repeatedly or once\r\n\r\n      case 'bar':\r\n      case 'beat':\r\n      case 'sixteenth':\r\n        // make zero based\r\n        value1 = value1 - 0;\r\n        value2 = value2 - 0;\r\n      //case 'tick':\r\n      case 'hour':\r\n      case 'minute':\r\n      case 'second':\r\n        //case 'millisecond':\r\n        // make zero based\r\n        value1 = value1 - 0;\r\n        value2 = value2 - 0;\r\n\r\n        // convert <= to < and >= to > to make it easier\r\n        if (operator1) {\r\n          if (operator1 === '<=') {\r\n            value1++;\r\n            operator1 = '<';\r\n          } else if (operator1 === '>=') {\r\n            value1--;\r\n            operator1 = '>';\r\n          }\r\n        }\r\n\r\n        if (operator2) {\r\n          if (operator2 === '<=') {\r\n            value2++;\r\n            operator2 = '<';\r\n          } else if (operator2 === '>=') {\r\n            value2--;\r\n            operator2 = '>';\r\n          }\r\n        }\r\n\r\n        break;\r\n\r\n\r\n      // event types that fire only once, these get all converted to type 'ticks'\r\n\r\n      case 'ticks':\r\n        // we already have the position value in ticks\r\n        value1 = value1 - 0;\r\n        break;\r\n\r\n\r\n      case 'barsbeats':\r\n      case 'barsandbeats':\r\n        //case 'musical_time':\r\n\r\n        // convert position value to ticks\r\n        if (!isNaN(value1)) {\r\n          // only a single number is provided, we consider it to be the bar number\r\n          value1 = getPosition(this.song, ['barsbeats', value1, 1, 1, 0]).ticks;\r\n        } else if (value1Type === 'string') {\r\n          // a full barsandbeats array is provided: bar, beat, sixteenth, ticks\r\n          value1 = value1.replace(/[\\[\\]\\s]/g, '');\r\n          value1 = value1.split(',');\r\n          value1 = getPosition(this.song, ['barsbeats', value1[0], value1[1] || 1, value1[2] || 1, value1[3] || 0]).ticks;\r\n          /*\r\n                          }else if(value1Type === 'array'){\r\n                              // a full barsandbeats array is provided: bar, beat, sixteenth, ticks\r\n                              value1 = getPosition(this.song, ['barsbeats', value1[0], value1[1], value1[2], value1[3]]).ticks;\r\n          */\r\n        } else {\r\n          console.error('please provide a number or an array of numbers');\r\n        }\r\n        type = 'ticks';\r\n        break;\r\n\r\n\r\n      case 'millis':\r\n        // convert position value to ticks\r\n        value1 = getPosition(this.song, ['millis', value1]).ticks;\r\n        type = 'ticks';\r\n        break;\r\n\r\n\r\n      case 'time':\r\n        //case 'linear_time':\r\n        // convert position value to ticks\r\n        if (!isNaN(value1)) {\r\n          // a single number is provided, we treat this as the value for minutes\r\n          millis = value1 * 60 * 1000; //seconds\r\n          value1 = getPosition(this.song, ['millis', millis]).ticks;\r\n        } else if (value1Type === 'string') {\r\n          // a full barsandbeats array is provided: bar, beat, sixteenth, ticks\r\n          value1 = value1.replace(/[\\[\\]\\s]/g, '');\r\n          console.log(value1);\r\n          value1 = value1.split(',');\r\n          if (value1.length === 1) {\r\n            millis = value1[0] * 60 * 1000;\r\n            value1 = getPosition(this.song, ['millis', millis]).ticks;\r\n          } else {\r\n            value1 = getPosition(this.song, ['time', value1[0], value1[1], value1[2], value1[3]]).ticks;\r\n          }\r\n          /*\r\n                          }else if(value1Type === 'array'){\r\n                              // a full time array is provided: hours, minutes, seconds, millis\r\n                              value1 = getPosition(this.song, ['time', value1[0], value1[1], value1[2], value1[3]]).ticks;\r\n          */\r\n        } else {\r\n          console.error('please provide a number or an array of numbers');\r\n        }\r\n        console.log(value1);\r\n        type = 'ticks';\r\n        break;\r\n    }\r\n\r\n\r\n    listenerId = 'position_' + listenerIndex++;\r\n\r\n    //console.log(value1,value2);\r\n\r\n    if (type === 'ticks') {\r\n      //console.log(value1,listenerId)\r\n\r\n      listener = {\r\n        id: listenerId,\r\n        callback: callback,\r\n        type: 'position',\r\n        subtype: 'ticks',\r\n        ticks: value1,\r\n        searchstring: data\r\n      };\r\n\r\n      this.allListenersByType.position.ticks.push(listenerId);\r\n\r\n    } else if (!operator1 && !operator2) {\r\n      // every bar, beat, sixteenth, hour, minute, second\r\n      listener = {\r\n        id: listenerId,\r\n        callback: callback,\r\n        type: 'position',\r\n        subtype: 'repetitive',\r\n        position_type: type,\r\n        searchstring: data\r\n      };\r\n\r\n      tmp = this.allListenersByType.position.repetitive;\r\n      if (tmp[type] === undefined) {\r\n        tmp[type] = [];\r\n      }\r\n      tmp[type].push(listenerId);\r\n\r\n    } else if (operator1 && !operator2) {\r\n      // every time a bar, beat, sixteenth, hour, minute, second meets a certain simple condition, can be both repetitive and fire once\r\n      listener = {\r\n        id: listenerId,\r\n        callback: callback,\r\n        type: 'position',\r\n        subtype: 'conditional_simple',\r\n        position_type: type,\r\n        data: value1,\r\n        operator: operator1,\r\n        searchstring: data\r\n      };\r\n\r\n      tmp = this.allListenersByType.position.conditional_simple;\r\n      if (tmp[type] === undefined) {\r\n        tmp[type] = [];\r\n      }\r\n      tmp[type].push(listenerId);\r\n\r\n    } else if (operator1 && operator2) {\r\n      // every time a bar, beat, sixteenth, hour, minute, second meets a certain complex condition\r\n      listener = {\r\n        id: listenerId,\r\n        callback: callback,\r\n        type: 'position',\r\n        subtype: 'conditional_complex',\r\n        position_type: type,\r\n        value1: value1,\r\n        value2: value2,\r\n        operator1: operator1,\r\n        operator2: operator2,\r\n        searchstring: data\r\n      };\r\n\r\n      tmp = this.allListenersByType.position.conditional_complex;\r\n      if (tmp[type] === undefined) {\r\n        tmp[type] = [];\r\n      }\r\n      tmp[type].push(listenerId);\r\n\r\n    }\r\n\r\n    this.allListenersById[listenerId] = listener;\r\n    this.positionListenersBySearchstring[data] = listenerId;\r\n    return listenerId;\r\n  };\r\n\r\n  // @param type, data, callback\r\n  // @param id\r\n  FollowEvent.prototype.removeEventListener = function (args) {\r\n    var\r\n      //args = Array.prototype.slice.call(arguments),\r\n      arg0,\r\n      numArgs,\r\n      type, subtype, data, callback, id, ids, tmp,\r\n      listener, listenerId,\r\n      event, eventId, eventIds,\r\n      i, j, k, removeMe,\r\n      listenerIds,\r\n      filteredListenerIds = [],\r\n      removedListenerIds = [],\r\n      dataType;\r\n\r\n    //console.log(args);\r\n    //args = Array.prototype.slice.call(args[0]);\r\n    arg0 = args[0];\r\n    numArgs = args.length;\r\n\r\n    if (numArgs === 1) {\r\n      if (typeString(arg0) === 'array') {\r\n        ids = arg0;\r\n      } else {\r\n        ids = [arg0];\r\n      }\r\n      //console.log(ids);\r\n\r\n      for (i = ids.length - 1; i >= 0; i--) {\r\n        id = ids[i];\r\n        //console.log(id);\r\n        if (this.allListenersById[id] !== undefined) {\r\n          listener = this.allListenersById[id];\r\n          type = listener.type;\r\n          subtype = listener.subtype;\r\n\r\n          if (type === 'position') {\r\n            // reference to an array of all the listeners bound to this event type\r\n            listenerIds = this.allListenersByType[type][subtype][listener.position_type];\r\n            // loop over listeners and filter the one that has to be removed\r\n            for (j = listenerIds.length - 1; j >= 0; j--) {\r\n              listenerId = listenerIds[j];\r\n              if (listenerId !== id) {\r\n                filteredListenerIds.push(listenerId);\r\n              }\r\n            }\r\n            // add the filtered array back\r\n            this.allListenersByType[listener.type][listener.subtype][listener.position_type] = [].concat(filteredListenerIds);\r\n            delete this.allListenersById[id];\r\n\r\n          } else if (type === 'event' || type === 'note') {\r\n            event = listener.event;\r\n            eventId = event.id;\r\n            listenerIds = this.allListenersByType.event[subtype][eventId];\r\n            for (j = listenerIds.length - 1; j >= 0; j--) {\r\n              listenerId = listenerIds[j];\r\n              listener = this.allListenersById[listenerId];\r\n              if (listenerId !== id) {\r\n                filteredListenerIds.push(listenerId);\r\n                break;\r\n              }\r\n            }\r\n            // add the filtered array back per event\r\n            this.allListenersByType.event[subtype][eventId] = [].concat(filteredListenerIds);\r\n            delete this.allListenersById[id];\r\n\r\n            //@TODO: we have to add allListenersByType.notes\r\n            /*\r\n                                    if(type === 'note'){\r\n                                        console.log(event);\r\n                                        if(event.type === sequencer.NOTE_ON){\r\n                                            eventId = event.midiNote.noteOff.id;\r\n                                            tmp = allListenersByType.event[subtype][eventId];\r\n                                            listenerIds = listenerIds.concat(tmp);\r\n                                        }else if(event.type === sequencer.NOTE_OFF){\r\n                                            eventId = event.midiNote.noteOn.id;\r\n                                            tmp = allListenersByType.event[subtype][eventId];\r\n                                            listenerIds = listenerIds.concat(tmp);\r\n                                        }\r\n            \r\n                                        for(j = listenerIds.length - 1; j >= 0; j--){\r\n                                            listenerId = listenerIds[j];\r\n                                            listener = allListenersById[listenerId];\r\n                                            if(listenerId !== id){\r\n                                                filteredListenerIds.push(listenerId);\r\n                                                break;\r\n                                            }\r\n                                        }\r\n                                        // add the filtered array back per event\r\n                                        allListenersByType.event[subtype][eventId] = [].concat(filteredListenerIds);\r\n                                        delete allListenersById[id];\r\n                                    }\r\n            */\r\n          }\r\n\r\n          //console.log(this.allListenersById,this.allListenersByType);\r\n\r\n        } else {\r\n          console.warn('no event listener found with id', id);\r\n        }\r\n      }\r\n\r\n    } else if (numArgs === 2 || numArgs === 3) {\r\n\r\n      type = args[0];\r\n      data = args[1];\r\n      callback = args[2];\r\n      dataType = typeString(data);\r\n\r\n      //console.log(type, data, callback, dataType);\r\n\r\n      switch (type) {\r\n        case 'position':\r\n          if (dataType === 'string') {\r\n            // get the id of the listener by the searchstring\r\n            id = this.positionListenersBySearchstring[data];\r\n            // get the listener by id\r\n            listener = this.allListenersById[id];\r\n            // reference to an array of all the listeners bound to this event type\r\n            listenerIds = this.allListenersByType[listener.type][listener.subtype][listener.position_type];\r\n            // loop over listeners and filter the one that has to be removed\r\n            for (i = listenerIds.length - 1; i >= 0; i--) {\r\n              listenerId = listenerIds[i];\r\n              if (listenerId !== id) {\r\n                filteredListenerIds.push(listenerId);\r\n              }\r\n            }\r\n            // add the filtered array back\r\n            this.allListenersByType[listener.type][listener.subtype][listener.position_type] = [].concat(filteredListenerIds);\r\n            delete this.allListenersById[id];\r\n            delete this.positionListenersBySearchstring[data];\r\n            //console.log(allListenersById, allListenersByType, positionListenersBySearchstring);\r\n          }\r\n          break;\r\n\r\n        case 'event':\r\n        case 'note':\r\n\r\n          if (dataType === 'string') {\r\n            // get all listener ids that are connected to this searchstring\r\n            listenerIds = this.eventListenersBySearchstring[data];\r\n            for (i = listenerIds.length - 1; i >= 0; i--) {\r\n              // collect all ids of listeners that need to be removed\r\n              removedListenerIds.push(listenerIds[i]);\r\n            }\r\n\r\n            // loop over all searchstring listeners and filter the ones that have to be removed\r\n            eventIds = this.allListenersByType.event.searchstring;\r\n            for (eventId in eventIds) {\r\n              if (eventIds.hasOwnProperty(eventId)) {\r\n                listenerIds = eventIds[eventId];\r\n                filteredListenerIds = [];\r\n                for (i = listenerIds.length - 1; i >= 0; i--) {\r\n                  listenerId = listenerIds[i];\r\n                  removeMe = false;\r\n                  for (j = removedListenerIds.length - 1; j >= 0; j--) {\r\n                    //console.log(listenerId, removedListenerIds[j], callback);\r\n                    if (listenerId === removedListenerIds[j]) {\r\n                      removeMe = true;\r\n                      /*\r\n                      if(callback === undefined){\r\n                          removeMe = true;\r\n                      }else{\r\n                          removeMe = allListenersById[listenerId].callback === callback\r\n                      }\r\n                      */\r\n                      break;\r\n                    }\r\n                  }\r\n                  if (removeMe === false) {\r\n                    filteredListenerIds.push(listenerId);\r\n                  } else {\r\n                    // remove the listeners from the id library\r\n                    delete this.allListenersById[listenerIds[i]];\r\n                  }\r\n                }\r\n                // add the filtered array back\r\n                this.allListenersByType.event.searchstring[eventId] = [].concat(filteredListenerIds);\r\n              }\r\n            }\r\n            // delete the searchstring listeners array\r\n            delete this.eventListenersBySearchstring[data];\r\n            //console.log(allListenersById,eventListenersBySearchstring,allListenersByType);\r\n\r\n          } else if (dataType === 'object') {\r\n            if (data.className !== 'MidiEvent' && data.className !== 'MidiNote') {\r\n              console.error('please provide a midi event or a midi note');\r\n              return;\r\n            }\r\n            if (data.className === 'MidiNote') {\r\n              id = data.noteOn.id;\r\n            } else if (data.className === 'MidiEvent') {\r\n              id = data.id;\r\n            }\r\n            if (this.allListenersByType.event.instance[id] !== undefined) {\r\n              type = 'instance';\r\n              listenerIds = this.allListenersByType.event.instance[id];\r\n            } else if (this.allListenersByType.event.searchstring[id] !== undefined) {\r\n              type = 'searchstring';\r\n              listenerIds = this.allListenersByType.event.searchstring[id];\r\n            }\r\n            if (listenerIds === undefined) {\r\n              console.warn('no event listener bound to event with id', id);\r\n              return;\r\n            }\r\n            if (data.className === 'MidiNote') {\r\n              ids = this.allListenersByType.event[type][data.noteOff.id];\r\n              listenerIds = listenerIds.concat(ids);\r\n            }\r\n            //console.log(listenerIds);\r\n            for (i = listenerIds.length - 1; i >= 0; i--) {\r\n              listenerId = listenerIds[i];\r\n              listener = this.allListenersById[listenerId];\r\n              if (callback && listener.callback !== callback) {\r\n                filteredListenerIds.push(listener.id);\r\n              } else {\r\n                delete this.allListenersById[listener.id];\r\n              }\r\n              this.allListenersByType.event[type][listener.event.id] = [].concat(filteredListenerIds);\r\n            }\r\n            //console.log(allListenersById,allListenersByType);\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // set the 'called' key of every listener to false, this is necessary if the playhead is moved (by a loop of by the user)\r\n  FollowEvent.prototype.resetAllListeners = function () {\r\n    var listeners = this.allListenersById, key, listener;\r\n\r\n    for (key in listeners) {\r\n      if (listeners.hasOwnProperty(key)) {\r\n        listener = listeners[key];\r\n        listener.called = false;\r\n        //console.log(listener);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  getEvents = function (type, data) {\r\n\r\n    var dataType = typeString(data),\r\n      events = [], i, e;\r\n\r\n    if (dataType !== 'array' && data !== undefined && data.className !== 'MidiEvent' && data.className !== 'MidiNote') {\r\n      console.error(data, ' is not valid data for event type \\'event\\', please consult documentation');\r\n      return -1;\r\n    }\r\n\r\n    if (dataType === 'array') {\r\n      for (i = data.length - 1; i >= 0; i--) {\r\n        e = data[i];\r\n        if (type === 'event' && e.className !== 'MidiEvent' && e.className !== 'AudioEvent') {\r\n          console.warn('skipping', e, 'because it is not a MidiEvent nor an AudioEvent');\r\n          continue;\r\n        } else if (type === 'note' && e.className !== 'MidiNote') {\r\n          console.warn('skipping', e, 'because it is not a MidiNote');\r\n          continue;\r\n        }\r\n        events.push(e);\r\n      }\r\n    } else {\r\n      if (type === 'event') {\r\n        if (data.className !== 'MidiEvent' && data.className !== 'AudioEvent') {\r\n          console.error(data, ' is not a MidiEvent nor an AudioEvent');\r\n          return -1;\r\n        } else {\r\n          events = [data];\r\n        }\r\n      } else if (type === 'note') {\r\n        if (data.className !== 'MidiNote') {\r\n          console.error(data, ' is not a MidiNote');\r\n          return -1;\r\n        } else {\r\n          events = [data.noteOn, data.noteOff];\r\n        }\r\n      }\r\n    }\r\n\r\n    return events;\r\n  };\r\n\r\n\r\n  checkOperatorConflict = function (operator1, operator2) {\r\n\r\n    switch (operator1) {\r\n      case '=':\r\n      case '==':\r\n      case '===':\r\n        return false;\r\n    }\r\n\r\n    switch (operator2) {\r\n      case '=':\r\n      case '==':\r\n      case '===':\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n\r\n  sequencer.protectedScope.createFollowEvent = function (song) {\r\n    return new FollowEvent(song);\r\n  };\r\n\r\n\r\n  sequencer.protectedScope.addInitMethod(function () {\r\n    typeString = sequencer.protectedScope.typeString;\r\n    getPosition = sequencer.protectedScope.getPosition;\r\n    midiEventNumberByName = sequencer.midiEventNumberByName;\r\n    midiEventNameByNumber = sequencer.midiEventNameByNumber;\r\n    findEvent = sequencer.findEvent;\r\n  });\r\n}function songGrid() {\r\n\r\n\t/*\r\n\r\n\t[[ gridPositionFromSong(seqPosition,width,height) ]]\r\n\t\r\n\tgridCoordinateFromPosition(position,width,height)\r\n\r\n\t[[ gridPositionFromNote(notePitch,width,height) ]]\r\n\r\n\tgridCoordinateFromNote(note,width,height)\r\n\tgridCoordinateFromNote(pitch,width,height) -> basically a y-position\r\n\tgridCoordinateFromNote(event,width,height) -> specific event\r\n\t\r\n\r\n\t[[ songPositionFromGrid(x,y,width,height) ]]\r\n\r\n\tpositionFromGridCoordinate(x,y,width,height)\r\n\r\n\tnoteFromGridCoordinate(x,y,width,height) -> returns same as positionFromGridCoordinate\r\n\r\n\tsetSequenceLength(totalBars)\r\n\t\r\n\tsong.setGrid(height, width, pitchMin, pitchMax)\r\n\r\n\r\n\timplemented:\r\n\r\n\tsetGridPitchRange(min,max)\r\n\r\n\tgridToSong([song],x,y,width,height)\r\n\r\n\tsongToGrid(event) -> x and y\r\n\tsongToGrid(position,note) -> x and y\r\n\t\r\n\tsongToGrid(position,width,height) -> x, y = 0\r\n\t\r\n\tsongToGrid(note,width,height) -> y, x = 0\r\n\tsongToGrid(pitch)\r\n\r\n\tsongToGrid(event,width,height)\r\n\tsongToGrid('x',position,width,height)\r\n\tsongToGrid('y',note,width,height)\r\n\tsongToGrid('x','y',position,note,width,height)\r\n\r\n\r\n\t*/\r\n\r\n\t'use strict';\r\n\r\n\tvar\r\n\t\t//import\r\n\t\tgetPosition, // → defined in get_position.js\r\n\t\tfloor, // → defined in util.js\r\n\t\tround, // → defined in util.js\r\n\t\ttypeString, // → defined in util.js\r\n\r\n\t\t//public\r\n\t\tsongToGrid, // catch all -> may be remove this\r\n\t\tpositionToGrid,\r\n\t\teventToGrid,\r\n\t\tnoteToGrid,\r\n\r\n\t\tgridToSong, // catch all -> may be remove this\r\n\t\tpositionToSong;\r\n\r\n\r\n\tpositionToSong = function (song, x, y, width, height) {\r\n\t\tvar ticks, note, position, coordinate;\r\n\t\t//console.log(song.millis,x,y,width,height);\r\n\r\n\t\tif (song === undefined) {\r\n\t\t\tconsole.error('please provide a song');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (x === undefined || y === undefined) {\r\n\t\t\tconsole.error('please provide a coordinate');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (width === undefined || height === undefined) {\r\n\t\t\tconsole.error('please provide width and height');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tticks = floor((x / width) * song.ticks);\r\n\t\t//note = 127 - floor((y/height) * 128);\r\n\t\tnote = song.highestNote - floor((y / height) * song.pitchRange);\r\n\t\t//note = song.highestNote - round((y/height) * song.numNotes);\r\n\r\n\t\tposition = getPosition(song, ['ticks', ticks]);\r\n\t\tnote = sequencer.createNote(note);\r\n\r\n\t\t//console.log(position,note);\r\n\r\n\t\treturn {\r\n\t\t\tposition: position,\r\n\t\t\tnote: note\r\n\t\t};\r\n\t};\r\n\r\n\t//[song],x,y,width,height\r\n\tsequencer.positionToSong = sequencer.coordinatesToPosition = sequencer.gridToSong = function () {\r\n\t\tvar args = Array.prototype.slice.call(arguments),\r\n\t\t\tnumArgs = args.length,\r\n\t\t\targ0 = args[0];\r\n\r\n\t\t//todo: add error messages here\r\n\t\tif (numArgs === 4 && arg0.className !== 'Song') {\r\n\t\t\treturn positionToSong(sequencer.getSong(), arg0, args[1], args[2], args[3]);\r\n\t\t}\r\n\t\treturn positionToSong(arg0, args[1], args[2], args[3], args[4]);\r\n\t};\r\n\r\n\r\n\tsequencer.songToGrid = function () {\r\n\t\tvar args = Array.prototype.slice.call(arguments),\r\n\t\t\tnumArgs = args.length,\r\n\t\t\targ0 = args[0],\r\n\t\t\targ1 = args[1];\r\n\r\n\t\tswitch (numArgs) {\r\n\t\t\tcase 3:\r\n\t\t\t\teventToGrid(arg0, arg1, args[2]);//event,width,height\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tif (arg0 === 'x') {\r\n\t\t\t\t\tpositionToGrid(arg1, args[2], args[3]);//[position], width, height\r\n\t\t\t\t} else if (arg0 === 'y') {\r\n\t\t\t\t\tnoteToGrid(arg1, args[2], args[3]);//note, width, height\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.error('wrong number of arguments');\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\teventToGrid = function (event, width, height, song) {\r\n\t\tif (song === undefined) {\r\n\t\t\tsong = sequencer.getSong();\r\n\t\t}\r\n\r\n\t\tif (event.type !== sequencer.NOTE_ON && event.type !== sequencer.NOTE_OFF) {\r\n\t\t\tconsole.error('please provide a NOTE_ON or a NOTE_OFF event');\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar x = (event.millis / song.durationMillis) * width,\r\n\t\t\ty,\r\n\t\t\tnote = sequencer.createNote(event.noteNumber);\r\n\t\t//position = sequencer.createPosition('ticks', event.ticks);\r\n\r\n\t\treturn {\r\n\t\t\tx: positionToGrid(['ticks', event.ticks], width, song),\r\n\t\t\ty: noteToGrid(note, height, song)\r\n\t\t};\r\n\t};\r\n\r\n\r\n\tpositionToGrid = function (position, width, song) {\r\n\t\tif (song === undefined) {\r\n\t\t\tsong = sequencer.getSong();\r\n\t\t}\r\n\r\n\t\tif (typeString(position) === 'array' || position.type !== 'ticks') {\r\n\t\t\tposition = getPosition(song, position);\r\n\t\t}\r\n\t\t//console.log(position)\r\n\t\tvar x = floor(position.ticks / song.quantizeTicks) * song.quantizeTicks;\r\n\t\t//console.log(x, song.ticks, position.data, song.quantizeTicks);\r\n\t\tx = x / song.ticks;\r\n\t\tx = x * width;\r\n\r\n\t\t//return round(x);\r\n\t\treturn x;\r\n\t};\r\n\r\n\r\n\tnoteToGrid = function (note, height, song) {\r\n\t\tif (song === undefined) {\r\n\t\t\tsong = sequencer.getSong();\r\n\t\t}\r\n\r\n\t\tvar noteNumber = note.number,\r\n\t\t\ty;\r\n\r\n\t\tif (noteNumber < song.lowestNote || noteNumber > song.highestNote) {\r\n\t\t\tconsole.error('note is out of range of the pitch range of this song');\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\ty = (noteNumber - song.highestNote) / song.pitchRange;\r\n\t\ty = y < 0 ? -y : y;\r\n\t\ty = y * height;\r\n\t\t//return round(y);\r\n\t\treturn y;\r\n\t};\r\n\r\n\t// should this be added to sequencer publically? -> no, add to song\r\n\t/*\r\n\t\tsequencer.positionToGrid = positionToGrid;\r\n\t\tsequencer.eventToGrid = eventToGrid;\r\n\t\tsequencer.noteToGrid = noteToGrid;\r\n\t*/\r\n\tsequencer.protectedScope.addInitMethod(function () {\r\n\t\tgetPosition = sequencer.protectedScope.getPosition;\r\n\t\tfloor = sequencer.protectedScope.floor;\r\n\t\tround = sequencer.protectedScope.round;\r\n\t\ttypeString = sequencer.protectedScope.typeString;\r\n\t});\r\n}\r\nfunction songUpdate() {\n\n    'use strict';\n\n    var\n        // import\n        getPosition, // -> defined in position.js\n        parseTimeEvents, // -> defined in parse_time_events.js\n        parseEvents, // -> defined in parse_events.js\n        getInstrument, // -> defined in instrument_manager.js\n        scheduledTasks, // -> defined in open_module.js\n\n        update,\n        update2;\n\n\n    update = function (song, updateTimeEvents) {\n\n        if (sequencer.playing === true) {\n            scheduledTasks.updateSong = function () {\n                update2(song, updateTimeEvents);\n            };\n            return;\n        }\n        //console.log('not here while playing');\n        // console.log('update song');\n        update2(song, updateTimeEvents);\n    };\n\n\n    update2 = function (song, updateTimeEvents) {\n        //console.log('update song');\n        //console.time('update song');\n        var\n            i, id1, id2, id3, tmp,\n            track,\n            part,\n            event,\n            note,\n\n            dirtyEvents,\n            dirtyNotes,\n\n            newEvents = [],\n            changedEvents = [],\n            removedEvents = [],\n            recordedEvents = [],\n\n            newNotes = [],\n            changedNotes = [],\n            removedNotes = [],\n\n            newParts = [],\n            changedParts = [],\n            removedParts = [],\n\n            newTracks = [],\n            changedTracks = [],\n            removedTracks = [],\n\n            eventsMidiAudioMetronome = [],\n            eventsMidiTime = [],\n            events = [],\n            midiEvents = [],\n            audioEvents = [],\n            notes = [],\n            parts = [],\n            tracks = [],\n\n            eventsById = {},\n            notesById = {},\n            partsById = {};\n\n\n        if (updateTimeEvents === true) {\n            //console.log('update time events');\n            parseTimeEvents(song);\n        }\n\n\n        for (id1 in song.tracksById) {\n\n            if (song.tracksById.hasOwnProperty(id1)) {\n\n                track = song.tracksById[id1];\n\n                // console.log('song update track', track.needsUpdate);\n\n                if (track.needsUpdate === true) {\n                    track.update();\n                }\n\n\n                for (id2 in track.partsById) {\n                    if (track.partsById.hasOwnProperty(id2)) {\n\n                        part = track.partsById[id2];\n                        // console.log(part.id, part.needsUpdate, part.dirtyEvents);\n\n                        if (part.needsUpdate === true) {\n                            // console.log('song update calls part.update()');\n                            part.update();\n                        }\n\n                        //console.log(part);\n\n                        dirtyEvents = part.dirtyEvents;\n\n                        for (id3 in dirtyEvents) {\n                            if (dirtyEvents.hasOwnProperty(id3)) {\n                                event = dirtyEvents[id3];\n                                switch (event.state) {\n                                    case 'new':\n                                        newEvents.push(event);\n                                        break;\n                                    case 'recorded':\n                                        recordedEvents.push(event);\n                                        break;\n                                    case 'changed':\n                                        changedEvents.push(event);\n                                        break;\n                                    case 'removed':\n                                        removedEvents.push(event);\n                                        delete part.eventsById[id3];\n                                        break;\n                                }\n                            }\n                        }\n\n\n                        dirtyNotes = part.dirtyNotes;\n\n                        for (id3 in dirtyNotes) {\n                            if (dirtyNotes.hasOwnProperty(id3)) {\n                                note = dirtyNotes[id3];\n                                //console.log(note.state);\n                                switch (note.state) {\n                                    case 'new':\n                                        newNotes.push(note);\n                                        break;\n                                    case 'changed':\n                                        changedNotes.push(note);\n                                        break;\n                                    case 'removed':\n                                        removedNotes.push(note);\n                                        delete part.notesById[id3];\n                                        break;\n                                }\n                            }\n                        }\n\n                        part.dirtyEvents = {};\n                        part.dirtyNotes = {};\n                        /*\n                        if(part.state === 'new' && part.track !== track){\n                            part.state = 'removed';\n                        }\n                        console.log(part.state, part.track);\n                        */\n                        if (part.state !== 'removed') {\n                            notes = notes.concat(part.notes);\n                            events = events.concat(part.events);\n                        } else {\n                            removedNotes = removedNotes.concat(part.notes);\n                            removedEvents = removedEvents.concat(part.events);\n                        }\n\n\n                        switch (part.state) {\n                            case 'new':\n                                newParts.push(part);\n                                partsById[part.id] = part;\n                                break;\n                            case 'changed':\n                                //console.log(part.id);\n                                changedParts.push(part);\n                                partsById[part.id] = part;\n                                break;\n                            case 'removed':\n                                removedParts.push(part);\n                                delete track.partsById[part.id];\n                                break;\n                        }\n                    }\n                }\n\n                //events = events.concat(track.events);\n                //notes = notes.concat(track.notes);\n                parts = parts.concat(track.parts);\n\n\n                switch (track.state) {\n                    case 'clean':\n                        track.index = tracks.length;\n                        tracks.push(track);\n                        break;\n                    case 'new':\n                        newTracks.push(track);\n                        track.state = 'clean';\n                        track.index = tracks.length;\n                        tracks.push(track);\n                        break;\n                    case 'changed':\n                        changedTracks.push(track);\n                        track.state = 'clean';\n                        track.index = tracks.length;\n                        tracks.push(track);\n                        break;\n                    case 'removed':\n                        removedTracks.push(track);\n                        delete song.tracksById[track.id];\n                        break;\n                }\n            }\n        }\n\n\n        for (i = removedEvents.length - 1; i >= 0; i--) {\n            event = removedEvents[i];\n            event.state = 'clean';\n        }\n\n        for (i = removedNotes.length - 1; i >= 0; i--) {\n            note = removedNotes[i];\n            note.state = 'clean';\n        }\n\n        for (i = removedParts.length - 1; i >= 0; i--) {\n            part = removedParts[i];\n            part.state = 'clean';\n        }\n\n\n        // calculate the ticks position of the recorded events\n        if (recordedEvents.length > 0) {\n            parseRecordedEvents(song, recordedEvents);\n        }\n\n        events.sort(function (a, b) {\n            return a.sortIndex - b.sortIndex;\n        });\n\n        notes.sort(function (a, b) {\n            return a.ticks - b.ticks;\n        });\n\n        parts.sort(function (a, b) {\n            return a.ticks - b.ticks;\n        });\n\n        for (i = events.length - 1; i >= 0; i--) {\n            event = events[i];\n            eventsById[event.id] = event;\n            if (event.type === 'audio') {\n                audioEvents.push(event);\n            } else {\n                midiEvents.push(event);\n            }\n        }\n\n        for (i = notes.length - 1; i >= 0; i--) {\n            note = notes[i];\n            notesById[note.id] = note;\n        }\n\n\n        if (updateTimeEvents === false) {\n\n            //console.log(newEvents);\n            //console.log(tmp.length, events.length, newEvents.length, changedEvents.length, song.timeEvents.length, song.metronome.events.length);\n\n            tmp = song.timeEvents.concat(newEvents, changedEvents);\n            parseEvents(song, tmp);\n\n            tmp = [].concat(newNotes, changedNotes);\n            parseMidiNotes(song, tmp);\n\n            tmp = [].concat(newParts, changedParts);\n            parseParts(song, tmp);\n        } else {\n            // if time events have changed we need to update everything!\n            tmp = song.timeEvents.concat(events);\n            parseEvents(song, tmp);\n            parseMidiNotes(song, notes);\n            parseParts(song, parts);\n        }\n\n        /*\n                console.log('  Song.update()');\n                console.log('new tracks', newTracks.length);\n                console.log('new parts', newParts.length);\n                console.log('new events', newEvents.length);\n                console.log('changed tracks', changedTracks.length);\n                console.log('changed parts', changedParts.length);\n                console.log('changed events', changedEvents.length);\n                console.log('removed tracks', removedTracks.length);\n                console.log('removed parts', removedParts.length);\n                console.log('removed events', removedEvents.length);\n                console.log('all events', events.length);\n                console.log('all parts', parts.length);\n                console.log('all tracks', tracks.length);\n                console.log('time events', song.timeEvents.length);\n                console.log('--------');\n        */\n        /*\n                if(changedEvents.length > 0){\n                    console.log('changed events', changedEvents.length);\n                    console.log('changed notes', changedNotes.length);\n                }\n        */\n\n\n        checkDuration(song);\n\n\n        // check if we need to generate new metronome events, metronome.update() calls parseMetronomeEvents()\n        if (song.metronome.bars !== song.bars) {\n            //song.metronome.update(song.metronome.bars, song.bars);\n            song.metronome.update();\n        } else if (updateTimeEvents === true) {\n            song.metronome.update();\n        }\n        eventsMidiAudioMetronome = [].concat(midiEvents, audioEvents, song.metronome.events);\n        eventsMidiAudioMetronome.sort(function (a, b) {\n            //return a.sortIndex - b.sortIndex;\n            return a.ticks - b.ticks;\n        });\n\n\n        eventsMidiTime = [].concat(events, song.timeEvents);\n        eventsMidiTime.sort(function (a, b) {\n            return a.ticks - b.ticks;\n            //return a.sortIndex - b.sortIndex;\n        });\n\n        song.eventsMidiAudioMetronome = eventsMidiAudioMetronome; // all midi, audio and metronome events\n        song.eventsMidiTime = eventsMidiTime; // all midi events plus time events\n        song.events = events; // all events excluding tempo and time signature events and metronome ticks\n        song.midiEvents = midiEvents; // all midi events excluding metronome events\n        song.audioEvents = audioEvents;\n        song.notes = notes;\n        song.parts = parts;\n        song.tracks = tracks;\n\n        song.numEvents = events.length;\n        song.numNotes = notes.length;\n        song.numParts = parts.length;\n        song.numTracks = tracks.length;\n\n        song.eventsById = eventsById;\n        song.notesById = notesById;\n        song.partsById = partsById;\n\n        song.newEvents = newEvents;\n        song.changedEvents = changedEvents;\n        song.removedEvents = removedEvents;\n\n        song.newNotes = newNotes;\n        song.changedNotes = changedNotes;\n        song.removedNotes = removedNotes;\n\n        song.newParts = newParts;\n        song.changedParts = changedParts;\n        song.removedParts = removedParts;\n\n\n        // update all dependent objects\n\n        song.playhead.updateSong();\n        song.playheadRecording.updateSong();\n        song.scheduler.updateSong();\n        song.scheduler.reschedule();\n        song.followEvent.updateSong();\n\n        if (song.grid !== undefined) {\n            song.grid.update();\n        }\n\n        if (song.keyEditor !== undefined) {\n            song.keyEditor.updateSong({\n                numBars: song.bars,\n                newEvents: newEvents,\n                changedEvents: changedEvents,\n                removedEvents: removedEvents,\n                newNotes: newNotes,\n                changedNotes: changedNotes,\n                removedNotes: removedNotes,\n                newParts: newParts,\n                changedParts: changedParts,\n                removedParts: removedParts\n            });\n        }\n        //console.timeEnd('update song')\n    };\n\n\n    function checkDuration(song, trim) {\n        var lastEvent = song.lastEventTmp,\n            position, key;\n\n        //console.log('checkDuration', lastEvent.barsAsString,lastEvent.bar,song.lastBar);\n        //console.log(lastEvent);\n        //console.log(song.autoSize);\n\n        if (song.autoSize === false) {\n            // don't allow the song to grow\n            song.lastBar = song.bars;\n        } else if (trim) {\n            // remove bars that don't contain any events(called via song.trim())\n            song.lastBar = lastEvent.bar;\n        } else {\n            // grow if needed\n            song.lastBar = Math.max(song.lastBar, lastEvent.bar);\n        }\n\n        song.bars = parseInt(song.lastBar);\n        position = getPosition(song, ['barsandbeats',\n            song.bars,\n            lastEvent.nominator,\n            lastEvent.numSixteenth,\n            lastEvent.ticksPerSixteenth,\n            true\n        ]);\n\n        //console.log(song.bars, lastEvent.nominator, lastEvent.numSixteenth, lastEvent.ticksPerSixteenth);\n\n        song.durationTicks = position.ticks;\n        song.durationMillis = position.millis;\n        //console.log(song.bars, '->', position.barsAsString, song.durationMillis, song.durationTicks);\n\n        // update song.lastEvent\n        for (key in position) {\n            if (position.hasOwnProperty(key)) {\n                //console.log(key, position[key])\n                song.lastEvent[key] = position[key];\n            }\n        }\n        //console.log(song.name, song.durationTicks, song.durationMillis, song.bars);\n    }\n\n\n    function parseMetronomeEvents(song, events) {\n        //console.log('parseMetronomeEvents', events.length);\n        var tmp = events.concat(song.timeEvents);\n        parseEvents(song, tmp);\n\n        events = events.concat(song.events);\n        events.sort(function (a, b) {\n            return a.sortIndex - b.sortIndex;\n        });\n        //console.log(1,song.allEvents.length);\n        song.eventsMidiAudioMetronome = [].concat(events);\n        //console.log(2,song.allEvents.length);\n        //console.log(song.allEvents);\n\n        // song.playhead.updateSong();\n        // song.scheduler.updateSong();\n        // song.scheduler.reschedule();\n        // song.followEvent.updateSong();\n    }\n\n\n    function parseParts(song, parts) {\n        var i, part;\n\n        //console.log(' → parse parts', parts.length);\n\n        for (i = parts.length - 1; i >= 0; i--) {\n            part = parts[i];\n            //part.update();\n            //part.track.update();\n            part.startPosition = song.getPosition('ticks', part.start.ticks);\n            part.endPosition = song.getPosition('ticks', part.end.ticks);\n            part.start.millis = part.startPosition.millis;\n            part.end.millis = part.endPosition.millis;\n            part.duration.millis = part.end.millis - part.start.millis;\n            part.state = 'clean';\n            //console.log('s', part.start.ticks, 'e', part.end.ticks);\n            //console.log('s', part.startPosition.barsAsString, 'e', part.endPosition.barsAsString);\n        }\n    }\n\n\n    function parseMidiNotes(song, notes) {\n        var i, note;\n\n        //console.log(' → parseMidiNotes', notes.length);\n\n        for (i = notes.length - 1; i >= 0; i--) {\n            note = notes[i];\n            //console.log(note);\n            if (note.endless === true) {\n                note.durationTicks = sequencer.ticks - note.noteOn.ticks;\n                note.durationMillis = sequencer.millis - note.noteOn.millis;\n            } else {\n                note.durationTicks = note.noteOff.ticks - note.noteOn.ticks;\n                note.durationMillis = note.noteOff.millis - note.noteOn.millis;\n            }\n            note.ticks = note.noteOn.ticks;\n            note.millis = note.noteOn.millis;\n            note.number = note.noteOn.noteNumber;\n            note.state = 'clean';\n        }\n    }\n\n\n    function parseRecordedEvents(song, events) {\n        var i, timeData,\n            position, event,\n            time,\n            timestamp = song.recordTimestamp,\n            startMillis = song.recordStartMillis,\n            totalTime = startMillis,\n            maxi = events.length,\n            playhead = song.playheadRecording;\n\n        //if(startMillis < 0){\n        //    playhead.set('millis', 0);\n        //}else{\n        playhead.set('millis', startMillis);\n        //}\n        //console.log(song, events, timestamp);\n        //console.log('parseRecordedEvents', timestamp, startMillis);\n\n        for (i = 0; i < maxi; i++) {\n            event = events[i];\n\n            time = (event.recordMillis - timestamp) + startMillis;\n            position = playhead.update('millis', time - totalTime); // update by supplying the diff in millis\n            totalTime = time;\n\n            timeData = sequencer.getNiceTime(position.millis);\n\n            //console.log(event.ticks, position.ticks);\n            //console.log(event.recordMillis, event.recordMillis - timestamp);\n\n            event.ticks = position.ticks;\n\n            event.bpm = position.bpm;\n            event.factor = position.factor;\n            event.nominator = position.nominator;\n            event.denominator = position.denominator;\n\n            event.ticksPerBar = position.ticksPerBar;\n            event.ticksPerBeat = position.ticksPerBeat;\n            event.ticksPerSixteenth = position.ticksPerSixteenth;\n\n            event.numSixteenth = position.numSixteenth;\n\n            event.millisPerTick = position.millisPerTick;\n            event.secondsPerTick = position.secondsPerTick;\n\n            event.millis = position.millis;\n            event.seconds = position.millis / 1000;\n\n            event.hour = timeData.hour;\n            event.minute = timeData.minute;\n            event.second = timeData.second;\n            event.millisecond = timeData.millisecond;\n            event.timeAsString = timeData.timeAsString;\n            event.timeAsArray = timeData.timeAsArray;\n\n            event.bar = position.bar;\n            event.beat = position.beat;\n            event.sixteenth = position.sixteenth;\n            event.tick = position.tick;\n            event.barsAsString = position.bar + ':' + position.beat + ':' + position.sixteenth + ':' + position.tick;\n            event.barsAsArray = [position.bar, position.beat, position.sixteenth, position.tick];\n\n            event.state = 'clean';\n        }\n\n        song.recordStartMillis = undefined;\n        song.recordTimestamp = undefined;\n    }\n\n\n    // not in use!\n    function sortEvents(events) {\n        var maxi = events.length,\n            i, event, lastTick = -100000,\n            buffer,\n            newOrder = [];\n\n        for (i = 0; i < maxi; i++) {\n            event = events[i];\n            if (buffer === undefined) {\n                buffer = [];\n            }\n            buffer.push(event);\n            if (event.ticks !== lastTick) {\n                if (buffer.length > 1) {\n                    // console.log('unsorted', buffer.length);\n                    // buffer.forEach(function(e){\n                    //     console.log(e.ticks, e.type, e.data1, e.data2);\n                    // });\n\n                    buffer.sort(function (a, b) {\n\n                        // question is: comes a after b\n\n                        if (b.type === 144 && a.type === 128) {\n                            // note off before note on\n                            return false;\n\n\n                        } else if (b.type === 144 && a.type === 176 && a.data1 === 64 && a.data2 === 127) {\n                            // sustain pedal down before note on\n                            return false;\n\n\n                        } else if (b.type === 176 && b.data1 === 64 && b.data2 === 127 && a.type === 128) {\n                            // note off before sustain pedal down\n                            return false;\n\n\n                        } else if (b.type === 128 && a.type === 176 && a.data1 === 64 && a.data2 === 0) {\n                            // sustain pedal up before note off -> for better performance, the note off event doesn't get added to the sustainPedalSamples array\n                            return false;\n\n                        } else if (b.type === 144 && a.type === 176 && a.data1 === 64 && a.data2 === 0) {\n                            // sustain pedal up before note on\n                            return false;\n\n\n                        } else if (a.type === 176 && a.data1 === 64 && a.data2 === 0 && b.type === 176 && b.data1 === 64 && b.data2 === 127) {\n                            // sustain pedal up should come before sustain pedal up\n                            return false;\n\n                        } else {\n                            return true;\n                        }\n                    });\n                    // console.log('sorted');\n                    // buffer.forEach(function(e){\n                    //     console.log(e.ticks, e.type, e.data1, e.data2);\n                    // });\n                    // console.log('---');\n                    newOrder = newOrder.concat(buffer);\n                    buffer = undefined;\n                } else {\n                    newOrder.push(buffer[0]);\n                }\n            }\n            lastTick = event.ticks;\n        }\n    }\n\n\n    sequencer.protectedScope.update = update;\n    sequencer.protectedScope.checkDuration = checkDuration;\n    sequencer.protectedScope.parseMetronomeEvents = parseMetronomeEvents;\n\n    sequencer.protectedScope.addInitMethod(function () {\n        getPosition = sequencer.protectedScope.getPosition;\n        parseEvents = sequencer.protectedScope.parseEvents;\n        parseTimeEvents = sequencer.protectedScope.parseTimeEvents;\n        getInstrument = sequencer.protectedScope.getInstrument;\n        scheduledTasks = sequencer.protectedScope.scheduledTasks;\n    });\n}\n/*\r\n    Events are always added to a Part before they are added to the track, in other words: a Track is a Part container, a Part is an Event container.\r\n\r\n    The events array in a Track contains only references to the Events in the Parts.\r\n\r\n    Tracks and Parts cannot contain tempo or time signature events, however, if you export Parts or Tracks as midi file you can choose to add the tempo track\r\n    of the song to a Track or a Part. If you export a Part to a Track, it will be converted to a Track containing that Part.\r\n\r\n*/\r\n\r\nfunction track() {\r\n\r\n  'use strict';\r\n\r\n  var\r\n    debug = sequencer.debug,\r\n\r\n    slice = Array.prototype.slice,\r\n\r\n    //import\r\n    createPart, // → defined in part.js\r\n    typeString, // → defined in utils.js\r\n    copyName, // → defined in utils.js\r\n    findItem, // → defined in utils.js\r\n    objectForEach, // → defined in utils.js\r\n    checkPosition, // → defined in get_position.js\r\n    createMidiEvent, // → defined in midi_event.js\r\n    createMidiNote, // → defined in midi_note.js\r\n    context, // -> defined in open_module.js\r\n    createInstrument, // defined in instrument.js\r\n    createAudioTrack, // defined in audio_track.js\r\n    createPanner, // defined in channel_effects.js\r\n    addMidiEventListener, // defined in midi_system.js\r\n    removeMidiEventListener, // defined in midi_system.js\r\n    encodeAudio, // defined in audio_encoder.js\r\n    handleMidiMessageTrack, // defined in midi_system.js\r\n\r\n\r\n    findEvent, // → defined in find_event.js\r\n    findNote, // → defined in find_event.js\r\n    getStats, // → defined in event_statistics.js\r\n\r\n    trackId = 0,\r\n\r\n    //public\r\n    Track;\r\n\r\n\r\n  Track = function (name, type, song) {\r\n    this.className = 'Track';\r\n    this.id = 'T' + trackId++ + '' + new Date().getTime();\r\n    //console.log('creating track', this.id, name);\r\n    this.type = type || 'instrument';\r\n    this.name = name || this.id;\r\n    this.song = song;\r\n    this.instrumentName = '';\r\n    this.events = [];\r\n    this.eventsById = {};\r\n    this.notes = [];\r\n    this.notesById = {};\r\n    this.parts = [];\r\n    this.partsById = {};\r\n    this.numParts = 0;\r\n    this.numEvents = 0;\r\n    this.needsUpdate = false;\r\n    this.audioLatency = 0;\r\n\r\n    //@TODO: create a plugin that gives a pulsating volume effect\r\n    //this.volumeChangeMethod = 'equal_power'; // 'direct', equal_power' or 'linear'\r\n\r\n    /* routing */\r\n    this.effects = {};\r\n    this.numEffects = 0;\r\n    this.volume = 1;\r\n\r\n    this.input = context.createGainNode();\r\n    this.input.gain.value = 1;\r\n\r\n    this.output = context.createGainNode();\r\n    this.output.gain.value = this.volume;\r\n\r\n    ///*\r\n    this.panner = createPanner();\r\n    // input to panner\r\n    this.input.connect(this.panner.node);\r\n    // panner to output, and output to song.gain as soon as the track gets added to a song\r\n    this.panner.node.connect(this.output);\r\n    //*/\r\n\r\n    /*\r\n            this.panner = context.createPanner();\r\n            this.panner.panningModel = 'equalpower';\r\n            this.panner.setPosition(0, 0, 0);\r\n\r\n            this.input.connect(this.panner);\r\n            this.panner.connect(this.output);\r\n    */\r\n\r\n    this.lastEffect = this.input;\r\n\r\n    this.midiInputs = {};\r\n    this.midiOutputs = {};\r\n    this.routeToMidiOut = false;\r\n    this.midiEventListeners = {};\r\n    this.monitor = false;\r\n    this.recordEnabled = false;\r\n\r\n    this.mute = false;\r\n    this.solo = false;\r\n    this.channel = 'any'; // note that this is the output channel, i.e. the events of this track are routed to the set channel\r\n    this.quantizeValue = 0;\r\n    this.fixedLengthValue = 0;\r\n    this.autoQuantize = false;\r\n    this.retrospectiveRecording = [];\r\n    this.recordingNotes = {};\r\n    this.enableRetrospectiveRecording = false;\r\n    if (type !== 'metronome') {\r\n      //console.log(this.instrumentName, this.id);\r\n      this.setInstrument(this.instrumentName);\r\n    }\r\n    //this.audio = createAudioTrack(this);\r\n  };\r\n\r\n\r\n  function getPart(data, track) {\r\n    var part = false;\r\n    if (!data) {\r\n      part = false;\r\n    } else if (data.className === 'Part') {\r\n      part = data;\r\n    } else if (typeString(data) === 'string') {\r\n      part = track.partsById[data];\r\n    } else if (isNaN(data) === false) {\r\n      part = track.parts[data];\r\n    }\r\n    return part;\r\n  }\r\n\r\n\r\n  function getEvent(data, track) {\r\n    var event = false;\r\n    if (!data) {\r\n      event = false;\r\n    } else if (data.className === 'MidiEvent' || data.className === 'AudioEvent') {\r\n      event = data;\r\n    } else if (typeString(data) === 'array' && data.length === 4) {\r\n      // new event as array\r\n      event = createMidiEvent(data);\r\n    } else if (typeString(data) === 'string') {\r\n      // get event by id\r\n      event = track.eventsById[data];\r\n    } else if (isNaN(data) === false) {\r\n      // get event by index\r\n      event = track.events[data];\r\n    }\r\n    return event;\r\n  }\r\n\r\n\r\n  function getPartsAndConfig(args, track) {\r\n    args = Array.prototype.slice.call(args);\r\n    var\r\n      j = 0,\r\n      i = 0,\r\n      maxi,\r\n      part,\r\n      arg,\r\n      arg0 = args[0],\r\n      parts = [],\r\n      config = [];\r\n\r\n    //console.log(args, track);\r\n    //console.log(args);\r\n    //console.log(arg0);\r\n\r\n    if (typeString(arg0) === 'array') {\r\n\r\n      for (i = arg0.length - 1; i >= 0; i--) {\r\n        arg = arg0[i];\r\n        part = getPart(arg, track);\r\n        if (part) {\r\n          parts.push(part);\r\n        }\r\n      }\r\n      j = parts.length === 0 ? 0 : 1;\r\n    }\r\n\r\n    maxi = args.length;\r\n    for (i = j; i < maxi; i++) {\r\n      arg = args[i];\r\n      part = getPart(arg, track);\r\n      if (part) {\r\n        parts.push(part);\r\n      } else {\r\n        config.push(arg);\r\n      }\r\n    }\r\n\r\n    if (parts.length === 0) {\r\n      //console.error('Please provide one or more parts, or an array of parts');\r\n      console.warn('no parts added');\r\n      return false;\r\n    }\r\n    /*\r\n            if(config.length === 1 && typeString(config[0]) === 'array'){\r\n                config = config[0];\r\n            }\r\n    */\r\n    return {\r\n      parts: parts,\r\n      config: config\r\n    };\r\n  }\r\n\r\n\r\n  function getEventsAndConfig(args, track) {\r\n    args = Array.prototype.slice.call(args);\r\n\r\n    var\r\n      j = 0,\r\n      i = 0,\r\n      maxi,\r\n      event,\r\n      arg,\r\n      arg0 = args[0],\r\n      events = [],\r\n      config = [];\r\n\r\n\r\n    if (typeString(arg0) === 'array') {\r\n\r\n      for (i = arg0.length - 1; i >= 0; i--) {\r\n        arg = arg0[i];\r\n        //@TODO: this can be dangerous!\r\n        //console.log(arg);\r\n        event = getEvent(arg, track);\r\n        //console.log(event);\r\n        if (event) {\r\n          events.push(event);\r\n        }\r\n      }\r\n      //j = events.length === 0 ? 0 : 1;\r\n      j = 1;\r\n    }\r\n\r\n    maxi = args.length;\r\n    for (i = j; i < maxi; i++) {\r\n      arg = args[i];\r\n      event = getEvent(arg, track);\r\n      if (event) {\r\n        events.push(event);\r\n      } else {\r\n        config.push(arg);\r\n      }\r\n    }\r\n\r\n    if (events.length === 0) {\r\n      if (debug >= 2) {\r\n        console.info('Please provide one or more events, or an array of events');\r\n      }\r\n    }\r\n\r\n    if (config.length === 1 && typeString(config[0]) === 'array') {\r\n      config = config[0];\r\n    }\r\n\r\n    //console.log(events);\r\n    //console.log(config);\r\n\r\n    return {\r\n      events: events,\r\n      config: config\r\n    };\r\n  }\r\n\r\n\r\n  function getTicksAtPosition(position, song) {\r\n    var type, ticks;\r\n\r\n    position = checkPosition(position);\r\n\r\n    if (position === false) {\r\n      //console.warn('wrong position data');\r\n      return false;\r\n    }\r\n\r\n    type = position[0];\r\n\r\n    if (song === undefined && type !== 'ticks') {\r\n      console.error('Track has not been added to a song yet, you can only use tick values');\r\n      return false;\r\n    }\r\n\r\n    switch (type) {\r\n      case 'ticks':\r\n        ticks = position[1];\r\n        break;\r\n      case 'millis':\r\n        ticks = song.millisToTicks(position[1]);\r\n        break;\r\n      case 'barsbeats':\r\n      case 'barsandbeats':\r\n      case 'time':\r\n        position = song.getPosition(position, 'ticks');\r\n        ticks = position.ticks;\r\n        break;\r\n    }\r\n    //return parseInt(ticks, 10);\r\n    return ticks;\r\n  }\r\n\r\n\r\n  function addParts(args, track) {\r\n    if (args === false) {\r\n      return;\r\n    }\r\n    var i, j, e, part, eventsById, ticks, move,\r\n      song = track.song,\r\n      parts = args.parts,\r\n      maxi = parts.length,\r\n      partsById = track.partsById;\r\n\r\n\r\n    //for(i = parts.length - 1; i >= 0; i--){\r\n    for (i = 0; i < maxi; i++) {\r\n      part = getPart(parts[i]);\r\n\r\n      if (part === false) {\r\n        console.error(part, 'is not a part');\r\n        continue;\r\n      }\r\n      if (part.track !== undefined) {\r\n        //console.warn('this part has already been added to track', part.track.id, ', adding a copy');\r\n        part = part.copy();\r\n      }\r\n      if (part.hasAudioEvents && track.audio === undefined) {\r\n        track.audio = createAudioTrack(track);\r\n      }\r\n\r\n      //console.log(part.id, part.trackId);\r\n\r\n      part.song = song;\r\n      part.track = track;\r\n      part.trackId = track.id;\r\n\r\n      eventsById = part.eventsById;\r\n      ticks = part.ticks;\r\n      move = ticks !== 0;\r\n\r\n      //console.log(part.id, move, eventsById);\r\n\r\n      for (j in eventsById) {\r\n        if (eventsById.hasOwnProperty(j)) {\r\n          e = eventsById[j];\r\n          //console.log(e, track, track.id);\r\n          e.track = track;\r\n          e.channel = track.channel;\r\n          e.trackId = track.id;\r\n          if (move) {\r\n            e.ticks += ticks;\r\n          }\r\n          e.state = 'new';\r\n        }\r\n      }\r\n\r\n      part.state = 'new';\r\n\r\n      //if(move){\r\n      part.needsUpdate = true;\r\n      //}\r\n\r\n      partsById[part.id] = part;\r\n      // console.log('partsById', partsById);\r\n    }\r\n\r\n    track.needsUpdate = true;\r\n  }\r\n\r\n\r\n  function moveParts(args, track) {\r\n    if (args === false) {\r\n      return;\r\n    }\r\n    var newTicks, part,\r\n      parts = args.parts,\r\n      ticks = args.config[0],\r\n      diffTicks = ticks, i;\r\n\r\n    //console.log('moveParts',parts);\r\n\r\n    for (i = parts.length - 1; i >= 0; i--) {\r\n      part = parts[i];\r\n      newTicks = part.ticks + ticks;\r\n\r\n      //console.log(newTicks, ticks, part.ticks);\r\n\r\n      if (newTicks < 0) {\r\n        newTicks = 0;\r\n        diffTicks = -part.ticks;\r\n      }\r\n\r\n      part.ticks = newTicks;\r\n      //console.log(part.events, diffTicks);\r\n      part.moveEvents(part.events, diffTicks);\r\n      if (part.state !== 'new') {\r\n        part.state = 'changed';\r\n      }\r\n      //console.log('Track.moveParts()', part.state);\r\n    }\r\n    track.needsUpdate = true;\r\n  }\r\n\r\n\r\n  function movePartsTo(args, track) {\r\n    if (args === false) {\r\n      return;\r\n    }\r\n\r\n    var i, part, ticks, diffTicks,\r\n      song = track.song,\r\n      parts = args.parts,\r\n      positions = args.config;\r\n\r\n    for (i = parts.length - 1; i >= 0; i--) {\r\n      part = parts[i];\r\n      ticks = getTicksAtPosition(positions[i], song);\r\n      // /console.log(ticks, positions[i]);\r\n\r\n      if (ticks === false) {\r\n        console.warn('wrong position data, skipping part', part.id);\r\n        continue;\r\n      }\r\n\r\n      diffTicks = ticks - part.ticks;\r\n      //console.log(part.ticks, ticks, diffTicks);\r\n      part.ticks = ticks;\r\n      part.moveAllEvents(diffTicks);\r\n      //console.log('Track.movePartsTo()', part.state);\r\n      if (part.state !== 'new') {\r\n        part.state = 'changed';\r\n      }\r\n    }\r\n\r\n    track.needsUpdate = true;\r\n  }\r\n\r\n\r\n  function removeParts(args, track) {\r\n    if (args === false) {\r\n      return [];\r\n    }\r\n    var i, part,\r\n      removed = [],\r\n      tobeRemoved = args.parts;\r\n\r\n    if (tobeRemoved === undefined) {\r\n      console.log('weird situation, check this when it happens');\r\n      return [];\r\n    }\r\n\r\n    for (i = tobeRemoved.length - 1; i >= 0; i--) {\r\n      part = tobeRemoved[i];\r\n      //console.log('removing part', part, 'from track', track.id);\r\n      if (part.track !== undefined && part.track !== track) {\r\n        console.warn('can\\'t remove: this part belongs to track', part.track.id);\r\n        continue;\r\n      }\r\n\r\n      removed.push(part);\r\n      part.state = 'removed';\r\n      part.reset(true, true);\r\n    }\r\n    track.needsUpdate = true;\r\n    return removed;\r\n  }\r\n\r\n\r\n  function removeEvents(args, track) {\r\n    if (args === false) {\r\n      return;\r\n    }\r\n\r\n    var i, part, partId, event, eventsPerPart = {},\r\n      removed = [],\r\n      tobeRemoved = args;//.events;\r\n\r\n\r\n    for (i = tobeRemoved.length - 1; i >= 0; i--) {\r\n      event = tobeRemoved[i];\r\n      if (event.track !== undefined && event.track !== null && event.track !== track) {\r\n        console.warn('can\\'t remove: this event belongs to track', event.track.id);\r\n        continue;\r\n      }\r\n      partId = event.partId;\r\n      if (eventsPerPart[partId] === undefined) {\r\n        eventsPerPart[partId] = [];\r\n      }\r\n      eventsPerPart[partId].push(event);\r\n      removed.push(event);\r\n    }\r\n\r\n    for (partId in eventsPerPart) {\r\n      if (eventsPerPart.hasOwnProperty(partId)) {\r\n        part = track.partsById[partId];\r\n        part.removeEvents(eventsPerPart[partId]);\r\n      }\r\n    }\r\n\r\n    track.needsUpdate = true;\r\n    return removed;\r\n  }\r\n\r\n\r\n  /*\r\n      getInput = function(){\r\n          var args = Array.prototype.slice.call(arguments),\r\n              loop, arg,\r\n              type, events = [];\r\n\r\n          loop = function(data, i, maxi){\r\n              var midiData;\r\n              for(i = 0; i < maxi; i++){\r\n                  arg = data[i];\r\n                  type = typeString(arg);\r\n                  if(arg === undefined){\r\n                      continue;\r\n                  }else if(type === 'midimessageevent'){\r\n                      midiData = arg.data;\r\n                      events.push(createMidiEvent(0, midiData[0], midiData[1], midiData[2]));\r\n                  }else if(arg.className === 'MidiEvent'){\r\n                      events.push(arg);\r\n                  }else if(type === 'array'){\r\n                      loop(arg, 0, arg.length);\r\n                  }\r\n              }\r\n          };\r\n\r\n          loop(args, 0, args.length);\r\n          return events;\r\n      };\r\n  */\r\n\r\n  Track.prototype.addPart = Track.prototype.addParts = function () {//newParts\r\n    //console.log('addPart',arguments);\r\n    var args = getPartsAndConfig(arguments, this);\r\n    addParts(args, this);\r\n  };\r\n\r\n\r\n  //addPartsAt(part1,part2,'ticks',480,1920); -> no\r\n  //addPartsAt([part1,part2],'ticks',[480,1920]); -> no\r\n  //addPartsAt([part1,part2],['ticks',480,1920]); -> no\r\n\r\n  //addPartsAt([part1, part2], [['ticks',480], ['ticks',1920]]); -> yes\r\n  //addPartsAt(part1, part2, ['ticks',480], ['ticks',1920]); -> yes\r\n  //addPartsAt(part1, part2, [['ticks',480], ['ticks',1920]]); -> yes\r\n  //addPartsAt([part1, part2], ['ticks',480], ['ticks',1920]); -> yes\r\n\r\n  Track.prototype.addPartAt = Track.prototype.addPartsAt = function () {\r\n    var args = getPartsAndConfig(arguments, this),\r\n      config,\r\n      parts,\r\n      i, part, ticks;\r\n\r\n    if (args === false) {\r\n      return;\r\n    }\r\n\r\n    parts = args.parts;\r\n    config = args.config;\r\n\r\n    if (config === undefined) {\r\n      console.error('please provide position data');\r\n      return false;\r\n    }\r\n\r\n    //console.log('addPartsAt', args.parts, args.config);\r\n\r\n    for (i = parts.length - 1; i >= 0; i--) {\r\n      part = parts[i];\r\n      if (config[0] === 'ticks') {\r\n        ticks = config[1];\r\n      } else {\r\n        ticks = getTicksAtPosition(config[i], this.song);\r\n      }\r\n      //console.log('addPartsAt',this.id, part.track, part.id, ticks, config[i]);\r\n      //console.log(part.ticks, ticks);\r\n      if (ticks === false) {\r\n        continue;\r\n      }\r\n      part.ticks += ticks;\r\n    }\r\n\r\n    addParts(args, this);\r\n  };\r\n\r\n  /*\r\n      Track.prototype.addPartAt = function(part, position){\r\n          var ticks = getTicksAtPosition(position);\r\n          part = getPart(part, this);\r\n\r\n          if(ticks === false){\r\n              console.error('please provide a valid position');\r\n              return false;\r\n          }\r\n\r\n          if(part === false){\r\n              console.error('please provide a valid part');\r\n              return false;\r\n          }\r\n\r\n          part.ticks += ticks;\r\n          //console.log(ticks);\r\n          addParts({parts:[part], config:[]}, this);\r\n      };\r\n  */\r\n\r\n  Track.prototype.movePart = Track.prototype.moveParts = function () {//parts, ticks\r\n    var args = getPartsAndConfig(arguments, this);\r\n    moveParts(args, this);\r\n  };\r\n\r\n\r\n  Track.prototype.movePartTo = Track.prototype.movePartsTo = function () {//selectedParts, position\r\n    var args = getPartsAndConfig(arguments, this);\r\n    //console.log('movePartTo', args);\r\n    movePartsTo(args, this);\r\n  };\r\n\r\n\r\n  Track.prototype.moveAllParts = function (ticks) {\r\n    this.moveParts({ parts: this.parts, config: [ticks] });\r\n  };\r\n\r\n\r\n  Track.prototype.copyPart = Track.prototype.copyParts = function () {\r\n    var args = getPartsAndConfig(arguments, this),\r\n      selectedParts,\r\n      copiedParts = [];\r\n\r\n    if (args === false) {\r\n      return;\r\n    }\r\n\r\n    if (selectedParts.length === 0) {\r\n      console.error('no parts');\r\n      return;\r\n    }\r\n    selectedParts = args.parts;\r\n\r\n    selectedParts.forEach(function (part) {\r\n      copiedParts.push(part.copy());\r\n    });\r\n\r\n    return copiedParts.length === 1 ? copiedParts[0] : copiedParts;\r\n  };\r\n\r\n\r\n  Track.prototype.removePart = function () {\r\n    var args = getPartsAndConfig(arguments, this),\r\n      removed = removeParts(args, this);\r\n    return removed.length === 1 ? removed[0] : removed;\r\n  };\r\n\r\n\r\n  Track.prototype.removeParts = function () {\r\n    var args = getPartsAndConfig(arguments, this);\r\n    return removeParts(args, this);\r\n  };\r\n\r\n\r\n  Track.prototype.getPart = function (arg) {\r\n    return getPart(arg);\r\n  };\r\n\r\n\r\n  Track.prototype.getParts = function () {\r\n    var args = Array.prototype.slice.call(arguments),\r\n      arg,\r\n      result = [],\r\n      loop;\r\n\r\n    loop = function (data, i) {\r\n      arg = data[i];\r\n      if (typeString(arg) === 'array') {\r\n        loop(arg, 0);\r\n      } else {\r\n        result.push(getPart(arg));\r\n      }\r\n    };\r\n\r\n    loop(args, 0);\r\n    return result;\r\n  };\r\n\r\n\r\n  Track.prototype.getPartAt = Track.prototype.getPartsAt = function (position) {\r\n    var ticks = getTicksAtPosition(position, this.song),\r\n      parts = this.parts,\r\n      selectedParts = [];\r\n\r\n    if (ticks === false) {\r\n      console.error('please provide position as array, for instance: [\\'barsandbeats\\',5,1,2,0]');\r\n      return;\r\n    }\r\n\r\n    parts.forEach(function (part) {\r\n      if (part.ticks === ticks) {\r\n        selectedParts.push(part);\r\n      }\r\n    });\r\n\r\n    return selectedParts;\r\n  };\r\n\r\n\r\n  Track.prototype.getPartFromTo = Track.prototype.getPartsFromTo = function (from, to) {\r\n    var parts = this.parts,\r\n      selectedParts = [],\r\n      fromTicks = getTicksAtPosition(from, this.song),\r\n      toTicks = getTicksAtPosition(to, this.song);\r\n\r\n    if (fromTicks === false) {\r\n      console.error('invalid position data for from position');\r\n      return;\r\n    }\r\n\r\n    if (toTicks === false) {\r\n      console.error('invalid position data for from position');\r\n      return;\r\n    }\r\n\r\n    parts.forEach(function (part) {\r\n      if (fromTicks >= part.start.ticks && fromTicks <= part.end.ticks || toTicks >= part.start.ticks && toTicks <= part.end.ticks) {\r\n        selectedParts.push(part);\r\n      }\r\n    });\r\n\r\n    return selectedParts;\r\n  };\r\n\r\n\r\n  Track.prototype.getPartBetween = Track.prototype.getPartBetween = function (from, to) {\r\n    var parts = this.parts,\r\n      selectedParts = [],\r\n      fromTicks = getTicksAtPosition(from, this.song),\r\n      toTicks = getTicksAtPosition(toTicks, this.song);\r\n\r\n    if (fromTicks === false || toTicks === false) {\r\n      console.error('please provide position as array, for instance: [\\'barsandbeats\\',5,1,2,0]');\r\n      return;\r\n    }\r\n\r\n    parts.forEach(function (part) {\r\n      if (part.start.ticks >= fromTicks && part.end.ticks <= toTicks) {\r\n        selectedParts.push(part);\r\n      }\r\n    });\r\n\r\n    return selectedParts;\r\n  };\r\n\r\n\r\n  Track.prototype.copy = function () {\r\n    var track = new Track(copyName(this.name)),\r\n      part, i, effect,\r\n      parts = this.parts,\r\n      copiedParts = [];\r\n\r\n    track.song = null;\r\n    track.instrumentId = this.instrumentId;\r\n    track.numEffects = this.numEffects;\r\n    if (this.numEffects > 0) {\r\n      track.effects = {};\r\n      for (i in this.effects) {\r\n        if (this.effects.hasOwnProperty(i)) {\r\n          effect = this.effects[i];\r\n          track.effects[effect.id] = effect.copy();\r\n        }\r\n      }\r\n    }\r\n\r\n    for (i = parts.length - 1; i >= 0; i--) {\r\n      part = parts[i];\r\n      copiedParts.push(part.copy());\r\n    }\r\n    //console.log(parts.length);\r\n    track.addParts(copiedParts);\r\n    return track;\r\n  };\r\n\r\n\r\n  Track.prototype.removeEvent = Track.prototype.removeEvents = function () {//events\r\n    var args = getEventsAndConfig(arguments, this);\r\n    removeEvents(args.events, this);\r\n  };\r\n\r\n\r\n  Track.prototype.removeEventsFromTo = function (from, to) {\r\n    console.warn('removeEventsFromTo() is temporarily disabled');\r\n    //removeEventsFromTo(from, to, this);\r\n  };\r\n\r\n\r\n  Track.prototype.removeEventAt = Track.prototype.removeEventsAt = function (position) {\r\n    console.warn('removeEventAt() is temporarily disabled');\r\n    //removeEventsAt(position, this);\r\n  };\r\n\r\n\r\n  Track.prototype.removeAllEvents = function () {\r\n    removeEvents(this.events, this);\r\n  };\r\n\r\n\r\n  Track.prototype.transposePart = function (part, semi) {\r\n    var stats = part.getStats('noteNumber all'),\r\n      min = 0, max = 127, semi2;\r\n    //console.log('transposePart', semi);\r\n    if (this.song) {\r\n      min = this.song.lowestNote;\r\n      max = this.song.highestNote;\r\n    }\r\n    //console.log(stats.min, min, stats.max, max);\r\n    if (stats.min + semi < min) {\r\n      semi2 = min - stats.min;\r\n      return;\r\n    } else if (stats.max + semi > max) {\r\n      semi2 = max = stats.max;\r\n      return;\r\n    }\r\n    //console.log(semi, semi2);\r\n    part.transposeAllEvents(semi);\r\n  };\r\n\r\n  // Track.prototype.addEvents = function(){\r\n  //     var part = sequencer.createPart();\r\n  //     part.addEvents(arguments);\r\n  //     this.addPart(part);\r\n  // };\r\n\r\n  // move events\r\n  /*\r\n      Track.prototype.moveEvent = Track.prototype.moveEvents = function(){//events, ticks\r\n          var args = getEventsAndConfig(arguments);\r\n          moveEvents(args.config[0], args.events, this);\r\n      };\r\n\r\n\r\n      Track.prototype.moveEventTo = Track.prototype.moveEventsTo = function(){//events, position\r\n          var args = getEventsAndConfig(arguments);\r\n          moveEventsTo(args.config[0], args.events, this);\r\n      };\r\n\r\n\r\n      Track.prototype.moveAllEvents = function(ticks){\r\n          moveEvents(ticks, this.events, this);\r\n      };\r\n\r\n\r\n      Track.prototype.moveAllEventsTo = function(position){\r\n          moveEventsTo(position, this.events, this);\r\n      };\r\n\r\n\r\n      // copy events\r\n\r\n      Track.prototype.copyEvent = Track.prototype.copyEvents = function(){//events\r\n          var args = getEventsAndConfig(arguments);\r\n          return copyEvents(args.events);\r\n      };\r\n\r\n\r\n      Track.prototype.copyAllEvents = function(){\r\n          return copyEvents(this.events);\r\n      };\r\n\r\n\r\n      Track.prototype.copyEventTo = Track.prototype.copyEventsTo = function(){//events, position\r\n          var args = getEventsAndConfig(arguments);\r\n          copyEventsTo(args.config[0], args.events, this);\r\n      };\r\n\r\n\r\n      Track.prototype.copyAllEventsTo = function(position){\r\n          copyEventsTo(position, this.events, this);\r\n      };\r\n\r\n\r\n      // repeat events\r\n\r\n      Track.prototype.repeatEvent = Track.prototype.repeatEvents = function(){//events, config\r\n          var args = getEventsAndConfig(arguments);\r\n          repeatEvents(args.config[0], args.events, this);\r\n      };\r\n\r\n\r\n      // transpose events\r\n\r\n      Track.prototype.transposeEvent = Track.prototype.transposeEvents = function(){//events, semi\r\n          var args = getEventsAndConfig(arguments);\r\n          transposeEvents(args.config[0], args.events);\r\n      };\r\n\r\n\r\n      Track.prototype.transpose = Track.prototype.transposeAllEvents = function(semi){\r\n          transposeEvents(semi, this.events);\r\n      };\r\n  */\r\n\r\n  Track.prototype.reset = function () {\r\n    var id, part;\r\n    this.song = null;\r\n    // fixing issue #5\r\n    if (this.audio) {\r\n      this.audio.setSong(null);\r\n    }\r\n    for (id in this.partsById) {\r\n      if (this.partsById.hasOwnProperty(id)) {\r\n        part = this.partsById[id];\r\n        // don't reset from track, reset from song only\r\n        part.reset(false, true);\r\n        //part.state = 'removed';\r\n      }\r\n    }\r\n    this.needsUpdate = true;\r\n  };\r\n\r\n\r\n  // find event utils\r\n\r\n  Track.prototype.findEvent = function (pattern) {\r\n    return findEvent(this, pattern);\r\n  };\r\n\r\n\r\n  Track.prototype.findNote = function (pattern) {\r\n    return findNote(this, pattern);\r\n  };\r\n\r\n\r\n  Track.prototype.getStats = function (pattern) {\r\n    return getStats(this, pattern);\r\n  };\r\n\r\n\r\n  Track.prototype.update = function () {\r\n    //console.log('track update');\r\n    //@TODO: do we need events and notes in a track?\r\n\r\n    this.parts = [];\r\n    this.notes = [];\r\n    this.events = [];\r\n\r\n    var i, id, part, event, events, note;\r\n    for (id in this.partsById) {\r\n      if (this.partsById.hasOwnProperty(id)) {\r\n        part = this.partsById[id];\r\n\r\n        if (part.needsUpdate === true) {\r\n          //console.log(part);\r\n          part.update();\r\n        }\r\n\r\n        //console.log(part.events.length, part.keepWhenEmpty);\r\n\r\n        if (part.events.length === 0 && part.keepWhenEmpty === false) {\r\n          this.removePart(part);\r\n        }\r\n\r\n        if (part.state === 'new' && this.song !== undefined) {\r\n          events = part.events;\r\n          for (i = events.length - 1; i >= 0; i--) {\r\n            event = events[i];\r\n            event.song = this.song;\r\n          }\r\n        }\r\n\r\n        if (part.state !== 'removed') {\r\n          this.parts.push(part);\r\n          this.notes = this.notes.concat(part.notes);\r\n          this.events = this.events.concat(part.events);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.parts.sort(function (a, b) {\r\n      return a.ticks - b.ticks;\r\n    });\r\n\r\n    this.notes.sort(function (a, b) {\r\n      return a.ticks - b.ticks;\r\n    });\r\n\r\n    this.events.sort(function (a, b) {\r\n      return a.sortIndex - b.sortIndex;\r\n    });\r\n\r\n\r\n    this.numEvents = this.events.length;\r\n    this.numNotes = this.notes.length;\r\n    this.numParts = this.parts.length;\r\n\r\n    for (i = this.numEvents - 1; i >= 0; i--) {\r\n      event = this.events[i];\r\n      this.eventsById[event.id] = event;\r\n    }\r\n\r\n    for (i = this.numNotes - 1; i >= 0; i--) {\r\n      note = this.notes[i];\r\n      this.notesById[note.id] = note;\r\n    }\r\n\r\n    this.needsUpdate = false;\r\n  };\r\n\r\n\r\n  Track.prototype.getIndex = function () {\r\n    var index = -1,\r\n      tracks = this.song.tracks,\r\n      numTracks = tracks.length,\r\n      track, i;\r\n\r\n    if (numTracks > 0) {\r\n\r\n      for (i = 0; i < numTracks; i++) {\r\n        track = tracks[i];\r\n        if (track.id === this.id) {\r\n          index = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return index;\r\n  };\r\n\r\n\r\n  /*\r\n\r\n      Track:\r\n       input\r\n       panner\r\n       output\r\n\r\n\r\n       input\r\n       fx\r\n       panner\r\n       output\r\n\r\n\r\n       input\r\n       fx\r\n       fx2\r\n       panner\r\n       output\r\n\r\n  */\r\n\r\n  Track.prototype.addEffect = function (effect, position) {\r\n    if (!effect) {\r\n      return;\r\n    }\r\n    // //effect.setInput(this.input);\r\n    /*\r\n            //this.input.connect(effect.node);\r\n            this.input.disconnect(0);\r\n            try{\r\n                this.input.disconnect(1);\r\n            }catch(e){\r\n                console.log(e);\r\n            }\r\n            effect.setInput(this.input);\r\n            effect.node.connect(this.panner.node);\r\n\r\n    //CONNNECT\r\n    return;\r\n    */\r\n\r\n    //console.log(effect);\r\n\r\n    this.effects[effect.id] = effect;\r\n    this.numEffects++;\r\n\r\n    if (this.lastEffect !== undefined) {\r\n      // disconnect output from panner\r\n      this.lastEffect.disconnect(0);\r\n      // try{\r\n      //     this.input.disconnect(1);\r\n      // }catch(e){\r\n      //     console.log(e);\r\n      // }\r\n      // connect output to input of new effect\r\n      effect.setInput(this.lastEffect);\r\n    }\r\n    // connect new effect to panner\r\n    effect.output.connect(this.panner.node);\r\n\r\n    // remember the last effect in case we want to add another effect\r\n    this.lastEffect = effect.output;\r\n\r\n\r\n    /*\r\n            if(position !== undefined && isNaN(position) === false){\r\n                this.setEffectPosition(position);\r\n            }else{\r\n                effect.position = this.numEffects;\r\n            }\r\n            this.numEffects++;\r\n    */\r\n  };\r\n\r\n\r\n  Track.prototype.removeEffect = function (effect) {\r\n    if (effect === false) {\r\n      return;\r\n    }\r\n    delete this.effects[effect.id];\r\n    this.numEffects--;\r\n  };\r\n\r\n\r\n  Track.prototype.setEffectPosition = function (effect, position) {\r\n    var i, fx, maxi = this.numEffects - 1;\r\n\r\n    if (position < 0 || position > maxi) {\r\n      return;\r\n    }\r\n\r\n    effect.position = position;\r\n    for (i = 0; i < maxi - 1; i++) {\r\n      fx = this.effects[i];\r\n      if (fx.position >= position && fx !== effect) {\r\n        fx.position += 1;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.setSolo = function (flag) {\r\n    if (flag === undefined) {\r\n      flag = !this.solo;\r\n    }\r\n    this.mute = false;\r\n    this.solo = flag;\r\n    if (this.song) {\r\n      this.song.setTrackSolo(this, flag);\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.setPartSolo = function (soloPart, flag) {\r\n    var i, part;\r\n    for (i = this.numParts - 1; i >= 0; i--) {\r\n      part = this.parts[i];\r\n      if (flag === true) {\r\n        part.mute = part === soloPart ? !flag : flag;\r\n      } else if (flag === false) {\r\n        part.mute = false;\r\n      }\r\n      part.solo = part === soloPart ? flag : false;\r\n      //console.log(soloPart.id, soloPart.mute, part.id, part.mute);\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.setVolume = function (value) {\r\n    if (isNaN(value)) {\r\n      if (sequencer.debug >= 1) {\r\n        console.error('please pass a number');\r\n      }\r\n    } else if (value < 0 || value > 1) {\r\n      if (sequencer.debug >= 1) {\r\n        console.error('please pass a float between 0 and 1');\r\n      }\r\n    } else {\r\n      this.volume = value;\r\n      // this.output.gain.value = this.volume; //-> this doesn't work which is weird\r\n      this.input.gain.value = this.volume; // this does work\r\n      // console.log(this.volume);\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.getVolume = function () {\r\n    return this.volume;\r\n  };\r\n\r\n  Track.prototype.setPanning = function (value) {\r\n    this.panner.setPosition(value);\r\n  };\r\n\r\n\r\n  Track.prototype.connect = function (node) {\r\n    //this.panner.node.connect(node);\r\n    this.output.connect(node);\r\n  };\r\n\r\n\r\n  Track.prototype.disconnect = function (node) {\r\n    //this.panner.node.disconnect(node);\r\n    this.output.disconnect(0);\r\n  };\r\n\r\n\r\n  function getDefaultInstrumentConfig(track) {\r\n    var config;\r\n    if (track.song !== undefined && track.song.defaultInstrument !== undefined) {\r\n      config = findItem(track.song.defaultInstrument, sequencer.storage.instruments);\r\n      //console.log('default instrument song', track.song.defaultInstrument);\r\n    }\r\n    if (config === false || config === undefined) {\r\n      config = findItem(sequencer.defaultInstrument, sequencer.storage.instruments);\r\n      //console.log('default instrument sequencer', sequencer.defaultInstrument, config);\r\n      //console.log(sequencer.storage.instruments.heartbeat.sinewave);\r\n    }\r\n    return config;\r\n  }\r\n\r\n\r\n  Track.prototype.setInstrument = function (arg) {\r\n    //console.log('Track.setInstrument()', arg.name, this.name);\r\n    if (arg === '' || arg === undefined || arg === false) {\r\n      arg = getDefaultInstrumentConfig(this);\r\n      //console.log('default', arg);\r\n    }\r\n    var instrument = createInstrument(arg);\r\n\r\n    //console.log(instrument);\r\n\r\n    if (instrument === false) {\r\n      instrument = createInstrument(getDefaultInstrumentConfig(this));\r\n    }\r\n\r\n    /*\r\n            var instrument;\r\n\r\n            if(arg === '' || arg === undefined || arg === false){\r\n                getDefaultInstrumentConfig(this);\r\n            }else{\r\n                instrument = createInstrument(arg);\r\n            }\r\n\r\n    */\r\n    instrument.track = this;\r\n    // stop possible scheduled notes by the previous instrument\r\n    if (this.instrument) {\r\n      this.instrument.allNotesOff();\r\n    }\r\n    this.instrument = instrument;\r\n    this.instrumentId = instrument.name;\r\n    if (this.song) {\r\n      this.instrument.song = this.song;\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.setMidiInput = function (id, flag) {\r\n    var input, i,\r\n      midiInputs = this.midiInputs,\r\n      availableInputs;\r\n\r\n    //console.log(id, flag, this.song.midiInputs[id]);\r\n\r\n    flag = flag === undefined ? true : flag;\r\n\r\n    if (id === 'all') {\r\n      availableInputs = this.song !== undefined ? this.song.midiInputs : sequencer.midiInputs;\r\n      objectForEach(availableInputs, function (value, key) {\r\n        if (flag === true) {\r\n          midiInputs[key] = value;\r\n        } else {\r\n          delete midiInputs[key];\r\n        }\r\n      });\r\n      //console.log(sequencer.midiInputs, this.midiInputs, midiInputs);\r\n      return;\r\n    }\r\n\r\n    input = this.song.midiInputs[id];\r\n    //console.log(input, id);\r\n    if (input === undefined) {\r\n      return;\r\n    }\r\n    //this.midiInputs[id] = flag === true ? input : false;\r\n    if (flag) {\r\n      this.midiInputs[id] = input;\r\n    } else {\r\n      delete this.midiInputs[id];\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.setMidiOutput = function (id, flag) {\r\n    // a track can, unlike Cubase, send its events to more than one midi output\r\n    flag = flag === undefined ? true : flag;\r\n\r\n    //console.log(id, flag, this.song.midiOutputs);\r\n\r\n    var output = this.song.midiOutputs[id],\r\n      me = this;\r\n\r\n    if (output === undefined) {\r\n      return;\r\n    }\r\n\r\n\r\n    // stop the internal instrument if a midi output has been chosen -> particulary necessary while the song is playing\r\n    if (flag === true) {\r\n      this.instrument.allNotesOff();\r\n    }\r\n\r\n    //this.midiOutputs[id] = flag === true ? output : false;\r\n    if (flag) {\r\n      this.midiOutputs[id] = output;\r\n    } else {\r\n      delete this.midiOutputs[id];\r\n    }\r\n\r\n    this.routeToMidiOut = false;\r\n\r\n    //console.log(this.midiOutputs[id]);\r\n    objectForEach(this.midiOutputs, function (value, key) {\r\n      //console.log(value, key);\r\n      if (value !== false) {\r\n        me.routeToMidiOut = true;\r\n      }\r\n    });\r\n    //console.log(output, id, this.routeToMidiOut);\r\n  };\r\n\r\n\r\n  Track.prototype.prepareForRecording = function (recordId, callback) {\r\n    //console.log('prepare', this.recordEnabled, recordId);\r\n    if (this.recordEnabled !== 'midi' && this.recordEnabled !== 'audio') {\r\n      return;\r\n    }\r\n    this.recordPart = sequencer.createPart();\r\n    this.addPart(this.recordPart);\r\n    //console.log(this.recordPart.needsUpdate);\r\n    this.recordingNotes = {};\r\n    this.recordId = recordId;\r\n\r\n    if (this.recordEnabled === 'audio') {\r\n      if (this.audio === undefined) {\r\n        this.audio = createAudioTrack(this);\r\n      }\r\n      this.audio.prepareForRecording(recordId, callback);\r\n    }\r\n    //console.log(this.recordEnabled);\r\n  };\r\n\r\n\r\n  Track.prototype.stopRecording = function (recordId, callback) {\r\n    //console.log(recordId, this.recordId);\r\n    if (this.recordId !== recordId) {\r\n      return;\r\n    }\r\n\r\n    this.recordingNotes = {};\r\n    if (this.autoQuantize || this.song.autoQuantize) {\r\n      if (debug >= 1) {\r\n        console.log('performing auto quantize');\r\n      }\r\n      this.quantizeRecording();\r\n    }\r\n\r\n    if (this.recordEnabled === 'midi') {\r\n      this.recordPart.update();\r\n      callback(this.recordPart.events);\r\n    } else if (this.recordEnabled === 'audio') {\r\n      var scope = this;\r\n      this.audio.stopRecording(function (recording) {\r\n\r\n        var event = sequencer.createAudioEvent({\r\n          ticks: scope.song.recordTimestampTicks,\r\n          buffer: recording.audioBuffer,\r\n          sampleId: recording.id,\r\n        });\r\n\r\n        scope.recordPart.addEvent(event);\r\n        scope.recordPart.update();\r\n        callback([event]);\r\n      });\r\n    }\r\n  };\r\n\r\n  /*\r\n      Track.prototype.undoRecording = function(recordId){\r\n          if(this.recordId !== recordId){\r\n              return;\r\n          }\r\n          this.removePart(this.recordPart);\r\n      };\r\n  */\r\n\r\n  Track.prototype.undoRecording = function (data) {\r\n    var type = typeString(data);\r\n    if (type === 'string') {\r\n      if (this.recordId === data) {\r\n        this.removePart(this.recordPart);\r\n      }\r\n    } else if (type === 'array') {\r\n      //console.log(data);\r\n      this.removeEvents(data);\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.setWaveformConfig = function (config) {\r\n    this.waveformConfig = config;\r\n    if (this.audio !== undefined) {\r\n      this.audio.recorder.waveformConfig = config;\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.getAudioRecordingData = function (recordId) {\r\n    if (this.audio === undefined) {\r\n      return;\r\n    }\r\n    if (recordId === undefined) {\r\n      if (sequencer.debug >= sequencer.WARN) {\r\n        console.warn('please provide a recording id');\r\n      }\r\n      return false;\r\n    }\r\n    return sequencer.storage.audio.recordings[recordId];\r\n  };\r\n\r\n\r\n  Track.prototype.encodeAudioRecording = function (recordId, type, bitrate, callback) {\r\n    if (this.audio === undefined) {\r\n      return;\r\n    }\r\n    if (recordId === undefined) {\r\n      if (sequencer.debug >= sequencer.WARN) {\r\n        console.warn('please provide a recording id');\r\n      }\r\n      if (callback) {\r\n        callback(false);\r\n      }\r\n      return;\r\n    }\r\n\r\n    var recording = sequencer.storage.audio.recordings[recordId];\r\n    encodeAudio(recording.audioBuffer, type, bitrate, function (mp3Data) {\r\n      recording.mp3 = mp3Data;\r\n      callback(recording);\r\n    });\r\n  };\r\n\r\n\r\n  Track.prototype.setAudioRecordingLatency = function (recordId, value, callback) {\r\n    if (this.audio !== undefined) {\r\n      //console.log(recordId, sequencer.storage.audio.recordings);\r\n      this.audio.setAudioRecordingLatency(recordId, value, function (recording) {\r\n        // update all audio events in this song that use this recording\r\n\r\n        var i, event, sampleId,\r\n          audioEvents = this.song.audioEvents;\r\n\r\n        for (i = audioEvents.length - 1; i >= 0; i--) {\r\n          event = audioEvents[i];\r\n          sampleId = event.sampleId;\r\n          if (sampleId === undefined) {\r\n            continue;\r\n          }\r\n          if (recordId === sampleId) {\r\n            event.buffer = recording.audioBuffer;\r\n          }\r\n        }\r\n\r\n        if (callback !== undefined) {\r\n          callback();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.quantizeRecording = function (value) {\r\n    value = value || this.quantizeValue;\r\n    return sequencer.quantize(this.recordPart.events, value, this.song.ppq);\r\n  };\r\n\r\n\r\n  // non-mandatory arguments: quantize value, history object\r\n  Track.prototype.quantize = function () {\r\n    var i, arg, type,\r\n      args = slice.call(arguments),\r\n      numArgs = args.length,\r\n      value,\r\n      historyObject = {};\r\n\r\n    //console.log(arguments);\r\n\r\n    for (i = 0; i < numArgs; i++) {\r\n      arg = args[i];\r\n      type = typeString(arg);\r\n      //console.log(arg, type);\r\n      if (type === 'string' || type === 'number') {\r\n        // overrule the quantize value of this track with this value\r\n        value = arg;\r\n      } else if (type === 'object') {\r\n        historyObject = arg;\r\n      }\r\n    }\r\n\r\n    // no value passed as arguments, use the quantize value of this track\r\n    if (value === undefined) {\r\n      value = this.quantizeValue;\r\n    }\r\n\r\n    //console.log(value, history);\r\n    return sequencer.quantize(this.events, value, this.song.ppq, history); // sequencer.quantize is defined in quantize_fixed-length.js\r\n  };\r\n\r\n\r\n  Track.prototype.undoQuantize = function (history) {\r\n    if (history === undefined) {\r\n      if (sequencer.debug >= 2) {\r\n        console.warn('please pass a quantize history object');\r\n      }\r\n      return;\r\n    }\r\n\r\n    var events = history.tracks[this.id].quantizedEvents,\r\n      numEvents = events.length,\r\n      i, event;\r\n\r\n    for (i = 0; i < numEvents; i++) {\r\n      event = events[i];\r\n      event.ticks = history.events[event.id].ticks;\r\n      //console.log(event.ticks, event.type);\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.addMidiEventListener = function () {\r\n    return addMidiEventListener(arguments, this);\r\n  };\r\n\r\n\r\n  Track.prototype.removeMidiEventListener = function (id) {\r\n    removeMidiEventListener(id, this);\r\n  };\r\n\r\n\r\n  Track.prototype.allNotesOff = function (id) {\r\n    if (this.audio) {\r\n      this.audio.allNotesOff();\r\n    }\r\n    if (this.instrument) {\r\n      this.instrument.allNotesOff();\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.processMidiEvent = function (event) {\r\n    handleMidiMessageTrack(event, this)\r\n  }\r\n\r\n  /*\r\n      Track.prototype.addReverb = function(id, amount){\r\n          var reverb = sequencer.getReverb(id);\r\n          if(reverb !== false){\r\n              reverb = sequencer.createEffect('reverb', reverb);\r\n              reverb.amount = amount < 0 ? 0 : amount > 1 ? 1 : 0.5;\r\n              this.effects.push(reverb);\r\n          }\r\n      };\r\n\r\n\r\n      Track.prototype.setReverb = function(id, amount){\r\n      };\r\n\r\n\r\n      Track.prototype.removeReverb = function(id, amount){\r\n      };\r\n  */\r\n\r\n  sequencer.protectedScope.Track = Track;\r\n\r\n  sequencer.createTrack = function (name, type, song) {\r\n    return new Track(name, type, song);\r\n  };\r\n\r\n  sequencer.protectedScope.addInitMethod(function () {\r\n    // get the protected scope with all added methods\r\n    var protectedScope = sequencer.protectedScope;\r\n\r\n    getStats = sequencer.getStats;\r\n    findEvent = sequencer.findEvent;\r\n    findNote = sequencer.findNote;\r\n    createPart = sequencer.createPart;\r\n    createMidiEvent = sequencer.createMidiEvent;\r\n    createMidiNote = sequencer.createMidiNote;\r\n    createInstrument = sequencer.createInstrument;\r\n    createPanner = sequencer.createPanner;\r\n    encodeAudio = sequencer.encodeAudio;\r\n\r\n    context = protectedScope.context;\r\n    findItem = protectedScope.findItem;\r\n    addMidiEventListener = protectedScope.addMidiEventListener;\r\n    removeMidiEventListener = protectedScope.removeMidiEventListener;\r\n    createAudioTrack = sequencer.protectedScope.createAudioTrack;\r\n    checkPosition = protectedScope.checkPosition;\r\n    objectForEach = protectedScope.objectForEach;\r\n    typeString = protectedScope.typeString;\r\n    copyName = protectedScope.copyName;\r\n    handleMidiMessageTrack = protectedScope.handleMidiMessageTrack;\r\n  });\r\n\r\n}\r\nfunction transpose() {\n\n  'use strict';\n\n  var\n    // satisfy jslint\n    Pitchshift = window.Pitchshift,\n\n    context,\n    fftFrameSize = 2048,\n    shifter;\n\n  function init() {\n    if (window.Pitchshift) {\n      shifter = new Pitchshift(fftFrameSize, context.sampleRate, 'FFT');\n    }\n  }\n\n\n  function transpose(inputBuffer, semitones, cb) {\n    if (shifter === undefined) {\n      console.log('include Kiev II');\n      return;\n    }\n    if (semitones === 0) {\n      if (cb) {\n        //console.log(inputBuffer, semitones)\n        cb(inputBuffer);\n        return;\n      }\n    }\n\n    var numChannels = inputBuffer.numberOfChannels,\n      c, input, length, output, outputs = [], shiftValue, i,\n      outputBuffer;\n\n    //console.log(inputBuffer);\n\n    for (c = 0; c < numChannels; c++) {\n      input = inputBuffer.getChannelData(c);\n      length = input.length;\n      output = new Float32Array(length);\n      shiftValue = Math.pow(1.0595, semitones);\n      //shiftValue = 1.01;\n      shifter.process(shiftValue, input.length, 4, input);\n      //shifter.process(shiftValue, input.length, 8, input);\n      for (i = 0; i < length; i++) {\n        output[i] = shifter.outdata[i];\n      }\n      outputs[c] = output;\n    }\n\n    outputBuffer = context.createBuffer(\n      numChannels,\n      length,\n      inputBuffer.sampleRate\n    );\n\n    for (c = 0; c < numChannels; c++) {\n      outputBuffer.getChannelData(c).set(outputs[c]);\n    }\n\n    cb(outputBuffer);\n  }\n\n  sequencer.protectedScope.transpose = transpose;\n\n  sequencer.protectedScope.addInitMethod(function () {\n    context = sequencer.protectedScope.context;\n    init();\n  });\n\n}function util() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        // import\r\n        context, // defined in open_module.js\r\n\r\n        slice = Array.prototype.slice,\r\n\r\n        mPow = Math.pow,\r\n        mRound = Math.round,\r\n        mFloor = Math.floor,\r\n        mRandom = Math.random,\r\n        // floor = function(value){\r\n        //  return value | 0;\r\n        // },\r\n\r\n        noteLengthNames = {\r\n            1: 'quarter',\r\n            2: 'eighth',\r\n            4: 'sixteenth',\r\n            8: '32th',\r\n            16: '64th'\r\n        },\r\n\r\n        foundItem,\r\n        foundFolder;\r\n\r\n\r\n    function typeString(o) {\r\n        if (typeof o != 'object') {\r\n            return typeof o;\r\n        }\r\n\r\n        if (o === null) {\r\n            return 'null';\r\n        }\r\n\r\n        //object, array, function, date, regexp, string, number, boolean, error\r\n        var internalClass = Object.prototype.toString.call(o).match(/\\[object\\s(\\w+)\\]/)[1];\r\n        return internalClass.toLowerCase();\r\n\r\n    }\r\n\r\n\r\n    function getNiceTime(millis) {\r\n        var h, m, s, ms,\r\n            seconds,\r\n            timeAsString = '';\r\n\r\n        seconds = millis / 1000; // → millis to seconds\r\n        h = floor(seconds / (60 * 60));\r\n        m = floor((seconds % (60 * 60)) / 60);\r\n        s = floor(seconds % (60));\r\n        ms = round((seconds - (h * 3600) - (m * 60) - s) * 1000);\r\n\r\n        timeAsString += h + ':';\r\n        timeAsString += m < 10 ? '0' + m : m;\r\n        timeAsString += ':';\r\n        timeAsString += s < 10 ? '0' + s : s;\r\n        timeAsString += ':';\r\n        timeAsString += ms === 0 ? '000' : ms < 10 ? '00' + ms : ms < 100 ? '0' + ms : ms;\r\n\r\n        //console.log(h, m, s, ms);\r\n\r\n        return {\r\n            hour: h,\r\n            minute: m,\r\n            second: s,\r\n            millisecond: ms,\r\n            timeAsString: timeAsString,\r\n            timeAsArray: [h, m, s, ms]\r\n        };\r\n    }\r\n\r\n\r\n    function clone(obj) {\r\n        var attr, copy;\r\n        if (obj === null || typeof obj !== 'object') {\r\n            return obj;\r\n        }\r\n        copy = obj.constructor();\r\n        for (attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) {\r\n                copy[attr] = clone(obj[attr]);\r\n            }\r\n        }\r\n        return copy;\r\n    }\r\n\r\n\r\n    function copyObject(obj) {\r\n        var prop, copy = {};\r\n        if (typeString(obj) !== 'object') {\r\n            return {};\r\n        }\r\n        for (prop in obj) {\r\n            if (obj.hasOwnProperty(prop)) {\r\n                copy[prop] = obj[prop];\r\n            }\r\n        }\r\n        return copy;\r\n    }\r\n\r\n\r\n    function copyName(name) {\r\n        var i = name.indexOf('_copy'),\r\n            copy, numCopies;\r\n\r\n        if (i === -1) {\r\n            copy = name + '_copy';\r\n        } else {\r\n            numCopies = name.substring(i + 5);\r\n            if (numCopies === '') {\r\n                copy = name + '2';\r\n            } else {\r\n                copy = name.slice(0, -1) + (parseInt(numCopies, 10) + 1);\r\n            }\r\n        }\r\n        return copy;\r\n    }\r\n\r\n\r\n    function removeFromArray(tobeRemoved, array) {\r\n        var i, j,\r\n            maxi,\r\n            maxj,\r\n            newArray = [],\r\n            remove,\r\n            elementA, elementB;\r\n\r\n        if (typeString(tobeRemoved) !== 'array') {\r\n            tobeRemoved = [tobeRemoved];\r\n        }\r\n        maxi = array.length;\r\n        maxj = tobeRemoved.length;\r\n\r\n        for (i = 0; i < maxi; i++) {\r\n            elementA = array[i];\r\n            remove = false;\r\n            for (j = 0; j < maxj; j++) {\r\n                elementB = tobeRemoved[j];\r\n                if (elementA === elementB) {\r\n                    remove = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (remove === false) {\r\n                newArray.push(elementA);\r\n            }\r\n        }\r\n\r\n        return newArray;\r\n    }\r\n\r\n\r\n    function removeFromArray2(array, callback) {\r\n        var i, maxi = array.length,\r\n            element,\r\n            newArray = [];\r\n\r\n        for (i = 0; i < maxi; i++) {\r\n            element = array[i];\r\n            if (callback(element) === false) {\r\n                newArray.push(element);\r\n            }\r\n        }\r\n        return newArray;\r\n    }\r\n\r\n\r\n    function round(value, decimals) {\r\n        if (decimals === undefined || decimals <= 0) {\r\n            return mRound(value);\r\n        }\r\n        var p = mPow(10, decimals);\r\n        //console.log(p, decimals)\r\n        return mRound(value * p) / p;\r\n    }\r\n\r\n\r\n    function floor(value, decimals) {\r\n        if (decimals === undefined || decimals <= 0) {\r\n            return mFloor(value);\r\n        }\r\n        var p = mPow(10, decimals);\r\n        //console.log(p,decimals)\r\n        return mFloor(value * p) / p;\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj, ignore_keys) {\r\n        //console.log('empty',obj)\r\n        if (obj === undefined) {\r\n            return false;\r\n        }\r\n        var i, isEmpty = true;\r\n        ignore_keys = ignore_keys || '';\r\n        for (i in obj) {\r\n            //console.log(i, ignore_keys.indexOf(i));\r\n            if (obj.hasOwnProperty(i) && ignore_keys.indexOf(i) === -1) {\r\n                isEmpty = false;\r\n                break;\r\n            }\r\n        }\r\n        return isEmpty;\r\n        //return Object.getOwnPropertyNames(obj).length === 0;\r\n    }\r\n\r\n\r\n    function objectForEach(o, cb) {\r\n        var name,\r\n            obj = o;\r\n        for (name in obj) {\r\n            if (obj.hasOwnProperty(name)) {\r\n                //cb.call(this, obj[name], name);\r\n                cb(obj[name], name);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function objectToArray(obj) {\r\n        var i, a = [];\r\n        for (i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                a.push(obj[i]);\r\n            }\r\n        }\r\n        return a;\r\n    }\r\n\r\n    function arrayToObject(arr, property) {\r\n        var i, o = {};\r\n        for (i = arr.length - 1; i >= 0; i--) {\r\n            o[arr[i][property]] = arr[i];\r\n        }\r\n        return o;\r\n    }\r\n\r\n\r\n    function createClass(parent, constructor) {\r\n        var thisClass;\r\n        // class constructor\r\n        thisClass = function () {\r\n            this.parent = parent;\r\n            if (arguments.length > 0) {\r\n                parent.apply(this, arguments);\r\n                if (constructor !== undefined) {\r\n                    constructor.apply(this, arguments);\r\n                }\r\n            }\r\n        };\r\n        // inheritance\r\n        thisClass.prototype = Object.create(parent.prototype);\r\n        return thisClass;\r\n    }\r\n\r\n    function ajax(config) {\r\n        var\r\n            request = new XMLHttpRequest(),\r\n            method = config.method === undefined ? 'GET' : config.method,\r\n            fileSize, promise;\r\n\r\n        function executor(resolve, reject) {\r\n\r\n            reject = reject || function () { };\r\n            resolve = resolve || function () { };\r\n\r\n            request.onload = function () {\r\n                if (request.status !== 200) {\r\n                    reject(request.status);\r\n                    return;\r\n                }\r\n\r\n                if (config.responseType === 'json') {\r\n                    fileSize = request.response.length;\r\n                    resolve(JSON.parse(request.response), fileSize);\r\n                } else {\r\n                    resolve(request.response);\r\n                }\r\n            };\r\n\r\n            request.onerror = function (e) {\r\n                config.onError(e);\r\n            };\r\n\r\n            request.open(method, config.url, true);\r\n\r\n            if (config.overrideMimeType) {\r\n                request.overrideMimeType(config.overrideMimeType);\r\n            }\r\n\r\n            if (config.responseType) {\r\n                if (config.responseType === 'json') {\r\n                    request.responseType = 'text';\r\n                } else {\r\n                    request.responseType = config.responseType;\r\n                }\r\n            }\r\n\r\n            if (method === 'POST') {\r\n                request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n            }\r\n\r\n            if (config.data) {\r\n                request.send(config.data);\r\n            } else {\r\n                request.send();\r\n            }\r\n        }\r\n\r\n        promise = new Promise(executor);\r\n        //console.log(promise);\r\n\r\n        if (config.onSuccess !== undefined) {\r\n            promise.then(config.onSuccess, config.onError);\r\n        } else {\r\n            return promise;\r\n        }\r\n    }\r\n\r\n\r\n    function ajax2(config) {\r\n\r\n        var request = new XMLHttpRequest(),\r\n            method = config.method === undefined ? 'GET' : config.method,\r\n            fileSize;\r\n\r\n        request.onreadystatechange = function () {\r\n            if (request.request === 404) {\r\n                //console.error(config.url, '404');\r\n                config.onError(404);\r\n            }\r\n        };\r\n\r\n        request.onload = function () {\r\n            if (request.status !== 200) {\r\n                //console.error(config.url, request.status);\r\n                config.onError(request.status);\r\n                return;\r\n            }\r\n            // this doesn't work with gzip server compression!\r\n            //fileSize = round(request.getResponseHeader('Content-Length')/1024/1024, 2);\r\n            //console.log(fileSize);\r\n            //console.log(config.url, request.getResponseHeader('Content-Length'));\r\n            //console.log(sequencer.os, request.response);\r\n\r\n            //if(sequencer.os === 'ios' && config.responseType === 'json'){\r\n            if (config.responseType === 'json') {\r\n                //fileSize = round(request.response.length/1024/1024, 2);\r\n                fileSize = request.response.length;\r\n                //console.log(config.url, fileSize)\r\n                config.onSuccess(JSON.parse(request.response), fileSize);\r\n                //config.onSuccess(JSON.parse(request.response));\r\n            } else {\r\n                //config.onSuccess(request.response, fileSize);\r\n                config.onSuccess(request.response);\r\n            }\r\n        };\r\n\r\n        request.onerror = function (e) {\r\n            //console.error(e);\r\n            config.onError(e);\r\n        };\r\n\r\n        /*\r\n                request.onreadystatechange = function() {\r\n                    if (success !== undefined && xmlhttp.readyState === 4 && xmlhttp.status === 200) {\r\n                        success(request.responseText);\r\n                    } else if (error !== undefined ) {\r\n                        error(request);\r\n                    }\r\n                };\r\n        */\r\n        request.open(method, config.url, true);\r\n\r\n\r\n        if (config.overrideMimeType) {\r\n            request.overrideMimeType(config.overrideMimeType);\r\n        }\r\n\r\n        if (config.responseType) {\r\n            //console.log(config.responseType, config.url);\r\n            //request.setRequestHeader('Content-type', 'application/' + config.responseType);\r\n\r\n            //if(sequencer.os === 'ios' && config.responseType === 'json'){\r\n            if (config.responseType === 'json') {\r\n                request.responseType = 'text';\r\n            } else {\r\n                request.responseType = config.responseType;\r\n            }\r\n\r\n            //request.setRequestHeader('Content-type', config.responseType);\r\n        }\r\n\r\n        if (method === 'POST') {\r\n            request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n        }\r\n\r\n        if (config.data) {\r\n            request.send(config.data);\r\n        } else {\r\n            request.send();\r\n        }\r\n    }\r\n\r\n    function loop2(root, id, indent) {\r\n        var i, tmp;\r\n        for (i in root) {\r\n            if (foundFolder !== false) {\r\n                return;\r\n            }\r\n            if (root.hasOwnProperty(i)) {\r\n                tmp = root[i];\r\n                if (tmp !== undefined && tmp.className === 'Folder') {\r\n                    //console.log(indent, i, id);\r\n                    if (i === id) {\r\n                        foundFolder = tmp;\r\n                        return;\r\n                    } else {\r\n                        loop2(tmp, id, indent + '.');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function loop3(folder, items, search_subfolders, indent) {\r\n        var i, item;\r\n        for (i in folder) {\r\n            if (folder.hasOwnProperty(i)) {\r\n                if (i === 'id' || i === 'path' || i === 'className') {\r\n                    continue;\r\n                }\r\n                item = folder[i];\r\n\r\n                if (item === undefined) {\r\n                    continue;\r\n                }\r\n\r\n                //console.log(indent, i, item, item.className);\r\n                if (item.className === 'Folder') {\r\n                    if (search_subfolders === true) {\r\n                        loop3(item, items, search_subfolders, indent + '.');\r\n                    }\r\n                } else {\r\n                    // loaded samples are audio object so they don't have a name, we use the key of the storage for name\r\n                    if (item.name === undefined) {\r\n                        items.push({ name: i, data: item });\r\n                    } else {\r\n                        items.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function findItemsInFolder(path, root, search_subfolders) {\r\n        search_subfolders = search_subfolders === undefined ? true : search_subfolders;\r\n        var folders = pathToArray(path),\r\n            numFolders = folders.length,\r\n            currentFolder, i, folder,\r\n            searchFolder = folders[numFolders - 1],\r\n            items = [];\r\n\r\n        if (numFolders === 0) {\r\n            // return all items in root folder (for instance sequencer.storage.midi)\r\n            loop3(root, items, search_subfolders, '.');\r\n        } else {\r\n            currentFolder = root;\r\n\r\n            for (i = 0; i < numFolders; i++) {\r\n                folder = folders[i];\r\n                currentFolder = currentFolder[folder];\r\n                if (currentFolder === undefined) {\r\n                    break;\r\n                }\r\n            }\r\n            //console.log(root, currentFolder);\r\n            if (currentFolder) {\r\n                loop3(currentFolder, items, search_subfolders, '.');\r\n            } else {\r\n                // declared on top of this file\r\n                foundFolder = false;\r\n                loop2(root, searchFolder, '.');\r\n                loop3(foundFolder, items, search_subfolders, '.');\r\n            }\r\n        }\r\n\r\n        items.sort(function (a, b) {\r\n            var nameA = a.name.toLowerCase(),\r\n                nameB = b.name.toLowerCase();\r\n            if (nameA < nameB) { //sort string ascending\r\n                return -1;\r\n            } else if (nameA > nameB) {\r\n                return 1;\r\n            }\r\n            return 0; //default return value (no sorting)\r\n        });\r\n\r\n        return items;\r\n    }\r\n\r\n\r\n    function loop(obj, id, indent) {\r\n        var i, tmp, type;\r\n        for (i in obj) {\r\n            if (foundItem !== false) {\r\n                return;\r\n            }\r\n            if (obj.hasOwnProperty(i)) {\r\n                tmp = obj[i];\r\n                type = typeString(tmp);\r\n                //console.log(indent, i, id, tmp, type, tmp.className)\r\n                if (i === id) {\r\n                    foundItem = tmp;\r\n                    break;\r\n                }\r\n                //console.log(tmp);\r\n                // tmp can be null if the sample has not been loaded!\r\n                if (tmp !== undefined && tmp.className === 'Folder') {\r\n                    indent = indent + '.';\r\n                    loop(tmp, id, indent);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function findItem(path, root, exact_match) {\r\n        exact_match = exact_match === undefined ? false : exact_match;\r\n        if (path === undefined || path === '') {\r\n            return root;\r\n        }\r\n\r\n        //console.log('findItem', path);\r\n        var i, folder, folders, numFolders, currentFolder, item, itemId;\r\n        folders = pathToArray(path);\r\n        itemId = folders.pop();\r\n        numFolders = folders.length;\r\n        //console.log(folders, itemId);\r\n\r\n        if (itemId === '') {\r\n            return root;\r\n        }\r\n\r\n        // declared on top of util.js\r\n        foundItem = false;\r\n\r\n        if (folders.length > 0) {\r\n            currentFolder = root;\r\n\r\n            for (i = 0; i < numFolders; i++) {\r\n                folder = folders[i];\r\n                currentFolder = currentFolder[folder];\r\n                if (currentFolder === undefined) {\r\n                    break;\r\n                }\r\n            }\r\n            //console.log(root, currentFolder);\r\n            if (currentFolder) {\r\n                item = currentFolder[itemId];\r\n            }\r\n        }\r\n\r\n        if (item === undefined) {\r\n            if (exact_match === true) {\r\n                item = root[itemId];\r\n            } else {\r\n                loop(root, itemId, '.');\r\n                item = foundItem;\r\n            }\r\n        }\r\n        //console.log(item, itemId, exact_match);\r\n        //console.log('found', root.id, folders, itemId, item);\r\n        if (item === undefined) {\r\n            item = false;\r\n        }\r\n        return item;\r\n    }\r\n\r\n\r\n    function storeItem(item, path, root) {\r\n        var folder, folders, numFolders, currentFolder, i, pathString = '';\r\n        folders = pathToArray(path);\r\n        numFolders = folders.length;\r\n        currentFolder = root;\r\n\r\n        for (i = 0; i < numFolders; i++) {\r\n            folder = folders[i];\r\n            pathString += '/' + folder;\r\n            //console.log(folder);\r\n            if (currentFolder[folder] === undefined) {\r\n                currentFolder[folder] = {\r\n                    path: pathString,\r\n                    className: 'Folder'\r\n                };\r\n            }\r\n            if (i === numFolders - 1) {\r\n                currentFolder[folder] = item;\r\n                break;\r\n            }\r\n            currentFolder = currentFolder[folder];\r\n        }\r\n    }\r\n\r\n\r\n    // -> classical/mozart/sonatas/early\r\n    function deleteItem(path, root) {\r\n        var item, itemId, i, obj = root;\r\n\r\n        // for deleting items you need to specify the complete path, hence the 3rd argument is set to true\r\n        //console.log('deleteItem', path);\r\n        item = findItem(path, root, true);\r\n\r\n        /*\r\n            // what was this for, because it doesn't work when deleting samples (as AudioBuffer) from storage.audio:\r\n            item = findItem(path, root);\r\n            console.log(item);\r\n            path = item.folder + '/' + item.name;\r\n            console.log(path);\r\n        */\r\n\r\n\r\n        if (!item) {\r\n            return false;\r\n        } else if (item.className === 'Folder') {\r\n            // remove files in folder\r\n            for (i in item) {\r\n                if (item.hasOwnProperty(i)) {\r\n                    if (i !== 'className') {\r\n                        delete item[i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        path = pathToArray(path);\r\n\r\n        while (path.length > 1) {\r\n            i = 0;\r\n            obj = root;\r\n\r\n            while (i < path.length - 1) {\r\n                //console.log(path[i],obj);\r\n                obj = obj[path[i++]];\r\n            }\r\n            //console.log(obj);\r\n            itemId = path[i];\r\n            item = obj[itemId];\r\n\r\n            if (item.className === 'Folder') {\r\n                if (isEmptyObject(item, 'path className')) {\r\n                    delete obj[itemId];\r\n                    //console.log('deleting empty folder', itemId);\r\n                }\r\n            } else {\r\n                delete obj[itemId];\r\n                //console.log('deleting item', itemId);\r\n            }\r\n\r\n            path.pop();\r\n        }\r\n\r\n        //console.log(path, path[0] === '', root[path[0]]);\r\n\r\n        if (path.length === 1 && path[0] !== '') {\r\n            itemId = path[0];\r\n            item = root[itemId];\r\n            //console.log(path, path.length, itemId);\r\n            if (item.className === 'Folder') {\r\n                if (isEmptyObject(root[itemId], 'path className')) {\r\n                    delete root[itemId];\r\n                    //console.log('deleting empty folder', itemId, '(2)');\r\n                }\r\n            } else {\r\n                delete root[itemId];\r\n                //console.log('deleting item', itemId, '(2)');\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    function parseSample(id, sample) {\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                context.decodeAudioData(sample,\r\n                    function onSuccess(buffer) {\r\n                        //console.log(id, buffer);\r\n                        resolve({ 'id': id, 'buffer': buffer });\r\n                    },\r\n                    function onError(e) {\r\n                        console.log('error decoding audiodata', id, e);\r\n                        //reject(e); // don't use reject because we don't want the parent promise to reject\r\n                        resolve({ 'id': id, 'buffer': undefined });\r\n                    }\r\n                );\r\n            } catch (e) {\r\n                console.log('error decoding audiodata', id, e);\r\n                //reject(e);\r\n                resolve({ 'id': id, 'buffer': undefined });\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    function loadAndParseSample(id, url) {\r\n        return new Promise(function (resolve, reject) {\r\n            ajax({ url: url, responseType: 'arraybuffer' }).then(\r\n                function onFulfilled(data) {\r\n                    parseSample(id, data).then(resolve, reject);\r\n                },\r\n                function onRejected() {\r\n                    resolve({ 'id': id, 'buffer': undefined });\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    function parseSamples(mapping) {\r\n        var key, sample,\r\n            promises = [];\r\n\r\n        for (key in mapping) {\r\n            if (mapping.hasOwnProperty(key)) {\r\n                sample = mapping[key];\r\n                if (sample.indexOf('http://') === -1) {\r\n                    promises.push(parseSample(key, base64ToBinary(sample)));\r\n                } else {\r\n                    promises.push(loadAndParseSample(key, sample));\r\n                }\r\n            }\r\n        }\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            Promise.all(promises).then(\r\n                function onFulfilled(values) {\r\n                    var mapping = {};\r\n\r\n                    values.forEach(function (value) {\r\n                        mapping[value.id] = value.buffer;\r\n                    });\r\n                    resolve(mapping);\r\n                },\r\n                function onRejected(e) {\r\n                    reject(e);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    // use xhr.overrideMimeType('text/plain; charset=x-user-defined');\r\n    // all credits: https://github.com/gasman/jasmid\r\n    function toBinaryString(input) {\r\n        /* munge input into a binary string */\r\n        var t, ff, mx, scc, z;\r\n        t = input || '';\r\n        ff = [];\r\n        mx = t.length;\r\n        scc = String.fromCharCode;\r\n        for (z = 0; z < mx; z++) {\r\n            ff[z] = scc(t.charCodeAt(z) & 255);\r\n        }\r\n        return ff.join('');\r\n    }\r\n\r\n\r\n    function toUint8Array(input) {\r\n        /* munge input into a binary string */\r\n        var t, uint, mx, scc, z;\r\n        t = input || '';\r\n        mx = t.length;\r\n        uint = new Uint8Array(mx);\r\n        scc = String.fromCharCode;\r\n        for (z = 0; z < mx; z++) {\r\n            uint[z] = scc(t.charCodeAt(z) & 255);\r\n        }\r\n        return uint;\r\n    }\r\n\r\n\r\n    // adapted version of https://github.com/danguer/blog-examples/blob/master/js/base64-binary.js\r\n    function base64ToBinary(input) {\r\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\r\n            bytes, uarray, buffer,\r\n            lkey1, lkey2,\r\n            chr1, chr2, chr3,\r\n            enc1, enc2, enc3, enc4,\r\n            i, j = 0;\r\n\r\n        bytes = Math.ceil((3 * input.length) / 4.0);\r\n        buffer = new ArrayBuffer(bytes);\r\n        uarray = new Uint8Array(buffer);\r\n\r\n        lkey1 = keyStr.indexOf(input.charAt(input.length - 1));\r\n        lkey2 = keyStr.indexOf(input.charAt(input.length - 1));\r\n        if (lkey1 == 64) bytes--; //padding chars, so skip\r\n        if (lkey2 == 64) bytes--; //padding chars, so skip\r\n\r\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\r\n\r\n        for (i = 0; i < bytes; i += 3) {\r\n            //get the 3 octects in 4 ascii chars\r\n            enc1 = keyStr.indexOf(input.charAt(j++));\r\n            enc2 = keyStr.indexOf(input.charAt(j++));\r\n            enc3 = keyStr.indexOf(input.charAt(j++));\r\n            enc4 = keyStr.indexOf(input.charAt(j++));\r\n\r\n            chr1 = (enc1 << 2) | (enc2 >> 4);\r\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n            chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n            uarray[i] = chr1;\r\n            if (enc3 != 64) uarray[i + 1] = chr2;\r\n            if (enc4 != 64) uarray[i + 2] = chr3;\r\n        }\r\n        //console.log(buffer);\r\n        return buffer;\r\n    }\r\n\r\n\r\n    function pathToArray(path) {\r\n        if (path === undefined) {\r\n            return [];\r\n        }\r\n        //console.log('path', path);\r\n        path = path.replace(/undefined/g, '');\r\n        path = path.replace(/\\/{2,}/g, '/');\r\n        path = path.replace(/^\\//, '');\r\n        path = path.replace(/\\/$/, '');\r\n        path = path.split('/');\r\n        return path;\r\n    }\r\n\r\n\r\n    function parseUrl(url) {\r\n        var filePath = '',\r\n            fileName = url,\r\n            fileExtension = '',\r\n            slash, dot, ext;\r\n\r\n        url = url.replace(/\\/{2,}/g, '/');\r\n        url = url.replace(/^\\//, '');\r\n        url = url.replace(/\\/$/, '');\r\n\r\n        // check if the url has a path and/or an extension\r\n        slash = url.lastIndexOf('/');\r\n        if (slash !== -1) {\r\n            fileName = url.substring(slash + 1);\r\n            filePath = url.substring(0, slash);\r\n        }\r\n\r\n        dot = url.lastIndexOf('.');\r\n        if (dot !== -1) {\r\n            ext = url.substring(dot + 1);\r\n            if (ext.length >= 3 && ext.length <= 4) {\r\n                fileExtension = ext;\r\n                fileName = url.substring(slash + 1, dot);\r\n            }\r\n        }\r\n\r\n        return {\r\n            path: filePath,\r\n            name: fileName,\r\n            ext: fileExtension\r\n        };\r\n    }\r\n\r\n\r\n    // generic load method that calls the load() method of the item to be loaded\r\n    // callback2 is called every time an item is loaded, callback1 is called after all items have been loaded\r\n    function loadLoop(i, numItems, items, callback1, callback2) {\r\n        if (numItems === 0) {\r\n            if (callback1) {\r\n                callback1();\r\n            }\r\n            return;\r\n        }\r\n        var item = items[i];\r\n        item.load(function () {\r\n            //console.log(item.name, 'loaded', i, numItems);\r\n            if (callback2) {\r\n                callback2(arguments);\r\n            }\r\n            i++;\r\n            if (i < numItems) {\r\n                loadLoop(i, numItems, items, callback1, callback2);\r\n            } else {\r\n                if (callback1) {\r\n                    callback1();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    function getArguments(args) {\r\n        var result = [],\r\n            loop, arg;\r\n\r\n        args = slice.call(args);\r\n\r\n        loop = function (data, i, maxi) {\r\n            for (i = 0; i < maxi; i++) {\r\n                arg = data[i];\r\n                if (typeString(arg) === 'array') {\r\n                    loop(arg, 0, arg.length);\r\n                } else {\r\n                    result.push(arg);\r\n                }\r\n            }\r\n        };\r\n\r\n        loop(args, 0, args.length);\r\n        return result;\r\n    }\r\n\r\n\r\n    function getEqualPowerCurve(numSteps, type, maxValue) {\r\n        var i, value, percent,\r\n            values = new Float32Array(numSteps);\r\n        for (i = 0; i < numSteps; i++) {\r\n            percent = i / numSteps;\r\n            if (type === 'fadeIn') {\r\n                value = Math.cos((1.0 - percent) * 0.5 * Math.PI) * maxValue;\r\n            } else if (type === 'fadeOut') {\r\n                value = Math.cos(percent * 0.5 * Math.PI) * maxValue;\r\n            }\r\n            values[i] = value;\r\n            if (i === numSteps - 1) {\r\n                values[i] = type === 'fadeIn' ? 1 : 0;\r\n            }\r\n        }\r\n        return values;\r\n    }\r\n\r\n\r\n    function remap(value, oldMin, oldMax, newMin, newMax) {\r\n        var oldRange = oldMax - oldMin,\r\n            newRange = newMax - newMin,\r\n            result;\r\n        result = (((value - oldMin) * newRange) / oldRange) + newMin;\r\n        return result;\r\n    }\r\n\r\n\r\n    // filters assets with classname \"name\" from object \"obj\" and stores them in array \"result\"\r\n    function filterItemsByClassName(obj, name, result) {\r\n        var i, item, type;\r\n\r\n        for (i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                item = obj[i];\r\n                if (item.className === name) {\r\n                    result.push(item);\r\n                } else {\r\n                    type = typeString(item);\r\n                    if (type === 'object') {\r\n                        loop(item, name, result);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function createSlider(config) {\r\n        var slider = config.slider,\r\n            message = config.message,\r\n            label = config.label,\r\n            sliderWrapper;\r\n        //mouseDownCalls = [],\r\n        //mouseMoveCalls = [],\r\n        //mouseUpCalls = [];\r\n\r\n        if (config.label === undefined) {\r\n            label = slider.parentNode.firstChild;\r\n        }\r\n\r\n        if (config.initialSliderValue !== undefined) {\r\n            slider.value = config.initialSliderValue;\r\n        }\r\n\r\n        if (config.initialLabelValue !== undefined) {\r\n            label.innerHTML = message.replace('{value}', config.initialLabelValue);\r\n        }\r\n\r\n        if (config.min !== undefined) {\r\n            slider.min = config.min;\r\n        }\r\n\r\n        if (config.max !== undefined) {\r\n            slider.max = config.max;\r\n        }\r\n\r\n        if (config.step !== undefined) {\r\n            slider.step = config.step;\r\n        }\r\n\r\n\r\n        function onMouseDown(e) {\r\n            var value = slider.valueAsNumber;\r\n            if (config.onMouseDown) {\r\n                config.onMouseDown(value, e);\r\n            }\r\n            if (sliderWrapper.onMouseDown) {\r\n                sliderWrapper.onMouseDown(value, e);\r\n            }\r\n        }\r\n\r\n        function onMouseUp(e) {\r\n            var value = slider.valueAsNumber;\r\n            if (config.onMouseUp) {\r\n                config.onMouseUp(value, e);\r\n            }\r\n            if (sliderWrapper.onMouseUp) {\r\n                sliderWrapper.onMouseUp(value, e);\r\n            }\r\n        }\r\n\r\n        function onMouseMove(e) {\r\n            var value = slider.valueAsNumber;\r\n            if (config.onMouseMove) {\r\n                config.onMouseMove(value, e);\r\n            }\r\n            if (sliderWrapper.onMouseMove) {\r\n                sliderWrapper.onMouseMove(value, e);\r\n            }\r\n        }\r\n\r\n        function onChange(e) {\r\n            var value = slider.valueAsNumber;\r\n            if (config.onChange) {\r\n                config.onChange(value, e);\r\n            }\r\n            if (sliderWrapper.onChange) {\r\n                sliderWrapper.onChange(value, e);\r\n            }\r\n        }\r\n\r\n        slider.addEventListener('mousedown', function (e) {\r\n            setTimeout(onMouseDown, 0, e);\r\n            slider.addEventListener('mousemove', onMouseMove, false);\r\n        }, false);\r\n\r\n\r\n        slider.addEventListener('mouseup', function (e) {\r\n            setTimeout(onMouseUp, 0, e);\r\n            slider.removeEventListener('mousemove', onMouseMove, false);\r\n        }, false);\r\n\r\n        slider.addEventListener('change', function (e) {\r\n            //console.log('change');\r\n            onChange(e);\r\n        }, false);\r\n\r\n        sliderWrapper = {\r\n            getValue: function () {\r\n                if (config.getValue) {\r\n                    return config.getValue(slider.valueAsNumber);\r\n                } else {\r\n                    return slider.valueAsNumber;\r\n                }\r\n            },\r\n            setValue: function (value) {\r\n                if (config.setValue) {\r\n                    slider.value = config.setValue(value);\r\n                } else {\r\n                    slider.value = value;\r\n                }\r\n            },\r\n            setLabel: function (value) {\r\n                label.innerHTML = message.replace('{value}', value);\r\n            },\r\n            elem: slider,\r\n            element: slider,\r\n        };\r\n\r\n        sliderWrapper.set = function (value) {\r\n            setLabel(value);\r\n            setValue(value);\r\n        };\r\n\r\n        return sliderWrapper;\r\n    }\r\n\r\n    function createSlider2(config) {\r\n        var slider = config.slider,\r\n            message = config.message,\r\n            label = slider.parentNode.firstChild;\r\n\r\n\r\n        if (config.initialValueSlider) {\r\n            slider.value = config.initialValueSlider;\r\n            label.innerHTML = message.replace('{value}', calculate());\r\n        }\r\n\r\n\r\n        if (config.initialValueLabel) {\r\n            label.innerHTML = message.replace('{value}', config.initialValueLabel);\r\n            slider.value = calculateFromLabel(config.initialValueLabel);\r\n        }\r\n\r\n\r\n        function onMouseMove() {\r\n            var value = calculate();\r\n            if (config.onMouseMove !== undefined) {\r\n                config.onMouseMove(slider.valueAsNumber, value);\r\n            }\r\n            label.innerHTML = message.replace('{value}', value);\r\n        }\r\n\r\n\r\n        function onMouseUp() {\r\n            var value = calculate();\r\n            if (config.onMouseUp !== undefined) {\r\n                config.onMouseUp(slider.valueAsNumber, value);\r\n            }\r\n            label.innerHTML = message.replace('{value}', value);\r\n        }\r\n\r\n\r\n        function onMouseDown() {\r\n            var value = calculate();\r\n            if (config.onMouseDown !== undefined) {\r\n                config.onMouseDown(slider.valueAsNumber, value);\r\n            }\r\n            label.innerHTML = message.replace('{value}', value);\r\n        }\r\n\r\n\r\n        function calculate() {\r\n            var value = slider.valueAsNumber;\r\n            if (config.calculate !== undefined) {\r\n                value = config.calculate(value);\r\n            }\r\n            return value;\r\n        }\r\n\r\n\r\n        function calculateFromLabel(value) {\r\n            if (config.calculateFromLabel !== undefined) {\r\n                value = config.calculateFromLabel(value);\r\n            }\r\n            return value;\r\n        }\r\n\r\n\r\n        slider.addEventListener('mousedown', function () {\r\n            setTimeout(onMouseDown, 0);\r\n            slider.addEventListener('mousemove', onMouseMove, false);\r\n        }, false);\r\n\r\n\r\n        slider.addEventListener('mouseup', function () {\r\n            setTimeout(onMouseUp, 0);\r\n            slider.removeEventListener('mousemove', onMouseMove, false);\r\n        }, false);\r\n\r\n\r\n        return {\r\n            updateSlider: function (value) {\r\n                slider.value = value;\r\n                label.innerHTML = message.replace('{value}', calculate(value));\r\n            },\r\n            updateLabel: function (value) {\r\n                label.innerHTML = message.replace('{value}', value);\r\n                slider.value = calculateFromLabel(value);\r\n            },\r\n            getValue1: function () {\r\n                return slider.valueAsNumber;\r\n            },\r\n            getValue2: function () {\r\n                return calculate(slider.valueAsNumber);\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    function getRandom(min, max, round) {\r\n        var r = mRandom() * (max - min) + min;\r\n        if (round === true) {\r\n            return mRound(r);\r\n        } else {\r\n            return r;\r\n        }\r\n    }\r\n\r\n\r\n    function getRandomNotes(config) {\r\n        var i,\r\n            ticks = 0,\r\n            events = [],\r\n            midiEvent,\r\n            velocity,\r\n            numNotes,\r\n            noteNumber,\r\n            noteLength,\r\n            minVelocity,\r\n            maxVelocity,\r\n            minNoteNumber,\r\n            maxNoteNumber,\r\n            ppq;\r\n\r\n        //console.log(config);\r\n\r\n        config = config || {};\r\n        ppq = config.ppq || sequencer.defaultPPQ;\r\n        numNotes = config.numNotes || 20;\r\n        noteLength = config.noteLength || ppq / 2; // ticks\r\n        minVelocity = config.minVelocity || 30;\r\n        maxVelocity = config.maxVelocity || 127;\r\n        minNoteNumber = config.minNoteNumber || 60;\r\n        maxNoteNumber = config.maxNoteNumber || 127;\r\n\r\n        if (noteLength > ppq) {\r\n            noteLength = ppq;\r\n        }\r\n\r\n        //console.log(ppq, numNotes, noteLength, minVelocity, maxVelocity, minNoteNumber, maxNoteNumber);\r\n\r\n\r\n        for (i = 0; i < numNotes; i++) {\r\n            noteNumber = getRandom(minNoteNumber, maxNoteNumber, true);\r\n            velocity = getRandom(minVelocity, maxVelocity, true);\r\n\r\n            //console.log(ticks, noteNumber, velocity);\r\n\r\n            midiEvent = sequencer.createMidiEvent(ticks, sequencer.NOTE_ON, noteNumber, velocity);\r\n            events.push(midiEvent);\r\n            ticks += noteLength;\r\n\r\n            midiEvent = sequencer.createMidiEvent(ticks, sequencer.NOTE_OFF, noteNumber, 0);\r\n            events.push(midiEvent);\r\n            ticks += ppq - noteLength;\r\n        }\r\n\r\n        return events;\r\n    }\r\n\r\n\r\n    function convertPPQ() {//oldPPQ, newPPQ, data, ..., ...\r\n        var args = slice.call(arguments),\r\n            oldPPQ = args[0],\r\n            newPPQ = args[1],\r\n            ratio = newPPQ / oldPPQ,\r\n            i, event;\r\n\r\n        if (isNaN(oldPPQ) || isNaN(newPPQ)) {\r\n            if (sequencer.debug === 4) {\r\n                console.error('PPQ values must be numbers');\r\n            }\r\n            return;\r\n        }\r\n\r\n        function loop(data, i, maxi) {\r\n            var arg, type, track, j, t;\r\n            for (j = i; j < maxi; j++) {\r\n                arg = data[j];\r\n                type = typeString(arg);\r\n                //console.log(type, arg.className);\r\n                if (type === 'array') {\r\n                    convert(arg);\r\n                } else if (type === 'object') {\r\n                    if (arg.className === 'Part' || arg.className === 'Track' || arg.className === 'Song') {\r\n                        convert(arg.events);\r\n                    } else if (arg.className === 'MidiFile') {\r\n                        //console.log(arg.numTracks, arg.tracks[0].events);\r\n                        for (t = arg.numTracks - 1; t >= 0; t--) {\r\n                            track = arg.tracks[t];\r\n                            //console.log(track.needsUpdate);\r\n                            if (track.needsUpdate === true) {\r\n                                track.update();\r\n                                if (track.events) {\r\n                                    convert(track.events);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        loop(args, 2, args.length);\r\n\r\n        function convert(events) {\r\n            for (i = events.length - 1; i >= 0; i--) {\r\n                event = events[i];\r\n                event.ticks = ratio * event.ticks;\r\n                if (event.state !== 'new') {\r\n                    event.state = 'changed';\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function getNoteLengthName(song, value) {\r\n        for (var divider in noteLengthNames) {\r\n            if (noteLengthNames.hasOwnProperty(divider)) {\r\n                //console.log(value, song.ppq/divider);\r\n                if (value === song.ppq / divider) {\r\n                    return noteLengthNames[divider];\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function getMicrosecondsFromBPM(bpm) {\r\n        return round(60000000 / bpm);\r\n    }\r\n\r\n\r\n    function insertLink(s) {\r\n        // @TODO: fix this -> should be md syntax\r\n        var href,\r\n            i = s.indexOf('http://');\r\n        if (i !== -1) {\r\n            href = s.substring(i);\r\n            i = href.indexOf(' ');\r\n            if (i !== -1) {\r\n                href = href.substring(0, i);\r\n            }\r\n        }\r\n        return '<a href=\"' + href + '\"></a>';\r\n    }\r\n\r\n\r\n    function getWaveformData(buffer, config, callback) {\r\n        var i, maxi,\r\n            canvas = document.createElement('canvas'),\r\n            ctx = canvas.getContext('2d'),\r\n            pcmRight = buffer.getChannelData(0),\r\n            pcmLeft = buffer.getChannelData(0),\r\n            numSamples = pcmRight.length,\r\n            width, // max width of a canvas on chrome/chromium is 32000\r\n            height = config.height || 100,\r\n            color = config.color || '#71DE71',\r\n            bgcolor = config.bgcolor || '#000',\r\n            density,\r\n            scale = height / 2,\r\n            sampleStep = config.sampleStep || 50,\r\n            height,\r\n            lastWidth,\r\n            numImages,\r\n            currentImage,\r\n            xPos = 0,\r\n            offset = 0,\r\n            urls = [],\r\n            imgElement,\r\n            imgElements = [];\r\n\r\n        //console.log(pcmRight.length, pcmLeft.length, config.samples.length);\r\n\r\n        if (config.width !== undefined) {\r\n            width = config.width;\r\n            density = width / numSamples;\r\n        } else {\r\n            density = config.density || 1;\r\n            width = 1000;\r\n            lastWidth = (numSamples * config.density) % width;\r\n            numImages = Math.ceil((numSamples * config.density) / width);\r\n            currentImage = 0;\r\n        }\r\n\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        ctx.fillStyle = bgcolor;\r\n        ctx.fillRect(0, 0, width, height);\r\n\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = color;\r\n        ctx.lineWidth = 1;\r\n        ctx.moveTo(0, scale);\r\n\r\n\r\n        for (i = 0; i < numSamples; i += sampleStep) {\r\n            xPos = (i - offset) * density;\r\n            if (xPos >= width) {\r\n                //console.log(width, height)\r\n                //ctx.closePath();\r\n                ctx.stroke();\r\n                urls.push(canvas.toDataURL('image/png'));\r\n                currentImage++;\r\n                if (currentImage === numImages - 1) {\r\n                    canvas.width = lastWidth;\r\n                } else {\r\n                    canvas.width = width;\r\n                }\r\n                ctx.beginPath();\r\n                ctx.strokeStyle = color;\r\n                offset = i;\r\n                xPos = 0;\r\n                ctx.moveTo(xPos, scale - (pcmRight[i] * scale));\r\n            } else {\r\n                ctx.lineTo(xPos, scale - (pcmRight[i] * scale));\r\n                //console.log(scale - (pcmRight[i] * scale));\r\n            }\r\n        }\r\n\r\n        if (xPos < width) {\r\n            //ctx.closePath();\r\n            ctx.stroke();\r\n            urls.push(canvas.toDataURL('image/png'));\r\n        }\r\n\r\n        callback(urls);\r\n\r\n        /*\r\n        // create html image elements from the data-urls\r\n        for(i = 0, maxi = urls.length; i < maxi; i++){\r\n            imgElement = document.createElement('img');\r\n            imgElement.src = urls[i];\r\n            imgElement.origWidth = imgElement.width;\r\n            imgElement.height = 100;\r\n            imgElements.push(imgElement);\r\n        }\r\n\r\n        callback({\r\n            dataURIs: urls,\r\n            imgElements: imgElements\r\n        });\r\n        */\r\n    }\r\n\r\n\r\n    function encode64(buffer) {\r\n        var binary = '',\r\n            bytes = new Uint8Array(buffer),\r\n            len = bytes.byteLength;\r\n\r\n        for (var i = 0; i < len; i++) {\r\n            binary += String.fromCharCode(bytes[i]);\r\n        }\r\n        return window.btoa(binary);\r\n    }\r\n\r\n    /*\\\r\n    |*|\r\n    |*|  Base64 / binary data / UTF-8 strings utilities\r\n    |*|\r\n    |*|  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Base64_encoding_and_decoding\r\n    |*|\r\n    \\*/\r\n\r\n    /* Array of bytes to base64 string decoding */\r\n\r\n    function b64ToUint6(nChr) {\r\n\r\n        return nChr > 64 && nChr < 91 ?\r\n            nChr - 65\r\n            : nChr > 96 && nChr < 123 ?\r\n                nChr - 71\r\n                : nChr > 47 && nChr < 58 ?\r\n                    nChr + 4\r\n                    : nChr === 43 ?\r\n                        62\r\n                        : nChr === 47 ?\r\n                            63\r\n                            :\r\n                            0;\r\n\r\n    }\r\n\r\n\r\n    function base64DecToArr(sBase64, nBlocksSize) {\r\n\r\n        var\r\n            sB64Enc = sBase64.replace(/[^A-Za-z0-9\\+\\/]/g, \"\"),\r\n            nInLen = sB64Enc.length,\r\n            nOutLen = nBlocksSize ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize : nInLen * 3 + 1 >> 2,\r\n            taBytes = new Uint8Array(nOutLen);\r\n\r\n        for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\r\n            nMod4 = nInIdx & 3;\r\n            nUint24 |= b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\r\n            if (nMod4 === 3 || nInLen - nInIdx === 1) {\r\n                for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++ , nOutIdx++) {\r\n                    taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\r\n                }\r\n                nUint24 = 0;\r\n\r\n            }\r\n        }\r\n\r\n        return taBytes;\r\n    }\r\n\r\n    /* Base64 string to array encoding */\r\n\r\n    function uint6ToB64(nUint6) {\r\n\r\n        return nUint6 < 26 ?\r\n            nUint6 + 65\r\n            : nUint6 < 52 ?\r\n                nUint6 + 71\r\n                : nUint6 < 62 ?\r\n                    nUint6 - 4\r\n                    : nUint6 === 62 ?\r\n                        43\r\n                        : nUint6 === 63 ?\r\n                            47\r\n                            :\r\n                            65;\r\n\r\n    }\r\n\r\n    function base64EncArr(aBytes) {\r\n\r\n        var nMod3 = 2, sB64Enc = \"\";\r\n\r\n        for (var nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nMod3 = nIdx % 3;\r\n            if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\r\n            nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\r\n            if (nMod3 === 2 || aBytes.length - nIdx === 1) {\r\n                sB64Enc += String.fromCharCode(uint6ToB64(nUint24 >>> 18 & 63), uint6ToB64(nUint24 >>> 12 & 63), uint6ToB64(nUint24 >>> 6 & 63), uint6ToB64(nUint24 & 63));\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n\r\n        return sB64Enc.substr(0, sB64Enc.length - 2 + nMod3) + (nMod3 === 2 ? '' : nMod3 === 1 ? '=' : '==');\r\n\r\n    }\r\n\r\n    /* UTF-8 array to DOMString and vice versa */\r\n\r\n    function UTF8ArrToStr(aBytes) {\r\n\r\n        var sView = \"\";\r\n\r\n        for (var nPart, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nPart = aBytes[nIdx];\r\n            sView += String.fromCharCode(\r\n                nPart > 251 && nPart < 254 && nIdx + 5 < nLen ? /* six bytes */\r\n                    /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\r\n                    (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                    : nPart > 247 && nPart < 252 && nIdx + 4 < nLen ? /* five bytes */\r\n                        (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                        : nPart > 239 && nPart < 248 && nIdx + 3 < nLen ? /* four bytes */\r\n                            (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                            : nPart > 223 && nPart < 240 && nIdx + 2 < nLen ? /* three bytes */\r\n                                (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                                : nPart > 191 && nPart < 224 && nIdx + 1 < nLen ? /* two bytes */\r\n                                    (nPart - 192 << 6) + aBytes[++nIdx] - 128\r\n                                    : /* nPart < 127 ? */ /* one byte */\r\n                                    nPart\r\n            );\r\n        }\r\n\r\n        return sView;\r\n\r\n    }\r\n\r\n    function strToUTF8Arr(sDOMStr) {\r\n\r\n        var aBytes, nChr, nStrLen = sDOMStr.length, nArrLen = 0;\r\n\r\n        /* mapping... */\r\n\r\n        for (var nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nMapIdx);\r\n            nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\r\n        }\r\n\r\n        aBytes = new Uint8Array(nArrLen);\r\n\r\n        /* transcription... */\r\n\r\n        for (var nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nChrIdx);\r\n            if (nChr < 128) {\r\n                /* one byte */\r\n                aBytes[nIdx++] = nChr;\r\n            } else if (nChr < 0x800) {\r\n                /* two bytes */\r\n                aBytes[nIdx++] = 192 + (nChr >>> 6);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x10000) {\r\n                /* three bytes */\r\n                aBytes[nIdx++] = 224 + (nChr >>> 12);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x200000) {\r\n                /* four bytes */\r\n                aBytes[nIdx++] = 240 + (nChr >>> 18);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x4000000) {\r\n                /* five bytes */\r\n                aBytes[nIdx++] = 248 + (nChr >>> 24);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else /* if (nChr <= 0x7fffffff) */ {\r\n                /* six bytes */\r\n                aBytes[nIdx++] = 252 + (nChr >>> 30);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n        }\r\n\r\n        return aBytes;\r\n\r\n    }\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        context = sequencer.protectedScope.context;\r\n    });\r\n\r\n    // mozilla tools\r\n    sequencer.util.b64ToUint6 = b64ToUint6;\r\n    sequencer.util.base64DecToArr = base64DecToArr;\r\n    sequencer.util.uint6ToB64 = uint6ToB64;\r\n    sequencer.util.base64EncArr = base64EncArr;\r\n    sequencer.util.UTF8ArrToStr = UTF8ArrToStr;\r\n    sequencer.util.strToUTF8Arr = strToUTF8Arr;\r\n    sequencer.util.ajax = ajax;\r\n    sequencer.util.ajax2 = ajax2;\r\n    sequencer.util.parseSamples = parseSamples;\r\n\r\n\r\n    //sequencer.findItem = findItem;\r\n    //sequencer.storeItem = storeItem;\r\n\r\n    sequencer.util.round = round;\r\n    sequencer.util.floor = floor;\r\n    sequencer.util.remap = remap;\r\n    sequencer.util.getRandom = getRandom;\r\n    sequencer.util.createSlider = createSlider;\r\n    sequencer.util.createSlider2 = createSlider2;\r\n    sequencer.util.getRandomNotes = getRandomNotes;\r\n    sequencer.util.getEqualPowerCurve = getEqualPowerCurve;\r\n    sequencer.util.objectForEach = objectForEach;\r\n    sequencer.util.insertLink = insertLink;\r\n    sequencer.util.encode64 = encode64;\r\n\r\n    sequencer.protectedScope.getNoteLengthName = getNoteLengthName;\r\n    sequencer.protectedScope.toBinaryString = toBinaryString;\r\n    sequencer.protectedScope.base64ToBinary = base64ToBinary;\r\n    //sequencer.protectedScope.base64ToBinary = base64DecToArr;\r\n    sequencer.protectedScope.toUint8Array = toUint8Array;\r\n    sequencer.protectedScope.getArguments = getArguments;\r\n    sequencer.protectedScope.pathToArray = pathToArray;\r\n    sequencer.protectedScope.parseUrl = parseUrl;\r\n    sequencer.protectedScope.loadLoop = loadLoop;\r\n\r\n\r\n    sequencer.protectedScope.findItem = findItem;\r\n    sequencer.protectedScope.storeItem = storeItem;\r\n    sequencer.protectedScope.deleteItem = deleteItem;\r\n    sequencer.protectedScope.toBinaryString = toBinaryString;\r\n    sequencer.protectedScope.ajax = ajax;\r\n    sequencer.protectedScope.copyObject = copyObject;\r\n    sequencer.protectedScope.findItemsInFolder = findItemsInFolder;\r\n\r\n\r\n    sequencer.convertPPQ = convertPPQ;\r\n    sequencer.getNiceTime = getNiceTime;\r\n    sequencer.protectedScope.isEmptyObject = isEmptyObject;\r\n    sequencer.protectedScope.objectForEach = objectForEach;\r\n    sequencer.protectedScope.objectToArray = objectToArray;\r\n    sequencer.protectedScope.arrayToObject = arrayToObject;\r\n    sequencer.protectedScope.createClass = createClass;\r\n\r\n    sequencer.protectedScope.clone = clone;\r\n    sequencer.protectedScope.round = round;\r\n    sequencer.protectedScope.floor = floor;\r\n    sequencer.protectedScope.typeString = typeString;\r\n    sequencer.protectedScope.copyName = copyName;\r\n    sequencer.protectedScope.removeFromArray = removeFromArray;\r\n    sequencer.protectedScope.removeFromArray2 = removeFromArray2;\r\n    sequencer.protectedScope.filterItemsByClassName = filterItemsByClassName;\r\n\r\n    sequencer.getMicrosecondsFromBPM = getMicrosecondsFromBPM;\r\n    sequencer.getWaveformData = getWaveformData;\r\n}function closeModule(cb) {\n\n  'use strict';\n\n  var\n    ready = false,\n    readyCallbacks = [],\n    context,\n    initMidi,\n    base64ToBinary;\n\n  sequencer.protectedScope.callInitMethods(); // defined in open_module.js\n  context = sequencer.protectedScope.context; // defined in open_module.js\n  initMidi = sequencer.protectedScope.initMidi; // defined in midi_system.js\n  base64ToBinary = sequencer.protectedScope.base64ToBinary; // defined in util.js\n  delete sequencer.protectedScope; //seal\n\n  function addCleanup() {\n    window.addEventListener('beforeunload', function (event) {\n      // close all MIDI ports\n    });\n  }\n\n  sequencer.ready = function () {\n    return new Promise(resolve => {\n      if (ready === true) {\n        addCleanup();\n        resolve();\n      } else {\n        readyCallbacks.push(() => {\n          addCleanup();\n          resolve();\n        });\n      }\n    })\n  };\n\n  sequencer.addInstrument({\n    name: 'sinewave',\n    folder: 'heartbeat',\n    autopan: false,\n    attack: 200,\n    keyrange: [21, 108],\n    release_duration: 50\n  });\n\n\n  sequencer.addInstrument({\n    name: 'metronome',\n    folder: 'heartbeat',\n    //release_duration: 250,\n    sample_path: 'heartbeat/metronome',\n    keyrange: [60, 61],\n    mapping: {\n      '60': { n: 'lowtick' },\n      '61': { n: 'hightick' }\n    }\n  });\n\n  //console.log(sequencer.os, sequencer.browser);\n\n  // safari supports only mp3 and all other browsers support mp3 among others, so although ogg is a better format, mp3 is the best choice here to cover all browsers\n  // -> but we use wav for the metronome tick to get rid of the padding at the start of a mp3 file\n  sequencer.addSamplePack({\n    name: 'metronome',\n    folder: 'heartbeat',\n    mapping: {\n      'hightick': 'UklGRkQFAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YSAFAACx/xf/dADOACwBsP3p+6H+zAGoBOkCCwBX/EH5OvxlA4kJ2wcSArT9E/ut+HT2evUx98n6OAF5CCUMwQvfCOsJxAx0DSIMEAq9BiAB3vhz7mLkT9sR133YxN2s5QLv0vrUBnwRnxuQJeEsSDCiMd8yFS8aKFIhohUsCKj64u625OraA9HuyPnElcP+wxvJWtW25637VQ0jHPgnBTDDM1o0CzKLK+8hzhgFDOz8Se4J47DYVtG0z5fQq9LB12rfA+j99roHAhelIyMwIjdTOuU8mjwIOGoxhCb5E53/j+3k3/fTY8pTw4y/Tr+ew8DMvdsk8RcHRRkSKO4yGTkHPkU/rzzyNcgsrR94Dp/5r+Zs17zOncoDxhfE38WLyn/TeOMi9r0IRxlRKIQzyTlOPKo9yjmWMcokDRLc/Y7rudtdzu/D2L1Iu+27JcG3yYrVLujl+3UOZx1UK5Q0qzmNPDk8ZjeeMPojzhH+/jLtPd5m0hHLHsYIw5TEMMnA0jvj8fSOBiwXASZgMzM8dUBGQbI+rzjpKkIZygZT9QflcdaRyqXCz7+VwUPH784r3K7s+v0KDu8bvyeLMb43NjrhOIo0dSvQHi0PnP6i7ovg3NTxy4/Gf8X8yH/QBtvX55P2Ygb0FcUjsy4LNmI5ejiXM38r7iC8FJwHPvok7dDgQdaJzlTKIsoFzsrVkuA87d/6qAi7FQ0h9ClKMLEz3TOrMBcqYSD8E9AFd/dS6kTf6dbU0XnQv9IH2MXfZ+ln9DEAFwwdFy8giib6KawqeChgI/UbHBOTCZj/vvXe7InlFuDN3P3b0d1F4gzpifG2+u4D7Qw1FfwbnCD+IlgjWyHLHPMVog2mBL37qvP+7NvnYuTv4rvjfubN6k3wpPZ0/WkEOwtiEUsWcxm+Gl4aOhhiFDAPIwmbAtn7TPVy77zqcefr5YHmHull7enyfPmcAHgHew1REr8Vhhd/F+AV1RJ0DikJWQNc/ZP3efKd7hvs2ur46rHs5u8e9N/48/0hA/8HFgwuD04RSBIREqsQOg7mCssGMAJW/Xn4G/TK8Lbuzu0I7qTvnPJy9sX6bP84BLYIbAwdD84QYxG7EOcODAxwCFMEAQC9+7P3SvTX8XHw+u9R8KTxIvSo9+X7VQCUBJ0IMwziDj4QLhAGD9UMrgnTBZcBRv1v+Xv2UfS+8tfx+vES87z0+vb3+Zf9ZgEQBSEIUArWC8kM2QyzC5EJEAdvBHgBXP5n++r4Avd89Wj07fMw9D31Jvfp+Uj9xQD9A8QG5QhXClELrAsvC9wJ7gd6BWIC3v6O+7T4PPZN9EHzWvNf9Pz1Fvit+qL9rQCHAwEG/weCCZUKFwvDCnIJcAcQBWcCaf8Z/CD55vaB9dD0wPSP9UL3m/k7/Mz+JwEyAw8FzAY7CBsJaQk5CWkI2gatBCICYf+j/Fr6vfiV9872sfZP91z4p/lR+3H9zf89AroEFAfjCP0Jcwo8CjAJdQdgBSEDkgDQ/Vj7ZfnR95T28fUd9v32Vvg2+nb8+/6xAWoE4AbDCP4JpAqbCqQJ0weEBfgCTACT/R37M/m+9672IPY69gb3afhW+tT8qf+MAj0FggcuCScKXAriCcMIEAfyBJYCFwCP/Rz7A/l793z2F/Zn9mH37fjd+i39yf9pAt0EFAfRCNkJGAqrCZYIvgZPBJ8B6P4//M350vdz9q/1lfUq9mz3RPmi+3H+bgFVBOQG3wgHCkwK0Am7CCAHCgWmAjAA',\n      'lowtick': 'UklGRlQFAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YTAFAAB0/5v+U/4T/3gA0wFTAuUB+f8d/nT90f1q/ub+tf46/mb/8wFQA9gC7wCd/mr+FAGRA3cE6wJf/h36evmv+8v/NwRHBZUC2/60+//5EvuZ/aX/bgFOAp8Azvzh9wfzLPF68zT4y/2BAygIfQwaEjYY0x31Irwl8SOWHVESOgPh9NfpReFt22nYHddD2BXcZeDa5InqgPDx9nP+6gS4CBYLnw0zES0WXxv4HkcgLh/1G+EX1RNpD4wKigXH/6r5/fNu7lTpj+Zu5hHoXOtL71byr/Qp91L64v6OBO4JoQ5zEskU+hU1FiQVeRP7EWgP4Qr0BIT+tPid9C3y1vCh8FDxJvK28vvyy/LA8pLzU/XP95v6xvw4/uD/RAK2BSkKcg6BEScTZBMeEqkPTQxjCKEEVwFi/nv7h/hp9aDyAvHP8MfxLvM+9PX0uPW19g/4Lfr7/C4AKgNaBXQGywb0BhIHWQfWB1oIzAjtCF8IHwdtBakDVwKLAeYA8v9w/kj81/nQ94v29/XX9bz1bPUY9Uz1Z/aH+Hr7yP4MAi4F+wcfCnYLNgyfDPsMSw0sDUAMfgrcB5IEMwFb/iX8T/pT+O/1X/Mf8cbvrO+18MLyvfVP+Rf9wgAoBCEHpwnIC5EN4Q5AD3wO1Ay0CpsIvwbvBNcCbQAr/nX8Ofsf+vb4mvda9rj1z/WX9pL3a/hH+ZX6R/wn/vP/eQESA/AE+wYDCcwKFAyPDCkMFQuSCe4HVQbSBHQDCwI8ANL9JPuY+HX28vTq82PzdPMV9Az1MfZ49zD5gftx/sQBBQXLB8cJ/gqpCw8MigwWDXENXQ2rDDUL7QgDBswCdv8S/K74WPVk8hXwou4P7mvu1+9T8pz1Uvli/ZoBwgWRCcsMPg/CEEQR4RDADwoO9wusCVMH4ARSApn/ufzd+Wj3bvX78xzzx/L68qzz1vSD9qX4Gfvd/c0AhwO/BWwHmghvCQEKVQonClsJCwiIBh0F0gOgAm0BOwAx/03+XP0g/Lb6cPmX+F/4vfh++TH6s/os+7/7cvwL/Zz9XP5O/3IA3AF9AzsF9gaUCAAKHgueCzcL9wntB3sF4wIzAI396fp1+Gv2IvWn9N30p/Xi9m74G/ru+9P9k/8aAYEC1AMTBSIG0wYuB1gHkgcACGEISAhTBzEFWAKt/5L92fuU+vX50fmf+SP5i/gb+Bf4mviv+Sr7kvyb/Uj+r/4X/8r/+gCiAo0EUAaRBzwISwjqB3IHGQfCBv8FpgTMApQAKf67+5n5/vfn9jz2yPVn9SL1RPXq9SP3Dvmr+6f+sQGKBAcH+whOCh0Laws3C28KLAmDB5AFfQNoAVP/Zv3e+7P6sfnL+Cv4vPeM95b37feV+Jn51Poq/LL9mv+YAVYD3gQuBmcHSAikCIEI7Af+BuEFngQXA1sBv/9v/pf9MP3W/Fj8q/sR+6H6U/o3+mP6y/pN+/f7xvye/WH+Jf9mAD4CQAQJBisHtgf6Bw0I8QdsB1sGywT4AggBCP/o/KX6mPg19572jfaz9uf2S/cM+E35E/tW/af/5wH1A8AFKgfkB/AHgwfxBlAGgQVIBMMCJwGs/43+vP0i/Zr8Lfzl+9H76fvi+9f75fsf/In8BP10/ej9cf4O/7f/dAAcAaUBEgKMAhgDpAMEBCEEDwTfA3IDxQL8ASoBUwCG/87+J/6h/Rr9pPxk/Gb8oPwJ/XH9w/39/UD+qP41/9D/WwDeAGsBAgKdAhEDQQNAA0sDbwOVA5YDVwPOAhgCVAGRAA=='\n    }\n  });\n\n  // console.log(initMidi);\n\n  sequencer.addTask({\n    type: 'init midi',\n    method: initMidi,\n    params: []\n  }, function () {\n    // setTimeout(function() {\n    readyCallbacks.forEach(function (cb) {\n      cb();\n    });\n    ready = true;\n    console.timeEnd(label);\n    // }, 4000)\n  }, false); // @TODO: check this true | false\n\n  // sequencer.startTaskQueue();\n}\n\nvar label = 'heartbeat ' + version + ', initializing took';\n\nfunction initSequencer() {\n  console.time(label);\n  openModule();\n  assetManager();\n  assetPack();\n  // audioEncoder();\n  audioEvent();\n  audioRecorder();\n  // audioRecordingWorker();\n  audioTrack();\n  channelEffects();\n  eventStatistics();\n  findEvent();\n  instrument();\n  instrumentConfig();\n  keyEditor();\n  keyEditorIteratorFactory();\n  metronome();\n  midiEvent();\n  midiEventNames();\n  midiFile();\n  midiNote();\n  midiParse();\n  midiStream();\n  midiSystem();\n  midiWrite();\n  musicXMLParser();\n  note();\n  parseEvents();\n  parseTimeEvents();\n  part();\n  playhead();\n  position();\n  quantizeFixedLength();\n  sample();\n  samplePack();\n  scheduler();\n  createSequencer();\n  song();\n  songEventListener();\n  songFollowEvent();\n  songGrid();\n  songUpdate();\n  track();\n  transpose();\n  util();\n  closeModule();\n}\n\ninitSequencer();\n\nimport { loadMusicXMLFile } from './load_musicxml_file';\nexport { loadMusicXMLFile };\n\n// hail hail esnext!\nexport default sequencer;"]}