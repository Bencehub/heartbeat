{"version":3,"sources":["../src/load_musicxml_file.ts","index.js"],"names":["sequencer","saveAs","navigator","msSaveOrOpenBlob","bind","view","test","userAgent","doc","document","URL","webkitURL","save_link","createElementNS","can_use_save_link","externalHost","webkit_req_fs","webkitRequestFileSystem","req_fs","requestFileSystem","mozRequestFileSystem","throw_outside","ex","setImmediate","setTimeout","fs_min_size","deletion_queue","process_deletion_queue","i","length","file","revokeObjectURL","remove","dispatch","filesaver","event_types","event","concat","listener","call","FileSaver","blob","name","object_url","target_view","slice","type","blob_changed","get_object_url","createObjectURL","push","dispatch_all","split","fs_error","location","href","window","open","readyState","DONE","abortable","func","apply","arguments","create_if_not_found","create","exclusive","INIT","download","createEvent","initMouseEvent","dispatchEvent","chrome","webkitSlice","size","TEMPORARY","fs","root","getDirectory","dir","save","getFile","createWriter","writer","onwriteend","toURL","onerror","error","code","ABORT_ERR","forEach","write","abort","WRITING","NOT_FOUND_ERR","FS_proto","prototype","onwritestart","onprogress","onwrite","onabort","addEventListener","unload","removeEventListener","self","content","version","openModule","protectedScope","context","gainNode","compressor","os","browser","initMethods","webaudioUnlocked","sampleIndex","compressorParams","ua","match","indexOf","AudioContext","createGainNode","createGain","webkitAudioContext","Error","createDynamicsCompressor","connect","destination","gain","value","masterGainNode","masterCompressor","useDelta","timedTasks","scheduledTasks","repetitiveTasks","getSampleId","Date","getTime","addInitMethod","method","callInitMethods","maxi","ui","legacy","midi","webmidi","webaudio","jazz","ogg","mp3","record_audio","undefined","getUserMedia","bitrate_mp3_encoding","util","debug","defaultInstrument","pitch","bufferTime","autoAdjustBufferTime","noteNameMode","minimalSongLength","pauseOnBlur","restartOnFocus","defaultPPQ","overrulePPQ","precision","midiInputs","midiOutputs","storage","id","audio","recordings","instruments","samplepacks","assetpacks","getAudioContext","currentTime","getTimeDiff","contextTime","performance","now","setMasterVolume","getMasterVolume","getCompressionReduction","reduction","enableMasterCompressor","flag","disconnect","configureMasterCompressor","cfg","param","unlockWebAudio","resume","src","createOscillator","noteOn","start","stop","noteOff","Object","defineProperty","assetManager","findItem","deleteItem","typeString","objectForEach","updateInstruments","findItemsInFolder","busy","taskIndex","finishedTasks","taskQueue","callbacks","removeMidiFile","path","item","items","className","localPath","removeInstrument","unloadSamples","folder","mapping","samplePath","hasOwnProperty","sample_path","n","removeSamplePack","samples","sample","s","reset","removeAssetPack","startTaskQueue","cb","loadQueueLoop","index","onTaskQueueDone","task","params","scope","j","callback","taskIds","performCallback","m","console","log","cbActionLoop","success","addTask","callbackAfterAllTasksAreDone","addCallbackAfterTask","getInstrument","exact_match","getMidiFile","getSamplePack","getSample","getAssetPack","getSamplePacks","include_subfolders","getAssetPacks","getSamples","getInstruments","getMidiFiles","loadLoop","storeItem","getArguments","isEmptyObject","assetPack","ajax","parseUrl","AssetPack","load","pack","url","responseType","onError","e","cleanup","assetpack","onSuccess","data","fileSize","loaded","filesize","midifiles","assets","asset","store","occupied","action","warn","packs","tmp","p","double","addMidiFile","addInstrument","addSamplePack","config","val","key","addAssetPack","json","JSON","parse","round","audioEvent","AudioEvent","Array","ticks","buffer","sampleId","WARN","replace","durationTicks","durationMillis","duration","muted","velocity","sampleOffsetTicks","sampleOffsetMillis","sampleOffset","latencyCompensation","playheadOffset","time","update","pos","song","getPosition","millis","endTicks","endMillis","stopSample","seconds","track","setSampleOffset","setDuration","clone","copy","property","trackId","part","partId","fromPart","fromTrack","fromSong","channel","move","isNaN","parseInt","state","needsUpdate","moveTo","position","createAudioEvent","audioRecorder","encode64","createWorker","getWaveformData","localMediaStream","millisPerSample","microphoneAccessGranted","waveformConfig","height","width","sampleStep","color","bgcolor","AudioRecorder","audioEvents","worker","onmessage","encodeAudioBuffer","wavArrayBuffer","interleavedSamples","decodeAudioData","audioBuffer","base64","recording","recordId","wav","Blob","Uint8Array","dataUrl","waveform","dataUrls","prepare","record","stream","postMessage","command","sampleRate","scriptProcessor","createScriptProcessor","onaudioprocess","inputBuffer","numberOfChannels","getChannelData","precounting","createAudio","sourceNode","createMediaStreamSource","stopRecordingTimestamp","timestamp","scriptProcessors","bufferIndexStart","metronome","precountDurationInMillis","audioRecordingLatency","bufferIndexEnd","setAudioRecordingLatency","terminate","createAudioRecorder","createAudioRecorderWorker","songDispatchEvent","audioTrack","unscheduleCallback","AudioTrack","scheduledSamples","recorder","processEvent","createSample","offset","allNotesOff","unschedule","prepareForRecording","stopRecording","createAudioTrack","channelEffects","createClass","Reverb","Panner","Panner2","Delay","BiQuadFilter","Compressor","Effect","bypass","amount","output","wetGain","dryGain","setInput","input","node","setAmount","createReverb","createPanner","createPanner2","createDelay","createCompressor","createBiQuadFilter","createConvolver","panningModel","setPosition","delayTime","createBiquadFilter","Q","frequency","x","y","z","Math","abs","xDeg","zDeg","sin","PI","setTime","eventStatistics","getStats","createNote","findEvent","getEvents","args","operator","events","searchPattern","patternLength","propValue","minNoteName","maxNoteName","numArgs","min","max","sum","avg","useNoteName","supportedProperties","supportedOperators","shift","join","noteName","createMidiNote","midiEventNumberByName","patterns","operators","findNote","checkValue","createPattern","checkOperators","checkCondition","checkCondition2","inverseOperator","removeMutualEvents","removeDoubleEvents","performSearch","properties","logicalOperatorsRegex","RegExp","bar","beat","sixteenth","tick","barsbeats","musical_time","hour","minute","second","millisecond","linear_time","data1","data2","noteNumber","searchString","pattern","patternIndex","operatorIndex","results","lastResult","subResult1","resultSet1","resultSet2","eventId","addEvent","maxj","result","lastId","sort","a","b","eventNumber","inverse","searchResult","operator1","operator2","value1","value2","numEvents","isString","obj","eventsMidiTime","pop","check","check2","number","inversedOperator","noteOnEvent","noteOnEvents","resultsFiltered","NOTE_ON","NOTE_OFF","sortIndex","instrument","remap","transpose","Instrument","SimpleSynth","createAutoPanner","getValue","scheduledEvents","sustainPedalDown","sustainPedalSamples","sampleDataByNoteNumber","sampleData","info","instrument_info","author","instrument_author","license","instrument_license","updateTaskId","setInstrument","v","v1","v2","octave","note","pathArray","names","subdata","sampleConfig","samplePack","audioFolder","notename_mode","me","autopan","singlePitch","single_pitch","keyScalingRelease","keyscaling_release","keyScalingPanning","keyscaling_panning","keyRange","keyrange","key_range","lowestNote","highestNote","numNotes","release_duration","releaseDuration","releaseEnvelope","release_envelope","autoPanner","samplepack","substring","getNoteNumber","getNoteNameFromNoteNumber","multiLayered","parseSampleData","toLowerCase","bufferId","sustain","sustain_start","sustain_end","samplesById","release","r","panPosition","panning","getInfoAsHTML","html","instrumentInfo","samplepackInfo","sp","getFullNoteName","compression","getInfo","addData","setKeyScalingPanning","end","panStep","currentPan","numSamples","setRelease","envelope","setKeyScalingRelease","releaseStep","currentRelease","semitones","cb1","cb2","loop","num","transposedBuffer","midiEvent","stopNote","playNote","stopSustain","setPanning","setValueAtTime","midiNote","sourceId","fullName","hasScheduledSamples","reschedule","arg","allNotesOffPart","createInstrument","pathToArray","getEqualPowerCurve","waveForm","wave_form","oscillator","createSimpleSynth","instrumentConfig","InstrumentConfig","keyEditor","KeyEditor","createIteratorFactory","createPlayhead","arrayToObject","floor","setPageData","checkNextPage","checkScrollPosition","updateDataKeys","ceil","playhead","numBars","bars","newNumBars","eventListeners","interrupt","iteratorFactory","verticalLine","createVerticalLineIterator","horizontalLine","createHorizontalLineIterator","eventIterator","createEventIterator","noteIterator","createNoteIterator","partIterator","createPartIterator","exactFitVertical","exactFitHorizontal","activeEvents","activeNotes","activeParts","newEvents","newNotes","newParts","changedEvents","changedNotes","changedParts","removedEvents","removedNotes","removedParts","recordedNotesObj","recordedEventsObj","snapshot","paginate","pageNo","barsPerPage","pageWidth","pageHeight","pitchRange","pitchHeight","setStartPosition","startPosition","setEndPosition","endPosition","numTicks","startTicks","tickWidth","viewportWidth","ticksPerBar","scrollX","scrollPosition","viewportTicks","maxScrollPosition","scrollLimit","viewportHeight","scrollY","currentPage","numPages","snapValueX","snapX","snapValueY","snapY","setSnapX","setSnapY","setBarsPerPage","bbp","snapWidth","snapTicks","playing","setViewport","w","h","draw","updateSong","arr","bbox","getNoteRect","getPartRect","removedEventsObj","removedNotesObj","removedPartsObj","startMillis","ids","editor","nextPage","startBar","lastPage","prevPage","gotoPage","scroll","updateScroll","getEventRect","ticksToX","pitchToY","top","left","bottom","right","endless","stats","getBBox","endEvent","getPart","startMoveNote","selectedNote","gripX","stopMoveNote","moveNote","newPitch","yToPitch","oldPitch","newTicks","xToTicks","oldTicks","transposeNote","startMovePart","selectedPart","stopMovePart","movePart","autoUpdate","transposePart","getTicksAt","snap","getPitchAt","getXAt","getYAt","getPositionAt","set","get","getPlayheadX","compensateForScroll","setPlayheadToX","setPlayhead","getPlayheadPosition","setPlayheadPosition","getEventAt","getSongPosition","getEventsInRect","getNoteAt","getNotesInRect","snapHeight","beatLength","denominator","ppq","nominator","removeNote","removeEvents","removePart","getSnapshot","activeEventsObj","activeNotesObj","activePartsObj","recordedNotesSong","recordedEventsSong","endBar","nonActiveEvents","nonActiveNotes","nonActiveParts","prevActiveEvents","prevActiveNotes","prevActiveParts","recordedEvents","recordedNotes","recordingNotes","activeStateChangedEvents","activeStateChangedNotes","activeStateChangedParts","lastBar","active","inActive","recorded","new","changed","removed","stateChanged","notes","parts","hasNewBars","newWidth","requestAnimationFrame","listeners","createKeyEditor","objectToArray","getScaffoldingBars","createKeyEditorIteratorFactory","keyEditorIteratorFactory","minWidthSixteenth","Factory","numParts","supportedTypes","lineType","numSixteenth","getData","ticksPerBeat","ticksPerSixteenth","next","t","hasNext","diffTicks","setType","range","hasNextCalled","nextEvent","types","isPlaying","eventIndex","setTypes","newNote","nextNote","parseEvents","parseMetronomeEvents","Metronome","methodMap","volume","noteNumberAccentedTick","noteNumberNonAccentedTick","velocityAccentedTick","velocityNonAccentedTick","noteLengthAccentedTick","noteLengthNonAccentedTick","checkNumber","createEvents","noteLength","beatsPerBar","noteNumberAccented","noteNumberNonAccented","noteLengthAccented","noteLengthNonAccented","velocityAccented","velocityNonAccented","createMidiEvent","createTrack","createPart","addPart","precountEvents","init","addEvents","updateConfig","scheduler","configure","setNoteLengthAccentedTick","setNoteLengthNonAccentedTick","setVelocityAccentedTick","setVelocityNonAccentedTick","setNoteNumberAccentedTick","setNoteNumberNonAccentedTick","createPrecountEvents","precount","endPos","getPrecountEvents","maxtime","startTime","setVolume","createMetronome","MidiEvent","midiEventId","status","bpm","controllerType","controllerValue","programNumber","semi","setPitch","midiEventNames","lowerCaseToNumber","upperCaseToNumber","numberToLowerCase","numberToUpperCase","numberByName","no","nameByNumber","upperOrLower","checkEventType","midiEventNameByNumber","midiFile","base64ToBinary","parseMidiFile","MidiFile","midifile","numTracks","tmpTicks","parsed","timeEvents","ppqFactor","lastType","tracks","header","deltaTime","subtype","numNoteOn","numNoteOff","numOther","text","instrumentName","microsecondsPerBeat","numerator","autoSize","arraybuffer","MidiFile2","reader","FileReader","_promise","Promise","executor","resolve","reject","readAsArrayBuffer","lastIndexOf","createMidiFile","mf","MidiNote","midiNoteId","on","off","MIDI_NOTE","addNoteOff","mute","midiParse","lastEventTypeByte","trackName","createStream","readChunk","read","readInt32","readEvent","readVarInt","eventTypeByte","param1","readInt8","subtypeByte","readInt16","hourByte","frameRate","sec","frame","subframe","pow","thirtyseconds","scale","eventType","parseStream","formatType","trackCount","timeDivision","trackChunk","trackStream","headerChunk","headerStream","trackNames","eof","midiStream","fcc","String","fromCharCode","signed","toString","midiSystem","songMidiEventListener","midiAccess","midiInputsOrder","midiOutputsOrder","midiInitialized","midiEventListenerId","getDevices","inputs","nameA","nameB","numMidiInputs","outputs","numMidiOutputs","handleMidiMessageTrack","recordMillis","prerolling","recordEnabled","recordPart","enableRetrospectiveRecording","retrospectiveRecording","midiEventListeners","send","routeToMidiOut","getMidiPortsAsDropdown","select","option","ports","createElement","div","firstOption","innerHTML","appendChild","port","getMidiInputs","getMidiOutputs","getMidiInputsAsDropdown","getMidiOutputsAsDropdown","initMidi","requestMIDIAccess","then","midiAccessOnSuccess","_jazzInstances","_Jazz","onstatechange","midiAccessOnError","initMidiSong","handleMidiMessageSong","midiMessageEvent","monitor","onmidimessage","setMidiInputSong","setMidiInput","setMidiOutputSong","lastEventTime","setMidiOutput","addMidiEventListener","removeMidiEventListener","removeMidiEventListeners","midiWrite","AP","PPQ","HDR_CHUNKID","charCodeAt","HDR_CHUNK_SIZE","HDR_TYPE1","HDR_PPQ","str2Bytes","TRK_CHUNKID","byteArray","arrayBuffer","uintArray","trackToBytes","instrumentId","ArrayBuffer","endings","lastEventTicks","lengthBytes","delta","trackBytes","convertToVLQ","stringToNumArray","microSeconds","denom","str","finalBytes","bytes","chars","unshift","bList","map","char","saveToMidiFile","saveSongAsMidiFile","musicXMLParser","nsResolver","xml","parser","xmlDoc","DOMParser","parseFromString","firstChild","nextSibling","nodeName","createNSResolver","ownerDocument","documentElement","parsePartWise","partNode","measureIterator","measureNode","noteNode","tieStart","tieStop","tieIterator","tieNode","tmp1","tmp2","step","alter","voice","noteDuration","rest","chord","divisions","evaluate","XPathResult","ANY_TYPE","tiedNotes","iterateNext","STRING_TYPE","stringValue","NUMBER_TYPE","numberValue","TIME_SIGNATURE","FIRST_ORDERED_NODE_TYPE","singleNodeValue","createSong","useMetronome","parseTimeWise","loadMusicXML","returnAsXML","response","parseMusicXML","noteNames","getNoteName","checkNoteName","getFrequency","isNoteMode","isBlackKey","arg0","arg1","arg2","blackKey","mode","toUpperCase","black","getNoteOctave","factor","millisPerTick","secondsPerTick","updateEvent","timeData","tickAsString","getNiceTime","timeAsString","timeAsArray","barsAsString","barsAsArray","lastEventTick","getDataFromEvent","lastEventTmp","parseTimeEvents","playbackSpeed","numTimeEvents","setTickDuration","setTicksPerBeat","copyName","getEvent","moveEvents","transposeEvents","getEventsAndConfig","reverseByPitch","reverseByTicks","Part","eventsById","relative","END_OF_TRACK","hasAudioEvents","tobeRemoved","onTicks","offTicks","partIndex","notesById","dirtyEvents","dirtyNotes","solo","keepWhenEmpty","addEventsRelative","removeEvent","moveEvent","moveAllEvents","transposeAllEvents","findEvents","findNotes","getIndex","partTicks","copies","setSolo","setPartSolo","firstEvent","lastEvent","l","instanceId","Playhead","getPosition2","u","unit","currentValue","noteIndex","calculate","diff","addType","removeType","trim","stillActiveNotes","stillActiveEvents","collectedParts","collectedNotes","collectedEvents","DUMMY_EVENT","percentage","diffMillis","millisToTicks","ticksToMillis","barsToMillis","barsToTicks","ticksToBars","millisToBars","checkBarsAndBeats","getPositionData","calculateBarsAndBeats","checkPosition","fromMillis","fromTicks","fromBars","returnType","beyondEndOfSong","getTimeEvent","target","targetMillis","beos","targetTicks","targetBar","targetBeat","targetSixteenth","targetTick","diffTick","positionData","millisRounded","isTick","positionLength","supportedReturnTypes","quantizeFixedLength","copyObject","noteFractions","quantize","history","quantized","quantizeTicks","quantizeHistory","quantizedEvents","fixedLength","fadeOut","SampleSynth","SampleRelease","SampleSustainRelease","SampleReleasePanning","SampleSustainReleasePanning","Sample","stopCallback","source","onended","values","linearRampToValueAtTime","setValueCurveAtTime","releaseEnvelopeArray","Float32Array","createSource","createBufferSource","route","phase","startReleasePhase","stopTime","when","cancelScheduledValues","execute","panner","doLog","sustainStart","sustainEnd","release_envelope_array","loopStart","loopEnd","parseTime","SamplePack","ext","slash","dot","remotePath","extension","remote_path","d","loadSamples","callback1","callback2","loadSample","hasMapping","parseAudioData","audiodata","ts","loadTime","samplepack_info","samplepack_author","samplepack_license","samplepack_compression","compression_type","compression_level","Scheduler","looped","timeDiff","eventsMidiAudioMetronome","numAudioEvents","scheduledAudioEvents","setIndex","beyondLoop","getDanglingAudioEvents","songStartMillis","buffertime","doLoop","loopDuration","songMillis","loopEndTicks","firstRun","prevMaxtime","midiOutput","vel","audioLatency","unscheduleEvent","createScheduler","createSequencer","heartbeat","lastTimeStamp","processEventTracks","pausedSongs","activeSongs","snapshots","addSong","removeProperties","getSongs","deleteSong","k","eventsLib","notesLib","processEvents","stopProcessEvent","stopProcessEvents","play","songs","indentation","addParts","setAnimationFrameType","interval","webkitRequestAnimationFrame","onblur","pause","onfocus","createFollowEvent","checkDuration","gridToSong","noteToGrid","eventToGrid","positionToGrid","removeFromArray","removeFromArray2","getNoteLengthName","_removeTracks","pulse","getTrack","addTracks","getParts","getTimeEvents","setRecordingStatus","_getRecordingPerTrack","createGrid","Song","songIndex","quantizeValue","fixedLengthValue","positionType","autoQuantize","illegalLoop","grid","tempoEvent","TEMPO","timeSignatureEvent","setTempo","setTimeSignature","allEvents","tracksById","tracksByName","partsById","paused","stopped","preroll","playheadRecording","followEvent","newTracks","addedIds","timeStamp","prevMillis","resetAllListeners","endOfSong","jump","playstart","startTime2","playAfterPrecount","adjustLatencyForAllRecordings","startRecording","userFeedback","audioRecording","recordStartMillis","recordTimestampTicks","recordingAudio","recordTimestamp","recordingHistory","undoRecording","getAudioRecordingData","historyObject","undoQuantize","quantizeRecording","setLeftLocator","loopStartPosition","loopStartTicks","setRightLocator","loopEndPosition","setLoop","addTrack","getTracks","removeTrack","removeTracks","setPlaybackSpeed","speed","startLoop","endLoop","newPos","updateTimeEvents","updateGrid","updateTempoEvent","updatePlayheadAndLocators","updateTimeSignatureEvent","getTempoEvents","getTimeSignatureEvents","newStartPos","newEndPos","startPos","ratio","resetTempo","firstTempoEvent","resetTimeSignature","firstTimeSignatureEvent","addTimeEvent","addTimeEvents","removeTimeEvent","removeTimeEvents","removeDoubleTimeEvents","eventsByTicks","setPitchRange","setDurationInBars","changedTracks","dirtyTracks","dirtyParts","addEffect","removeEffect","getVolume","setTrackSolo","soloTrack","muteAllTracks","setMetronomeVolume","configureMetronome","resetMetronome","setPrecount","resetExternalMidiDevices","addMetronomeEvents","songAddEventListener","songRemoveEventListener","songEventListener","listenerIndex","listenerId","filteredListeners","songFollowEvent","checkOperatorConflict","FollowEvent","supportedTimeEvents","barsandbeats","allListenersById","allListenersByType","searchPatterns","eventListenersBySearchstring","positionListenersBySearchstring","listenerIds","instance","searchstring","callEventListeners","callListenersPositionTicks","callListenersPositionRepetitive","callListenersPositionConditionalSimple","callListenersPositionConditionalComplex","called","repetitive","conditional_simple","conditional_complex","storeArray","dataType","addPositionEventListener","len","value1Type","position_type","eventIds","removeMe","filteredListenerIds","removedListenerIds","songGrid","positionToSong","coordinatesToPosition","getSong","songToGrid","songUpdate","update2","parseParts","parseMidiNotes","id1","id2","id3","removedTracks","midiEvents","parseRecordedEvents","totalTime","encodeAudio","Track","getPartsAndConfig","getTicksAtPosition","removeParts","eventsPerPart","getDefaultInstrumentConfig","effects","numEffects","lastEffect","addPartAt","addPartsAt","moveParts","movePartTo","movePartsTo","positions","moveAllParts","copyPart","copyParts","selectedParts","copiedParts","getPartAt","getPartsAt","getPartFromTo","getPartsFromTo","from","to","toTicks","getPartBetween","effect","removeEventsFromTo","removeEventAt","removeEventsAt","removeAllEvents","setSong","setEffectPosition","fx","soloPart","availableInputs","setWaveformConfig","encodeAudioRecording","bitrate","mp3Data","processMidiEvent","shifter","Pitchshift","fftFrameSize","numChannels","c","shiftValue","outputBuffer","process","outdata","createBuffer","foundItem","foundFolder","mPow","mRound","mFloor","mRandom","random","noteLengthNames","o","decimals","ignore_keys","isEmpty","request","promise","XMLHttpRequest","onload","overrideMimeType","setRequestHeader","loop3","search_subfolders","indent","folders","numFolders","currentFolder","itemId","parseSample","loadAndParseSample","toBinaryString","ff","mx","scc","keyStr","uarray","chr1","chr2","chr3","enc2","enc3","enc4","charAt","getRandom","b64ToUint6","nChr","uint6ToB64","nUint6","base64DecToArr","sBase64","nBlocksSize","sB64Enc","nMod3","nMod4","nInLen","nOutLen","taBytes","nUint24","nOutIdx","nInIdx","base64EncArr","aBytes","nLen","nIdx","substr","UTF8ArrToStr","sView","nPart","strToUTF8Arr","sDOMStr","nStrLen","nArrLen","nMapIdx","nChrIdx","ajax2","onreadystatechange","parseSamples","promises","all","oldMin","oldMax","newMin","newMax","createSlider","slider","sliderWrapper","message","label","onMouseDown","valueAsNumber","onMouseUp","onMouseMove","parentNode","initialSliderValue","initialLabelValue","onChange","setValue","setLabel","elem","element","createSlider2","calculateFromLabel","initialValueSlider","initialValueLabel","updateSlider","updateLabel","getValue1","getValue2","getRandomNotes","minVelocity","maxVelocity","minNoteNumber","maxNoteNumber","numSteps","maxValue","percent","cos","insertLink","binary","byteLength","btoa","divider","toUint8Array","uint","filePath","fileName","fileExtension","numItems","pathString","prop","searchFolder","loop2","convertPPQ","oldPPQ","newPPQ","convert","ms","parent","constructor","thisClass","attr","numCopies","array","elementA","newArray","filterItemsByClassName","getMicrosecondsFromBPM","density","lastWidth","numImages","currentImage","canvas","ctx","getContext","pcmRight","xPos","urls","fillStyle","fillRect","beginPath","strokeStyle","lineWidth","stroke","toDataURL","lineTo","closeModule","ready","readyCallbacks","addCleanup","attack","timeEnd","initSequencer"],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["// import sequencer from 'heartbeat-sequencer';\n\n// const addAssetPack = (ap: Heartbeat.AssetPack): Promise<void> => new Promise((resolve) => {\n//   sequencer.addAssetPack(ap, () => {\n//     resolve();\n//   });\n// })\n\nconst loadMusicXMLFile = (url: string): Promise<XMLDocument> => {\n  return new Promise((resolve, reject) => {\n    fetch(url)\n      .then(response => response.text())\n      .then(str => {\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(str, 'application/xml');\n        resolve(xmlDoc);\n      });\n  });\n}\n\nexport {\n  loadMusicXMLFile,\n  // addAssetPack,\n};","/*\n\nheartbeat\n(c) 2013 - 2019 abudaan\nhttps://github.com/abudaan/heartbeat/wiki/license\n\n\nIn util.js the method base64ToBinary() is based on Daniel Guerrero's code:\n\nhttps://github.com/danguer/blog-examples/blob/master/js/base64-binary.js\nhttps://github.com/danguer/blog-examples/blob/master/LICENSE\n\n\nIn util.js the method toBinaryString(), midi_parse.js and midi_stream.js are based on Matt Westcott & Ben Fishman's code:\n\nhttps://github.com/gasman/jasmid\nhttps://github.com/gasman/jasmid/blob/master/LICENSE\n\n\nIn util.js Mozilla's atob and btoa alternatives are included:\nhttps://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_.232_.E2.80.93_rewriting_atob()_and_btoa()_using_TypedArrays_and_UTF-8\n\n\nThe code in midi_write.js is based on Sergi Mansilla's code:\n\nhttps://github.com/sergi/jsmidi\nhttps://github.com/sergi/jsmidi/blob/master/README.md\n\n\nAudio recording:\nhttps://github.com/akrennmair/libmp3lame-js\nhttps://github.com/kobigurk/libmp3lame-js\nhttps://github.com/nusofthq/Recordmp3js\n\n\nIf a browser doesn't support WebMIDI, heartbeat will try to fallback to Sema's Jazz plugin:\n\nhttp://jazz-soft.net/\nhttps://github.com/jazz-soft/JZZ\n\n*/\n\n\n/*\n *\tFileSaver.js\n *  A saveAs() FileSaver implementation.\n *  2014-01-24\n *\n *  By Eli Grey, http://eligrey.com\n *  License: X11/MIT\n *    See LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs\n  // IE 10+ (native saveAs)\n  || (typeof navigator !== \"undefined\" &&\n      navigator.msSaveOrOpenBlob && navigator.msSaveOrOpenBlob.bind(navigator))\n  // Everyone else\n  || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof navigator !== \"undefined\" &&\n\t    /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case BlobBuilder.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, URL = view.URL || view.webkitURL || view\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = !view.externalHost && \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = doc.createEvent(\"MouseEvents\");\n\t\t\tevent.initMouseEvent(\n\t\t\t\t\"click\", true, false, view, 0, 0, 0, 0, 0\n\t\t\t\t, false, false, false, false, 0, null\n\t\t\t);\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, webkit_req_fs = view.webkitRequestFileSystem\n\t\t, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t, fs_min_size = 0\n\t\t, deletion_queue = []\n\t\t, process_deletion_queue = function() {\n\t\t\tvar i = deletion_queue.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar file = deletion_queue[i];\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tURL.revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t\tdeletion_queue.length = 0; // clear queue\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, FileSaver = function(blob, name) {\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, blob_changed = false\n\t\t\t\t, object_url\n\t\t\t\t, target_view\n\t\t\t\t, get_object_url = function() {\n\t\t\t\t\tvar object_url = get_URL().createObjectURL(blob);\n\t\t\t\t\tdeletion_queue.push(object_url);\n\t\t\t\t\treturn object_url;\n\t\t\t\t}\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (blob_changed || !object_url) {\n\t\t\t\t\t\tobject_url = get_object_url(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (target_view) {\n\t\t\t\t\t\ttarget_view.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\twindow.open(object_url, \"_blank\");\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t}\n\t\t\t\t, abortable = function(func) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif (filesaver.readyState !== filesaver.DONE) {\n\t\t\t\t\t\t\treturn func.apply(this, arguments);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t, create_if_not_found = {create: true, exclusive: false}\n\t\t\t\t, slice\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\tif (!name) {\n\t\t\t\tname = \"download\";\n\t\t\t}\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_object_url(blob);\n\t\t\t\t// FF for Android has a nasty garbage collection mechanism\n\t\t\t\t// that turns all objects that are not pure javascript into 'deadObject'\n\t\t\t\t// this means `doc` and `save_link` are unusable and need to be recreated\n\t\t\t\t// `view` is usable though:\n\t\t\t\tdoc = view.document;\n\t\t\t\tsave_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\");\n\t\t\t\tsave_link.href = object_url;\n\t\t\t\tsave_link.download = name;\n\t\t\t\tvar event = doc.createEvent(\"MouseEvents\");\n\t\t\t\tevent.initMouseEvent(\n\t\t\t\t\t\"click\", true, false, view, 0, 0, 0, 0, 0\n\t\t\t\t\t, false, false, false, false, 0, null\n\t\t\t\t);\n\t\t\t\tsave_link.dispatchEvent(event);\n\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\tdispatch_all();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Object and web filesystem URLs have a problem saving in Google Chrome when\n\t\t\t// viewed in a tab, so I force save with application/octet-stream\n\t\t\t// http://code.google.com/p/chromium/issues/detail?id=91158\n\t\t\tif (view.chrome && type && type !== force_saveable_type) {\n\t\t\t\tslice = blob.slice || blob.webkitSlice;\n\t\t\t\tblob = slice.call(blob, 0, blob.size, force_saveable_type);\n\t\t\t\tblob_changed = true;\n\t\t\t}\n\t\t\t// Since I can't be sure that the guessed media type will trigger a download\n\t\t\t// in WebKit, I append .download to the filename.\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=65440\n\t\t\tif (webkit_req_fs && name !== \"download\") {\n\t\t\t\tname += \".download\";\n\t\t\t}\n\t\t\tif (type === force_saveable_type || webkit_req_fs) {\n\t\t\t\ttarget_view = view;\n\t\t\t}\n\t\t\tif (!req_fs) {\n\t\t\t\tfs_error();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfs_min_size += blob.size;\n\t\t\treq_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {\n\t\t\t\tfs.root.getDirectory(\"saved\", create_if_not_found, abortable(function(dir) {\n\t\t\t\t\tvar save = function() {\n\t\t\t\t\t\tdir.getFile(name, create_if_not_found, abortable(function(file) {\n\t\t\t\t\t\t\tfile.createWriter(abortable(function(writer) {\n\t\t\t\t\t\t\t\twriter.onwriteend = function(event) {\n\t\t\t\t\t\t\t\t\ttarget_view.location.href = file.toURL();\n\t\t\t\t\t\t\t\t\tdeletion_queue.push(file);\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t\tdispatch(filesaver, \"writeend\", event);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\twriter.onerror = function() {\n\t\t\t\t\t\t\t\t\tvar error = writer.error;\n\t\t\t\t\t\t\t\t\tif (error.code !== error.ABORT_ERR) {\n\t\t\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\"writestart progress write abort\".split(\" \").forEach(function(event) {\n\t\t\t\t\t\t\t\t\twriter[\"on\" + event] = filesaver[\"on\" + event];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\twriter.write(blob);\n\t\t\t\t\t\t\t\tfilesaver.abort = function() {\n\t\t\t\t\t\t\t\t\twriter.abort();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.WRITING;\n\t\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t};\n\t\t\t\t\tdir.getFile(name, {create: false}, abortable(function(file) {\n\t\t\t\t\t\t// delete file if it already exists\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t\tsave();\n\t\t\t\t\t}), abortable(function(ex) {\n\t\t\t\t\t\tif (ex.code === ex.NOT_FOUND_ERR) {\n\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}), fs_error);\n\t\t\t}), fs_error);\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name) {\n\t\t\treturn new FileSaver(blob, name);\n\t\t}\n\t;\n\tFS_proto.abort = function() {\n\t\tvar filesaver = this;\n\t\tfilesaver.readyState = filesaver.DONE;\n\t\tdispatch(filesaver, \"abort\");\n\t};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\tview.addEventListener(\"unload\", process_deletion_queue, false);\n\tsaveAs.unload = function() {\n\t\tprocess_deletion_queue();\n\t\tview.removeEventListener(\"unload\", process_deletion_queue, false);\n\t};\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\n/*\n\nif (typeof module !== \"undefined\" && module !== null) {\n  module.exports = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd != null)) {\n  define([], function() {\n    return saveAs;\n  });\n}\n\n*/var sequencer;\r\n// import { version } from \"../package.json\";\r\nvar version = \"0.0.23\";\r\n\r\nfunction openModule() {\r\n  \"use strict\";\r\n\r\n  var protectedScope,\r\n    initMethods = [],\r\n    webaudioUnlocked = false,\r\n    src,\r\n    context,\r\n    gainNode,\r\n    compressor,\r\n    sampleIndex = 0,\r\n    compressorParams = [\r\n      \"threshold\",\r\n      \"knee\",\r\n      \"ratio\",\r\n      \"reduction\",\r\n      \"attack\",\r\n      \"release\",\r\n    ],\r\n    ua = navigator.userAgent,\r\n    os,\r\n    browser,\r\n    legacy = false;\r\n\r\n  if (ua.match(/(iPad|iPhone|iPod)/g)) {\r\n    os = \"ios\";\r\n    // webaudioUnlocked = false;\r\n  } else if (ua.indexOf(\"Android\") !== -1) {\r\n    os = \"android\";\r\n  } else if (ua.indexOf(\"Linux\") !== -1) {\r\n    os = \"linux\";\r\n  } else if (ua.indexOf(\"Macintosh\") !== -1) {\r\n    os = \"osx\";\r\n  } else if (ua.indexOf(\"Windows\") !== -1) {\r\n    os = \"windows\";\r\n  }\r\n\r\n  if (ua.indexOf(\"Chrome\") !== -1) {\r\n    // chrome, chromium and canary\r\n    browser = \"chrome\";\r\n\r\n    if (ua.indexOf(\"OPR\") !== -1) {\r\n      browser = \"opera\";\r\n    } else if (ua.indexOf(\"Chromium\") !== -1) {\r\n      browser = \"chromium\";\r\n    }\r\n  } else if (ua.indexOf(\"Safari\") !== -1) {\r\n    browser = \"safari\";\r\n  } else if (ua.indexOf(\"Firefox\") !== -1) {\r\n    browser = \"firefox\";\r\n  } else if (ua.indexOf(\"Trident\") !== -1) {\r\n    browser = \"Internet Explorer\";\r\n  }\r\n\r\n  if (os === \"ios\") {\r\n    if (ua.indexOf(\"CriOS\") !== -1) {\r\n      browser = \"chrome\";\r\n    }\r\n  }\r\n\r\n  // console.log(os, browser, '---', ua);\r\n\r\n  if (window.AudioContext) {\r\n    context = new window.AudioContext();\r\n    if (typeof context.createGainNode !== \"function\") {\r\n      context.createGainNode = context.createGain;\r\n    }\r\n  } else if (window.webkitAudioContext) {\r\n    context = new window.webkitAudioContext();\r\n    if (typeof context.createGainNode !== \"function\") {\r\n      context.createGainNode = context.createGain;\r\n    }\r\n  } else {\r\n    //alert('Your browser does not support AudioContext!\\n\\nPlease use one of these browsers:\\n\\n- Chromium (Linux | Windows)\\n- Firefox (OSX | Windows)\\n- Chrome (Linux | Android | OSX | Windows)\\n- Canary (OSX | Windows)\\n- Safari (iOS 6.0+ | OSX)\\n\\nIf you use Chrome or Chromium, heartbeat uses the WebMIDI api');\r\n    throw new Error(\r\n      \"The WebAudio API hasn't been implemented in \" +\r\n        browser +\r\n        \", please use any other browser\"\r\n    );\r\n  }\r\n\r\n  compressor = context.createDynamicsCompressor();\r\n  compressor.connect(context.destination);\r\n  //console.log(compressor);\r\n  gainNode = context.createGainNode();\r\n  //gainNode.connect(compressor);\r\n  gainNode.connect(context.destination);\r\n  gainNode.gain.value = 1;\r\n\r\n  protectedScope = {\r\n    context: context,\r\n    //destination: context.destination,\r\n    masterGainNode: gainNode,\r\n    masterCompressor: compressor,\r\n\r\n    useDelta: false,\r\n\r\n    timedTasks: {},\r\n    scheduledTasks: {},\r\n    repetitiveTasks: {},\r\n\r\n    getSampleId: function () {\r\n      return \"S\" + sampleIndex++ + new Date().getTime();\r\n    },\r\n\r\n    addInitMethod: function (method) {\r\n      initMethods.push(method);\r\n    },\r\n\r\n    callInitMethods: function () {\r\n      var i,\r\n        maxi = initMethods.length;\r\n      for (i = 0; i < maxi; i++) {\r\n        initMethods[i]();\r\n      }\r\n    },\r\n  };\r\n\r\n  /**\r\n      @namespace sequencer\r\n  */\r\n  sequencer = {\r\n    name: \"qambi\",\r\n    version,\r\n    protectedScope: protectedScope,\r\n    ui: {},\r\n    ua: ua,\r\n    os: os,\r\n    browser: browser,\r\n    legacy: false,\r\n    midi: false,\r\n    webmidi: false,\r\n    webaudio: true,\r\n    jazz: false,\r\n    ogg: false,\r\n    mp3: false,\r\n    record_audio: navigator.getUserMedia !== undefined,\r\n    bitrate_mp3_encoding: 128,\r\n    util: {},\r\n    debug: 0, // 0 = off, 1 = error, 2 = warn, 3 = info, 4 = log\r\n    defaultInstrument: \"sinewave\",\r\n    pitch: 440,\r\n    bufferTime: 350 / 1000, //seconds\r\n    autoAdjustBufferTime: false,\r\n    noteNameMode: \"sharp\",\r\n    minimalSongLength: 60000, //millis\r\n    pauseOnBlur: false,\r\n    restartOnFocus: true,\r\n    defaultPPQ: 960,\r\n    overrulePPQ: true,\r\n    precision: 3, // means float with precision 3, e.g. 10.437\r\n\r\n    midiInputs: {},\r\n    midiOutputs: {},\r\n\r\n    storage: {\r\n      midi: {\r\n        id: \"midi\",\r\n      },\r\n      audio: {\r\n        id: \"audio\",\r\n        recordings: {},\r\n      },\r\n      instruments: {\r\n        id: \"instruments\",\r\n      },\r\n      samplepacks: {\r\n        id: \"samplepacks\",\r\n      },\r\n      assetpacks: {\r\n        id: \"assetpacks\",\r\n      },\r\n    },\r\n\r\n    getAudioContext: function () {\r\n      return context;\r\n    },\r\n\r\n    getTime: function () {\r\n      return context.currentTime;\r\n      // return performance.now() / 1000;\r\n    },\r\n\r\n    getTimeDiff: function () {\r\n      var contextTime = context.currentTime * 1000;\r\n      return performance.now() - contextTime;\r\n    },\r\n\r\n    setMasterVolume: function (value) {\r\n      value = value < 0 ? 0 : value > 1 ? 1 : value;\r\n      gainNode.gain.value = value;\r\n    },\r\n\r\n    getMasterVolume: function () {\r\n      return gainNode.gain.value;\r\n    },\r\n\r\n    getCompressionReduction: function () {\r\n      //console.log(compressor);\r\n      return compressor.reduction.value;\r\n    },\r\n\r\n    enableMasterCompressor: function (flag) {\r\n      if (flag) {\r\n        gainNode.disconnect(0);\r\n        gainNode.connect(compressor);\r\n        compressor.disconnect(0);\r\n        compressor.connect(context.destination);\r\n      } else {\r\n        compressor.disconnect(0);\r\n        gainNode.disconnect(0);\r\n        gainNode.connect(context.destination);\r\n      }\r\n    },\r\n\r\n    configureMasterCompressor: function (cfg) {\r\n      /*\r\n          readonly attribute AudioParam threshold; // in Decibels\r\n          readonly attribute AudioParam knee; // in Decibels\r\n          readonly attribute AudioParam ratio; // unit-less\r\n          readonly attribute AudioParam reduction; // in Decibels\r\n          readonly attribute AudioParam attack; // in Seconds\r\n          readonly attribute AudioParam release; // in Seconds\r\n      */\r\n      var i, param;\r\n      for (i = compressorParams.length; i >= 0; i--) {\r\n        param = compressorParams[i];\r\n        if (cfg[param] !== undefined) {\r\n          compressor[param].value = cfg[param];\r\n        }\r\n      }\r\n    },\r\n\r\n    unlockWebAudio: function () {\r\n      // console.log('unlock webaudio');\r\n      if (webaudioUnlocked === true) {\r\n        // console.log('already unlocked');\r\n        return;\r\n      }\r\n      if (typeof context.resume === \"function\") {\r\n        context.resume();\r\n      }\r\n      var src = context.createOscillator(),\r\n        gainNode = context.createGainNode();\r\n      gainNode.gain.value = 0;\r\n      src.connect(gainNode);\r\n      gainNode.connect(context.destination);\r\n      if (src.noteOn !== undefined) {\r\n        src.start = src.noteOn;\r\n        src.stop = src.noteOff;\r\n      }\r\n      src.start(0);\r\n      src.stop(0.001);\r\n      webaudioUnlocked = true;\r\n    },\r\n  };\r\n\r\n  // debug levels\r\n  Object.defineProperty(sequencer, \"ERROR\", { value: 1 });\r\n  Object.defineProperty(sequencer, \"WARN\", { value: 2 });\r\n  Object.defineProperty(sequencer, \"INFO\", { value: 3 });\r\n  Object.defineProperty(sequencer, \"LOG\", { value: 4 });\r\n}\r\nfunction assetManager() {\r\n\r\n  'use strict';\r\n\r\n  // console.log('AssetManager');\r\n\r\n  var\r\n    // import\r\n    loadLoop, //defined in util.js\r\n    findItem, //defined in util.js\r\n    storeItem, //defined in util.js\r\n    deleteItem, //defined in util.js\r\n    typeString, //defined in util.js\r\n    getArguments, //defined in util.js\r\n    isEmptyObject, // defined in util.js\r\n    objectForEach, //defined in util.js\r\n    storage, //defined in open_module.js\r\n    updateInstruments, //defined in sequencer.js\r\n    findItemsInFolder, //defined in util.js\r\n\r\n    busy = false,\r\n    taskIndex = 0,\r\n    finishedTasks = {},\r\n    taskQueue = [],\r\n    callbacks = [];\r\n\r\n\r\n  sequencer.removeMidiFile = function (path) {\r\n    var item,\r\n      items = [], i, folder;\r\n\r\n    if (path.className === 'MidiFile') {\r\n      item = path;\r\n      path = item.localPath;\r\n    } else {\r\n      item = findItem(path, storage.midi);\r\n    }\r\n\r\n    if (item.className === 'MidiFile') {\r\n      items.push(item);\r\n    } else {\r\n      folder = item;\r\n      objectForEach(folder, function (item) {\r\n        if (item.className === 'MidiFile') {\r\n          items.push(item);\r\n        }\r\n      });\r\n    }\r\n\r\n    for (i = items.length - 1; i >= 0; i--) {\r\n      item = items[i];\r\n      deleteItem(item.localPath, storage.midi);\r\n    }\r\n  };\r\n\r\n\r\n  sequencer.removeInstrument = function (path, unloadSamples) {\r\n    var item, items = [], i, folder, mapping, samplePath;\r\n\r\n    if (path.className === 'InstrumentConfig') {\r\n      item = path;\r\n      path = item.localPath;\r\n    } else {\r\n      item = findItem(path, storage.instruments);\r\n    }\r\n\r\n\r\n    if (item.className === 'InstrumentConfig') {\r\n      items.push(item);\r\n    } else {\r\n      folder = item;\r\n      for (i in folder) {\r\n        if (folder.hasOwnProperty(i)) {\r\n          item = folder[i];\r\n          if (item.className === 'InstrumentConfig') {\r\n            items.push(item);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (i = items.length - 1; i >= 0; i--) {\r\n      item = items[i];\r\n      //console.log(item.mapping);\r\n      mapping = item.mapping;\r\n      samplePath = item.sample_path;\r\n\r\n      if (unloadSamples === true) {\r\n        // delete samples\r\n        objectForEach(mapping, function (value) {\r\n          deleteItem(samplePath + '/' + value.n, storage.audio);\r\n        });\r\n        // delete sample pack\r\n        deleteItem(samplePath, storage.samplepacks);\r\n      }\r\n      // remove instrument from storage\r\n      deleteItem(item.localPath, storage.instruments);\r\n      //return deleteItem(path, storage.instruments);\r\n    }\r\n\r\n    // if an instrument has been removed, inform the tracks that used that instrument\r\n    updateInstruments();\r\n  };\r\n\r\n\r\n  sequencer.removeSamplePack = function (path) {\r\n    var item,\r\n      items = [], i, samples, sample, s, folder;\r\n\r\n    if (path.className === 'SamplePack') {\r\n      item = path;\r\n      path = item.localPath;\r\n    } else {\r\n      item = findItem(path, storage.samplepacks);\r\n    }\r\n\r\n    if (item.className === 'SamplePack') {\r\n      items.push(item);\r\n    } else {\r\n      folder = item;\r\n      objectForEach(folder, function (item) {\r\n        if (item.className === 'SamplePack') {\r\n          items.push(item);\r\n        }\r\n      });\r\n    }\r\n\r\n    for (i = items.length - 1; i >= 0; i--) {\r\n      item = items[i];\r\n      //console.log(item.localPath);\r\n      samples = item.samples;\r\n      for (s = samples.length - 1; s >= 0; s--) {\r\n        sample = samples[s];\r\n        //console.log('->', sample.folder + '/' + sample.id);\r\n        deleteItem(sample.folder + '/' + sample.id, storage.audio);\r\n      }\r\n      item.reset();\r\n      deleteItem(item.localPath, storage.samplepacks);\r\n    }\r\n\r\n    updateInstruments();\r\n    /*\r\n            function loopInstruments(root){\r\n                var item;\r\n    \r\n                for(i in root){\r\n                    if(root.hasOwnProperty(i)){\r\n                        if(i === 'id' || i === 'path' || i === 'className'){\r\n                            continue;\r\n                        }\r\n                        item = root[i];\r\n                        if(item.className === 'Folder'){\r\n                            loopInstruments(item);\r\n                        }else{\r\n                            item = findItem(item.folder + '/' + item.name, storage.instruments);\r\n                            console.log(item);\r\n                            if(item.parse){\r\n                                item.parse();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    \r\n            loopInstruments(storage.instruments);\r\n    */\r\n  };\r\n\r\n\r\n  sequencer.removeAssetPack = function (path) {\r\n    var item,\r\n      folder;\r\n\r\n    if (path.className === 'AssetPack') {\r\n      item = path;\r\n      path = item.localPath;\r\n    } else {\r\n      item = findItem(path, storage.assetpacks);\r\n    }\r\n\r\n    if (item.className === 'AssetPack') {\r\n      item.unload();\r\n    } else {\r\n      folder = item;\r\n      objectForEach(folder, function (item) {\r\n        if (item.className === 'AssetPack') {\r\n          item.unload();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  sequencer.startTaskQueue = function (cb) {\r\n    //console.log('startTaskQueue', taskQueue.length, busy);\r\n    if (busy === true) {\r\n      return;\r\n    }\r\n    busy = true;\r\n    loadQueueLoop(0, cb);\r\n  };\r\n\r\n\r\n  sequencer.addTask = function (task, callback, callbackAfterAllTasksAreDone) {\r\n    task.id = 'task' + taskIndex++;\r\n    taskQueue.push(task);\r\n    //console.log('task', task.type, taskQueue.length);\r\n    if (callback !== undefined) {\r\n      if (callbackAfterAllTasksAreDone === true) {\r\n        // call the callback only after all tasks are done\r\n        sequencer.addCallbackAfterTask(callback);\r\n      } else {\r\n        // call the callback right after this task is done\r\n        sequencer.addCallbackAfterTask(callback, [task.id]);\r\n      }\r\n    }\r\n    return task.id;\r\n  };\r\n\r\n\r\n  sequencer.addCallbackAfterTask = function (callback, taskIds) {\r\n    callbacks.push({\r\n      method: callback,\r\n      taskIds: taskIds\r\n    });\r\n    //console.log('taskIds', taskIds);\r\n  };\r\n\r\n\r\n  // this method loops over the load cue and performs the individual load method per asset\r\n  function loadQueueLoop(index, onTaskQueueDone) {\r\n    var task, params, scope,\r\n      i, j, callback, taskIds,\r\n      performCallback;\r\n\r\n    if (index === taskQueue.length) {\r\n      // call all callbacks that have to be called at the end of the loop queue\r\n      for (i = callbacks.length - 1; i >= 0; i--) {\r\n        callback = callbacks[i];\r\n        if (callback === false) {\r\n          // this callback has already been called\r\n          continue;\r\n        }\r\n        //console.log(i, callback.method);\r\n        var m = callback.method;\r\n        //callback = false;\r\n        //console.log(1,callback);\r\n        setTimeout(function () {\r\n          //console.log(2, m);\r\n          //callback.method();\r\n          m();\r\n        }, 0);\r\n      }\r\n      finishedTasks = {};\r\n      taskQueue = [];\r\n      callbacks = [];\r\n      taskIndex = 0;\r\n      busy = false;\r\n      if (onTaskQueueDone) {\r\n        // for internal use only, never used so far\r\n        console.log('onTaskQueueDone');\r\n        onTaskQueueDone();\r\n      }\r\n      //console.log('task queue done', sequencer.storage);\r\n      return;\r\n    }\r\n\r\n    task = taskQueue[index];\r\n    scope = task.scope || null;\r\n    params = task.params || [];\r\n\r\n    //console.log(index, task.type, taskQueue.length);\r\n\r\n    if (typeString(params) !== 'array') {\r\n      params = [params];\r\n    }\r\n\r\n    function cbActionLoop(success) {\r\n      //console.log('cbActionLoop', success);\r\n      // set a flag that this task has been done\r\n      finishedTasks[task.id] = true;\r\n\r\n      // check which callbacks we can call now\r\n      for (i = callbacks.length - 1; i >= 0; i--) {\r\n        callback = callbacks[i];\r\n        if (callback === false) {\r\n          // this callback has already been called\r\n          continue;\r\n        }\r\n        taskIds = callback.taskIds;\r\n        // console.log(i, callback.method, taskIds);\r\n        // some callbacks may only be called after a task, or a number of tasks have been done\r\n        if (taskIds !== undefined) {\r\n          performCallback = true;\r\n          for (j = taskIds.length - 1; j >= 0; j--) {\r\n            // if one of the required tasks has not been done yet, do not perform the callback\r\n            if (finishedTasks[taskIds[j]] !== true) {\r\n              performCallback = false;\r\n            }\r\n          }\r\n          //console.log('performCallback', performCallback);\r\n          if (performCallback) {\r\n            //callback.method.call(null);\r\n            //console.log(callback);\r\n            var m = callback.method;\r\n            callbacks[i] = false;\r\n            setTimeout(function () {\r\n              m(success);\r\n              //console.log(callbacks);\r\n            }, 0);\r\n          }\r\n        }\r\n      }\r\n\r\n      //console.log('task done', task.name, index, taskQueue.length);\r\n      index++;\r\n\r\n      // if(index === taskQueue.length && taskIds === undefined){\r\n\r\n      // }\r\n      loadQueueLoop(index, onTaskQueueDone);\r\n    }\r\n\r\n    params.push(cbActionLoop);\r\n\r\n    //console.log(index, taskQueue.length, task.method.name, params);\r\n    task.method.apply(scope, params);\r\n  }\r\n\r\n\r\n  sequencer.getInstrument = function (path, exact_match) {\r\n    return findItem(path, storage.instruments, exact_match);\r\n  };\r\n\r\n  sequencer.getMidiFile = function (path, exact_match) {\r\n    return findItem(path, storage.midi, exact_match);\r\n  };\r\n\r\n  sequencer.getSamplePack = function (path, exact_match) {\r\n    return findItem(path, storage.samplepacks, exact_match);\r\n  };\r\n\r\n  sequencer.getSample = function (path, exact_match) {\r\n    return findItem(path, storage.audio, exact_match);\r\n  };\r\n\r\n  sequencer.getAssetPack = function (path, exact_match) {\r\n    return findItem(path, storage.assetpacks, exact_match);\r\n  };\r\n\r\n  sequencer.getSamplePacks = function (path, include_subfolders) {\r\n    return findItemsInFolder(path, storage.samplepacks, include_subfolders);\r\n  };\r\n\r\n  sequencer.getAssetPacks = function (path, include_subfolders) {\r\n    return findItemsInFolder(path, storage.assetpacks, include_subfolders);\r\n  };\r\n\r\n  sequencer.getSamples = function (path, include_subfolders) {\r\n    return findItemsInFolder(path, storage.audio, include_subfolders);\r\n  };\r\n\r\n  sequencer.getInstruments = function (path, include_subfolders) {\r\n    return findItemsInFolder(path, storage.instruments, include_subfolders);\r\n  };\r\n\r\n  sequencer.getMidiFiles = function (path, include_subfolders) {\r\n    return findItemsInFolder(path, storage.midi, include_subfolders);\r\n  };\r\n\r\n\r\n  sequencer.protectedScope.addInitMethod(function () {\r\n    storage = sequencer.storage;\r\n    loadLoop = sequencer.protectedScope.loadLoop;\r\n    findItem = sequencer.protectedScope.findItem;\r\n    storeItem = sequencer.protectedScope.storeItem;\r\n    deleteItem = sequencer.protectedScope.deleteItem;\r\n    typeString = sequencer.protectedScope.typeString;\r\n    getArguments = sequencer.protectedScope.getArguments;\r\n    isEmptyObject = sequencer.protectedScope.isEmptyObject;\r\n    objectForEach = sequencer.protectedScope.objectForEach;\r\n    updateInstruments = sequencer.protectedScope.updateInstruments;\r\n    findItemsInFolder = sequencer.protectedScope.findItemsInFolder;\r\n  });\r\n\r\n}\r\nfunction assetPack() {\n\n    'use strict';\n\n    // console.log('AssetPack');\n\n    var\n        index = 0,\n        storage, // defined in open_module.js\n        ajax, // defined in utils.js\n        round, // defined in utils.js\n        parseUrl, // defined in utils.js\n        findItem, // defined in utils.js\n        storeItem, // defined in utils.js\n        deleteItem, // defined in utils.js\n        typeString, // defined in utils.js\n        objectForEach, // defined in utils.js\n        removeMidiFile, // defined in asset_manager.js\n        removeAssetPack, // defined in asset_manager.js\n        removeInstrument, // defined in asset_manager.js\n        removeSamplePack, // defined in asset_manager.js\n\n        AssetPack;\n\n    AssetPack = function (config) {\n        this.id = 'AP' + index++ + new Date().getTime();\n        this.name = this.id;\n        this.className = 'AssetPack';\n        this.loaded = false;\n        this.midifiles = config.midifiles || [];\n        this.samplepacks = config.samplepacks || [];\n        this.instruments = config.instruments || [];\n        this.url = config.url;\n        var pack = this;\n        objectForEach(config, function (val, key) {\n            pack[key] = val;\n        });\n    };\n\n\n    function cleanup(assetpack, callback) {\n        assetpack = null;\n        //console.log(callback.name);\n        callback(false);\n    }\n\n\n    function store(assetpack) {\n        var occupied = findItem(assetpack.localPath, sequencer.storage.assetpacks, true),\n            action = assetpack.action;\n\n        //console.log('occ', occupied);\n        if (occupied && occupied.className === 'AssetPack' && action !== 'overwrite') {\n            if (sequencer.debug >= 2) {\n                console.warn('there is already an AssetPack at', assetpack.localPath);\n            }\n            return true;\n        } else {\n            storeItem(assetpack, assetpack.localPath, sequencer.storage.assetpacks);\n            return false;\n        }\n    }\n\n\n    function load(pack, callback) {\n        if (pack.url !== undefined) {\n            ajax({\n                url: pack.url,\n                responseType: 'json',\n                onError: function (e) {\n                    //console.log('onError', e);\n                    cleanup(pack, callback);\n                },\n                onSuccess: function (data, fileSize) {\n                    // if the json data is corrupt (for instance because of a trailing comma) data will be null\n                    if (data === null) {\n                        callback(false);\n                        return;\n                    }\n\n                    pack.loaded = true;\n\n                    if (data.name !== undefined && pack.name === undefined) {\n                        pack.name = data.name;\n                    }\n\n                    if (data.folder !== undefined && pack.folder === undefined) {\n                        pack.folder = data.folder;\n                    }\n\n                    if (pack.name === undefined) {\n                        pack.name = parseUrl(pack.url).name;\n                    }\n\n                    pack.localPath = pack.folder !== undefined ? pack.folder + '/' + pack.name : pack.name;\n                    pack.filesize = fileSize;\n                    //pack.fileSize = round(data.length/1024/1024, 2);\n                    //console.log(pack.filesize);\n\n                    if (data.instruments) {\n                        pack.instruments = pack.instruments.concat(data.instruments);\n                    }\n                    if (data.samplepacks) {\n                        pack.samplepacks = pack.samplepacks.concat(data.samplepacks);\n                    }\n                    if (data.midifiles) {\n                        pack.midifiles = pack.midifiles.concat(data.midifiles);\n                    }\n\n                    loadLoop(pack, callback);\n                }\n            });\n        } else {\n            pack.localPath = pack.folder !== undefined ? pack.folder + '/' + pack.name : pack.name;\n            loadLoop(pack, callback);\n        }\n    }\n\n\n    function loadLoop(assetpack, callback) {\n        var i, assets, asset,\n            loaded = store(assetpack),\n            localPath = assetpack.localPath;\n\n\n        if (loaded === true) {\n            assetpack = findItem(localPath, sequencer.storage.assetpacks, true);\n            callback(assetpack);\n            return;\n        }\n\n        if (assetpack.url !== undefined) {\n            var packs = sequencer.storage.assetpacks,\n                tmp, p, double = null;\n\n            for (p in packs) {\n                tmp = packs[p];\n                if (tmp.className !== 'AssetPack') {\n                    continue;\n                }\n                //console.log('loop', p, assetpack.id);\n                if (tmp.id !== assetpack.id && tmp.url === assetpack.url) {\n                    double = tmp;\n                    break;\n                }\n            }\n            if (double !== null) {\n                //console.log(double.id, assetpack.id);\n                localPath = assetpack.localPath;\n                removeAssetPack(localPath);\n\n                assetpack = null;\n                assetpack = findItem(double.localPath, sequencer.storage.assetpacks, true);\n                //console.log(assetpack.id, double.id);\n                callback(assetpack);\n                return;\n            }\n        }\n\n\n        assets = assetpack.midifiles;\n        for (i = assets.length - 1; i >= 0; i--) {\n            //console.log('midifile', assets[i]);\n            asset = assets[i];\n            asset.pack = assetpack;\n            sequencer.addMidiFile(asset);\n        }\n\n        assets = assetpack.instruments;\n        for (i = assets.length - 1; i >= 0; i--) {\n            //console.log('instrument', assets[i]);\n            asset = assets[i];\n            asset.pack = assetpack;\n            sequencer.addInstrument(asset);\n        }\n\n        assets = assetpack.samplepacks;\n        for (i = assets.length - 1; i >= 0; i--) {\n            //console.log('samplepack', assets[i], pack);\n            asset = assets[i];\n            asset.pack = assetpack;\n            //console.log(asset.folder, pack.fileSize);\n            sequencer.addSamplePack(asset);\n        }\n\n        callback(assetpack);\n    }\n\n\n    AssetPack.prototype.unload = function () {\n        var i, assets, asset;\n\n        assets = this.midifiles;\n        for (i = assets.length - 1; i >= 0; i--) {\n            asset = assets[i];\n            removeMidiFile(asset.folder + '/' + asset.name);\n        }\n\n        assets = this.instruments;\n        for (i = assets.length - 1; i >= 0; i--) {\n            asset = assets[i];\n            removeInstrument(asset.folder + '/' + asset.name);\n        }\n\n        assets = this.samplepacks;\n        for (i = assets.length - 1; i >= 0; i--) {\n            asset = assets[i];\n            removeSamplePack(asset.folder + '/' + asset.name);\n        }\n\n        deleteItem(this.localPath, storage.assetpacks);\n    };\n\n\n    sequencer.addAssetPack = function (config, callback) {\n        var type = typeString(config),\n            assetpack, json, name, folder;\n\n        if (type !== 'object') {\n            if (sequencer.debug >= 2) {\n                console.warn('can\\'t create an AssetPack with this data', config);\n            }\n            return false;\n        }\n\n        if (callback === undefined) {\n            callback = function () { };\n        }\n\n        if (config.json) {\n            json = config.json;\n            name = config.name;\n            folder = config.folder;\n            if (typeString(json) === 'string') {\n                try {\n                    json = JSON.parse(json);\n                } catch (e) {\n                    if (sequencer.debug >= 2) {\n                        console.warn('can\\'t create an AssetPack with this data', config);\n                    }\n                    return false;\n                }\n            }\n            if (json.instruments === undefined && json.midifiles === undefined && json.samplepacks === undefined) {\n                if (sequencer.debug >= 2) {\n                    console.warn('can\\'t create an AssetPack with this data', config);\n                }\n                return false;\n            }\n            config = {\n                midifiles: json.midifiles,\n                instruments: json.instruments,\n                samplepacks: json.samplepacks,\n                name: name === undefined ? json.name : name,\n                folder: folder === undefined ? json.folder : folder\n            };\n            //console.log('config', name, folder, json.name, json.folder);\n        }\n\n\n        //assetpack = new AssetPack(config);\n        //console.log(assetpack.id);\n\n        sequencer.addTask({\n            type: 'load asset pack',\n            method: load,\n            params: new AssetPack(config)\n        }, function (assetpack) {\n            config = null;\n            // console.log(assetpack.id);\n            callback(assetpack);\n            //console.log('assetpack', assetpack);\n        }, true);\n\n        sequencer.startTaskQueue();\n/*\n        sequencer.addTask({\n            method: load,\n            params: assetpack\n        }, function(){\n            console.log('loaded', assetpack);\n            store(assetpack);\n            if(callback){\n                callback(assetpack);\n            }\n        });\n*/\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n\n        ajax = sequencer.protectedScope.ajax;\n        round = sequencer.protectedScope.round;\n        parseUrl = sequencer.protectedScope.parseUrl;\n        findItem = sequencer.protectedScope.findItem;\n        storeItem = sequencer.protectedScope.storeItem;\n        deleteItem = sequencer.protectedScope.deleteItem;\n        typeString = sequencer.protectedScope.typeString;\n        objectForEach = sequencer.protectedScope.objectForEach;\n\n        storage = sequencer.storage;\n        removeMidiFile = sequencer.removeMidiFile;\n        removeInstrument = sequencer.removeInstrument;\n        removeSamplePack = sequencer.removeSamplePack;\n        removeAssetPack = sequencer.removeAssetPack;\n    });\n}\nfunction audioEvent() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        slice = Array.prototype.slice,\r\n\r\n        //import\r\n        typeString, // → defined in utils.js\r\n\r\n        AudioEvent,\r\n        audioEventId = 0;\r\n\r\n\r\n    AudioEvent = function (config) {\r\n\r\n        if (config === undefined) {\r\n            // bypass for cloning\r\n            return;\r\n        }\r\n\r\n        // use ticks like in MidiEvent\r\n        if (config.ticks === undefined) {\r\n            this.ticks = 0;\r\n        } else {\r\n            this.ticks = config.ticks;\r\n        }\r\n\r\n\r\n        // provide either buffer (AudioBuffer) or path to a sample in the sequencer.storage object\r\n        this.buffer = config.buffer;\r\n        this.sampleId = config.sampleId;\r\n        this.path = config.path;\r\n\r\n        if (this.buffer === undefined && this.path === undefined) {\r\n            if (sequencer.debug >= sequencer.WARN) {\r\n                console.warn('please provide an AudioBuffer or a path to a sample in the sequencer.storage object');\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this.buffer !== undefined && typeString(this.buffer) !== 'audiobuffer') {\r\n            if (sequencer.debug >= sequencer.WARN) {\r\n                console.warn('buffer has to be an AudioBuffer');\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this.path !== undefined) {\r\n            if (typeString(this.path) !== 'string') {\r\n                if (sequencer.debug >= sequencer.WARN) {\r\n                    console.warn('path has to be a String');\r\n                }\r\n                return;\r\n            } else {\r\n\r\n                this.sampleId = this.path;\r\n                this.sampleId = this.sampleId.replace(/^\\//, '');\r\n                this.sampleId = this.sampleId.replace(/\\/$/, '');\r\n                this.sampleId = this.sampleId.split('/');\r\n                this.sampleId = this.sampleId[this.sampleId.length - 1];\r\n\r\n                this.buffer = sequencer.getSample(this.path);\r\n                if (this.buffer === false) {\r\n                    if (sequencer.debug >= sequencer.WARN) {\r\n                        console.warn('no sample found at', this.path);\r\n                    }\r\n                    return;\r\n                }\r\n                this.buffer = sequencer.getSample(this.path);\r\n                //console.log(this.sampleId, this.path, this.buffer);\r\n                //console.log(this.buffer);\r\n            }\r\n        }\r\n\r\n        // set either durationTicks of durationMillis, or both if they represent the same value\r\n        this.durationTicks = config.durationTicks;\r\n        this.durationMillis = config.durationMillis;\r\n\r\n        //console.log(this.durationTicks, this.durationMillis);\r\n\r\n        if (this.durationTicks === undefined && this.durationMillis === undefined) {\r\n            this.duration = this.buffer.duration;\r\n            this.durationMillis = this.duration * 1000;\r\n        }\r\n        //console.log(this.durationMillis, this.duration, this.buffer);\r\n\r\n        this.muted = false;\r\n\r\n        if (config.velocity === undefined) {\r\n            this.velocity = 127;\r\n        } else {\r\n            this.velocity = config.velocity;\r\n        }\r\n\r\n        // start of audio, also the quantize point, value in ticks or millis\r\n        this.sampleOffsetTicks = config.sampleOffsetTicks;\r\n        this.sampleOffsetMillis = config.sampleOffsetMillis;\r\n\r\n        if (this.sampleOffsetMillis === undefined && this.sampleOffsetTicks === undefined) {\r\n            this.sampleOffsetTicks = 0;\r\n            this.sampleOffsetMillis = 0;\r\n            this.sampleOffset = 0;\r\n        } else if (this.sampleOffsetMillis !== undefined) {\r\n            this.sampleOffset = this.sampleOffsetMillis / 1000;\r\n        }\r\n\r\n        this.latencyCompensation = config.latencyCompensation;\r\n        if (this.latencyCompensation === undefined) {\r\n            this.latencyCompensation = 0;\r\n        }\r\n\r\n        // if the playhead starts somewhere in the sample, this value will be set by the scheduler\r\n        this.playheadOffset = 0;\r\n\r\n        this.className = 'AudioEvent';\r\n        this.time = 0;\r\n        this.type = 'audio';\r\n        this.id = 'A' + audioEventId + new Date().getTime();\r\n    };\r\n\r\n\r\n    AudioEvent.prototype.update = function () {\r\n        var pos;\r\n        if (this.duration === undefined) {\r\n            pos = this.song.getPosition('ticks', this.ticks + this.durationTicks);\r\n            this.durationMillis = pos.millis - this.millis;\r\n            this.duration = this.durationMillis / 1000;\r\n            //console.log(pos, this.durationMillis);\r\n        } else if (this.durationTicks === undefined) {\r\n            pos = this.song.getPosition('millis', this.millis + this.durationMillis);\r\n            this.durationTicks = pos.ticks - this.ticks;\r\n        }\r\n\r\n        if (this.sampleOffset === undefined) {\r\n            pos = this.song.getPosition('ticks', this.ticks + this.sampleOffsetTicks);\r\n            //console.log(pos.barsAsString);\r\n            this.sampleOffsetMillis = pos.millis - this.millis;\r\n            this.sampleOffset = this.sampleOffsetMillis / 1000;\r\n            //console.log(this.sampleOffsetMillis);\r\n        } else if (this.sampleOffsetTicks === undefined) {\r\n            pos = this.song.getPosition('millis', this.millis + this.sampleOffsetMillis);\r\n            this.sampleOffsetTicks = pos.ticks - this.ticks;\r\n        }\r\n\r\n        this.endTicks = this.ticks + this.durationTicks;\r\n        this.endMillis = this.millis + this.durationMillis;\r\n    };\r\n\r\n\r\n\r\n    AudioEvent.prototype.stopSample = function (seconds) {\r\n        this.track.audio.stopSample(this, seconds);\r\n    };\r\n\r\n\r\n    AudioEvent.prototype.setSampleOffset = function (type, value) {\r\n        if (type === 'millis') {\r\n            this.sampleOffsetMillis = value;\r\n            this.sampleOffset = value / 1000;\r\n            this.durationTicks = undefined;\r\n            if (this.song !== undefined) {\r\n                this.update();\r\n            }\r\n        } else if (type === 'ticks') {\r\n            this.sampleOffsetTicks = value;\r\n            this.sampleOffset = undefined;\r\n            this.sampleOffsetMillis = undefined;\r\n            if (this.song !== undefined) {\r\n                this.update();\r\n            }\r\n        } else {\r\n            if (sequencer.debug >= sequencer.WARN) {\r\n                console.warn('you have to provide a type \"ticks\" or \"millis\" and a value');\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    AudioEvent.prototype.setDuration = function (type, value) {\r\n        if (type === 'millis') {\r\n            this.durationMillis = value;\r\n            this.duration = value / 1000;\r\n            this.durationTicks = undefined;\r\n            if (this.song !== undefined) {\r\n                this.update();\r\n            }\r\n        } else if (type === 'ticks') {\r\n            this.durationTicks = value;\r\n            this.duration = undefined;\r\n            this.durationMillis = undefined;\r\n            if (this.song !== undefined) {\r\n                this.update();\r\n            }\r\n        } else {\r\n            if (sequencer.debug >= sequencer.WARN) {\r\n                console.warn('you have to provide a type \"ticks\" or \"millis\" and a value');\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    AudioEvent.prototype.clone = AudioEvent.prototype.copy = function () {\r\n        var event = new AudioEvent(),\r\n            property;\r\n\r\n        for (property in this) {\r\n            if (this.hasOwnProperty(property)) {\r\n                //console.log(property);\r\n                if (property !== 'id' && property !== 'eventNumber') {\r\n                    event[property] = this[property];\r\n                }\r\n                event.song = undefined;\r\n                event.track = undefined;\r\n                event.trackId = undefined;\r\n                event.part = undefined;\r\n                event.partId = undefined;\r\n            }\r\n        }\r\n        return event;\r\n    };\r\n\r\n\r\n    // same as MidiEvent, could be inherited from generic Event\r\n    AudioEvent.prototype.reset = function (fromPart, fromTrack, fromSong) {\r\n\r\n        fromPart = fromPart === undefined ? true : false;\r\n        fromTrack = fromTrack === undefined ? true : false;\r\n        fromSong = fromSong === undefined ? true : false;\r\n\r\n        if (fromPart) {\r\n            this.part = undefined;\r\n            this.partId = undefined;\r\n        }\r\n        if (fromTrack) {\r\n            this.track = undefined;\r\n            this.trackId = undefined;\r\n            this.channel = 0;\r\n        }\r\n        if (fromSong) {\r\n            this.song = undefined;\r\n        }\r\n    };\r\n\r\n\r\n\r\n    // same as MidiEvent, could be inherited from generic Event\r\n    AudioEvent.prototype.move = function (ticks) {\r\n        if (isNaN(ticks)) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('please provide a number');\r\n            }\r\n            return;\r\n        }\r\n        this.ticks += parseInt(ticks, 10);\r\n        if (this.song !== undefined) {\r\n            this.update();\r\n        }\r\n        if (this.state !== 'new') {\r\n            this.state = 'changed';\r\n        }\r\n        if (this.part !== undefined) {\r\n            this.part.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    // same as MidiEvent, could be inherited from generic Event\r\n    AudioEvent.prototype.moveTo = function () {\r\n        var position = slice.call(arguments);\r\n        //console.log(position);\r\n\r\n        if (position[0] === 'ticks' && isNaN(position[1]) === false) {\r\n            this.ticks = parseInt(position[1], 10);\r\n        } else if (this.song === undefined) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('The audio event has not been added to a song yet; you can only move to ticks values');\r\n            }\r\n        } else {\r\n            position = this.song.getPosition(position);\r\n            if (position === false) {\r\n                if (sequencer.debug >= 1) {\r\n                    console.error('wrong position data');\r\n                }\r\n            } else {\r\n                this.ticks = position.ticks;\r\n            }\r\n        }\r\n\r\n        if (this.song !== undefined) {\r\n            this.update();\r\n        }\r\n        if (this.state !== 'new') {\r\n            this.state = 'changed';\r\n        }\r\n        if (this.part !== undefined) {\r\n            this.part.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    sequencer.createAudioEvent = function (config) {\r\n        if (config.className === 'AudioEvent') {\r\n            return config.clone();\r\n        }\r\n        return new AudioEvent(config);\r\n    };\r\n\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        typeString = sequencer.protectedScope.typeString;\r\n    });\r\n\r\n}function audioRecorder() {\n\n    'use strict';\n\n    var\n        // import\n        context, // defined in open_module.js\n        encode64, // defined in util.js\n        dispatchEvent, // defined in song_event_listener.js\n        createWorker, // defined in audio_recorder_worker.js\n        getWaveformData, //defined in util.js\n\n        microphoneAccessGranted = null,\n        localMediaStream,\n\n        bufferSize = 8192,\n        millisPerSample,\n        bufferMillis,\n\n        waveformConfig = {\n            height: 200,\n            width: 800,\n            //density: 0.0001,\n            sampleStep: 1,\n            color: '#71DE71',\n            bgcolor: '#000'\n        };\n\n\n    function AudioRecorder(track) {\n        this.track = track;\n        this.song = track.song;\n        this.audioEvents = {};\n        this.callback = null; // callback after wav audio file of the recording has been created or updated\n        this.worker = createWorker();\n        this.waveformConfig = track.waveformConfig || waveformConfig;\n\n        var scope = this;\n        this.worker.onmessage = function (e) {\n            //createAudioBuffer(scope, e.data.wavArrayBuffer, e.data.interleavedSamples, e.data.planarSamples, e.data.id);\n            encodeAudioBuffer(scope, e.data.wavArrayBuffer, e.data.interleavedSamples, e.data.id);\n        };\n    }\n\n\n    function createAudioBuffer(scope, wavArrayBuffer, interleavedSamples, planarSamples, type) {\n        var\n            i,\n            frameCount = planarSamples.length,\n            base64 = encode64(wavArrayBuffer),\n            audioBuffer = context.createBuffer(1, frameCount, context.sampleRate),\n            samples = audioBuffer.getChannelData(0),\n            recording = {\n                id: scope.recordId,\n                audioBuffer: null,\n                wavArrayBuffer: wavArrayBuffer,\n                wav: {\n                    blob: new Blob([new Uint8Array(wavArrayBuffer)], { type: 'audio/wav' }),\n                    base64: base64,\n                    dataUrl: 'data:audio/wav;base64,' + base64\n                },\n                waveform: {}\n            };\n\n    for (let i = 0; i < frameCount; i++) {\n            samples[i] = planarSamples[i];\n        }\n        recording.audioBuffer = audioBuffer;\n\n        // keep a copy of the original samples for non-destructive editing\n        if (type === 'new') {\n            recording.planarSamples = planarSamples;\n            recording.interleavedSamples = interleavedSamples;\n        } else {\n            recording.planarSamples = sequencer.storage.audio.recordings[scope.recordId].planarSamples;\n            recording.interleavedSamples = sequencer.storage.audio.recordings[scope.recordId].interleavedSamples;\n        }\n\n        sequencer.storage.audio.recordings[scope.recordId] = recording;\n        //console.log('create took', window.performance.now() - scope.timestamp);\n\n        if (scope.callback !== null) {\n            scope.callback(recording);\n            scope.callback = null;\n        }\n    }\n\n\n    function encodeAudioBuffer(scope, wavArrayBuffer, interleavedSamples, type) {\n        //console.log(wavArrayBuffer, interleavedSamples, type);\n        context.decodeAudioData(wavArrayBuffer, function (audioBuffer) {\n            var\n                base64 = encode64(wavArrayBuffer),\n                recording = {\n                    id: scope.recordId,\n                    audioBuffer: audioBuffer,\n                    wavArrayBuffer: wavArrayBuffer,\n                    wav: {\n                        blob: new Blob([new Uint8Array(wavArrayBuffer)], { type: 'audio/wav' }),\n                        base64: base64,\n                        dataUrl: 'data:audio/wav;base64,' + base64\n                    },\n                    waveform: {}\n                };\n\n            // keep a copy of the original samples for non-destructive editing\n            if (type === 'new') {\n                recording.interleavedSamples = interleavedSamples;\n            } else {\n                recording.interleavedSamples = sequencer.storage.audio.recordings[scope.recordId].interleavedSamples;\n            }\n\n            // create waveform images\n            getWaveformData(\n                audioBuffer,\n                scope.waveformConfig,\n                //callback\n                function (data) {\n                    recording.waveform = { dataUrls: data };\n                    sequencer.storage.audio.recordings[scope.recordId] = recording;\n                    //console.log('encode took', window.performance.now() - scope.timestamp);\n                    if (scope.callback !== null) {\n                        scope.callback(recording);\n                        scope.callback = null;\n                    }\n                }\n            );\n\n        }, function () {\n            if (sequencer.debug >= sequencer.WARN) {\n                console.warn('no valid audiodata');\n            }\n        });\n    }\n\n\n    function record(callback) {\n\n        navigator.getUserMedia({ audio: true },\n\n            // successCallback\n            function (stream) {\n                microphoneAccessGranted = true;\n                // localMediaStream is type of MediaStream that comes from microphone\n                localMediaStream = stream;\n                //console.log(localMediaStream.getAudioTracks());\n                //console.log(localMediaStream.getVideoTracks());\n                callback();\n            },\n\n            // errorCallback\n            function (error) {\n                if (sequencer.debug >= sequencer.WARN) {\n                    console.log(error);\n                }\n                microphoneAccessGranted = false;\n                callback();\n            }\n        );\n    }\n\n\n    // this triggers the little popup in the browser where the user has to grant access to her microphone\n    AudioRecorder.prototype.prepare = function (recordId, callback) {\n        var scope = this;\n\n        this.recordId = recordId;\n\n        if (microphoneAccessGranted === null) {\n            record(function () {\n                callback(microphoneAccessGranted);\n                if (localMediaStream !== undefined) {\n                    //scope.localMediaStream = localMediaStream.clone(); -> not implemented yet\n                    scope.start();\n                }\n            });\n        } else {\n            callback(microphoneAccessGranted);\n            if (localMediaStream !== undefined) {\n                //this.localMediaStream = localMediaStream.clone(); -> not implemented yet\n                this.start();\n            }\n        }\n    };\n\n\n    AudioRecorder.prototype.start = function () {\n        var scope = this,\n            song = this.track.song;\n\n        scope.worker.postMessage({\n            command: 'init',\n            sampleRate: context.sampleRate\n        });\n\n        this.scriptProcessor = context.createScriptProcessor(bufferSize, 1, 1);\n\n        this.scriptProcessor.onaudioprocess = function (e) {\n\n            if (e.inputBuffer.numberOfChannels === 1) {\n\n                scope.worker.postMessage({\n                    command: 'record_mono',\n                    buffer: e.inputBuffer.getChannelData(0)\n                });\n\n\n            } else {\n\n                scope.worker.postMessage({\n                    command: 'record_stereo',\n                    buffer: [\n                        e.inputBuffer.getChannelData(0),\n                        e.inputBuffer.getChannelData(1)\n                    ]\n                });\n            }\n\n            if (song.recording === false && song.precounting === false) {\n                scope.createAudio();\n            }\n        };\n\n        this.sourceNode = context.createMediaStreamSource(localMediaStream);\n        this.sourceNode.connect(this.scriptProcessor);\n        this.scriptProcessor.connect(context.destination);\n    };\n\n\n    AudioRecorder.prototype.stop = function (callback) {\n        this.stopRecordingTimestamp = context.currentTime * 1000;\n        this.timestamp = window.performance.now();\n        if (this.sourceNode === undefined) {\n            callback();\n            return;\n        }\n        this.callback = callback;\n    };\n\n\n    // create wav audio file after recording has stopped\n    AudioRecorder.prototype.createAudio = function () {\n        this.sourceNode.disconnect(this.scriptProcessor);\n        this.scriptProcessor.disconnect(context.destination);\n        this.scriptProcessor.onaudioprocess = null;\n        this.sourceNode = null;\n        this.scriptProcessors = null;\n\n        // remove precount bars and latency\n        var bufferIndexStart = parseInt((this.song.metronome.precountDurationInMillis + this.song.audioRecordingLatency) / millisPerSample),\n            bufferIndexEnd = -1;\n\n        this.worker.postMessage({\n            command: 'get_wavfile',\n            //command: 'get_wavfile2', // use this if you want to create the audio buffer instead of decoding it\n            bufferIndexStart: bufferIndexStart,\n            bufferIndexEnd: bufferIndexEnd\n        });\n    };\n\n\n    // adjust latency for specific recording -> all audio events that use this audio data will be updated!\n    // if you don't want that, please use AudioEvent.sampleOffset to adjust the starting point of the audio data\n    AudioRecorder.prototype.setAudioRecordingLatency = function (recordId, value, callback) {\n        var bufferIndexStart = parseInt(value / millisPerSample),\n            bufferIndexEnd = -1;\n\n        this.callback = callback;\n        this.worker.postMessage({\n            command: 'update_wavfile',\n            samples: sequencer.storage.audio.recordings[recordId].interleavedSamples,\n            bufferIndexStart: bufferIndexStart,\n            bufferIndexEnd: bufferIndexEnd\n        });\n    };\n\n\n    AudioRecorder.prototype.cleanup = function () {\n        if (localMediaStream === undefined) {\n            this.worker.terminate();\n            return;\n        }\n        //this.localMediaStream.stop();\n        this.scriptProcessor.disconnect();\n        this.scriptProcessor.onaudioprocess = null;\n        this.sourceNode.disconnect();\n        this.scriptProcessor = null;\n        this.sourceNode = null;\n        this.worker.terminate();\n    };\n\n\n    sequencer.protectedScope.createAudioRecorder = function (track) {\n        if (sequencer.record_audio === false) {\n            return false;\n        }\n        return new AudioRecorder(track);\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        encode64 = sequencer.util.encode64;\n        context = sequencer.protectedScope.context;\n        getWaveformData = sequencer.getWaveformData;\n        createWorker = sequencer.protectedScope.createAudioRecorderWorker;\n        millisPerSample = (1 / context.sampleRate) * 1000;\n        dispatchEvent = sequencer.protectedScope.songDispatchEvent;\n        bufferMillis = bufferSize * millisPerSample;\n    });\n\n}\n\n\n/*\n    // real-time waveform rendering, not implemented\n    AudioRecorder.prototype.drawCanvas = function(amplitudeArray, column){\n        var minValue = 9999999;\n        var maxValue = 0;\n        var canvasHeight = 100;\n        var canvasWidth = 1000;\n\n        for (var i = 0; i < amplitudeArray.length; i++) {\n            var value = amplitudeArray[i] / 256;\n            if(value > maxValue) {\n                maxValue = value;\n            } else if(value < minValue) {\n                minValue = value;\n            }\n        }\n\n        var y_lo = canvasHeight - (canvasHeight * minValue) - 1;\n        var y_hi = canvasHeight - (canvasHeight * maxValue) - 1;\n\n        this.context2d.fillStyle = '#ffffff';\n        this.context2d.fillRect(column, y_lo, 1, y_hi - y_lo);\n    };\n*/\n\n\n\n/*\n            getWaveformImageUrlFromBuffer(\n                audioBuffer,\n\n                {\n                    height: 200,\n                    //density: 0.0001,\n                    width: 800,\n                    sampleStep: 1,\n                    // density: 0.5,\n                    color: '#71DE71',\n                    bgcolor: '#000',\n                    samples: samples\n                },\n\n                //callback\n                function(urls){\n                    var image, images = [],\n                        i, maxi = urls.length;\n\n                    // create html image instances from the data-urls\n                    for(i = 0; i < maxi; i++){\n                        image = document.createElement('img');\n                        image.src = urls[i];\n                        image.origWidth = image.width;\n                        image.height = 100;\n                        images.push(image);\n                    }\n\n                    recording.waveform.images = images;\n                    recording.waveform.dataUrls = urls;\n\n                    sequencer.storage.audio.recordings[scope.recordId] = recording;\n                    console.log('took', window.performance.now() - scope.timestamp);\n                    if(scope.callback !== null){\n                        scope.callback(recording);\n                        scope.callback = null;\n                    }\n                }\n            );\n*/\n/*\n    controls the playback of the audio events in a track\n*/\nfunction audioTrack() {\n\n    'use strict';\n\n    var\n        slice = Array.prototype.slice,\n\n        //import\n        typeString, // → defined in utils.js\n        createAudioRecorder, // → defined in audio_recorder.js\n\n        unscheduleCallback,\n        AudioTrack;\n\n\n    AudioTrack = function (track) {\n        this.track = track;\n        this.className = 'AudioTrack';\n        this.scheduledSamples = {};\n        this.recorder = createAudioRecorder(track);\n    };\n\n\n    unscheduleCallback = function (sample) {\n        //console.log(sample.id, 'has been unscheduled');\n        delete this.scheduledSamples[sample.id];\n        sample = null;\n    };\n\n\n    AudioTrack.prototype.setAudioRecordingLatency = function (recordId, value, callback) {\n        this.recorder.setAudioRecordingLatency(recordId, value, callback);\n    };\n\n\n    AudioTrack.prototype.processEvent = function (audioEvent) {\n        var sample = sequencer.createSample({ buffer: audioEvent.buffer, track: audioEvent.track });\n        audioEvent.sample = sample;\n        //console.log(audioEvent.sampleOffset, audioEvent.playheadOffset, audioEvent.latencyCompensation);\n        audioEvent.offset = audioEvent.sampleOffset + audioEvent.playheadOffset;// + audioEvent.latencyCompensation;\n        //audioEvent.time -= audioEvent.latencyCompensation;\n        // set playheadOffset to 0 after the event has been scheduled\n        audioEvent.playheadOffset = 0;\n        //sample.start(audioEvent.time/1000, 127, audioEvent.offsetMillis/1000, audioEvent.durationMillis/1000);\n\n        sample.start(audioEvent);\n        //console.log(time, time + audioEvent.durationMillis/1000);\n        //sample.stop(time + audioEvent.durationMillis/1000, function(){});\n\n        this.scheduledSamples[sample.id] = sample;\n    };\n\n    /*\n        AudioTrack.prototype.playEvent = function(audioEvent, seconds){\n        };\n    */\n\n    AudioTrack.prototype.stopSample = function (audioEvent, seconds) {\n        //console.log('stopping', audioEvent.id);\n        if (audioEvent.sample === undefined) {\n            return;\n        }\n        audioEvent.sample.stop(seconds, unscheduleCallback.bind(this));\n    };\n\n\n    AudioTrack.prototype.allNotesOff = function () {\n        var sampleId, sample,\n            scheduledSamples = this.scheduledSamples;\n\n        for (sampleId in scheduledSamples) {\n            if (scheduledSamples.hasOwnProperty(sampleId)) {\n                //console.log('allNotesOff', sampleId);\n                sample = scheduledSamples[sampleId];\n                if (sample) {\n                    sample.unschedule(0, unscheduleCallback.bind(this));\n                }\n            }\n        }\n        this.scheduledSamples = {};\n    };\n\n\n    AudioTrack.prototype.prepareForRecording = function (recordId, callback) {\n        if (this.recorder === false) {\n            return false;\n        }\n        this.recorder.prepare(recordId, callback);\n    };\n\n\n    AudioTrack.prototype.stopRecording = function (callback) {\n        this.recorder.stop(function (recording) {\n            callback(recording);\n        });\n    };\n\n    sequencer.protectedScope.createAudioTrack = function (track) {\n        return new AudioTrack(track);\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        typeString = sequencer.protectedScope.typeString;\n        createAudioRecorder = sequencer.protectedScope.createAudioRecorder;\n    });\n\n}\n\n// Sample.source -> gain (midiEvent.velocity) ->\n// Track.input -> [FX input ~~ FX output] -> Track.panner (Track.setPanning())-> Track.output (Track.setVolume())\n// Song.gain (Song.setVolume()) ->\n// Sequencer.gain (sequencer.setMasterVolume()) -> Sequencer.compressor -> context.destiny\n\nfunction channelEffects() {\n\n    'use strict';\n\n    var\n\n        id = 0,\n        context,\n\n        zeroValue = 0.00000000000000001,\n\n        createClass, // defined in util.js\n        getSample, // defined in instrument_manager.js\n\n        Reverb,\n        Panner,\n        Panner2,\n        Delay,\n        BiQuadFilter,\n        Compressor;\n\n\n    function Effect(config) {\n        this.id = 'FX' + id++ + '' + new Date().getTime();\n        this.type = config.type;\n        this.buffer = config.buffer;\n        this.config = config;\n\n        this.bypass = false;\n        this.amount = 0;//0.5;\n\n        this.output = context.createGainNode();\n        this.wetGain = context.createGainNode();\n        this.dryGain = context.createGainNode();\n\n        this.output.gain.value = 1;\n        this.wetGain.gain.value = this.amount;\n        this.dryGain.gain.value = 1 - this.amount;\n    }\n\n\n    Effect.prototype.setInput = function (input) {\n        // input.connect(this.node);\n        // return;\n\n        // dry channel\n        input.connect(this.dryGain);\n        this.dryGain.connect(this.output);\n\n        // wet channel\n        input.connect(this.node);\n        this.node.connect(this.wetGain);\n        this.wetGain.connect(this.output);\n    };\n\n    /*\n        Effect.prototype.setOutput = function(output){\n            this.output.disconnect(0);\n            this.output.connect(output);\n        };\n    */\n\n    Effect.prototype.setAmount = function (value) {\n        /*\n        this.amount = value < 0 ? 0 : value > 1 ? 1 : value;\n        var gain1 = Math.cos(this.amount * 0.5 * Math.PI),\n            gain2 = Math.cos((1.0 - this.amount) * 0.5 * Math.PI);\n        this.gainNode.gain.value = gain2 * this.ratio;\n        */\n\n        this.amount = value < 0 ? 0 : value > 1 ? 1 : value;\n        this.wetGain.gain.value = this.amount;\n        this.dryGain.gain.value = 1 - this.amount;\n        //console.log('wet',this.wetGain.gain.value,'dry',this.dryGain.gain.value);\n    };\n\n\n    Effect.prototype.copy = function () {\n        switch (this.type) {\n            case 'reverb':\n                return new Reverb(this.config);\n            case 'panner':\n                return new Panner(this.config);\n            case 'panner2':\n                return new Panner2(this.config);\n            case 'delay':\n                return new Delay(this.config);\n            case 'compressor':\n                return new Compressor(this.config);\n        }\n    };\n\n\n    sequencer.createReverb = function (id) {\n        var buffer = getSample(id);\n        if (buffer === false) {\n            console.warn('no reverb with id', id, 'loaded');\n            return false;\n        }\n        var config = {\n            type: 'reverb',\n            buffer: buffer\n        };\n        return new Reverb(config);\n    };\n\n\n    sequencer.createPanner = function (config) {\n        config = config || {};\n        config.type = 'panner';\n        return new Panner(config);\n    };\n\n\n    sequencer.createPanner2 = function (config) {\n        config = config || {};\n        config.type = 'panner2';\n        return new Panner2(config);\n    };\n\n\n    sequencer.createDelay = function (config) {\n        config = config || {};\n        config.type = 'delay';\n        return new Delay(config);\n    };\n\n\n    sequencer.createCompressor = function (config) {\n        config = config || {};\n        config.type = 'compressor';\n        return new Compressor(config);\n    };\n\n\n    sequencer.createBiQuadFilter = function (config) {\n        config = config || {};\n        config.type = 'biquadfilter';\n        return new BiQuadFilter(config);\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        context = sequencer.protectedScope.context;\n        createClass = sequencer.protectedScope.createClass;\n        getSample = sequencer.getSample;\n\n        Reverb = createClass(Effect, function (config) {\n            this.node = context.createConvolver();\n            this.node.buffer = config.buffer;\n            //console.log(this.node.buffer);\n        });\n\n        Panner = createClass(Effect, function (config) {\n            this.node = context.createPanner();\n            this.node.panningModel = 'equalpower';\n            this.node.setPosition(zeroValue, zeroValue, zeroValue);\n        });\n\n        Panner2 = createClass(Effect, function (config) {\n            this.node = context.createPanner();\n            this.node.panningModel = 'HRTF';\n            this.node.setPosition(zeroValue, zeroValue, zeroValue);\n        });\n\n        Delay = createClass(Effect, function (config) {\n            this.node = context.createDelay();\n            this.node.delayTime.value = 0.3;\n        });\n\n        Compressor = createClass(Effect, function (config) {\n            this.node = context.createDynamicsCompressor();\n        });\n\n\n        BiQuadFilter = createClass(Effect, function (config) {\n            this.node = context.createBiquadFilter();\n            this.node.type = 0;\n            this.node.Q.value = 4;\n            this.node.frequency.value = 1600;\n        });\n\n        /*\n        Panner.prototype.setPosition = function(x, y, z){\n            var multiplier = 5;\n            console.log(x * multiplier);\n            this.node.setPosition(x * multiplier, y * multiplier, z * multiplier);\n        };\n        */\n\n        Panner.prototype.setPosition = function (value) {\n            var x = value,\n                y = 0,\n                z = 1 - Math.abs(x);\n\n            x = x === 0 ? zeroValue : x;\n            y = y === 0 ? zeroValue : y;\n            z = z === 0 ? zeroValue : z;\n            this.node.setPosition(x, y, z);\n            //console.log(1,x,y,z);\n        };\n\n        Panner2.prototype.setPosition = function (value) {\n            var xDeg = parseInt(value),\n                zDeg = xDeg + 90,\n                x, y, z;\n            if (zDeg > 90) {\n                zDeg = 180 - zDeg;\n            }\n            x = Math.sin(xDeg * (Math.PI / 180));\n            y = 0;\n            z = Math.sin(zDeg * (Math.PI / 180));\n            x = x === 0 ? zeroValue : x;\n            y = y === 0 ? zeroValue : y;\n            z = z === 0 ? zeroValue : z;\n            this.node.setPosition(x, y, z);\n            //console.log(2,x,y,z);\n        };\n\n        Delay.prototype.setTime = function (value) {\n            this.node.delayTime.value = value;\n        };\n\n    });\n}\n\n\n/*\n\n        // only reverb is currently supported, filter out reverb\n        if(this.numEffects > 0){\n            for(i in this.effects){\n                if(this.effects.hasOwnProperty(i)){\n                   effect = this.effects[i];\n                   if(this.reverb === undefined && effect.type === 'reverb'){\n                        this.reverb = effect;\n                        break;\n                   }\n                }\n            }\n            this.source.connect(this.reverb.node);\n            this.reverb.node.disconnect(0);\n            this.reverb.node.connect(this.wetGain);\n            this.wetGain.gain.value = this.reverb.amount;\n            this.dryGain.gain.value = (1 - this.reverb.amount);\n        }else{\n            this.dryGain.gain.value = 1;\n        }\n\n\n*/\n\n\n\n/*\n\n    operators:\n\n    - max\n    - min\n    - avg\n    - all\n\n\n    eventStats.get('noteNumber max');\n    eventStats.get('noteNumber min');\n    eventStats.get('noteNumber avg');\n\n    eventStats.get('data2 max type = PITCH_BEND');\n    eventStats.get('data2 min');\n    eventStats.get('data2 avg');\n\n    eventStats.get('velocity avg bar = 3');\n\n    eventStats.get('velocity max musical_time > 1,1,1,0 < 8,1,1,0');\n\n\n    return {\n        min: min,\n        max: max,\n        avg: avg\n    };\n\n\n    implementation:\n\n    song.getStats(searchString);\n    track.getStats(searchString);\n    sequencer.getStats(events, searchString);\n\n\n*/\n\nfunction eventStatistics() {\n\n    'use strict';\n\n    var\n        //import\n        createNote = sequencer.createNote, // → defined in note.js\n        findEvent = sequencer.findEvent, // → defined in find_event.js\n        round = sequencer.protectedScope.round, // → defined in util.js\n        getEvents = sequencer.protectedScope.getEvents, // → defined in find_event.js\n        typeString = sequencer.protectedScope.typeString, // → defined in util.js\n\n        supportedOperators = 'max min avg all',\n        supportedProperties = 'data1 data2 velocity noteNumber noteName frequency',\n\n        //public\n        getStats;\n\n\n    /**\n        @memberof sequencer\n        @instance\n        @param {array} events\n        @param {string} searchString\n        @description Get statistics of an array of events, see [documentation]{@link http://heartbeatjs.org/docs/statistics}\n    */\n    getStats = function () {\n        var args = Array.prototype.slice.call(arguments),\n            numArgs = args.length,\n            property,\n            operator,\n            events,\n            searchPattern,\n            patternLength,\n            i, maxi, event, propValue,\n            minNoteName,\n            maxNoteName,\n            min = 128,//Number.MAX_VALUE,\n            max = -1,\n            sum = 0,\n            avg = 0,\n            useNoteName = false;\n\n\n        events = getEvents(args[0]);\n\n        if (events.length === 0) {\n            //console.warn('getStats: no events');\n            return -1;\n        }\n\n        searchPattern = args[1];\n\n        if (typeString(searchPattern) !== 'string') {\n            console.error('please provide a search string like for instance get(\\'velocity max bar >= 1 < 8\\')');\n            return -1;\n        }\n\n        if (numArgs > 2) {\n            console.warn('ignoring invalid arguments, please consult documentation');\n        }\n\n        searchPattern = searchPattern.split(' ');\n        patternLength = searchPattern.length;\n\n        property = searchPattern[0];\n        operator = searchPattern[1];\n\n        if (supportedProperties.indexOf(property) === -1) {\n            console.error('you can\\'t use \\'min\\', \\'max\\' or \\'avg\\'', 'on the property', property);\n            return -1;\n        }\n\n        if (supportedOperators.indexOf(operator) === -1) {\n            console.error(operator, 'is not a valid operator');\n            return -1;\n        }\n\n\n        if (patternLength > 2) {\n\n            //if(patternLength !== 5 && !(patternLength >= 7)){\n            if (patternLength === 6) {\n                console.warn('ignoring cruft found in search string, please consult documentation');\n            }\n\n            searchPattern.shift(); // remove property\n            searchPattern.shift(); // remove operator\n\n            //filter events\n            events = findEvent(events, searchPattern.join(' '));\n        }\n\n        //console.log(events);\n\n        if (property === 'noteName') {\n            property = 'noteNumber';\n            useNoteName = true;\n        }\n\n        for (i = 0, maxi = events.length; i < maxi; i++) {\n            event = events[i];\n            propValue = event[property];\n\n            if (propValue > max) {\n                //console.log('max', propValue, max);\n                max = propValue;\n                maxNoteName = event.noteName;\n            }\n            if (propValue < min) {\n                //console.log('min', propValue, min);\n                min = propValue;\n                minNoteName = event.noteName;\n            }\n\n            if (propValue !== undefined) {\n                sum += propValue;\n            }\n        }\n\n        avg = sum / maxi;\n\n        if (useNoteName) {\n            avg = round(avg);\n            avg = createNote(avg).name;\n            min = minNoteName;\n            max = maxNoteName;\n        }\n\n        if (operator === 'max') {\n            return max;\n        }\n\n        if (operator === 'min') {\n            return min;\n        }\n\n        if (operator === 'avg') {\n            return avg;\n        }\n\n        if (operator === 'all') {\n            return {\n                min: min,\n                max: max,\n                avg: avg\n            };\n        }\n    };\n\n    sequencer.getStats = getStats;\n\n    sequencer.protectedScope.addInitMethod(function () {\n        createNote = sequencer.createNote;\n        findEvent = sequencer.findEvent;\n        round = sequencer.protectedScope.round;\n        getEvents = sequencer.protectedScope.getEvents;\n        typeString = sequencer.protectedScope.typeString;\n    });\n\n}function findEvent() {\r\n\r\n\t'use strict';\r\n\r\n\tvar\r\n\t\t//import\r\n\t\tcreateNote, // → defined in note.js\r\n\t\ttypeString, // → defined in util.js\r\n\t\tcreateMidiNote, // → defined in midi_note.js\r\n\t\tmidiEventNumberByName, // → defined in midi_event_names.js\r\n\r\n\t\t//local\r\n\t\tpatterns,\r\n\t\toperators,\r\n\r\n\t\tproperties = {\r\n\t\t\t'barsbeats': ['bar', 'beat', 'sixteenth', 'tick'],\r\n\t\t\t'time': ['hour', 'minute', 'second', 'millisecond']\r\n\t\t},\r\n\r\n\t\tlogicalOperators = 'OR AND NOT XOR',\r\n\t\tlogicalOperatorsRegex = new RegExp(' ' + logicalOperators.replace(/\\s+/g, ' | ') + ' '),// → replaces logical operator by a white space\r\n\r\n\t\tsupportedProperties = {\r\n\t\t\tbar: 1,\r\n\t\t\tbeat: 1,\r\n\t\t\tsixteenth: 1,\r\n\t\t\ttick: 1,\r\n\t\t\tticks: 1,\r\n\t\t\tbarsbeats: 1,\r\n\t\t\tmusical_time: 1,\r\n\r\n\t\t\thour: 1,\r\n\t\t\tminute: 1,\r\n\t\t\tsecond: 1,\r\n\t\t\tmillisecond: 1,\r\n\t\t\tmillis: 1,\r\n\t\t\ttime: 1,\r\n\t\t\tlinear_time: 1,\r\n\r\n\t\t\tid: 1,\r\n\t\t\ttype: 1,\r\n\t\t\tdata1: 1,\r\n\t\t\tdata2: 1,\r\n\t\t\tvelocity: 1, // only if midi event is note on or note off\r\n\t\t\tnoteNumber: 1, // idem\r\n\t\t\tfrequency: 1, // idem\r\n\t\t\tnoteName: 1 // idem\r\n\t\t},\r\n\r\n\r\n\t\t//public\r\n\t\tfindEvent,\r\n\t\tfindNote,\r\n\r\n\t\t//private\r\n\t\tgetEvents,\r\n\t\tcheckValue,\r\n\t\tcreatePattern,\r\n\t\tcheckOperators,\r\n\t\tcheckCondition,\r\n\t\tcheckCondition2,\r\n\t\tinverseOperator,\r\n\t\tremoveMutualEvents,\r\n\t\tremoveDoubleEvents,\r\n\t\tperformSearch;\r\n\r\n\t/*\r\n\r\n\t\t(bar > 3 AND beat = 2 OR velocity = 60) => ((bar > 3 && beat === 2) || velocity === 60)\r\n\r\n\t\t(beat = 2 OR velocity = 60 AND bar > 3) => ((beat === 2 || velocity === 60) && bar > 3)\r\n\r\n\t\t(beat == 2 XOR velocity == 60) -> all events that are on beat 2 and all events that have on velocity 60, but not the event that match both\r\n\r\n\t\tstep 1: get all events that match beat == 2\r\n\t\tstep 2: add all events that match velocity == 60\r\n\t\tstep 3: remove all events that match both beat == 2 AND velocity == 60\r\n\t*/\r\n\r\n\r\n\tfindEvent = function () {\r\n\t\t//console.time('find events');\r\n\t\tvar args = Array.prototype.slice.call(arguments),\r\n\t\t\ti, maxi,\r\n\t\t\t//j, maxj,\r\n\t\t\t//k, maxk,\r\n\t\t\tsearchString, tmp,\r\n\t\t\toperator, pattern,\r\n\t\t\tprevPattern, prevOperator,\r\n\t\t\tpatternIndex, operatorIndex,\r\n\t\t\tevents, results,\r\n\t\t\tlastResult,\r\n\t\t\tsubResult1,\r\n\t\t\tsubResult2;\r\n\r\n\r\n\t\t//console.log(args[0])\r\n\t\tevents = getEvents(args[0]);\r\n\t\tresults = [];\r\n\r\n\t\tif (events.length === 0) {\r\n\t\t\tconsole.warn('findEvent: no events');\r\n\t\t\treturn results;\r\n\t\t}\r\n\r\n\t\tif (typeString(args[1]) !== 'string') {\r\n\t\t\tconsole.error('please provide a search string like for instance findEvent(\\'beat = 2 AND velocity > 60 < 100\\');');\r\n\t\t\treturn results;\r\n\t\t}\r\n\r\n\t\tsearchString = args[1];\r\n\r\n\t\t//get the operators\r\n\t\ttmp = searchString.split(' ');\r\n\t\tmaxi = tmp.length;\r\n\t\toperators = [];\r\n\r\n\t\tfor (i = 0; i < maxi; i++) {\r\n\t\t\toperator = tmp[i];\r\n\t\t\tif (logicalOperatorsRegex.test(' ' + operator + ' ')) {\r\n\t\t\t\toperators.push(operator);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//get the patterns\r\n\t\ttmp = searchString.split(logicalOperatorsRegex);\r\n\t\tmaxi = tmp.length;\r\n\t\tpatterns = [];\r\n\r\n\t\tfor (i = 0; i < maxi; i++) {\r\n\t\t\tcreatePattern(tmp[i].split(' '));\r\n\t\t}\r\n\r\n\t\t//start loop over events\r\n\t\tmaxi = patterns.length;\r\n\t\tpatternIndex = 0;\r\n\t\toperatorIndex = -1;\r\n\r\n\t\tfor (i = 0; i < maxi; i++) {\r\n\r\n\t\t\tpattern = patterns[patternIndex++];\r\n\t\t\toperator = operators[operatorIndex++];\r\n\t\t\t//console.log(operator,pattern,patternIndex,results.length);\r\n\r\n\r\n\t\t\tif (operator === 'AND') {\r\n\t\t\t\t// perform search on the results of the former search\r\n\t\t\t\tresults = performSearch(results, pattern);\r\n\r\n\t\t\t} else if (operator === 'NOT') {\r\n\t\t\t\t// perform search on the results of the former search\r\n\t\t\t\tresults = performSearch(results, pattern, true);\r\n\r\n\t\t\t} else if (operator === 'XOR') {\r\n\t\t\t\t/*\r\n\t\t\t\t\t\t\t\t//filter events from the previous results\r\n\t\t\t\t\t\t\t\tif(prevOperator === 'OR' || prevOperator === 'XOR'){\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tsubResult1 = performSearch(results,pattern,true);\r\n\t\t\t\t\t\t\t\t\tsubResult1 = performSearch(subResult1,prevPattern,true);\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t//filter results of the left part of the XOR expression by inversing the right part of the expression\r\n\t\t\t\t\t\t\t\t\tsubResult1 = performSearch(results,pattern,true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t//filter events from all events (OR and XOR always operate on all events)\r\n\t\t\t\t\t\t\t\tsubResult2 = performSearch(events,pattern);\r\n\t\t\t\t\t\t\t\tsubResult2 = performSearch(subResult2,prevPattern,true);\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t//combine the 2 result sets\r\n\t\t\t\t\t\t\t\tresults = subResult1.concat(subResult2);//subResult1.concat(subResult1,subResult2);\r\n\t\t\t\t*/\r\n\t\t\t\t//NEW APPROACH\r\n\t\t\t\t//get from all events the events that match the pattern\r\n\t\t\t\tsubResult1 = performSearch(events, pattern);\r\n\t\t\t\t//and then remove all events that match both all previous patterns and the current pattern\r\n\t\t\t\tresults = removeMutualEvents(results, subResult1);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlastResult = performSearch(events, pattern);\r\n\t\t\t\tresults = results.concat(lastResult);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprevPattern = pattern;\r\n\t\t\tprevOperator = operator;\r\n\t\t}\r\n\r\n\t\t//console.log(patterns,operators);\r\n\t\t//console.log(results.length);\r\n\t\t//console.timeEnd('find events');\r\n\t\treturn removeDoubleEvents(results);\r\n\t};\r\n\r\n\r\n\tremoveMutualEvents = function (resultSet1, resultSet2) {\r\n\t\tvar i, maxi = resultSet1.length,\r\n\t\t\tj, maxj = resultSet2.length,\r\n\t\t\tevent, eventId, addEvent,\r\n\t\t\tresult = [];\r\n\r\n\t\tfor (i = 0; i < maxi; i++) {\r\n\r\n\t\t\taddEvent = true;\r\n\r\n\t\t\tevent = resultSet1[i];\r\n\t\t\teventId = event.id;\r\n\r\n\t\t\tfor (j = 0; j < maxj; j++) {\r\n\r\n\t\t\t\tif (resultSet2[j].id === eventId) {\r\n\t\t\t\t\taddEvent = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (addEvent) {\r\n\t\t\t\tresult.push(event);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (j = 0; j < maxj; j++) {\r\n\r\n\t\t\taddEvent = true;\r\n\r\n\t\t\tevent = resultSet2[j];\r\n\t\t\teventId = event.id;\r\n\r\n\t\t\tfor (i = 0; i < maxi; i++) {\r\n\r\n\t\t\t\tif (resultSet1[i].id === eventId) {\r\n\t\t\t\t\taddEvent = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (addEvent) {\r\n\t\t\t\tresult.push(event);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\r\n\tremoveDoubleEvents = function (events) {\r\n\t\tvar i, maxi = events.length,\r\n\t\t\tevent, eventId, lastId,\r\n\t\t\tresult = [];\r\n\r\n\t\tevents.sort(function (a, b) {\r\n\t\t\treturn a.eventNumber - b.eventNumber;\r\n\t\t});\r\n\r\n\t\tfor (i = 0; i < maxi; i++) {\r\n\t\t\tevent = events[i];\r\n\t\t\teventId = event.id;\r\n\t\t\tif (eventId !== lastId) {\r\n\t\t\t\tresult.push(event);\r\n\t\t\t}\r\n\t\t\tlastId = eventId;\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\r\n\tperformSearch = function (events, pattern, inverse) {\r\n\t\tvar\r\n\t\t\tsearchResult = [],\r\n\t\t\tproperty = pattern.property,\r\n\t\t\toperator1 = pattern.operator1,\r\n\t\t\toperator2 = pattern.operator2,\r\n\t\t\tvalue1 = pattern.value1,\r\n\t\t\tvalue2 = pattern.value2,\r\n\t\t\tnumEvents = events.length, event, i,\r\n\t\t\tcondition = false;\r\n\r\n\t\tinverse = inverse || false;\r\n\r\n\t\tif (inverse) {\r\n\t\t\toperator1 = inverseOperator(operator1);\r\n\t\t\toperator2 = inverseOperator(operator2);\r\n\t\t}\r\n\r\n\r\n\t\tfor (i = 0; i < numEvents; i++) {\r\n\r\n\t\t\tevent = events[i];\r\n\t\t\tcondition = checkCondition(property, event[property], operator1, value1, operator2, value2);\r\n\r\n\t\t\tif (condition) {\r\n\t\t\t\tsearchResult.push(event);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn searchResult;\r\n\t};\r\n\r\n\r\n\tcheckCondition = function (property, propValue, operator1, value1, operator2, value2) {\r\n\t\tvar result = false,\r\n\t\t\tisString = false;\r\n\r\n\r\n\t\tif (propValue === undefined) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\r\n\t\tswitch (property) {\r\n\r\n\t\t\tcase 'noteName':\r\n\t\t\t\tif (operator1 === '=') {\r\n\t\t\t\t\t//this situation occurs if you search for the first letter(s) of an note name, e.g C matches C#, C##, Cb and Cbb\r\n\t\t\t\t\tif (value1.length === 3 && propValue.length === 4) {\r\n\t\t\t\t\t\tresult = propValue.indexOf(value1) === 0;\r\n\t\t\t\t\t} else if (value1.length === 4 && propValue.length === 5) {\r\n\t\t\t\t\t\tresult = propValue.indexOf(value1) === 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'type':\r\n\t\t\t\tif (typeString(value1) !== 'number' && isNaN(value1)) {\r\n\t\t\t\t\tvalue1 = midiEventNumberByName(value1);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'bar':\r\n\t\t\tcase 'beat':\r\n\t\t\tcase 'sixteenth':\r\n\t\t\t\t//propValue += 1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\r\n\t\tif (typeString(propValue) === 'string') {\r\n\r\n\t\t\tif (typeString(value1) !== 'string') {\r\n\t\t\t\tvalue1 = '\\'' + value1 + '\\'';\r\n\t\t\t}\r\n\t\t\tif (value2 && typeString(value2) !== 'string') {\r\n\t\t\t\tvalue2 = '\\'' + value2 + '\\'';\r\n\t\t\t}\r\n\t\t\tisString = true;\r\n\r\n\t\t} else if (typeString(propValue) === 'number') {\r\n\r\n\t\t\tif (typeString(value1) !== 'number') {\r\n\t\t\t\tvalue1 = parseInt(value1);//don't use a radix because values can be both decimal and hexadecimal!\r\n\t\t\t}\r\n\t\t\tif (value2 && typeString(value2) !== 'number') {\r\n\t\t\t\tvalue2 = parseInt(value2);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tswitch (operator1) {\r\n\r\n\t\t\tcase '=':\r\n\t\t\tcase '==':\r\n\t\t\tcase '===':\r\n\t\t\t\tresult = propValue === value1;\r\n\t\t\t\tbreak;\r\n\r\n\r\n\t\t\tcase '*=':\r\n\t\t\t\tresult = propValue.indexOf(value1) !== -1;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '^=':\r\n\t\t\t\tresult = propValue.indexOf(value1) === 0;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '$=':\r\n\t\t\t\tresult = propValue.indexOf(value1) === (propValue.length - value1.length);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '%=':\r\n\t\t\t\tif (isString) {\r\n\t\t\t\t\tresult = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = propValue % value1 === 0;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\r\n\t\t\tcase '!*=':\r\n\t\t\t\tresult = !(propValue.indexOf(value1) !== -1);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '!^=':\r\n\t\t\t\tresult = !(propValue.indexOf(value1) === 0);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '!$=':\r\n\t\t\t\tresult = !(propValue.indexOf(value1) === (propValue.length - value1.length));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '!%=':\r\n\t\t\t\tif (isString) {\r\n\t\t\t\t\tresult = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = !(propValue % value1 === 0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\r\n\t\t\tcase '!=':\r\n\t\t\tcase '!==':\r\n\t\t\t\tif (isString) {\r\n\t\t\t\t\tresult = propValue.indexOf(value1) === -1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = propValue !== value1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '>':\r\n\t\t\t\tif (operator2) {\r\n\t\t\t\t\tresult = checkCondition2(propValue, operator1, value1, operator2, value2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = propValue > value1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '>=':\r\n\t\t\t\tif (operator2) {\r\n\t\t\t\t\tresult = checkCondition2(propValue, operator1, value1, operator2, value2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = propValue >= value1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '<':\r\n\t\t\t\tif (operator2) {\r\n\t\t\t\t\tresult = checkCondition2(propValue, operator1, value1, operator2, value2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = propValue < value1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '<=':\r\n\t\t\t\tif (operator2) {\r\n\t\t\t\t\tresult = checkCondition2(propValue, operator1, value1, operator2, value2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = propValue <= value1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.warn('eval is evil!');\r\n\t\t\t//result = eval(propValue + operator + value1);\r\n\r\n\t\t}\r\n\r\n\t\t//console.log(isString,property,propValue,operator,value1,result);\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\r\n\tcheckCondition2 = function (propValue, operator1, value1, operator2, value2) {\r\n\r\n\t\tvar result = false;\r\n\r\n\t\tswitch (operator1) {\r\n\r\n\t\t\tcase '>':\r\n\r\n\t\t\t\tswitch (operator2) {\r\n\t\t\t\t\tcase '<':\r\n\t\t\t\t\t\tresult = propValue > value1 && propValue < value2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '<=':\r\n\t\t\t\t\t\tresult = propValue > value1 && propValue <= value2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '>=':\r\n\r\n\t\t\t\tswitch (operator2) {\r\n\t\t\t\t\tcase '<':\r\n\t\t\t\t\t\tresult = propValue >= value1 && propValue < value2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '<=':\r\n\t\t\t\t\t\tresult = propValue >= value1 && propValue <= value2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '<':\r\n\r\n\t\t\t\tswitch (operator2) {\r\n\t\t\t\t\tcase '>':\r\n\t\t\t\t\t\tresult = propValue < value1 || propValue > value2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '>=':\r\n\t\t\t\t\t\tresult = propValue < value1 || propValue >= value2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '<=':\r\n\r\n\t\t\t\tswitch (operator2) {\r\n\t\t\t\t\tcase '>':\r\n\t\t\t\t\t\tresult = propValue <= value1 || propValue > value2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '>=':\r\n\t\t\t\t\t\tresult = propValue <= value1 || propValue >= value2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\r\n\tgetEvents = function (obj) {\r\n\t\tvar i, numTracks, tracks, events = [];\r\n\r\n\t\tif (typeString(obj) === 'array') {\r\n\t\t\tevents = obj;\r\n\t\t} else if (obj.className === undefined) {\r\n\t\t\tconsole.warn(obj);\r\n\t\t} else if (obj.className === 'Track' || obj.className === 'Part') {\r\n\t\t\tevents = obj.events;\r\n\r\n\t\t} else if (obj.className === 'Song') {\r\n\t\t\t/*\r\n\t\t\t\t\t\ttracks = obj.tracks;\r\n\t\t\t\t\t\tnumTracks = obj.numTracks;\r\n\t\t\t\t\t\tfor(i = 0; i < numTracks; i++){\r\n\t\t\t\t\t\t\tevents = events.concat(tracks[i].events);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tevents = events.concat(obj.timeEvents);\r\n\t\t\t*/\r\n\t\t\tevents = obj.eventsMidiTime;\r\n\t\t}\r\n\t\t//console.log(obj.className,events.length);\r\n\t\treturn events;\r\n\t};\r\n\r\n\r\n\tcreatePattern = function (args) {\r\n\t\tvar pattern = {\r\n\t\t\tproperty: args[0],\r\n\t\t\toperator1: args[1],\r\n\t\t\tvalue1: args[2],\r\n\t\t\toperator2: args[3],\r\n\t\t\tvalue2: args[4]\r\n\t\t},\r\n\t\t\tproperty = args[0],\r\n\t\t\toperator1 = args[1],\r\n\t\t\tvalue1 = args[2],\r\n\t\t\toperator2 = args[3],\r\n\t\t\tvalue2 = args[4],\r\n\t\t\ti;\r\n\r\n\t\tif (supportedProperties[property] !== 1) {\r\n\t\t\tconsole.error(property, 'is not a supported property');\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\r\n\t\tpattern = checkOperators(pattern);\r\n\r\n\r\n\t\tif (property === 'barsbeats' || property === 'time') {\r\n\t\t\tvalue1 = checkValue(value1, property);\r\n\t\t\t//console.log(value1);\r\n\t\t\tfor (i = 0; i < 4; i++) {\r\n\t\t\t\tpattern = {};\r\n\t\t\t\tpattern.property = properties[property][i];\r\n\t\t\t\tpattern.operator1 = operator1;\r\n\t\t\t\tpattern.value1 = value1[i];\r\n\t\t\t\tpatterns.push(pattern);\r\n\t\t\t\toperators.push('AND');\r\n\t\t\t}\r\n\t\t\toperators.pop();\r\n\r\n\t\t\tif (value2) {\r\n\t\t\t\tvalue2 = checkValue(value2, property);\r\n\t\t\t\tfor (i = 0; i < 4; i++) {\r\n\t\t\t\t\tpattern = {};\r\n\t\t\t\t\tpattern.property = properties[property][i];\r\n\t\t\t\t\tpattern.operator2 = operator2;\r\n\t\t\t\t\tpattern.value2 = value2[i];\r\n\t\t\t\t\tpatterns.push(pattern);\r\n\t\t\t\t\toperators.push('AND');\r\n\t\t\t\t}\r\n\t\t\t\toperators.pop();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tpatterns.push(pattern);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tcheckValue = function (value, type) {\r\n\t\t//if the value is provided in array notation strip the brackets\r\n\t\tvalue = value.replace(/(\\[|\\])/g, '');\r\n\r\n\t\tif (typeString(value) !== 'array') {\r\n\t\t\tif (type === 'barsbeats') {\r\n\t\t\t\tif (value.indexOf(',') === -1) {\r\n\t\t\t\t\tvalue = [value, 1, 1, 0];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = value.split(',');\r\n\t\t\t\t}\r\n\t\t\t} else if (type === 'time') {\r\n\t\t\t\tif (value.indexOf(',') === -1) {\r\n\t\t\t\t\tvalue = [0, value, 0, 0];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = value.split(',');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tswitch (value.length) {\r\n\t\t\tcase 1:\r\n\t\t\t\tif (type === 'barsbeats') {\r\n\t\t\t\t\tvalue.push(1, 1, 0);\r\n\t\t\t\t} else if (type === 'time') {\r\n\t\t\t\t\tvalue.push(0, 0, 0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tif (type === 'barsbeats') {\r\n\t\t\t\t\tvalue.push(1, 0);\r\n\t\t\t\t} else if (type === 'time') {\r\n\t\t\t\t\tvalue.push(0, 0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\tvalue.push(0);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\r\n\tcheckOperators = function (pattern) {\r\n\r\n\t\tvar operator1 = pattern.operator1,\r\n\t\t\toperator2 = pattern.operator2,\r\n\t\t\tcheck = function (operator) {\r\n\t\t\t\tif (operator === '<' || operator === '>' || operator === '<=' || operator === '>=') {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tcheck2 = function (operator) {\r\n\t\t\t\tif (operator === '=' || operator === '==' || operator === '===') {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t};\r\n\r\n\r\n\t\tif (pattern.property === 'noteName' && (check(operator1) || check2(operator1))) {\r\n\t\t\tpattern.property = 'noteNumber';\r\n\t\t\tpattern.value1 = createNote(pattern.value1).number;\r\n\t\t}\r\n\r\n\t\tif (pattern.property === 'noteName' && (check(operator2) || check2(operator2))) {\r\n\t\t\tpattern.property = 'noteNumber';\r\n\t\t\tpattern.value2 = createNote(pattern.value2).number;\r\n\t\t}\r\n\r\n\t\t// second operator is wrong, remove it\r\n\t\tif (check(operator1) && !check(operator2)) {\r\n\t\t\tdelete pattern.operator2;\r\n\t\t\tdelete pattern.value2;\r\n\t\t}\r\n\r\n\t\treturn pattern;\r\n\t};\r\n\r\n\r\n\tinverseOperator = function (operator) {\r\n\t\tvar inversedOperator;\r\n\r\n\t\tswitch (operator) {\r\n\t\t\tcase '=':\r\n\t\t\tcase '==':\r\n\t\t\tcase '===':\r\n\t\t\t\tinversedOperator = '!==';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '!=':\r\n\t\t\tcase '!==':\r\n\t\t\t\tinversedOperator = '===';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '<':\r\n\t\t\t\tinversedOperator = '>=';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '>':\r\n\t\t\t\tinversedOperator = '<=';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '<=':\r\n\t\t\t\tinversedOperator = '>';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '>=':\r\n\t\t\t\tinversedOperator = '<';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '*=':\r\n\t\t\tcase '^=':\r\n\t\t\tcase '&=':\r\n\t\t\tcase '%=':\r\n\t\t\t\tinversedOperator = '!' + operator;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tinversedOperator = operator;\r\n\r\n\t\t}\r\n\r\n\t\treturn inversedOperator;\r\n\t};\r\n\r\n\r\n\tfindNote = function () {\r\n\t\tvar results = findEvent.apply(this, arguments),\r\n\t\t\tnumEvents = results.length,\r\n\t\t\ti, event,\r\n\t\t\tnoteOnEvent, noteOnEvents = {},\r\n\t\t\ttmp, resultsFiltered = [];\r\n\r\n\t\t// loop over all events and filter the note on events that have a matching note off event\r\n\t\tfor (i = 0; i < numEvents; i++) {\r\n\t\t\tevent = results[i];\r\n\r\n\t\t\tif (event.type === sequencer.NOTE_ON) {\r\n\r\n\t\t\t\tif (noteOnEvents[event.noteNumber] === undefined) {\r\n\t\t\t\t\tnoteOnEvents[event.noteNumber] = [];\r\n\t\t\t\t}\r\n\t\t\t\tnoteOnEvents[event.noteNumber].push(event);\r\n\r\n\t\t\t} else if (event.type === sequencer.NOTE_OFF) {\r\n\r\n\t\t\t\ttmp = noteOnEvents[event.noteNumber];\r\n\t\t\t\tif (tmp) {\r\n\t\t\t\t\tnoteOnEvent = tmp.shift();\r\n\t\t\t\t\tresultsFiltered.push(createMidiNote(noteOnEvent, event));\r\n\t\t\t\t\t//resultsFiltered.push(noteOnEvent);\r\n\t\t\t\t\t//resultsFiltered.push(event);\r\n\t\t\t\t}\r\n\t\t\t\tif (tmp.length === 0) {\r\n\t\t\t\t\tdelete noteOnEvents[event.noteNumber];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// put the events back into the right order\r\n\t\tresultsFiltered.sort(function (a, b) {\r\n\t\t\treturn a.sortIndex - b.sortIndex;\r\n\t\t});\r\n\r\n\t\treturn resultsFiltered;\r\n\t};\r\n\r\n\tsequencer.findEvent = findEvent;\r\n\tsequencer.findNote = findNote;\r\n\t//sequencer.removeMutualEvents = removeMutualEvents;\r\n\tsequencer.protectedScope.getEvents = getEvents;\r\n\r\n\tsequencer.protectedScope.addInitMethod(function () {\r\n\t\tcreateNote = sequencer.createNote;\r\n\t\ttypeString = sequencer.protectedScope.typeString;\r\n\t\tcreateMidiNote = sequencer.createMidiNote;\r\n\t\tmidiEventNumberByName = sequencer.midiEventNumberByName;\r\n\t});\r\n\r\n}function instrument() {\r\n\r\n  'use strict';\r\n\r\n  var\r\n    debug = sequencer.debug,\r\n\r\n    //import\r\n    context, // → defined in open_module.js\r\n    storage, // → defined in open_module.js\r\n    timedTasks, // → defined in open_module.js\r\n    repetitiveTasks, // → defined in open_module.js\r\n    findItem, // → defined in utils.js\r\n    storeItem, // → defined in utils.js\r\n    typeString, // → defined in utils.js\r\n    pathToArray, // → defined in utils.js\r\n    //createClass, // → defined in utils.js\r\n    isEmptyObject, // → defined in utils.js\r\n    objectForEach, // → defined in utils.js\r\n    createSample, // → defined in sample.js\r\n    createReverb, // → defined in effects.js\r\n    dispatchEvent, // → defined in song.js\r\n    remap, // defined in util.js\r\n    round, // defined in util.js\r\n    getEqualPowerCurve, // defined in util.js\r\n    transpose, // defined in transpose.js\r\n\r\n    Instrument,\r\n    SimpleSynth;\r\n\r\n\r\n  function unscheduleCallback(sample) {\r\n    //console.log(sample.id, 'has been unscheduled');\r\n    sample = null;\r\n  }\r\n\r\n\r\n  Instrument = function (config) {\r\n    //console.log(config);\r\n    this.className = 'Instrument';\r\n    this.config = config;\r\n    this.scheduledEvents = {};\r\n    this.scheduledSamples = {};\r\n    this.sustainPedalDown = false;\r\n    this.sustainPedalSamples = {};\r\n    this.sampleDataByNoteNumber = {};\r\n    this.sampleData = [];\r\n\r\n    this.info = config.info || config.instrument_info;\r\n    this.author = config.author || config.instrument_author;\r\n    this.license = config.license || config.instrument_license;\r\n    this.pack = config.pack;\r\n\r\n    this.parse();\r\n  };\r\n\r\n\r\n  // called by asset manager when a sample pack or an instrument has been unloaded, see asset_manager.js\r\n  Instrument.prototype.reset = function () {\r\n    var instrument = sequencer.getInstrument(this.config.localPath),\r\n      samplepack = sequencer.getSamplePack(this.config.sample_path);\r\n\r\n    if (samplepack === false || instrument === false) {\r\n      this.scheduledEvents = {};\r\n      this.scheduledSamples = {};\r\n      this.sustainPedalSamples = {};\r\n      this.sampleDataByNoteNumber = {};\r\n      this.sampleData = [];\r\n      if (this.update) {\r\n        delete repetitiveTasks[this.updateTaskId];\r\n      }\r\n      // if the instrument has been unloaded, set the track to the default instrument\r\n      if (instrument === false) {\r\n        this.track.setInstrument();\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  Instrument.prototype.parse = function () {\r\n    var i, maxi, v, v1, v2, length, octave, note, noteName, noteNumber,\r\n      pathArray,\r\n      buffer, names,\r\n      id, data, subdata,\r\n      update,\r\n      sample,\r\n      sampleConfig,\r\n      samplePack,\r\n      audioFolder,\r\n      config = this.config,\r\n      noteNameMode = config.notename_mode === undefined ? sequencer.noteNameMode : config.notename_mode,\r\n      mapping = config.mapping,\r\n      me = this;\r\n\r\n    if (config.name === undefined) {\r\n      console.error('instruments must have a name', config);\r\n      return false;\r\n    }\r\n\r\n    if (mapping === undefined) {\r\n      console.error('instruments must have a mapping to samples', config);\r\n      return false;\r\n    }\r\n\r\n    this.name = config.name;\r\n    this.folder = config.folder || '';\r\n    this.autopan = config.autopan || false; // for simple synth\r\n    this.singlePitch = config.single_pitch || false;\r\n    this.samplePath = config.sample_path || this.name;\r\n    this.keyScalingRelease = config.keyscaling_release;\r\n    this.keyScalingPanning = config.keyscaling_panning;\r\n    this.keyRange = config.keyrange || config.key_range;\r\n    //console.log(this.keyRange, config);\r\n    pathArray = this.samplePath.split('/');\r\n\r\n    //console.log(this.keyScalingRelease, config);\r\n\r\n    samplePack = storage.samplepacks;\r\n    for (i = 0, maxi = pathArray.length; i < maxi; i++) {\r\n      if (samplePack === undefined) {\r\n        if (sequencer.debug) {\r\n          console.log('sample pack not found', pathArray.join('/'));\r\n        }\r\n        return;\r\n      }\r\n      samplePack = samplePack[pathArray[i]];\r\n    }\r\n    //console.log(samplePack.name);\r\n\r\n    audioFolder = storage.audio;\r\n    try {\r\n      for (i = 0, maxi = pathArray.length; i < maxi; i++) {\r\n        audioFolder = audioFolder[pathArray[i]];\r\n      }\r\n    } catch (e) {\r\n      if (sequencer.debug) {\r\n        console.log('sample pack \"' + pathArray[i] + '\" is not loaded');\r\n      }\r\n      //sampleConfig = false;\r\n      return;\r\n    }\r\n\r\n    if (audioFolder === undefined) {\r\n      if (sequencer.debug) {\r\n        console.log('sample pack not found', pathArray.join('/'));\r\n      }\r\n      //sampleConfig = false;\r\n      return;\r\n    }\r\n\r\n\r\n    if (typeString(mapping) === 'array') {\r\n      this.keyRange = mapping;\r\n      mapping = {};\r\n      for (i = this.keyRange[0]; i <= this.keyRange[1]; i++) {\r\n        mapping[i] = '';\r\n      }\r\n    }\r\n\r\n    if (this.keyRange === undefined) {\r\n      this.lowestNote = 128;\r\n      this.highestNote = -1;\r\n    } else {\r\n      this.lowestNote = this.keyRange[0];\r\n      this.highestNote = this.keyRange[1];\r\n      this.numNotes = this.highestNote - this.lowestNote;\r\n    }\r\n\r\n\r\n    if (config.release_duration !== undefined) {\r\n      this.releaseDuration = config.release_duration;\r\n    } else {\r\n      this.releaseDuration = 0;\r\n    }\r\n\r\n    this.releaseEnvelope = config.release_envelope || 'equal power';\r\n\r\n\r\n    if (this.autopan) {\r\n      this.autoPanner = createAutoPanner();\r\n    }\r\n\r\n    this.samplepack = samplePack;\r\n    //console.log(samplePack);\r\n\r\n    for (id in mapping) {\r\n      if (mapping.hasOwnProperty(id)) {\r\n        data = mapping[id];\r\n\r\n        if (isNaN(id)) {\r\n          // C3, D#5, Bb0, etc.\r\n          length = id.length;\r\n          octave = id.substring(length - 1);\r\n          note = id.substring(0, length - 1);\r\n          noteName = id;\r\n          noteNumber = sequencer.getNoteNumber(note, octave);\r\n        } else {\r\n          noteName = sequencer.getNoteNameFromNoteNumber(id, noteNameMode);\r\n          noteName = noteName.join('');\r\n          noteNumber = id;\r\n        }\r\n        //console.log(id, noteNameMode);\r\n\r\n        noteNumber = parseInt(noteNumber, 10);\r\n\r\n        if (this.keyRange === undefined) {\r\n          this.lowestNote = noteNumber < this.lowestNote ? noteNumber : this.lowestNote;\r\n          this.highestNote = noteNumber > this.highestNote ? noteNumber : this.highestNote;\r\n        }\r\n\r\n        //console.log(data,typeString(data));\r\n\r\n        if (typeString(data) === 'array') {\r\n          // multi-layered\r\n          this.multiLayered = true;\r\n          for (i = 0, maxi = data.length; i < maxi; i++) {\r\n            subdata = data[i];\r\n            parseSampleData(subdata);\r\n            if (this.sampleDataByNoteNumber[noteNumber] === undefined) {\r\n              this.sampleDataByNoteNumber[noteNumber] = [];\r\n            }\r\n            // store the same sample config for every step in this velocity range\r\n            v1 = subdata.v[0];\r\n            v2 = subdata.v[1];\r\n            for (v = v1; v <= v2; v++) {\r\n              this.sampleDataByNoteNumber[noteNumber][v] = sampleConfig;\r\n            }\r\n            this.sampleData.push(sampleConfig);\r\n          }\r\n        } else {\r\n          // single-layered\r\n          parseSampleData(data);\r\n          //console.log('--->', sampleConfig);\r\n          this.sampleDataByNoteNumber[noteNumber] = sampleConfig;\r\n          this.sampleData.push(sampleConfig);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.keyRange === undefined) {\r\n      //console.log(this.highestNote, this.lowestNote);\r\n      this.numNotes = this.highestNote - this.lowestNote;\r\n      this.keyRange = [this.lowestNote, this.highestNote];\r\n    }\r\n\r\n\r\n    // if a key range is set for the instrument, the mapping object is generated by parseSampleData() so we need to add\r\n    // the mapping object to the config to make it available for unloading\r\n    this.config.mapping = mapping;\r\n\r\n    if (this.singlePitch) {\r\n      // TODO: fix this for multi-layered instruments (low prio)\r\n      for (i = 127; i >= 0; i--) {\r\n        this.sampleData[i] = sampleConfig;\r\n        this.sampleDataByNoteNumber[i] = sampleConfig;\r\n      }\r\n    }\r\n\r\n    if (update) {\r\n      this.updateTaskId = 'update_' + this.name + '_' + new Date().getTime();\r\n      //console.log('start update', this.name);\r\n      repetitiveTasks[this.updateTaskId] = function () {\r\n        //console.log('update');\r\n        if (me.autopan) {\r\n          me.update(this.autoPanner.getValue());\r\n        } else {\r\n          me.update();\r\n        }\r\n      };\r\n    }\r\n\r\n    // inner function of Instrument.parse();\r\n    function parseSampleData(data) {\r\n      var tmp, n;\r\n      //console.log('find', this.samplePath + '/' + data.n);\r\n      //buffer = findItem(this.samplePath + '/' + data.n, storage.audio);\r\n      //console.log(data);\r\n\r\n      if (data.n) {\r\n        // get the buffer by an id\r\n        buffer = audioFolder[data.n];\r\n        //console.log(data.n, buffer);\r\n      } else {\r\n        // get the buffer by a note number or note name if a keyrange is specified\r\n        names = [noteNumber, noteName, noteName.toLowerCase()];\r\n        for (n = 2; n >= 0; n--) {\r\n          buffer = audioFolder[names[n]];\r\n          if (buffer !== undefined) {\r\n            mapping[id] = { n: names[n] };\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (buffer === undefined) {\r\n        if (sequencer.debug) {\r\n          console.log('no buffer found for ' + id + ' (' + me.name + ')');\r\n        }\r\n        sampleConfig = false;\r\n        return;\r\n      }\r\n\r\n      sampleConfig = {\r\n        noteNumber: noteNumber,\r\n        buffer: buffer,\r\n        bufferId: data.n,\r\n        autopan: me.autopan\r\n      };\r\n\r\n      // sample pack sustain\r\n      if (config.sustain === true) {\r\n        sampleConfig.sustain = true;\r\n        update = true;\r\n      }\r\n\r\n      // sustain\r\n      if (data.s !== undefined) {\r\n        sampleConfig.sustain_start = data.s[0];\r\n        sampleConfig.sustain_end = data.s[1];\r\n        sampleConfig.sustain = true;\r\n        update = true;\r\n      } else if (config.sustain === true) {\r\n        tmp = samplePack.samplesById[data.n].sustain;\r\n        if (tmp !== undefined) {\r\n          sampleConfig.sustain_start = tmp[0];\r\n          sampleConfig.sustain_end = tmp[1];\r\n          //sampleConfig.sustain = true;\r\n          //console.log(tmp, update, sampleConfig.sustain);\r\n        } else {\r\n          sampleConfig.sustain = false;\r\n        }\r\n        //console.log(data.n, samplePack.samplesById[data.n]);\r\n      }\r\n\r\n      // global release\r\n      if (config.release_duration !== undefined) {\r\n        sampleConfig.release_duration = config.release_duration;\r\n        sampleConfig.release_envelope = config.release_envelope || me.releaseEnvelope;\r\n        sampleConfig.release = true;\r\n        update = true;\r\n      }\r\n\r\n      // release duration and envelope per sample overrules global release duration and envelope\r\n      if (data.r !== undefined) {\r\n        if (typeString(data.r) === 'array') {\r\n          sampleConfig.release_duration = data.r[0];\r\n          sampleConfig.release_envelope = data.r[1] || me.releaseEnvelope;\r\n        } else if (!isNaN(data.r)) {\r\n          sampleConfig.release_duration = data.r;\r\n          sampleConfig.release_envelope = me.releaseEnvelope;\r\n        }\r\n        sampleConfig.release = true;\r\n        update = true;\r\n        //console.log(data.r, sampleConfig.release_duration, sampleConfig.release_envelope)\r\n      }\r\n\r\n      // panning\r\n      if (data.p !== undefined) {\r\n        sampleConfig.panPosition = data.p;\r\n        sampleConfig.panning = true;\r\n      }\r\n      //console.log(data.p, sampleConfig.panning);\r\n      //console.log('ready', sampleConfig);\r\n    }\r\n  };\r\n\r\n\r\n  Instrument.prototype.getInfoAsHTML = function () {\r\n    var html = '',\r\n      instrumentInfo = '',\r\n      samplepackInfo = '',\r\n      sp = this.samplepack;\r\n\r\n    if (this.info !== undefined) {\r\n      instrumentInfo += '<tr><td>info</td><td>' + this.info + '</td></tr>';\r\n    }\r\n    if (this.author !== undefined) {\r\n      instrumentInfo += '<tr><td>author</td><td>' + this.author + '</td></tr>';\r\n    }\r\n    if (this.license !== undefined) {\r\n      instrumentInfo += '<tr><td>license</td><td>' + this.license + '</td></tr>';\r\n    }\r\n    instrumentInfo += '<tr><td>keyrange</td><td>' + this.lowestNote + '(' + sequencer.getFullNoteName(this.lowestNote) + ')';\r\n    instrumentInfo += ' - ' + this.highestNote + '(' + sequencer.getFullNoteName(this.highestNote) + ')</td></tr>';\r\n\r\n    if (instrumentInfo !== '') {\r\n      instrumentInfo = '<table><th colspan=\"2\">instrument</th>' + instrumentInfo + '</table>';\r\n      html += instrumentInfo;\r\n    }\r\n\r\n    if (sp === undefined) {\r\n      return html;\r\n    }\r\n\r\n    if (sp.info !== undefined) {\r\n      samplepackInfo += '<tr><td>info</td><td>' + sp.info + '</td></tr>';\r\n    }\r\n    if (sp.author !== undefined) {\r\n      samplepackInfo += '<tr><td>author</td><td>' + sp.author + '</td></tr>';\r\n    }\r\n    if (sp.license !== undefined) {\r\n      samplepackInfo += '<tr><td>license</td><td>' + sp.license + '</td></tr>';\r\n    }\r\n    if (sp.compression !== undefined) {\r\n      samplepackInfo += '<tr><td>compression</td><td>' + sp.compression + '</td></tr>';\r\n    }\r\n    if (sp.filesize !== undefined) {\r\n      samplepackInfo += '<tr><td>filesize</td><td>' + round(sp.filesize / 1024 / 1024, 2) + ' MiB</td></tr>';\r\n    }\r\n\r\n    if (samplepackInfo !== '') {\r\n      samplepackInfo = '<table><th colspan=\"2\">samplepack</th>' + samplepackInfo + '</table>';\r\n      html += samplepackInfo;\r\n    }\r\n\r\n    return html;\r\n  };\r\n\r\n\r\n  Instrument.prototype.getInfo = function () {\r\n    var info = {\r\n      instrument: {},\r\n      samplepack: {}\r\n    };\r\n\r\n    if (this.info !== undefined) {\r\n      info.instrument.info = this.info;\r\n    }\r\n    if (this.author !== undefined) {\r\n      info.instrument.author = this.author;\r\n    }\r\n    if (this.license !== undefined) {\r\n      info.instrument.license = this.license;\r\n    }\r\n    if (this.keyrange !== undefined) {\r\n      info.instrument.keyrange = this.keyrange;\r\n    }\r\n\r\n\r\n    if (this.info !== undefined) {\r\n      info.samplepack.info = this.info;\r\n    }\r\n    if (this.author !== undefined) {\r\n      info.samplepack.author = this.author;\r\n    }\r\n    if (this.license !== undefined) {\r\n      info.samplepack.license = this.license;\r\n    }\r\n    if (this.compression !== undefined) {\r\n      info.samplepack.compression = this.compression;\r\n    }\r\n    if (this.filesize !== undefined) {\r\n      info.samplepack.filesize = round(this.samplepack.filesize / 1024 / 1024, 2);\r\n    }\r\n\r\n    return info;\r\n  };\r\n\r\n\r\n  Instrument.prototype.createSample = function (event) {\r\n    var\r\n      noteNumber = event.noteNumber,\r\n      velocity = event.velocity,\r\n      data = this.sampleDataByNoteNumber[noteNumber],\r\n      type = typeString(data);\r\n\r\n    if (type === 'array') {\r\n      data = data[velocity];\r\n      //console.log(velocity, data.bufferId);\r\n    }\r\n\r\n    if (data === undefined || data === false) {\r\n      // no buffer data, return a dummy sample\r\n      return {\r\n        start: function () {\r\n          console.warn('no audio data loaded for', noteNumber);\r\n        },\r\n        stop: function () { },\r\n        update: function () { },\r\n        addData: function () { },\r\n        unschedule: function () { }\r\n      };\r\n    }\r\n    //console.log(data);\r\n    data.track = event.track;\r\n    return createSample(data);\r\n  };\r\n\r\n\r\n  Instrument.prototype.setKeyScalingPanning = function (start, end) {\r\n    //console.log('keyScalingPanning', start, end);\r\n    var i, data, numSamples = this.sampleData.length,\r\n      panStep, currentPan;\r\n\r\n    if (start === false) {\r\n      for (i = 0; i < numSamples; i++) {\r\n        data = this.sampleData[i];\r\n        data.panning = false;\r\n      }\r\n    }\r\n\r\n    if (isNaN(start) === false && isNaN(end) === false) {\r\n      panStep = (end - start) / this.numNotes;\r\n      currentPan = start;\r\n      for (i = 0; i < numSamples; i++) {\r\n        data = this.sampleData[i];\r\n        data.panning = true;\r\n        data.panPosition = currentPan;\r\n        //console.log(currentPan, panStep, highestNote, lowestNote, data.noteNumber);\r\n        currentPan += panStep;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  Instrument.prototype.setRelease = function (millis, envelope) {\r\n    if (millis === undefined) {\r\n      return;\r\n    }\r\n    this.releaseEnvelope = envelope || this.releaseEnvelope;\r\n    this.keyScalingRelease = undefined;\r\n\r\n    var i, data, numSamples = this.sampleData.length;\r\n    for (i = 0; i < numSamples; i++) {\r\n      data = this.sampleData[i];\r\n      data.release = true;\r\n      data.release_duration = millis;\r\n      data.release_envelope = this.releaseEnvelope;\r\n    }\r\n    this.releaseDuration = millis;\r\n  };\r\n\r\n\r\n  Instrument.prototype.setKeyScalingRelease = function (start, end, envelope) {\r\n    var i, data, numSamples = this.sampleData.length,\r\n      releaseStep, currentRelease;\r\n\r\n    this.releaseEnvelope = envelope || this.releaseEnvelope;\r\n\r\n    if (isNaN(start) === false && isNaN(end) === false) {\r\n      this.keyScalingRelease = [start, end];\r\n      this.releaseDuration = 0;\r\n      releaseStep = (end - start) / this.numNotes;\r\n      currentRelease = start;\r\n      for (i = 0; i < numSamples; i++) {\r\n        data = this.sampleData[i];\r\n        data.release_duration = currentRelease;\r\n        data.release_envelope = currentRelease;\r\n        //console.log(currentRelease, releaseStep, data.noteNumber);\r\n        currentRelease += releaseStep;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  Instrument.prototype.transpose = function (semitones, cb1, cb2) {\r\n    if (transpose === undefined) {\r\n      console.log('transpose is still experimental');\r\n      return;\r\n    }\r\n    var numSamples = this.sampleData.length;\r\n    function loop(num, samples) {\r\n      var data;\r\n      if (cb2) {\r\n        cb2('transposing sample ' + (num + 1) + ' of ' + numSamples);\r\n      }\r\n      //console.log(num, numSamples);\r\n      if (num < numSamples) {\r\n        data = samples[num];\r\n        setTimeout(function () {\r\n          transpose(data.buffer, semitones, function (transposedBuffer) {\r\n            data.buffer = transposedBuffer;\r\n            loop(++num, samples);\r\n          });\r\n        }, 10);\r\n      } else {\r\n        if (cb1) {\r\n          console.log('ready');\r\n          cb1();\r\n        }\r\n      }\r\n    }\r\n    loop(0, this.sampleData);\r\n  };\r\n\r\n\r\n  // called when midi events arrive from a midi input, from processEvent or from the scheduler\r\n  Instrument.prototype.processEvent = function (midiEvent) {\r\n    // console.log(midiEvent.type + ' : ' + midiEvent.velocity, midiEvent.time);\r\n    var type = midiEvent.type,\r\n      data1, data2, track, output;\r\n\r\n    //seconds = seconds === undefined ? 0 : seconds;\r\n    if (midiEvent.time === undefined) {\r\n      midiEvent.time = 0;\r\n    }\r\n\r\n    if (type === 128 || type === 144) {\r\n      if (type === 128) {\r\n        if (this.sustainPedalDown === true) {\r\n          midiEvent.sustainPedalDown = true;\r\n        }\r\n        //console.log(type, midiEvent.noteNumber, midiEvent.ticks, midiEvent.midiNote.id);\r\n        this.stopNote(midiEvent);\r\n      } else {\r\n        //console.log(type, midiEvent.noteNumber, midiEvent.ticks, midiEvent.midiNote.noteOff.ticks, midiEvent.midiNote.id);\r\n        this.playNote(midiEvent);\r\n      }\r\n    } else if (midiEvent.type === 176) {\r\n      //return;\r\n      data1 = midiEvent.data1;\r\n      data2 = midiEvent.data2;\r\n      if (data1 === 64) { // sustain pedal\r\n        //console.log(this.sustainPedalDown, data1, data2)\r\n        if (data2 === 127) {\r\n          this.sustainPedalDown = true;\r\n          //console.log('sustain pedal down', this.track.song.id);\r\n          dispatchEvent(this.track.song, 'sustain_pedal', 'down');\r\n        } else if (data2 === 0) {\r\n          this.sustainPedalDown = false;\r\n          //console.log('sustain pedal up');\r\n          dispatchEvent(this.track.song, 'sustain_pedal', 'up');\r\n          this.stopSustain(midiEvent.time);\r\n        }\r\n      } else if (data1 === 10) { // panning\r\n        // panning is *not* exactly timed -> not possible (yet) with WebAudio\r\n        track = this.track;\r\n        //console.log(data2, remap(data2, 0, 127, -1, 1));\r\n        track.setPanning(remap(data2, 0, 127, -1, 1));\r\n      } else if (data1 === 7) { // volume\r\n        track = this.track;\r\n        output = track.output;\r\n        output.gain.setValueAtTime(data2 / 127, midiEvent.time);\r\n        /*\r\n        //@TODO: this should be done by a plugin\r\n        if(track.volumeChangeMethod === 'linear'){\r\n            output.gain.linearRampToValueAtTime(data2/127, seconds);\r\n        }else if(track.volumeChangeMethod === 'equal_power'){\r\n            volume1 = track.getVolume();\r\n            volume2 = data2/127;\r\n            if(volume1 > volume2){\r\n                values = getEqualPowerCurve(100, 'fadeOut', volume2);\r\n            }else{\r\n                values = getEqualPowerCurve(100, 'fadeIn', volume2);\r\n            }\r\n            now = sequencer.getTime();\r\n            output.gain.setValueCurveAtTime(values, seconds, seconds + 0.05);\r\n        }else{\r\n            output.gain.setValueAtTime(data2/127, seconds);\r\n        }\r\n        */\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  Instrument.prototype.stopSustain = function (seconds) {\r\n    var midiNote,\r\n      scheduledSamples = this.scheduledSamples,\r\n      sustainPedalSamples = this.sustainPedalSamples;\r\n\r\n    objectForEach(sustainPedalSamples, function (sample) {\r\n      if (sample !== undefined) {\r\n        midiNote = sample.midiNote;\r\n        midiNote.noteOn.sustainPedalDown = undefined;\r\n        midiNote.noteOff.sustainPedalDown = undefined;\r\n        sample.stop(seconds, function (sample) {\r\n          //console.log('stopped sustain pedal up:', sample.id, sample.sourceId);\r\n          scheduledSamples[sample.sourceId] = null;\r\n          delete scheduledSamples[sample.sourceId];\r\n          //delete sustainPedalSamples[sample.sourceId];\r\n        });\r\n      }\r\n    });\r\n\r\n    this.sustainPedalSamples = {};\r\n  };\r\n\r\n\r\n  Instrument.prototype.playNote = function (midiEvent) {\r\n    var\r\n      sample,\r\n      sourceId;\r\n\r\n    if (!midiEvent.midiNote) {\r\n      if (sequencer.debug) {\r\n        console.warn('playNote() no midi note');\r\n      }\r\n      return;\r\n    }\r\n\r\n    sourceId = midiEvent.midiNote.id;\r\n    sample = this.scheduledSamples[sourceId];\r\n    // console.log('start', sourceId);\r\n\r\n    if (sample !== undefined) {\r\n      // console.log('already scheduled', sourceId);\r\n      sample.unschedule(0);\r\n    }\r\n\r\n    sample = this.createSample(midiEvent);\r\n    // add some extra attributes to the sample\r\n    sample.addData({\r\n      midiNote: midiEvent.midiNote,\r\n      noteName: midiEvent.midiNote.note.fullName,\r\n      sourceId: sourceId\r\n    });\r\n    this.scheduledSamples[sourceId] = sample;\r\n    sample.start(midiEvent);\r\n  };\r\n\r\n\r\n  Instrument.prototype.stopNote = function (midiEvent) {\r\n    if (midiEvent.midiNote === undefined) {\r\n      if (sequencer.debug) {\r\n        console.warn('stopNote() no midi note', midiEvent.ticks, midiEvent.noteNumber);\r\n      }\r\n      return;\r\n    }\r\n\r\n    var sourceId = midiEvent.midiNote.id,\r\n      sample = this.scheduledSamples[sourceId],\r\n      scheduledSamples = this.scheduledSamples,\r\n      sustainPedalSamples = this.sustainPedalSamples;\r\n\r\n    // if(this.song && this.song.bar >= 6 && this.track.name === 'Sonata # 3'){\r\n    //     console.log('stopNote', midiEvent, seconds, sequencer.getTime());\r\n    // }\r\n\r\n    //console.log(midiEvent.sustainPedalDown);\r\n    if (midiEvent.sustainPedalDown === true) {\r\n      // while sustain pedal is pressed, bypass note off events\r\n      //console.log('sustain');\r\n      sustainPedalSamples[sourceId] = sample;\r\n      return;\r\n    }\r\n\r\n    if (sample === undefined) {\r\n      // if(sequencer.debug){\r\n      //     console.log('no sample scheduled (anymore) for this midiEvent', sourceId, seconds);\r\n      // }\r\n      return;\r\n    }\r\n\r\n    sample.stop(midiEvent.time, function () {\r\n      scheduledSamples[sourceId] = null;\r\n      delete scheduledSamples[sourceId];\r\n    });\r\n  };\r\n\r\n\r\n  Instrument.prototype.hasScheduledSamples = function () {\r\n    return isEmptyObject(this.scheduledSamples);\r\n  };\r\n\r\n\r\n  Instrument.prototype.reschedule = function (song) {\r\n    var\r\n      min = song.millis,\r\n      max = min + (sequencer.bufferTime * 1000),\r\n      max2 = min + 20,\r\n      scheduledSamples = this.scheduledSamples,\r\n      id, note, sample;\r\n\r\n    for (id in scheduledSamples) {\r\n      if (scheduledSamples.hasOwnProperty(id)) {\r\n        sample = scheduledSamples[id]; // the sample\r\n        note = sample.midiNote; // the midi note\r\n\r\n        if (note === undefined || note.state === 'removed') {\r\n          sample.unschedule(0, unscheduleCallback);\r\n          delete scheduledSamples[id];\r\n        } else if (\r\n          note.noteOn.millis >= min &&\r\n          note.noteOff.millis < max &&\r\n          sample.noteName === note.fullName\r\n        ) {\r\n          // nothing has changed, skip\r\n          continue;\r\n        } else {\r\n          //console.log('unscheduled', id);\r\n          delete scheduledSamples[id];\r\n          sample.unschedule(null, unscheduleCallback);\r\n        }\r\n      }\r\n    }\r\n    /*\r\n            objectForEach(this.scheduledEvents, function(event, eventId){\r\n                if(event === undefined || event.state === 'removed'){\r\n                    delete sequencer.timedTasks['event_' + eventId];\r\n                    delete this.scheduledEvents[eventId];\r\n                }else if((event.millis >= min && event.millis < max2) === false){\r\n                    delete sequencer.timedTasks['event_' + eventId];\r\n                    delete this.scheduledEvents[eventId];\r\n                }\r\n            });\r\n    */\r\n  };\r\n\r\n\r\n  function loop(data, i, maxi, events) {\r\n    var arg;\r\n    for (i = 0; i < maxi; i++) {\r\n      arg = data[i];\r\n      if (arg === undefined) {\r\n        continue;\r\n      } else if (arg.className === 'MidiNote') {\r\n        events.push(arg.noteOn);\r\n      } else if (typeString(arg) === 'array') {\r\n        loop(arg, 0, arg.length);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // stop specified events or notes, used by stopProcessEvent()\r\n  Instrument.prototype.unschedule = function () {\r\n    var args = Array.prototype.slice.call(arguments),\r\n      events = [],\r\n      i, e, id, sample;\r\n\r\n    loop(args, 0, args.length, events);\r\n\r\n    for (i = events.length - 1; i >= 0; i--) {\r\n      e = events[i];\r\n      if (e.midiNote !== undefined) {\r\n        // note on and note off events\r\n        id = e.midiNote.id;\r\n        sample = this.scheduledSamples[id];\r\n        if (sample !== undefined) {\r\n          sample.unschedule(0, unscheduleCallback);\r\n          delete this.scheduledSamples[id];\r\n        }\r\n      } else if (e.className === 'MidiEvent') {\r\n        // other channel events\r\n        id = e.id;\r\n        delete timedTasks['event_' + id];\r\n        delete this.scheduledEvents[id];\r\n      }\r\n      //console.log(id);\r\n    }\r\n  };\r\n\r\n\r\n  // stop all events and notes\r\n  Instrument.prototype.allNotesOff = function () {\r\n    var sample, sampleId,\r\n      scheduledSamples = this.scheduledSamples;\r\n\r\n    this.stopSustain(0);\r\n    this.sustainPedalDown = false;\r\n\r\n    //console.log(scheduledSamples);\r\n\r\n    if (scheduledSamples === undefined || isEmptyObject(scheduledSamples) === true) {\r\n      return;\r\n    }\r\n\r\n    for (sampleId in scheduledSamples) {\r\n      if (scheduledSamples.hasOwnProperty(sampleId)) {\r\n        //console.log('allNotesOff', sampleId);\r\n        sample = scheduledSamples[sampleId];\r\n        if (sample) {\r\n          sample.unschedule(0, unscheduleCallback);\r\n        }\r\n      }\r\n    }\r\n    this.scheduledSamples = {};\r\n\r\n    objectForEach(this.scheduledEvents, function (event, eventId) {\r\n      delete timedTasks['event_' + eventId];\r\n    });\r\n    this.scheduledEvents = {};\r\n  };\r\n\r\n\r\n  Instrument.prototype.allNotesOffPart = function (partId) {\r\n    var sample, sampleId,\r\n      scheduledSamples = this.scheduledSamples;\r\n\r\n    // make this more subtle\r\n    this.stopSustain(0);\r\n    this.sustainPedalDown = false;\r\n\r\n    //console.log(scheduledSamples);\r\n\r\n    if (scheduledSamples === undefined || isEmptyObject(scheduledSamples) === true) {\r\n      return;\r\n    }\r\n\r\n    for (sampleId in scheduledSamples) {\r\n      if (scheduledSamples.hasOwnProperty(sampleId)) {\r\n        //console.log('allNotesOff', sampleId);\r\n        sample = scheduledSamples[sampleId];\r\n        if (sample) {\r\n          sample.unschedule(0, unscheduleCallback);\r\n        }\r\n      }\r\n    }\r\n    this.scheduledSamples = {};\r\n\r\n    objectForEach(this.scheduledEvents, function (event, eventId) {\r\n      delete timedTasks['event_' + eventId];\r\n    });\r\n    this.scheduledEvents = {};\r\n  };\r\n\r\n  Instrument.prototype.update = function (value) {\r\n    var sampleId, sample;\r\n    //console.log(this.scheduledSamples);\r\n    for (sampleId in this.scheduledSamples) {\r\n      if (this.scheduledSamples.hasOwnProperty(sampleId)) {\r\n        sample = this.scheduledSamples[sampleId];\r\n        if (sample) {\r\n          sample.update(value);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  function createAutoPanner(time) {\r\n    /*\r\n            var osc = context.createOscillator();\r\n            osc.frequency.value = 50;\r\n            osc.type = 0;\r\n            var gain = context.createGain();\r\n            gain.gain.value = 1;\r\n            osc.connect(gain);\r\n            gain.connect(context.destination);\r\n            osc.start();\r\n            console.log(osc);\r\n            return {\r\n                getValue: function(){\r\n                    return osc.frequency.getValueAtTime(time);\r\n                }\r\n            };\r\n    */\r\n    return {\r\n      getValue: function (time) {\r\n        return Math.sin(time * 2 * Math.PI);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n\r\n  sequencer.createInstrument = function (arg) {\r\n    var type = typeString(arg),\r\n      config,\r\n      instrument;\r\n\r\n    //console.log(arg, type, arg.className);\r\n\r\n    if (type === 'object') {\r\n      if (arg.className === 'Instrument') {\r\n        instrument = arg;\r\n      } else if (arg.className === 'InstrumentConfig') {\r\n        if (arg.name === 'sinewave') {\r\n          instrument = new SimpleSynth(arg);\r\n        } else {\r\n          instrument = new Instrument(arg);\r\n        }\r\n      }\r\n      return instrument;\r\n    }\r\n\r\n\r\n    if (type === 'string') {\r\n      //@TODO what happens if we have 2 instruments with the same name?\r\n      config = findItem(arg, storage.instruments);\r\n      //console.log('string', arg, config, storage.instruments);\r\n    }\r\n\r\n    if (config == false || config.className !== 'InstrumentConfig') {\r\n      if (debug >= 2) {\r\n        console.info('can not create instrument from', arg);\r\n      }\r\n      return false;\r\n    }\r\n\r\n\r\n    if (config.name === 'sinewave') {\r\n      instrument = new SimpleSynth(config);\r\n    } else {\r\n      instrument = new Instrument(config);\r\n    }\r\n\r\n    return instrument;\r\n  };\r\n\r\n\r\n  sequencer.protectedScope.addInitMethod(function () {\r\n    var protectedScope = sequencer.protectedScope;\r\n\r\n    storage = sequencer.storage;\r\n    createSample = sequencer.createSample;\r\n    createReverb = sequencer.createReverb;\r\n    dispatchEvent = sequencer.protectedScope.songDispatchEvent;\r\n\r\n    context = protectedScope.context;\r\n    timedTasks = protectedScope.timedTasks;\r\n    repetitiveTasks = protectedScope.repetitiveTasks;\r\n    objectForEach = protectedScope.objectForEach;\r\n    isEmptyObject = protectedScope.isEmptyObject;\r\n    findItem = protectedScope.findItem;\r\n    storeItem = protectedScope.storeItem;\r\n    typeString = protectedScope.typeString;\r\n    pathToArray = protectedScope.pathToArray;\r\n    transpose = protectedScope.transpose;\r\n    SimpleSynth = protectedScope.createClass(Instrument);\r\n\r\n    remap = sequencer.util.remap;\r\n    round = sequencer.util.round;\r\n    getEqualPowerCurve = sequencer.util.getEqualPowerCurve;\r\n\r\n    SimpleSynth.prototype.parse = function () {\r\n      var me = this,\r\n        config = this.config;\r\n\r\n      //console.log(this.config);\r\n      this.name = 'SineWave';\r\n      this.waveForm = config.wave_form || 'sine';\r\n      this.autopan = config.autopan || false;\r\n      this.folder = config.folder || 'heartbeat';\r\n      this.releaseDuration = config.release_duration || 1500;\r\n      if (this.autopan) {\r\n        this.autoPanner = createAutoPanner();\r\n      }\r\n\r\n      repetitiveTasks['update_' + this.name + '_' + new Date().getTime()] = function () {\r\n        if (me.autopan) {\r\n          //console.log('update',me.autoPanner.getValue(context.currentTime), me.autopan);\r\n          //me.update(me.autoPanner.getValue(context.currentTime));\r\n          me.update(Math.sin(context.currentTime * 2 * Math.PI));\r\n        } else {\r\n          me.update();\r\n        }\r\n      };\r\n    };\r\n\r\n    SimpleSynth.prototype.createSample = function (event) {\r\n      var data = {\r\n        oscillator: true,\r\n        track: event.track,\r\n        event: event,\r\n        autopan: this.autopan,\r\n        wave_form: this.waveForm,\r\n        release_envelope: 'equal power',\r\n        release_duration: this.releaseDuration\r\n      };\r\n      //console.log(data);\r\n      return createSample(data);\r\n    };\r\n\r\n    sequencer.createSimpleSynth = function (config) {\r\n      config = config || {};\r\n      //console.log('creating sinewave');\r\n      return new SimpleSynth(config);\r\n    };\r\n  });\r\n}\r\nfunction instrumentConfig() {\n\n    'use strict';\n\n    var\n        ajax, // defined in utils.js\n        parseUrl, // defined in utils.js\n        findItem, // defined in utils.js\n        storeItem, // defined in utils.js\n        typeString, // defined in utils.js\n        objectForEach, // defined in utils.js\n\n        index = 0,\n\n        InstrumentConfig;\n\n\n    InstrumentConfig = function (config) {\n        this.id = 'IC' + index++ + new Date().getTime();\n        this.className = 'InstrumentConfig';\n        var instrument = this;\n        objectForEach(config, function (val, key) {\n            instrument[key] = val;\n        });\n        //console.log(instrument);\n    };\n\n\n    function cleanup(instrument, callback) {\n        instrument = undefined;\n        if (callback) {\n            callback(false);\n        }\n    }\n\n\n    function store(instrument) {\n        var occupied = findItem(instrument.localPath, sequencer.storage.instruments, true),\n            action = instrument.action;\n\n        //console.log(instrument.localPath, occupied);\n        if (occupied && occupied.className === 'InstrumentConfig' && action !== 'overwrite') {\n            if (sequencer.debug >= 2) {\n                console.warn('there is already an Instrument at', instrument.localPath);\n                cleanup(instrument);\n            }\n        } else {\n            storeItem(instrument, instrument.localPath, sequencer.storage.instruments);\n        }\n    }\n\n\n    function load(instrument, callback) {\n\n        if (instrument.url === undefined) {\n            instrument.localPath = instrument.folder !== undefined ? instrument.folder + '/' + instrument.name : instrument.name;\n            callback();\n            return;\n        }\n\n\n        ajax({\n            url: instrument.url,\n            responseType: 'json',\n            onError: function () {\n                cleanup(instrument, callback);\n            },\n            onSuccess: function (data) {\n                // if the json data is corrupt (for instance because of a trailing comma) data will be null\n                if (data === null) {\n                    callback(false);\n                    return;\n                }\n\n                //console.log(data);\n                if (data.name !== undefined && instrument.name === undefined) {\n                    instrument.name = data.name;\n                }\n\n                if (data.folder !== undefined && instrument.folder === undefined) {\n                    instrument.folder = data.folder;\n                }\n\n                if (instrument.name === undefined) {\n                    instrument.name = parseUrl(instrument.url).name;\n                }\n\n                instrument.localPath = instrument.folder !== undefined ? instrument.folder + '/' + instrument.name : instrument.name;\n                objectForEach(data, function (val, key) {\n                    if (key !== 'name' && key !== 'folder') {\n                        instrument[key] = val;\n                    }\n                });\n                callback();\n            }\n        });\n    }\n\n\n    sequencer.addInstrument = function (config, callback, callbackAfterAllTasksAreDone) {\n        var type = typeString(config),\n            instrument, json, name, folder;\n\n\n        if (type !== 'object') {\n            if (sequencer.debug >= 2) {\n                console.warn('can\\'t add an Instrument with this data', config);\n            }\n            return false;\n        }\n\n        //console.log(config);\n\n        if (config.json) {\n            json = config.json;\n            name = config.name;\n            folder = config.folder;\n            if (typeString(json) === 'string') {\n                try {\n                    json = JSON.parse(json);\n                } catch (e) {\n                    if (sequencer.debug >= 2) {\n                        console.warn('can\\'t add an Instrument with this data', config);\n                    }\n                    return false;\n                }\n            }\n            if (json.mapping === undefined) {\n                if (sequencer.debug >= 2) {\n                    console.warn('can\\'t add an Instrument with this data', config);\n                }\n                return false;\n            }\n            config = {\n                mapping: json.mapping,\n                name: name === undefined ? json.name : name,\n                folder: folder === undefined ? json.folder : folder\n            };\n            //console.log('config', name, folder, json.name, json.folder);\n        }\n\n\n        instrument = new InstrumentConfig(config);\n\n        sequencer.addTask({\n            type: 'load instrument config',\n            method: load,\n            params: instrument\n        }, function (value) {\n            //console.log(instrument, callback);\n            store(instrument);\n            if (callback) {\n                //console.log('callback', callback.name)\n                callback(instrument);\n            }\n        }, callbackAfterAllTasksAreDone);\n\n        sequencer.startTaskQueue();\n\n        /*\n        load(instrument, function(){\n            console.log(instrument);\n            store(instrument);\n            if(callback){\n                callback(instrument);\n            }\n        });\n        */\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        ajax = sequencer.protectedScope.ajax;\n        findItem = sequencer.protectedScope.findItem;\n        parseUrl = sequencer.protectedScope.parseUrl;\n        storeItem = sequencer.protectedScope.storeItem;\n        typeString = sequencer.protectedScope.typeString;\n        objectForEach = sequencer.protectedScope.objectForEach;\n    });\n\n}\nfunction keyEditor() {\n\n  'use strict';\n\n  var\n    //private\n    KeyEditor,\n\n    updateDataKeys = 'newEvents newNotes newParts changedEvents changedNotes changedParts removedEvents removedNotes removedParts'.split(' '),\n\n    // default values\n    tickWidth = 0.1,\n    pitchHeight = 10,\n    barsPerPage = 4,\n    snapValueX = 0, // means snaps is off -> ticks value do not get rounded\n    //snapValueX = 1, // means snaps to all ticks\n    snapValueY = 'chromatic',\n    eventWidth = 2,\n\n    ceil = Math.ceil,\n\n    //import\n    createIteratorFactory,\n    getPosition,\n    createPlayhead,\n    getScaffoldingBars,\n    typeString,\n    objectToArray,\n    arrayToObject,\n    debug,\n    round,\n    floor,\n    createNote,\n\n    //public\n    //getLines,\n    //xToTicks,\n    //yToPitch,\n\n    //private\n    setPageData,\n    checkNextPage,\n    checkScrollPosition,\n    dispatchEvent,\n    handleKeys;\n\n\n\n  KeyEditor = function (song, config) {\n    this.song = song;\n    this.song.keyEditor = this;\n    this.playhead = createPlayhead(this.song, 'barsbeats ticks millis', 'keyeditor');\n\n    this.numBars = song.bars;\n    this.newNumBars = this.numBars;\n    this.eventListeners = {};\n    this.interrupt = false;\n\n    this.iteratorFactory = createIteratorFactory(this.song, this);\n    this.verticalLine = this.iteratorFactory.createVerticalLineIterator(this);\n    this.horizontalLine = this.iteratorFactory.createHorizontalLineIterator(this);\n    this.eventIterator = this.iteratorFactory.createEventIterator(this);\n    this.noteIterator = this.iteratorFactory.createNoteIterator(this);\n    this.partIterator = this.iteratorFactory.createPartIterator(this);\n\n\n    this.exactFitVertical = config.exactFitVertical || false;\n    this.exactFitHorizontal = config.exactFitHorizontal || false;\n\n    this.activeEvents = [];\n    this.activeNotes = [];\n    this.activeParts = [];\n\n    this.newEvents = [];\n    this.newNotes = [];\n    this.newParts = [];\n\n    this.changedEvents = [];\n    this.changedNotes = [];\n    this.changedParts = [];\n\n    this.removedEvents = [];\n    this.removedNotes = [];\n    this.removedParts = [];\n\n    this.recordedNotesObj = {};\n    this.recordedEventsObj = {};\n\n    this.snapshot = {\n      activeEvents: this.activeEvents,\n      activeNotes: this.activeNotes,\n      activeParts: this.activeParts,\n\n      newEvents: this.newEvents,\n      newNotes: this.newNotes,\n      newParts: this.newParts,\n\n      changedEvents: this.changedEvents,\n      changedNotes: this.changedNotes,\n      changedParts: this.changedParts,\n\n      removedEvents: this.removedEvents,\n      removedNotes: this.removedNotes,\n      removedParts: this.removedParts\n    };\n\n\n    if (config.paginate) {\n      this.paginate = true;\n      this.pageNo = 0;\n      this.barsPerPage = config.barsPerPage;\n      this.pageWidth = config.pageWidth;\n      this.pageHeight = config.pageHeight;\n      this.width = this.pageWidth;\n      this.lowestNote = config.lowestNote || song.lowestNote;\n      this.highestNote = config.highestNote || song.highestNote;\n      this.pitchRange = this.highestNote - this.lowestNote;\n      if (this.exactFitVertical) {\n        this.pitchHeight = this.height / this.pitchRange;\n        this.height = this.pageHeight;\n      } else {\n        this.pitchHeight = config.pitchHeight || pitchHeight;\n        this.height = this.pitchHeight * this.pitchRange;\n      }\n      //this.startBar = 0;//make this configurable\n      setPageData(this, 0);\n      checkNextPage(this);\n\n    } else {\n\n      this.setStartPosition(config.startPosition || 1);\n      this.setEndPosition(config.endPosition || song.bars + 1);\n      this.numTicks = this.endTicks - this.startTicks;\n\n      if (config.width) {\n        this.width = config.width;\n        this.tickWidth = this.width / this.numTicks;\n      } else if (config.tickWidth) {\n        this.tickWidth = config.tickWidth;\n        this.width = this.numTicks * this.tickWidth;\n        this.exactFitHorizontal = false;\n      } else if (config.barsPerPage && config.viewportWidth) {\n        //@TODO: add support for time measurement changes\n        this.barsPerPage = config.barsPerPage;\n        this.viewportWidth = config.viewportWidth;\n        this.tickWidth = this.viewportWidth / (this.startPosition.ticksPerBar * this.barsPerPage);\n        this.width = this.numTicks * this.tickWidth;\n        this.scrollX = 0;\n        this.scrollPosition = 0;\n        this.viewportTicks = this.viewportWidth / this.tickWidth;\n        this.maxScrollPosition = ceil(this.width / this.viewportWidth);\n        this.scrollLimit = this.viewportWidth / this.tickWidth;\n        checkScrollPosition(this);\n        this.exactFitHorizontal = false;\n      } else if (config.viewportWidth) {\n        this.viewportWidth = this.width = config.viewportWidth;\n        this.tickWidth = this.viewportWidth / this.numTicks;\n        this.exactFitHorizontal = true;\n      } else {\n        this.tickWidth = tickWidth;\n        this.width = this.numTicks * this.tickWidth;\n        this.exactFitHorizontal = false;\n      }\n\n\n      this.lowestNote = config.lowestNote || song.lowestNote;\n      this.highestNote = config.highestNote || song.highestNote;\n      this.pitchRange = config.pitchRange || this.highestNote - this.lowestNote + 1;\n      //console.log(this.pitchRange);\n\n      if (config.height) {\n        this.height = config.height;\n        this.pitchHeight = this.height / this.pitchRange;\n      } else if (config.pitchHeight) {\n        this.pitchHeight = config.pitchHeight;\n        this.height = this.pitchRange * this.pitchHeight;\n        this.exactFitVertical = false;\n      } else if (config.viewportHeight) {\n        this.viewportHeight = this.height = config.viewportHeight;\n        this.pitchHeight = this.viewportHeight / this.pitchRange;\n        this.exactFitVertical = true;\n      } else {\n        this.pitchHeight = pitchHeight;\n        this.height = this.pitchRange * this.pitchHeight;\n        this.exactFitVertical = false;\n      }\n\n      // this.verticalLine.setStartPosition(this.startPosition);\n      // this.verticalLine.setEndPosition(this.endPosition);\n      //this.verticalLine.reset(this.startPosition, this.endPosition);\n      //this.horizontalLine.reset();\n      //this.eventIterator.reset();\n      //this.noteIterator.reset();\n      //this.partIterator.reset();\n      //console.log(this.tickWidth,this.pitchHeight);\n    }\n\n    this.scrollX = 0;\n    this.scrollY = 0;\n    this.currentPage = 1;\n    this.numPages = ceil(this.width / this.viewportWidth);\n\n    this.snapValueX = config.snapX === undefined ? snapValueX : config.snapX;\n    this.snapValueY = config.snapY === undefined ? snapValueY : config.snapY;\n    this.setSnapX(this.snapValueX);\n    this.setSnapY(this.snapValueY);\n\n    //console.log(this.maxScrollPosition);\n  };\n\n\n  KeyEditor.prototype.setBarsPerPage = function (bbp) {\n    this.interrupt = true;\n\n    var tmp = round(this.scrollX / (this.viewportWidth / this.barsPerPage));\n    this.barsPerPage = bbp;\n    this.tickWidth = this.viewportWidth / (this.startPosition.ticksPerBar * this.barsPerPage);\n    this.viewportTicks = this.viewportWidth / this.tickWidth;\n    this.width = this.numTicks * this.tickWidth;\n    this.verticalLine.reset();\n    this.horizontalLine.reset();\n    this.eventIterator.reset();\n    this.partIterator.reset();\n    this.scrollLimit = this.viewportWidth / this.tickWidth;\n    this.maxScrollPosition = ceil(this.width / this.viewportWidth);\n    this.snapWidth = this.tickWidth * this.snapTicks;\n\n    this.numPages = ceil(this.numBars / this.barsPerPage);\n    this.currentPage = floor(this.song.ticks / (this.barsPerPage * this.song.ticksPerBar)) + 1;\n\n    dispatchEvent(this, 'scale', {});\n\n    if (this.song.playing) {\n      this.scrollPosition = floor(this.song.ticks / this.viewportTicks);\n    } else {\n      //console.log(tmp,this.scrollPosition);\n      this.scrollPosition = ((this.viewportWidth / this.barsPerPage) * tmp) / this.viewportWidth;\n      dispatchEvent(this, 'scroll', { x: (this.scrollPosition * this.viewportWidth) });\n    }\n    this.interrupt = false;\n  };\n\n\n  KeyEditor.prototype.setViewport = function (w, h) {\n    var draw = false;\n\n    if (this.barsPerPage && w !== this.viewportWidth) {\n      //@TODO: add support for time measurement changes\n      this.viewportWidth = w;\n      this.tickWidth = this.viewportWidth / (this.startPosition.ticksPerBar * this.barsPerPage);\n      this.viewportTicks = this.viewportWidth / this.tickWidth;\n      this.width = this.numTicks * this.tickWidth;\n      draw = true;\n    } else if (this.exactFitHorizontal === true && w !== this.width) {\n      this.viewportWidth = this.width = w;\n      this.tickWidth = this.width / this.numTicks;\n      draw = true;\n    }\n\n    if (this.exactFitVertical === true && h !== this.height) {\n      this.viewportHeight = this.height = h;\n      this.pitchHeight = this.height / this.pitchRange;\n      draw = true;\n    }\n\n    if (draw) {\n      this.verticalLine.reset();\n      this.horizontalLine.reset();\n      this.eventIterator.reset();\n      this.noteIterator.reset();\n      this.partIterator.reset();\n\n      dispatchEvent(this, 'draw', {});\n    }\n  };\n\n\n  KeyEditor.prototype.updateSong = function (data) {\n    this.iteratorFactory.updateSong();\n\n    var key, i = 0, j, k, arr, tmp;\n\n    for (i = updateDataKeys.length - 1; i >= 0; i--) {\n      key = updateDataKeys[i];\n      switch (key) {\n        case 'newNotes':\n        case 'changedNotes':\n          arr = data[key];\n          for (j = arr.length - 1; j >= 0; j--) {\n            tmp = arr[j];\n            tmp.bbox = this.getNoteRect(tmp);\n          }\n          break;\n\n        case 'newParts':\n        case 'changedParts':\n          arr = data[key];\n          for (j = arr.length - 1; j >= 0; j--) {\n            tmp = arr[j];\n            tmp.bbox = this.getPartRect(tmp);\n          }\n          break;\n      }\n    }\n\n    /*\n            this.newNumBars = data.numBars;\n            // delete numBars otherwise the for loop below doesn't work anymore\n            delete data.numBars;\n    \n            for(key in data){\n                if(data.hasOwnProperty(key)){\n                    arr = data[key];\n                    for(j = arr.length - 1; j >= 0; j--){\n                        tmp = arr[j];\n                        k = floor(i/3);\n                        //console.log(i,k);\n                        switch(k){\n                            case 0: // event arrays\n                                //console.log(k,i);\n                                //tmp.bbox = getEventRect(tmp);\n                                // arr[j] = {\n                                //     event: tmp\n                                // }\n                                break;\n                            case 1: // note arrays\n                                //console.log(k,i);\n                                if(tmp.bbox)\n                                console.log(1,tmp.bbox.x)\n                                tmp.bbox = this.getNoteRect(tmp);\n                                console.log(2,tmp.bbox.x)\n                                // arr[j] = {\n                                //     note: tmp,\n                                //     bbox: this.getNoteRect(tmp)\n                                // }\n                                break;\n                            case 2: // part arrays\n                                //console.log(k,i);\n                                //console.log(tmp);\n                                tmp.bbox = this.getPartRect(tmp);\n                                // arr[j] = {\n                                //     part: tmp,\n                                //     bbox: this.getPartRect(tmp)\n                                // }\n                                break;\n                        }\n                    }\n                    i++;\n                }\n            }\n    */\n    this.newNumBars = data.numBars;\n\n    this.newEvents = this.newEvents.concat(data.newEvents);\n    this.changedEvents = this.changedEvents.concat(data.changedEvents);\n    this.removedEvents = this.removedEvents.concat(data.removedEvents);\n    this.removedEventsObj = arrayToObject(this.removedEvents, 'id');\n\n    this.newNotes = this.newNotes.concat(data.newNotes);\n    this.changedNotes = this.changedNotes.concat(data.changedNotes);\n    this.removedNotes = this.removedNotes.concat(data.removedNotes);\n    this.removedNotesObj = arrayToObject(this.removedNotes, 'id');\n\n    this.newParts = this.newParts.concat(data.newParts);\n    this.changedParts = this.changedParts.concat(data.changedParts);\n    this.removedParts = this.removedParts.concat(data.removedParts);\n    this.removedPartsObj = arrayToObject(this.removedParts, 'id');\n  };\n\n\n  KeyEditor.prototype.setStartPosition = function (pos) {\n    if (typeString(pos) !== 'array') {\n      pos = ['barsandbeats', pos, 1, 1, 0];\n    }\n\n    this.startPosition = getPosition(this.song, pos);\n    this.startTicks = this.startPosition.ticks;\n    this.startMillis = this.startPosition.millis;\n    //console.log('start',pos,this.startTicks);\n  };\n\n\n  KeyEditor.prototype.setEndPosition = function (pos) {\n    if (typeString(pos) !== 'array') {\n      pos = ['barsandbeats', pos, 1, 1, 0];\n    }\n\n    this.endPosition = getPosition(this.song, pos);\n    this.endTicks = this.endPosition.ticks;\n    this.endMillis = this.endPosition.millis;\n    //console.log('end',pos,this.endTicks,this.endPosition);\n  };\n\n\n  KeyEditor.prototype.addEventListener = function (id, cb) {\n    var ids = id.split(' '),\n      tmp,\n      editor = this,\n      eventId;\n\n    ids.forEach(function (id) {\n\n      tmp = editor.eventListeners[id];\n\n      if (tmp === undefined) {\n        editor.eventListeners[id] = [];\n        tmp = editor.eventListeners[id];\n      }\n\n      eventId = id + '-' + tmp.length;\n      tmp.push(cb);\n    });\n  };\n\n\n  KeyEditor.prototype.nextPage = function () {\n    setPageData(this, this.startBar + this.barsPerPage);\n    dispatchEvent(this, 'pagechange', { pageNo: this.pageNo, lastPage: this.lastPage });\n  };\n\n\n  KeyEditor.prototype.prevPage = function () {\n    setPageData(this, this.startBar - this.barsPerPage);\n    dispatchEvent(this, 'pagechange', { pageNo: this.pageNo, lastPage: this.lastPage });\n  };\n\n\n  KeyEditor.prototype.gotoPage = function (n) {\n    console.warn('ooops, not implemented yet!');\n    return;\n    // n = n - 1;\n    // if (n < 0 || n > this.lastPage) {\n    //     return;\n    // }\n    // this.pageNo = n;\n    // dispatchEvent(this, 'pagechange', { pageNo: this.pageNo, lastPage: this.lastPage });\n    // setPageData(this, this.pageNo);\n  };\n\n\n  KeyEditor.prototype.scroll = function (action) {\n\n    //this.scrollPosition = floor(this.scrollX/this.viewportWidth);\n    var x,\n      tmp = round(this.scrollX / (this.viewportWidth / this.barsPerPage));\n\n    this.scrollPosition = ((this.viewportWidth / this.barsPerPage) * tmp) / this.viewportWidth;\n\n    switch (action) {\n      case '>':\n        this.scrollPosition += 1;\n        this.scrollPosition = this.scrollPosition > this.maxScrollPosition ? this.maxScrollPosition : this.scrollPosition;\n        break;\n      case '>>':\n        this.scrollPosition = this.maxScrollPosition;\n        break;\n      case '<':\n        this.scrollPosition -= 1;\n        this.scrollPosition = this.scrollPosition < 0 ? 0 : this.scrollPosition;\n        break;\n      case '<<':\n        this.scrollPosition = 0;\n        break;\n      default:\n        if (isNaN(action)) {\n          return;\n        }\n        this.scrollPosition = parseInt(action);\n    }\n\n    x = this.scrollPosition * this.viewportWidth;\n    this.scrollLimit = (x + this.viewportWidth) / this.tickWidth;\n    this.currentPage = ceil(x / this.viewportWidth) + 1;\n    if (this.currentPage === 0) {\n      this.currentPage = 1;\n    } else if (this.currentPage > this.maxScrollPosition) {\n      this.currentPage = this.maxScrollPosition;\n    }\n    //console.log('bar',(this.scrollPosition * this.barsPerPage),'scroll',this.scrollPosition);\n    dispatchEvent(this, 'scroll', { x: x });\n  };\n\n\n  KeyEditor.prototype.updateScroll = function (scrollX, scrollY) {\n    this.scrollX = scrollX;\n    this.scrollY = scrollY;\n    this.scrollLimit = (scrollX + this.viewportWidth) / this.tickWidth;\n  };\n\n\n  KeyEditor.prototype.getEventRect = function (event) {\n    //console.log(note.number);\n    var\n      x = this.ticksToX(event.ticks - this.startTicks, false),\n      y = this.pitchToY(event.number),\n      w = eventWidth * this.tickWidth,\n      h = this.pitchHeight;\n\n    return {\n      x: x,\n      y: y,\n      width: w,\n      height: h,\n      top: y,\n      left: x,\n      bottom: y + h,\n      right: x + w\n    };\n  };\n\n\n  KeyEditor.prototype.getNoteRect = function (note) {\n    //console.log(note.number);\n    var\n      x = this.ticksToX(note.ticks - this.startTicks, false),//(note.ticks - this.startTicks) * this.tickWidth,\n      y = this.pitchToY(note.number),\n      w = note.durationTicks * this.tickWidth,\n      h = this.pitchHeight,\n      start, end, diff;\n\n    if (note.endless) {\n      w = (this.song.ticks - note.noteOn.ticks) * this.tickWidth;\n    }\n\n    ///*\n    if (this.paginate) {\n\n      start = note.ticks;\n      end = note.noteOff.ticks;\n\n      if (start < this.startTicks) {\n        diff = this.startTicks - start;\n        start = start + diff - this.startTicks;\n        x = start * this.tickWidth;\n\n        end = end > this.endTicks ? this.endTicks : end;\n        w = (end - this.startTicks) * this.tickWidth;\n      } else {\n        return false;\n      }\n    }\n\n    //*/\n\n    return {\n      x: x,\n      y: y,\n      width: w,\n      height: h,\n      top: y,\n      left: x,\n      bottom: y + h,\n      right: x + w\n    };\n  };\n\n\n  KeyEditor.prototype.getPartRect = function (part) {\n    var stats = part.getStats('noteNumber all'),\n      //firstEvent = part.events[0],\n      //lastEvent = part.events[part.events.length - 1],\n      bbox = {\n        // left: (firstEvent.ticks - this.startTicks) * this.tickWidth,\n        // right: (lastEvent.ticks - this.startTicks) * this.tickWidth,\n        // top: this.height - ((stats.max - this.lowestNote + 1) * this.pitchHeight),\n        // bottom: this.height - ((stats.min - this.lowestNote + 1) * this.pitchHeight) + this.pitchHeight,\n        top: this.pitchToY(stats.max),// - this.pitchHeight,\n        bottom: this.pitchToY(stats.min) + this.pitchHeight,\n        left: this.ticksToX(part.start.ticks - this.startTicks, false),\n        right: this.ticksToX(part.end.ticks - this.startTicks, false),\n        //left: this.ticksToX(part.events[0].ticks, false),\n        //right: this.ticksToX(part.events[part.events.length - 1].ticks, false)\n      };\n\n    //console.log(stats.min, stats.max);\n\n    bbox.x = bbox.left;\n    bbox.y = bbox.top;\n    bbox.width = bbox.right - bbox.left;\n    bbox.height = bbox.bottom - bbox.top;\n\n    part.bbox = bbox;\n    part.stats = stats;\n    //console.log(part.id,stats,bbox);\n    return bbox;\n  };\n\n\n  KeyEditor.prototype.getBBox = function (arg) {\n    var type, data;\n    if (typeString(arg) === 'string') {\n      switch (arg.substring(0, 1)) {\n        case 'E':\n          type = 'event';\n          if (event.type === 144 && event.endEvent !== undefined) {\n            data = this.song.findEvent('id = ' + arg);\n          } else {\n            console.error('argument not supported, please check documentation');\n            return;\n          }\n          break;\n        case 'P':\n          type = 'part';\n          data = this.song.getPart(arg);\n          break;\n        case 'T':\n          type = 'track';\n          break;\n        default:\n          console.error('argument not supported, please check documentation');\n          return;\n      }\n    } else {\n      switch (arg.className) {\n        case 'AudioEvent':\n          type = 'audio';\n          break;\n        case 'MidiEvent':\n          type = 'event';\n          break;\n        case 'Part':\n          type = 'part';\n          break;\n        case 'Track':\n          type = 'track';\n          break;\n        default:\n          console.error('argument not supported, please check documentation');\n          return;\n      }\n    }\n\n    if (data === undefined) {\n      console.error(arg, 'could not be found');\n      return;\n    }\n\n    switch (type) {\n      case 'event':\n        return this.getNoteRect(data);\n      //break;\n      case 'part':\n        return this.getPartRect(data);\n      //break;\n    }\n  };\n\n\n  KeyEditor.prototype.startMoveNote = function (note, x, y) {\n    if (note.className !== 'MidiNote') {\n      if (sequencer.debug >= sequencer.WARN) {\n        console.warn(note, 'is not a MidiNote');\n      }\n      return;\n    }\n    //sequencer.unscheduleEvent(note);\n    this.selectedNote = note;\n    this.gripX = x - this.selectedNote.bbox.x;\n  };\n\n\n  KeyEditor.prototype.stopMoveNote = function () {\n    this.selectedNote = undefined;\n  };\n\n\n  KeyEditor.prototype.moveNote = function (x, y) {\n    if (this.selectedNote === undefined) {\n      return;\n    }\n\n    var\n      newPitch = this.yToPitch(y).number,\n      oldPitch = this.selectedNote.pitch,\n      newTicks = this.xToTicks(x - this.gripX),\n      oldTicks = this.selectedNote.ticks,\n      part = this.selectedNote.part,\n      update = false;\n\n    //console.log(newTicks, oldTicks, this.gripX, x);\n\n    if (newPitch !== oldPitch) {\n      part.transposeNote(this.selectedNote, newPitch - oldPitch);\n      update = true;\n    }\n\n    if (newTicks !== oldTicks) {\n      part.moveNote(this.selectedNote, newTicks - oldTicks);\n      update = true;\n    }\n\n    if (update === true) {\n      this.song.update();\n    }\n  };\n\n\n  KeyEditor.prototype.startMovePart = function (part, x, y) {\n    if (part.className !== 'Part') {\n      if (sequencer.debug >= sequencer.WARN) {\n        console.warn(part, 'is not a Part');\n      }\n      return;\n    }\n    this.selectedPart = part;\n    this.selectedPart.pitch = this.yToPitch(y).number;\n    this.gripX = x - this.selectedPart.bbox.x;\n  };\n\n\n  KeyEditor.prototype.stopMovePart = function () {\n    this.selectedPart = undefined;\n  };\n\n\n  KeyEditor.prototype.movePart = function (x, y, autoUpdate) {\n    // console.log(this.selectedPart);\n    if (this.selectedPart === undefined) {\n      return;\n    }\n    if (typeof autoUpdate === 'undefined') {\n      autoUpdate = true;\n    }\n    // console.log(autoUpdate);\n\n    var\n      newPitch = this.yToPitch(y).number,\n      oldPitch = this.selectedPart.pitch,\n      newTicks = this.xToTicks(x - this.gripX),\n      oldTicks = this.selectedPart.ticks,\n      update = false;\n\n    if (newPitch !== oldPitch) {\n      this.selectedPart.track.transposePart(this.selectedPart, newPitch - oldPitch);\n      this.selectedPart.pitch = newPitch;\n      update = true;\n    }\n\n\n    if (newTicks !== oldTicks) {\n      this.selectedPart.track.movePart(this.selectedPart, newTicks - oldTicks);\n      update = true;\n    }\n\n    if (update === true && autoUpdate === true) {\n      this.song.update();\n    }\n  };\n\n\n  KeyEditor.prototype.getTicksAt = KeyEditor.prototype.xToTicks = function (x, snap) {\n    var ticks = ((x + this.scrollX) / this.width) * this.numTicks;\n    //console.log(this.scrollX,this.width,this.numTicks,ticks);\n    if (snap !== false && this.snapTicks !== 0) {\n      //ticks = floor(ticks/this.snapTicks) * this.snapTicks;\n      ticks = round(ticks / this.snapTicks) * this.snapTicks;\n    }\n    //console.log(ticks, this.snapTicks);\n    return ticks;\n  };\n\n\n  KeyEditor.prototype.getPitchAt = KeyEditor.prototype.yToPitch = function (y) {\n    //var note = this.highestNote - floor(((y + this.scrollY)/this.height) * this.pitchRange);\n    var note = this.highestNote - round(((y + this.scrollY) / this.height) * this.pitchRange);\n    note = createNote(note);\n    return note;\n  };\n\n\n  KeyEditor.prototype.getXAt = KeyEditor.prototype.ticksToX = function (ticks, snap) {\n    // var p = ticks/this.numTicks,\n    //     x = (p * this.width) - this.scrollX;\n    var x = (ticks - this.startTicks) * this.tickWidth;\n    if (snap !== false && this.snapWidth !== 0) {\n      //x = (floor(x/this.snapWidth) * this.snapWidth);\n      x = (round(x / this.snapWidth) * this.snapWidth);\n    }\n    return x;\n  };\n\n\n  KeyEditor.prototype.getYAt = KeyEditor.prototype.pitchToY = function (noteNumber) {\n    var y = this.height - ((noteNumber - this.lowestNote + 1) * this.pitchHeight);\n    return y;\n  };\n\n\n  KeyEditor.prototype.getPositionAt = function (x) {\n    var ticks = this.getTicksAt(x);\n    // console.time('get position')\n    // var position = getPosition(this.song,['ticks',ticks]);\n    // console.timeEnd('get position')\n    // return position;\n    //console.time('get position')\n    this.playhead.set('ticks', ticks, false);\n    //console.timeEnd('get position')\n    return this.playhead.get();\n  };\n\n\n  KeyEditor.prototype.getPlayheadX = function (compensateForScroll) {\n    var x = ((this.song.ticks / this.song.durationTicks) * this.width);\n    //var x = ((this.song.millis/this.song.durationMillis) * this.width);\n    //var x = (this.song.percentage * this.width);\n    x = compensateForScroll === true ? x - this.scrollX : x;\n    return x;\n  };\n\n\n  KeyEditor.prototype.setPlayheadToX = function (x) {\n    var ticks = this.xToTicks(x, false);\n    this.song.setPlayhead('ticks', ticks);\n  };\n\n  KeyEditor.prototype.getPlayheadPosition = function (compensateForScroll) {\n    //return (sequencer.percentage * this.width);// - this.scrollX;\n    //return ((sequencer.millis/song.durationMillis) * this.width);// - this.scrollX;\n    //var x = ((this.song.millis/this.song.durationMillis) * this.width);\n    // change to ticks to make tempo changes visible by a faster moving playhead\n    var x = ((this.song.ticks / this.song.durationTicks) * this.width);\n    x = compensateForScroll === true ? x - this.scrollX : x;\n    return x;\n  };\n\n\n  KeyEditor.prototype.setPlayheadPosition = function (type, value) {\n    //console.log(this.scrollX,value, this.scrollX + value);\n    var ticks;\n    switch (type) {\n      case 'x':\n        ticks = this.xToTicks(value, false);\n        break;\n      case 'ticks':\n        ticks = value;\n        break;\n      case 'millis':\n        ticks = this.playhead.set('millis', value).ticks;\n        break;\n      case 'barsbeats':\n      case 'barsandbeats':\n        ticks = getPosition(this.song, ['barsbeats', value]).ticks;\n        break;\n    }\n    this.song.setPlayhead('ticks', ticks);\n  };\n\n\n  KeyEditor.prototype.getEventAt = function (x, y) {\n    var position = this.getSongPosition(x),\n      pitch = this.getPitchAt(y);\n  };\n\n\n  KeyEditor.prototype.getEventsInRect = function (x, y, w, h) {\n    var startPos = this.getSongPosition(x),\n      endPos = this.getSongPosition(x + w),\n      startPitch = this.getPitchAt(y + h),\n      endPitch = this.getPitchAt(y);\n\n  };\n\n\n  KeyEditor.prototype.getNoteAt = function (x, y) {\n    var position = this.getSongPosition(x),\n      pitch = this.getPitchAt(y);\n  };\n\n\n  KeyEditor.prototype.getNotesInRect = function (x, y, w, h) {\n    var startPos = this.getSongPosition(x),\n      endPos = this.getSongPosition(x + w),\n      startPitch = this.getPitchAt(y + h),\n      endPitch = this.getPitchAt(y);\n  };\n\n\n  // takes x,y and returns snapped x,y\n  KeyEditor.prototype.snap = function (x, y) {\n    return {\n      x: this.snapX(x),\n      y: this.snapY(y)\n    };\n  };\n\n\n  // takes x returns snapped x\n  KeyEditor.prototype.snapX = function (x) {\n    //return floor((x + this.scrollX)/this.snapWidth) * this.snapWidth;\n    return round((x + this.scrollX) / this.snapWidth) * this.snapWidth;\n\n  };\n\n\n  // takes y returns snapped y\n  KeyEditor.prototype.snapY = function (y) {\n    //return floor((y + this.scrollY)/this.snapHeight) * this.snapHeight;\n    return round((y + this.scrollY) / this.snapHeight) * this.snapHeight;\n  };\n\n\n  KeyEditor.prototype.setSnapX = function (snapX) {\n    if (snapX === undefined) {\n      return;\n    }\n    //console.log('in', snapX);\n    // 4 -> 1, 8 -> 0.5 16 -> 0.25\n    var beatLength = 4 / this.song.denominator;\n\n    if (snapX === 'off') {\n      this.snapTicks = 0;\n    } else if (snapX === 'tick') {\n      this.snapTicks = 1;\n    } else if (snapX === 'beat') {\n      // TODO: dependent on current time signature!\n      this.snapTicks = this.song.ppq * beatLength;\n    } else if (snapX === 'bar') {\n      // TODO: dependent on current time signature!\n      this.snapTicks = (this.song.ppq * this.song.nominator) * beatLength;\n    } else if (isNaN(snapX) && snapX.indexOf('ticks') !== -1) {\n      this.snapTicks = snapX.replace(/ticks/, '');\n      if (isNaN(this.snapTicks)) {\n        this.snapTicks = this.song.ppq / 4;// sixteenth note\n      } else {\n        this.snapTicks = parseInt(this.snapTicks);\n      }\n    } else {\n      if (isNaN(snapX) || snapX === 0) {\n        // by default snap is off\n        snapX = 0;\n        this.snapTicks = 0;\n      } else {\n        snapX = parseInt(snapX);\n        this.snapTicks = (4 / snapX) * this.song.ppq;\n      }\n    }\n\n    //console.log(snapX,this.snapTicks, beatLength);\n    this.snapValueX = snapX;\n    this.snapWidth = this.tickWidth * this.snapTicks;\n  };\n\n\n  KeyEditor.prototype.setSnapY = function (snapY) {\n    if (snapY === undefined) {\n      return;\n    }\n    this.snapValueY = snapY;\n    //todo: add other scales then chromatic\n    this.snapHeight = this.pitchHeight;\n  };\n\n\n  KeyEditor.prototype.removeNote = function (note) {\n    //note.part.removeNote(note);\n    //console.log(note.id);\n    note.part.removeEvents(note.noteOn, note.noteOff);\n    this.song.update();\n  };\n\n\n  KeyEditor.prototype.removePart = function (part) {\n    part.track.removePart(part);\n    this.song.update();\n  };\n\n\n  KeyEditor.prototype.prepareForRecording = function () {\n    this.recordedEventsObj = {};\n    this.recordedNotesObj = {};\n  };\n\n\n  KeyEditor.prototype.getSnapshot = function () {\n\n    var activeEventsObj,\n      activeNotesObj,\n      activePartsObj,\n\n      recordedNotesSong,\n      //recordingNotesSong,\n      recordedEventsSong,\n\n      nonActiveEvents = [],\n      nonActiveNotes = [],\n      nonActiveParts = [],\n\n      prevActiveEvents = [].concat(this.activeEvents),\n      prevActiveNotes = [].concat(this.activeNotes),\n      prevActiveParts = [].concat(this.activeParts),\n\n      recordedEvents = [],\n      recordedNotes = [],\n      recordingNotes = [],\n\n      //prevRemovedNotes = [].concat(this.removedNotes),\n\n      s, e, n, p, i, j, tmp, length,\n      startBar, endBar;\n\n    this.activeEvents = [];\n    this.activeNotes = [];\n    this.activeParts = [];\n\n    this.activeStateChangedEvents = [];\n    this.activeStateChangedNotes = [];\n    this.activeStateChangedParts = [];\n\n    //if(this.song.bars > this.numBars){\n    if (this.newNumBars !== this.numBars) {\n      startBar = this.numBars;\n      endBar = this.song.lastBar + 1;\n      //console.log(startBar,endBar)\n      //this.verticalLine.setStartPosition(getPosition(song, ['barsbeats', startBar, 1, 1, 0]));\n      //this.verticalLine.setEndPosition(getPosition(song, ['barsbeats', endBar, 1, 1, 0]));\n      this.endPosition = getPosition(this.song, ['barsbeats', endBar, 1, 1, 0, true]);\n      this.verticalLine.reset(getPosition(this.song, ['barsbeats', startBar, 1, 1, 0, true]), this.endPosition);\n      this.numBars = this.song.bars;\n\n      //console.log(this.song.lastBar, this.endPosition.barsAsString);\n\n      this.endTicks = this.endPosition.ticks;\n      this.numTicks = this.song.durationTicks;\n      this.width = this.numTicks * this.tickWidth;\n      //console.log('new width', this.width, this.numTicks, this.tickWidth);\n      //console.log('song has gotten longer boy!', this.song.bars, this.newNumBars, this.numBars, this.width);\n      this.maxScrollPosition = ceil(this.width / this.viewportWidth);\n      //this.numPages = ceil(this.width/this.viewportWidth);\n      this.numPages = ceil(this.numBars / this.barsPerPage);\n    }\n\n\n\n    activeEventsObj = this.song.activeEvents;\n    for (i in activeEventsObj) {\n      if (activeEventsObj.hasOwnProperty(i)) {\n        tmp = activeEventsObj[i];\n        this.activeEvents.push(tmp);\n        if (tmp.active !== true) {\n          tmp.active = true;\n          this.activeStateChangedEvents.push(tmp);\n        }\n      }\n    }\n\n    activeNotesObj = this.song.activeNotes;\n    for (i in activeNotesObj) {\n      if (activeNotesObj.hasOwnProperty(i)) {\n        tmp = activeNotesObj[i];\n        this.activeNotes.push(tmp);\n        //console.log(tmp, tmp.active);\n        if (tmp.active !== true) {\n          tmp.active = true;\n          this.activeStateChangedNotes.push(tmp);\n        }\n      }\n    }\n\n    activePartsObj = this.song.activeParts;\n    for (i in activePartsObj) {\n      if (activePartsObj.hasOwnProperty(i)) {\n        tmp = activePartsObj[i];\n        this.activeParts.push(tmp);\n        if (tmp.active !== true) {\n          tmp.active = true;\n          this.activeStateChangedParts.push(tmp);\n        }\n      }\n    }\n\n    // fixing issue #4\n    recordedEventsSong = this.song.recordedEvents;\n    if (recordedEventsSong) {\n      length = recordedEventsSong.length;\n      for (i = 0; i < length; i++) {\n        tmp = recordedEventsSong[i];\n        if (this.recordedEventsObj[tmp.id] === undefined) {\n          tmp.bbox = this.getEventRect(tmp);\n          recordedEvents.push(tmp);\n          this.recordedEventsObj[tmp.id] = tmp;\n        }\n      }\n    }\n\n    // fixing issue #4\n    recordedNotesSong = this.song.recordedNotes;\n    if (recordedNotesSong) {\n      length = recordedNotesSong.length;\n      for (i = 0; i < length; i++) {\n        tmp = recordedNotesSong[i];\n        if (this.recordedNotesObj[tmp.id] === undefined) {\n          this.recordedNotesObj[tmp.id] = tmp;\n          tmp.bbox = this.getNoteRect(tmp);\n          recordedNotes.push(tmp);\n          //console.log('recordedNotes', tmp);\n        } else if (tmp.endless === true) {\n          tmp.bbox = this.getNoteRect(tmp);\n          recordingNotes.push(tmp);\n          //console.log('endless1', tmp);\n        } else if (tmp.endless === false) {\n          tmp.bbox = this.getNoteRect(tmp);\n          recordingNotes.push(tmp);\n          //console.log('endless2', tmp);\n          tmp.endless = undefined;\n        }\n        //console.log(tmp.bbox.width);\n      }\n    }\n    /*\n            recordingNotesObj = this.song.recordingNotes;\n            for(i in recordingNotesObj){\n                if(recordingNotesObj.hasOwnProperty(i)){\n                    tmp = recordingNotesObj[i];\n                    tmp.bbox = this.getNoteRect(tmp);\n                    recordingNotes.push(tmp);\n                }\n            }\n    */\n\n    for (i = prevActiveEvents.length - 1; i >= 0; i--) {\n      tmp = prevActiveEvents[i];\n      if (tmp === undefined) {\n        console.warn('event is undefined');\n        continue;\n      }\n      if (activeEventsObj[tmp.id] === undefined) {\n        nonActiveEvents.push(tmp);\n        if (tmp.active !== false) {\n          tmp.active = false;\n          this.activeStateChangedEvents.push(tmp);\n        }\n      }\n    }\n\n    for (i = prevActiveNotes.length - 1; i >= 0; i--) {\n      tmp = prevActiveNotes[i];\n      if (tmp === undefined) {\n        console.warn('note is undefined');\n        continue;\n      }\n      if (activeNotesObj[tmp.id] === undefined) {\n        nonActiveNotes.push(tmp);\n        if (tmp.active !== false) {\n          tmp.active = false;\n          this.activeStateChangedNotes.push(tmp);\n        }\n      }\n    }\n\n    for (i = prevActiveParts.length - 1; i >= 0; i--) {\n      tmp = prevActiveParts[i];\n      if (tmp === undefined) {\n        console.warn('part is undefined');\n        continue;\n      }\n      if (activePartsObj[tmp.id] === undefined) {\n        nonActiveParts.push(tmp);\n        if (tmp.active !== false) {\n          tmp.active = false;\n          this.activeStateChangedParts.push(tmp);\n        }\n      }\n    }\n\n    if (this.song.playing) {\n      //            this.currentPage = floor(sequencer.ticks / this.viewportTicks) + 1;\n      this.currentPage = floor(this.song.ticks / (this.barsPerPage * this.song.ticksPerBar)) + 1;\n    }\n\n    /*\n    \n            tmp = this.song.parts;\n            n = false;\n            // check for empty parts and remove them -> @TODO: this should be done in track and/or part!\n            for(i = tmp.length - 1; i >= 0; i--){\n                p = tmp[i];\n                console.log(p.keepWhenEmpty);\n                if(p.keepWhenEmpty === true){\n                    continue;\n                }\n                if(p.events.length === 0){\n                    //console.log('empty part!');\n                    p.track.removePart(p);\n                    n = true;\n                }\n            }\n            if(n){\n                this.song.update();\n            }\n    */\n\n    s = {\n\n      events: {\n        active: this.activeEvents,\n        inActive: this.nonActiveEvents,\n        recorded: recordedEvents,\n        new: this.newEvents,\n        changed: this.changedEvents,\n        removed: this.removedEvents,\n        stateChanged: this.activeStateChangedEvents\n      },\n\n      notes: {\n        active: this.activeNotes,\n        inActive: nonActiveNotes,\n        recorded: recordedNotes,\n        recording: recordingNotes,\n        new: this.newNotes,\n        changed: this.changedNotes,\n        removed: this.removedNotes,\n        stateChanged: this.activeStateChangedNotes\n      },\n\n      parts: {\n        active: this.activeParts,\n        inActive: nonActiveParts,\n        new: this.newParts,\n        changed: this.changedParts,\n        removed: this.removedParts,\n        stateChanged: this.activeStateChangedParts\n\n      },\n\n\n      hasNewBars: startBar !== endBar,\n      newWidth: this.width,\n\n      pageNo: this.currentPage,\n      lastPage: this.numPages\n      //newWidth: song.durationTicks * this.tickWidth\n\n      // hasNewBars: function(){\n      //     if(startBar === endBar){\n      //         return false;\n      //     }\n      // }\n    };\n\n    this.newEvents = [];\n    this.changedEvents = [];\n    this.removedEvents = [];\n\n    this.newNotes = [];\n    this.changedNotes = [];\n    this.removedNotes = [];\n\n    this.newParts = [];\n    this.changedParts = [];\n    this.removedParts = [];\n\n    /*\n            tmp = this.song.parts;\n            n = false;\n    \n            // check for empty parts and remove them -> @TODO: this should be done in track and/or part!\n            for(i = tmp.length - 1; i >= 0; i--){\n                p = tmp[i];\n                if(p.keepWhenEmpty === true){\n                    continue;\n                }\n                if(p.events.length === 0){\n                    //console.log('empty part!');\n                    p.track.removePart(p);\n                    n = true;\n                }\n            }\n            if(n){\n                this.song.update();\n            }\n    */\n\n    return s;\n  };\n\n\n  // flipping pages\n\n  setPageData = function (editor, startBar) {\n    //editor.pageNo = no;\n    editor.numTicks = 0;\n\n    editor.startBar = startBar > 0 ? startBar : 0;\n    editor.startBar = editor.startBar > editor.numBars - editor.barsPerPage ? editor.numBars - editor.barsPerPage : editor.startBar;\n    editor.endBar = startBar + editor.barsPerPage;\n    editor.endBar = editor.endBar > editor.numBars ? editor.numBars : editor.endBar;\n    editor.endBar = editor.endBar < editor.barsPerPage ? editor.barsPerPage : editor.endBar;\n\n    console.log(startBar, editor.startBar, editor.endBar, editor.numBars, editor.numBars - editor.barsPerPage);\n    var i;\n\n    for (i = editor.startBar; i < editor.endBar; i++) {\n      editor.numTicks += editor.bars[i].ticksPerBar;\n    }\n    editor.tickWidth = editor.pageWidth / editor.numTicks;\n\n    editor.startPosition = editor.bars[editor.startBar];\n    editor.endPosition = editor.bars[editor.endBar];\n    editor.startTicks = editor.startPosition.ticks;\n    editor.endTicks = editor.endPosition.ticks;\n\n    editor.verticalLine.reset();\n    editor.horizontalLine.reset();\n    editor.eventIterator.reset();\n    //console.log('nextPage',editor.startPosition,editor.endPosition);\n  };\n\n\n  checkNextPage = function (editor) {\n    if (editor.song.playing() && editor.song.ticks >= editor.endTicks) {\n      //console.log('nextpage');\n      editor.nextPage();\n      //dispatchEvent(this, 'pagechange', {pageNo: this.pageNo, lastPage: this.lastPage});\n    }\n    requestAnimationFrame(function () {\n      checkNextPage(editor);\n    });\n  };\n\n\n  checkScrollPosition = function (editor) {\n    //console.log(editor.song.ticks,editor.scrollLimit,interrupt);\n    if (editor.song.playing && editor.interrupt === false) {\n      if (editor.song.ticks >= editor.scrollLimit) {\n        dispatchEvent(editor, 'scroll', { x: editor.scrollX + editor.viewportWidth });\n        editor.scrollLimit += (editor.viewportWidth / editor.tickWidth);\n        //editor.currentPage++;\n      } else {\n        var x = (floor(editor.song.ticks / editor.viewportTicks) * editor.viewportTicks) * editor.tickWidth;\n        if (editor.scrollX !== x) {\n          dispatchEvent(editor, 'scroll', { x: x });\n        }\n      }\n    }\n    requestAnimationFrame(function () {\n      checkScrollPosition(editor);\n    });\n  };\n\n\n  dispatchEvent = function (editor, id, data) {\n    //console.log(id,eventListeners);\n    var listeners = editor.eventListeners[id];\n    if (listeners) {\n      listeners.forEach(function (cb) {\n        cb(data);\n      });\n    }\n  };\n\n\n  handleKeys = function (editor) {\n    var p = editor.selectedPart,\n      n = editor.selectedNote;\n\n    if (p !== undefined) {\n      p.track.removePart(p);\n      this.song.update();\n    } else if (n !== undefined) {\n      n.part.removeNote(n);\n      this.song.update();\n    }\n  };\n\n\n  sequencer.createKeyEditor = function (song, config) {\n    return new KeyEditor(song, config);\n  };\n\n\n  sequencer.protectedScope.addInitMethod(function () {\n    getPosition = sequencer.protectedScope.getPosition;\n    createPlayhead = sequencer.protectedScope.createPlayhead;\n    createNote = sequencer.createNote;\n    debug = sequencer.debug;\n    floor = sequencer.protectedScope.floor;\n    round = sequencer.protectedScope.round;\n    typeString = sequencer.protectedScope.typeString;\n    objectToArray = sequencer.protectedScope.objectToArray;\n    arrayToObject = sequencer.protectedScope.arrayToObject;\n    getScaffoldingBars = sequencer.protectedScope.getScaffoldingBars;\n    createIteratorFactory = sequencer.protectedScope.createKeyEditorIteratorFactory;\n  });\n\n}\nfunction keyEditorIteratorFactory() {\n\n  'use strict';\n\n  var\n    minWidthSixteenth = 0.042,\n    minWidthBeat = 0.02,\n    /*\n            events,\n            numEvents,\n            notes,\n            numNotes,\n            parts,\n            numParts,\n    \n            song,\n            editor,\n            position,\n    */\n    // import\n    createPlayhead, // defined in playhead.js\n    createNote; // defined in note.js\n\n  //public\n  /*\n          create,\n          updateSong,\n          createVerticalLineIterator,\n          createHorizontalLineIterator,\n          createEventIterator,\n          createNoteIterator,\n          createPartIterator;\n  */\n\n  function Factory(song, editor) {\n    this.song = song;\n    this.editor = editor;\n    //console.log(this.editor);\n    //this.position = createPlayhead(this.song, 'barsbeats ticks millis', 'iterators');\n    this.position = createPlayhead(this.song, 'all', 'iterators');\n    this.updateSong();\n  }\n\n  /*\n      create = function(s, e){\n          song = s;\n          editor = e;\n          updateSong();\n          position = createPlayhead(song, 'barsbeats ticks millis', 'iterators');\n          return {\n              updateSong: updateSong,\n              createVerticalLineIterator: createVerticalLineIterator,\n              createHorizontalLineIterator: createHorizontalLineIterator,\n              createEventIterator: createEventIterator,\n              createNoteIterator: createNoteIterator,\n              createPartIterator: createPartIterator\n          };\n      };\n  */\n\n  Factory.prototype.updateSong = function () {\n    this.events = this.song.events;\n    this.numEvents = this.events.length;\n    this.notes = this.song.notes;\n    this.numNotes = this.notes.length;\n    this.parts = this.song.parts;\n    this.numParts = this.parts.length;\n    this.position.updateSong();\n  };\n\n\n  Factory.prototype.createVerticalLineIterator = function () {\n    var supportedTypes = 'bar beat sixteenth',\n      lineType,\n      numTicks = {},\n      tickWidth,\n      offset,\n      type,\n      ticks,\n      endTicks,\n      bar,\n      beat,\n      sixteenth,\n      nominator,\n      numSixteenth,\n      startPosition,\n      endPosition,\n      editor = this.editor,\n      position = this.position,\n      // widthBar,\n      // widthBeat,\n      // widthSixteenth,\n      data, next, hasNext, reset, getData, setType;\n    //setStartPosition, setEndPosition;\n\n\n    getData = function () {\n      //console.log('ticks',ticks);\n      data = position.update('ticks', ticks);\n      numTicks.bar = data.ticksPerBar;\n      numTicks.beat = data.ticksPerBeat;\n      numTicks.sixteenth = data.ticksPerSixteenth;\n      nominator = data.nominator;\n      numSixteenth = data.numSixteenth;\n      //console.log(numTicks,nominator,numSixteenth);\n      //console.log(ticks, data);\n    };\n\n    next = function (t) {\n      if (t) {\n        type = t;\n        // if (tickWidth < minWidthBeat) {\n        //     type = 'bar';\n        // } else if (tickWidth < minWidthSixteenth) {\n        //     type = 'beat';\n        // }\n      } else {\n        if (tickWidth < minWidthBeat) {\n          type = 'bar';\n        } else if (tickWidth < minWidthSixteenth) {\n          type = 'beat';\n        }\n      }\n\n      switch (type) {\n        case 'sixteenth':\n          lineType = 'sixteenth';\n          sixteenth++;\n          if (sixteenth > numSixteenth) {\n            lineType = 'beat';\n            sixteenth = 1;\n            beat++;\n            if (beat > nominator) {\n              lineType = 'bar';\n              beat = 1;\n              bar++;\n            }\n          }\n          break;\n        case 'beat':\n          lineType = 'beat';\n          sixteenth = 1;\n          beat++;\n          if (beat > nominator) {\n            lineType = 'bar';\n            beat = 1;\n            bar++;\n          }\n          break;\n        case 'bar':\n          lineType = 'bar';\n          sixteenth = 1;\n          beat = 1;\n          bar++;\n          break;\n      }\n      ticks += numTicks[type];\n      getData();\n      if (ticks > endTicks) {\n        return false;\n      }\n      //console.log(bar,beat,sixteenth);\n      return {\n        x: (ticks * tickWidth) - offset,\n        bar: bar,\n        beat: beat,\n        sixteenth: sixteenth,\n        // widthBar: widthBar,\n        // widthBeat: widthBeat,\n        // widthSixteenth: widthSixteenth,\n        type: lineType,\n        position: data\n      };\n    };\n\n    hasNext = function (t) {\n      var diffTicks = endTicks - ticks,\n        result = false;\n\n      if (t) {\n        type = t;\n        if (tickWidth < minWidthBeat) {\n          type = 'bar';\n        } else if (tickWidth < minWidthSixteenth) {\n          type = 'beat';\n        }\n      }\n\n      switch (type) {\n        case 'bar':\n          result = diffTicks >= numTicks[type];\n          break;\n        case 'beat':\n          result = diffTicks >= numTicks[type];\n          break;\n        case 'sixteenth':\n          result = diffTicks >= numTicks[type];\n          break;\n      }\n      //console.log(ticks,endTicks,diffTicks);\n      return result;\n    };\n\n    reset = function (start, end) {\n      startPosition = start || editor.startPosition;\n      endPosition = end || editor.endPosition;\n      ticks = startPosition.ticks;\n      bar = startPosition.bar;\n      beat = startPosition.beat;\n      sixteenth = startPosition.sixteenth;\n      //console.log(startPosition.barsAsString);\n      //console.log(endPosition.barsAsString);\n      //console.log(ticks,bar,beat,sixteenth);\n      endTicks = endPosition.ticks;\n      tickWidth = editor.tickWidth;\n      offset = 0;//ticks * this.editor.tickWidth;\n      position.set('ticks', ticks);\n      //console.log(tickWidth,offset);\n      if (tickWidth < minWidthBeat) {\n        type = 'bar';\n      } else if (tickWidth < minWidthSixteenth) {\n        type = 'beat';\n      }\n      getData();\n      // widthBar = numTicks.bar * this.editor.tickWidth;\n      // widthBeat = numTicks.beat * this.editor.tickWidth;\n      // widthSixteenth = numTicks.sixteenth * this.editor.tickWidth;\n    };\n    /*\n            setStartPosition = function(position){\n                startPosition = position;\n            };\n    \n            setEndPosition = function(position){\n                endPosition = position;\n            };\n    */\n    setType = function (t) {\n      type = t;\n      if (tickWidth < minWidthBeat) {\n        type = 'bar';\n      } else if (tickWidth < minWidthSixteenth) {\n        type = 'beat';\n      }\n    };\n\n    //console.log('ver');\n    return {\n      next: next,\n      reset: reset,\n      hasNext: hasNext,\n      setType: setType\n      //setStartPosition: setStartPosition,\n      //setEndPosition: setEndPosition,\n    };\n  };\n\n\n  Factory.prototype.createHorizontalLineIterator = function () {\n    var index,\n      pitch,\n      range,\n      pitchHeight,\n      data = {},\n      editor = this.editor,\n      next, hasNext, reset;\n\n    next = function (type) {\n      data = {\n        note: createNote(pitch),\n        y: (index * pitchHeight)\n      };\n      pitch--;\n      index++;\n      return data;\n    };\n\n    hasNext = function (type) {\n      var result = false;\n      switch (type) {\n        case 'chromatic':\n          result = index < range;\n          break;\n      }\n      return result;\n    };\n\n    reset = function () {\n      index = 0;\n      pitch = editor.highestNote;\n      range = editor.pitchRange;\n      pitchHeight = editor.pitchHeight;\n      //console.log('reset',pitch,range,pitchHeight);\n    };\n\n    //console.log('hor');\n    return {\n      next: next,\n      reset: reset,\n      hasNext: hasNext\n    };\n  };\n\n\n  Factory.prototype.createEventIterator = function () {\n    var startTicks,\n      endTicks,\n      hasNextCalled,\n      index,\n      nextEvent,\n      editor = this.editor,\n      position = this.position,\n      events = this.events,\n      numEvents = this.numEvents,\n      types = '',\n      next, hasNext, reset, setTypes;\n\n    hasNext = function (t) {\n      types = t || types;\n      hasNextCalled = true;\n      index++;\n      if (index === numEvents) {\n        return false;\n      }\n\n      nextEvent = events[index];\n      if (types === '') {\n        return nextEvent.ticks <= endTicks;\n      }\n      return false;\n    };\n\n    next = function (t) {\n      types = t || types;\n      if (!hasNextCalled) {\n        hasNext(types);\n      }\n      hasNextCalled = false;\n      return nextEvent;\n    };\n\n    reset = function () {\n      var event;\n      startTicks = editor.startTicks;\n      endTicks = editor.endTicks;\n      hasNextCalled = false;\n      if (editor.paginate === true && sequencer.isPlaying() === true) {\n        return;\n      }\n      /*\n      for(index = 0; index < numEvents; index++){\n          event = events[index];\n          if(event.ticks >= startTicks){\n              break;\n          }\n      }\n      index--;\n      */\n      index = position.get().eventIndex - 2;\n      //console.log(events);\n      //console.log('ke',sequencer.isPlaying(),index,sequencer.eventIndex);\n    };\n\n    setTypes = function () {\n      var args = Array.prototype.slice.call(arguments);\n      args.forEach(function (type) {\n        types += type + ' ';\n      });\n    };\n\n    return {\n      next: next,\n      reset: reset,\n      hasNext: hasNext,\n      setTypes: setTypes\n    };\n  };\n\n\n  Factory.prototype.createNoteIterator = function () {\n    var startTicks,\n      endTicks,\n      hasNextCalled,\n      index,\n      newNote,\n      nextNote,\n      editor = this.editor,\n      song = this.song,\n      notes = this.notes,\n      numNotes = this.numNotes,\n      types = '',\n      next, hasNext, reset, setTypes;\n\n    hasNext = function (t) {\n      types = t || types;\n      hasNextCalled = true;\n      index++;\n      if (index === this.numNotes) {\n        return false;\n      }\n\n      newNote = false;\n\n      for (; index < numNotes; index++) {\n        nextNote = notes[index];\n        //console.log(nextNote);\n\n        if (nextNote.ticks >= endTicks) {\n          //console.log('skip',nextNote.ticks);\n          break;\n        }\n\n        if (editor.paginate) {\n          // show note that has started on previous page\n          if (nextNote.ticks < startTicks && nextNote.noteOff.ticks > startTicks) {\n            newNote = true;\n          } else if (nextNote.ticks < endTicks) {\n            newNote = true;\n          }\n          if (newNote) {\n            break;\n          }\n        } else {\n          newNote = nextNote.ticks <= endTicks;\n          //console.log(newNote, nextNote.ticks, nextNote.noteOff.ticks, startTicks, endTicks);\n          if (newNote) {\n            break;\n          }\n        }\n\n        //console.log(types.indexOf(nextEvent.type) !== -1,types,nextEvent.type,nextEvent.ticks,endTicks);\n      }\n      //console.log(index,nextEvent.ticks,endTicks,newEvent);\n      return newNote;\n    };\n\n    next = function (t) {\n      types = t || types;\n      if (!hasNextCalled) {\n        hasNext(types);\n      }\n      hasNextCalled = false;\n      //return nextEvent;\n      nextNote.bbox = editor.getNoteRect(nextNote);\n      return nextNote;\n    };\n\n    reset = function () {\n      var note;\n      startTicks = editor.startTicks;\n      endTicks = editor.endTicks;\n      notes = song.notes;\n      numNotes = song.numNotes;\n      //console.log(startTicks, endTicks);\n      hasNextCalled = false;\n      if (editor.paginate === true && sequencer.isPlaying() === true) {\n        return;\n      }\n\n      for (index = 0; index < numNotes; index++) {\n        note = notes[index];\n        //console.log(note, note.ticks, startTicks);\n        if (note.ticks >= startTicks) {\n          break;\n        }\n      }\n      index--;\n    };\n\n    return {\n      next: next,\n      reset: reset,\n      hasNext: hasNext\n    };\n  };\n\n\n  Factory.prototype.createPartIterator = function () {\n    var index,\n      max,\n      part,\n      data = {},\n      editor = this.editor,\n      song = this.song,\n      parts = this.parts,\n      next, hasNext, reset;\n\n    next = function (type) {\n      part = parts[index++];\n      part.bbox = editor.getPartRect(part);\n      return part;\n    };\n\n    hasNext = function (type) {\n      return index < max;\n    };\n\n    reset = function () {\n      parts = song.parts;\n      max = song.numParts;\n      index = 0;\n    };\n\n    return {\n      next: next,\n      reset: reset,\n      hasNext: hasNext\n    };\n  };\n\n\n  sequencer.protectedScope.createKeyEditorIteratorFactory = function (song, editor) {\n    return new Factory(song, editor);\n  };\n\n\n  sequencer.protectedScope.addInitMethod(function () {\n    createNote = sequencer.createNote;\n    createPlayhead = sequencer.protectedScope.createPlayhead;\n  });\n\n}function metronome() {\n\n  'use strict';\n\n  var\n    //import\n    context, //defined in open_module.js\n    findItem, //defined in asset_manager.js\n    getPosition, //defined in position.js\n    objectForEach, //defined in util.js\n    createMidiNote, //defined in midi_note.js\n    parseEvents, //defined in parse_events.js\n    parseMetronomeEvents, //defined in song_update.js\n\n    methodMap = {\n      volume: 'setVolume',\n      instrument: 'setInstrument',\n      noteNumberAccentedTick: 'setNoteNumberAccentedTick',\n      noteNumberNonAccentedTick: 'setNoteNumberNonAccentedTick',\n      velocityAccentedTick: 'setVelocityAccentedTick',\n      velocityNonAccentedTick: 'setVelocityNonAccentedTick',\n      noteLengthAccentedTick: 'setNoteLengthAccentedTick',\n      noteLengthNonAccentedTick: 'setNoteLengthNonAccentedTick'\n    },\n\n    Metronome;\n\n\n  function checkNumber(value) {\n    //console.log(value);\n    if (isNaN(value)) {\n      if (sequencer.debug) {\n        console.log('please provide a number');\n      }\n      return false;\n    }\n    if (value < 0 || value > 127) {\n      if (sequencer.debug) {\n        console.log('please provide a number between 0 and 127');\n      }\n      return false;\n    }\n    return value;\n  }\n\n\n  Metronome = function (song) {\n    this.song = song;\n    this.track = sequencer.createTrack(this.song.id + '_metronome', 'metronome');\n    this.part = sequencer.createPart();\n    this.track.addPart(this.part);\n    this.track.connect(this.song.gainNode);\n    this.events = [];\n    this.precountEvents = [];\n    this.noteNumberAccented = 61;\n    this.noteNumberNonAccented = 60;\n    this.volume = 1;\n    this.velocityNonAccented = 100;\n    this.velocityAccented = 100;\n    this.noteLengthNonAccented = song.ppq / 4; // sixteenth notes -> don't make this too short if your sample has a long attack!\n    this.noteLengthAccented = song.ppq / 4;\n    this.track.setInstrument('heartbeat/metronome');\n    this.precountDurationInMillis = 0;\n    this.bars = 0;\n    //this.reset();\n  };\n\n\n  function createEvents(metronome, startBar, endBar, id) {\n\n    var i, j,\n      data,\n      velocity,\n      noteLength,\n      noteNumber,\n      beatsPerBar,\n      ticksPerBeat,\n      ticks = 0,\n      events = [],\n      song = metronome.song,\n      noteOn, noteOff, note;\n\n    //console.log(startBar, endBar);\n\n    for (i = startBar; i <= endBar; i++) {\n      data = getPosition(song, ['barsbeats', i]);\n      beatsPerBar = data.nominator;\n      ticksPerBeat = data.ticksPerBeat;\n\n      for (j = 0; j < beatsPerBar; j++) {\n        noteNumber = j === 0 ? metronome.noteNumberAccented : metronome.noteNumberNonAccented;\n        noteLength = j === 0 ? metronome.noteLengthAccented : metronome.noteLengthNonAccented;\n        velocity = j === 0 ? metronome.velocityAccented : metronome.velocityNonAccented;\n\n        noteOn = sequencer.createMidiEvent(ticks, 144, noteNumber, velocity);\n        noteOff = sequencer.createMidiEvent(ticks + noteLength, 128, noteNumber, 0);\n\n        if (id === 'precount') {\n          noteOn.part = { id: 'precount' };\n          noteOn.track = metronome.track;\n          noteOff.part = { id: 'precount' };\n          noteOff.track = metronome.track;\n        }\n\n        note = createMidiNote(noteOn, noteOff);\n        events.push(noteOn, noteOff);\n\n        ticks += ticksPerBeat;\n      }\n    }\n\n    return events;\n  }\n\n\n  Metronome.prototype.init = function (id, startBar, endBar) {\n    id = id === undefined ? 'init' : id;\n    //console.log('metronome', id, this.song.bars, startBar, endBar);\n    if (this.part.numEvents > 0) {\n      this.part.removeEvents(this.part.events);\n    }\n    this.events = createEvents(this, startBar, endBar, id);\n    this.numEvents = this.events.length;\n    this.part.addEvents(this.events);\n    this.bars = this.song.bars;\n    parseMetronomeEvents(this.song, this.events);\n  };\n\n\n  Metronome.prototype.update = function (startBar, endBar) {\n    //console.time('metronome update')\n    if (startBar === 0) {\n      startBar = 1;\n    }\n    //console.log('metronome', this.song.bars, startBar, endBar);\n    // for now, just re-init the metronome\n    if (startBar !== undefined && endBar !== undefined) {\n      this.init('update', startBar, endBar);\n    } else {\n      this.init('update', 1, this.song.bars);\n    }\n    //console.timeEnd('metronome update')\n\n    //this.allNotesOff();\n    //this.song.scheduler.updateSong();\n\n    // var events = createEvents(this, startBar, endBar, 'update');\n    // this.events = this.events.concat(events);\n    // parseMetronomeEvents(this.song, this.events);\n  };\n\n\n  Metronome.prototype.updateConfig = function () {\n    this.init('configure', 1, this.bars);\n    this.allNotesOff();\n    this.song.scheduler.updateSong();\n  };\n\n\n  Metronome.prototype.configure = function (config) {\n    var me = this;\n\n    objectForEach(config, function (value, key) {\n      me[methodMap[key]](value);\n      //console.log(key, me[methodMap[key]]);\n    });\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setInstrument = function (instrument) {\n    if (instrument.className !== 'Instrument') {\n      instrument = sequencer.createInstrument(instrument);\n    }\n    if (instrument !== false) {\n      this.track.setInstrument(instrument);\n    } else {\n      this.track.setInstrument('heartbeat/metronome');\n    }\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setNoteLengthAccentedTick = function (value) {\n    if (isNaN(value)) {\n      if (sequencer.debug >= 2) {\n        console.warn('please provide a number');\n      }\n    }\n    this.noteLengthAccented = value;\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setNoteLengthNonAccentedTick = function (value) {\n    if (isNaN(value)) {\n      if (sequencer.debug >= 2) {\n        console.warn('please provide a number');\n      }\n    }\n    this.noteLengthNonAccented = value;\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setVelocityAccentedTick = function (value) {\n    value = checkNumber(value);\n    if (value !== false) {\n      this.velocityAccented = value;\n    } else if (sequencer.debug >= 2) {\n      console.warn('please provide a number');\n    }\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setVelocityNonAccentedTick = function (value) {\n    value = checkNumber(value);\n    if (value !== false) {\n      this.velocityNonAccented = value;\n    } else if (sequencer.debug >= 2) {\n      console.warn('please provide a number');\n    }\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setNoteNumberAccentedTick = function (value) {\n    value = checkNumber(value);\n    if (value !== false) {\n      this.noteNumberAccented = value;\n    } else if (sequencer.debug >= 2) {\n      console.warn('please provide a number');\n    }\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setNoteNumberNonAccentedTick = function (value) {\n    value = checkNumber(value);\n    if (value !== false) {\n      this.noteNumberNonAccented = value;\n    } else if (sequencer.debug >= 2) {\n      console.warn('please provide a number');\n    }\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.reset = function () {\n    this.volume = 1;\n    this.track.setInstrument('heartbeat/metronome');\n\n    this.noteNumberAccented = 61;\n    this.noteNumberNonAccented = 60;\n\n    this.velocityAccented = 100;\n    this.velocityNonAccented = 100;\n\n    this.noteLengthAccented = this.song.ppq / 4;\n    this.noteLengthNonAccented = this.song.ppq / 4;\n  };\n\n\n  Metronome.prototype.allNotesOff = function () {\n    if (this.track.instrument) {\n      this.track.instrument.allNotesOff();\n    }\n  };\n\n\n  Metronome.prototype.createPrecountEvents = function (precount) {\n    if (precount <= 0) {\n      return;\n    }\n    var endPos = this.song.getPosition('barsbeats', this.song.bar + precount);\n\n    this.index = 0;\n    this.millis = 0;\n    this.startMillis = this.song.millis;\n    this.precountDurationInMillis = endPos.millis - this.startMillis;\n    this.precountEvents = createEvents(this, this.song.bar, endPos.bar - 1, 'precount');\n    parseEvents(this.song, this.precountEvents);\n    //console.log(this.song.bar, endPos.bar, precount, this.precountEvents.length);\n    //console.log(this.precountEvents, this.precountDurationInMillis, startTicks, endTicks);\n  };\n\n\n  // called by scheduler.js\n  Metronome.prototype.getPrecountEvents = function (maxtime) {\n    var events = this.precountEvents,\n      maxi = events.length, i, event,\n      result = [];\n\n    //console.log(maxtime, maxi, this.index, this.millis);\n\n    for (i = this.index; i < maxi; i++) {\n      event = events[i];\n      //console.log(event.millis, maxtime, this.millis);\n      if (event.millis < maxtime) {\n        event.time = this.startTime + event.millis;\n        result.push(event);\n        this.index++;\n      } else {\n        break;\n      }\n    }\n    return result;\n  };\n\n\n  Metronome.prototype.setVolume = function (value) {\n    this.track.setVolume(value);\n  };\n\n\n  sequencer.protectedScope.createMetronome = function (song) {\n    return new Metronome(song);\n  };\n\n  sequencer.protectedScope.addInitMethod(function initMetronome() {\n    context = sequencer.protectedScope.context;\n    findItem = sequencer.protectedScope.findItem;\n    getPosition = sequencer.protectedScope.getPosition;\n    createMidiNote = sequencer.createMidiNote;\n    objectForEach = sequencer.util.objectForEach;\n    parseEvents = sequencer.protectedScope.parseEvents;\n    parseMetronomeEvents = sequencer.protectedScope.parseMetronomeEvents;\n  });\n}function midiEvent() {\r\n\r\n    /*\r\n        @public\r\n        @class MidiEvent\r\n        @param time {int} the time that the event is scheduled\r\n        @param type {int} type of MidiEvent, e.g. NOTE_ON, NOTE_OFF or, 144, 128, etc.\r\n        @param data1 {int} if type is 144 or 128: note number\r\n        @param [data2] {int} if type is 144 or 128: velocity\r\n\r\n\r\n        @example\r\n        // plays the central c at velocity 100\r\n        var event = sequencer.createMidiEvent(120, sequencer.NOTE_ON, 60, 100);\r\n\r\n        // pass arguments as array\r\n        var event = sequencer.createMidiEvent([120, sequencer.NOTE_ON, 60, 100]);\r\n\r\n        // if you pass a MidiEvent instance a copy/clone will be returned\r\n        var copy = sequencer.createMidiEvent(event);\r\n    */\r\n\r\n\r\n    'use strict';\r\n\r\n    var\r\n        slice = Array.prototype.slice,\r\n\r\n        //import\r\n        createNote, // → defined in note.js\r\n        typeString, // → defined in utils.js\r\n\r\n        MidiEvent,\r\n        midiEventId = 0;\r\n\r\n\r\n    /*\r\n       arguments:\r\n       - [ticks, type, data1, data2]\r\n       - ticks, type, data1, data2\r\n\r\n       data1 and data2 are optional but must be numbers if provided\r\n    */\r\n    MidiEvent = function (args) {\r\n        var data, note;\r\n\r\n        this.className = 'MidiEvent';\r\n        this.id = 'M' + midiEventId + new Date().getTime();\r\n        this.eventNumber = midiEventId;\r\n        this.channel = 'any';\r\n        this.time = 0;\r\n        //this.offset = 0;\r\n        //console.log(midiEventId, this.type, this.id);\r\n        this.muted = false;\r\n        //console.log(midiEventId, this.type);\r\n        midiEventId++;\r\n\r\n        if (!args) {\r\n            // bypass for cloning\r\n            return;\r\n        }\r\n\r\n        //console.log('create', args);\r\n\r\n        if (typeString(args[0]) === 'midimessageevent') {\r\n            console.log('midimessageevent');\r\n            return;\r\n            //data = [0].concat(args[0].data);\r\n        } else if (typeString(args[0]) === 'array') {\r\n            data = args[0];\r\n        } else if (typeString(args[0]) === 'number' && typeString(args[1]) === 'number') {\r\n            data = [args[0], args[1]];\r\n            if (args.length >= 3 && typeString(args[2]) === 'number') {\r\n                data.push(args[2]);\r\n            }\r\n            if (args.length === 4 && typeString(args[3]) === 'number') {\r\n                data.push(args[3]);\r\n            }\r\n            if (args.length === 5 && typeString(args[4]) === 'number') {\r\n                data.push(args[4]);//channel\r\n            }\r\n        } else {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('wrong number of arguments, please consult documentation');\r\n            }\r\n            return false;\r\n        }\r\n        //console.log(data);\r\n\r\n        this.ticks = data[0];\r\n        this.status = data[1];\r\n        this.type = (this.status >> 4) * 16;\r\n        //console.log(this.type, this.status);\r\n        if (this.type >= 0x80) {\r\n            //the higher 4 bits of the status byte is the command\r\n            this.command = this.type;\r\n            //the lower 4 bits of the status byte is the channel number\r\n            this.channel = (this.status & 0xF) + 1; // from zero-based to 1-based\r\n        } else {\r\n            this.type = this.status;\r\n            this.channel = data[4] || 'any';\r\n        }\r\n\r\n        //this.sortIndex = parseInt(this.type, 10) + parseInt(this.ticks, 10); // note off events come before note on events\r\n        this.sortIndex = this.type + this.ticks; // note off events come before note on events\r\n        //console.log(this.sortIndex);\r\n\r\n        //console.log(this.status, this.type, this.channel);\r\n\r\n        switch (this.type) {\r\n            case 0x0:\r\n                break;\r\n            case 0x80:\r\n                this.data1 = data[2];\r\n                note = createNote(this.data1);\r\n                this.note = note;\r\n                this.noteName = note.fullName;\r\n                this.noteNumber = note.number;\r\n                this.octave = note.octave;\r\n                this.frequency = note.frequency;\r\n                this.data2 = 0;//data[3];\r\n                this.velocity = this.data2;\r\n                break;\r\n            case 0x90:\r\n                this.data1 = data[2];//note number\r\n                this.data2 = data[3];//velocity\r\n                if (this.data2 === 0) {\r\n                    //if velocity is 0, this is a NOTE OFF event\r\n                    this.type = 0x80;\r\n                }\r\n                note = createNote(this.data1);\r\n                this.note = note;\r\n                this.noteName = note.fullName;\r\n                this.noteNumber = note.number;\r\n                this.octave = note.octave;\r\n                this.frequency = note.frequency;\r\n                this.velocity = this.data2;\r\n                //console.log(data[2], this.note);\r\n                break;\r\n            case 0x51:\r\n                this.bpm = data[2];\r\n                break;\r\n            case 0x58:\r\n                this.nominator = data[2];\r\n                this.denominator = data[3];\r\n                break;\r\n            case 0xB0:// control change\r\n                this.data1 = data[2];\r\n                this.data2 = data[3];\r\n                this.controllerType = data[2];\r\n                this.controllerValue = data[3];\r\n                break;\r\n            case 0xC0:// program change\r\n                this.data1 = data[2];\r\n                this.programNumber = data[2];\r\n                break;\r\n            case 0xD0:// channel pressure\r\n                this.data1 = data[2];\r\n                this.data2 = data[3];\r\n                break;\r\n            case 0xE0:// pitch bend\r\n                this.data1 = data[2];\r\n                this.data2 = data[3];\r\n                //console.log('pitch bend');\r\n                break;\r\n            case 0x2F:\r\n                break;\r\n            default:\r\n                console.warn('not a recognized type of midi event!');\r\n        }\r\n    };\r\n\r\n    /**\r\n        Creates a copy of the MidiEvent\r\n        @memberof MidiEvent\r\n        @function clone\r\n        @instance\r\n    */\r\n    MidiEvent.prototype.clone = MidiEvent.prototype.copy = function () {\r\n        var event = new MidiEvent(),\r\n            property;\r\n\r\n        for (property in this) {\r\n            if (this.hasOwnProperty(property)) {\r\n                //console.log(property);\r\n                if (property !== 'id' && property !== 'eventNumber' && property !== 'midiNote') {\r\n                    event[property] = this[property];\r\n                }\r\n                event.song = undefined;\r\n                event.track = undefined;\r\n                event.trackId = undefined;\r\n                event.part = undefined;\r\n                event.partId = undefined;\r\n            }\r\n        }\r\n        return event;\r\n    };\r\n\r\n\r\n    /**\r\n    *  Transposes the MidiEvent by the provided number of semitones\r\n    *  @param {int} semi\r\n    */\r\n    MidiEvent.prototype.transpose = function (semi) {\r\n        if (this.type !== 0x80 && this.type !== 0x90) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('you can only transpose note on and note off events');\r\n            }\r\n            return;\r\n        }\r\n\r\n        //console.log('transpose', semi);\r\n        if (typeString(semi) === 'array') {\r\n            var type = semi[0];\r\n            if (type === 'hertz') {\r\n                //convert hertz to semi\r\n            } else if (type === 'semi' || type === 'semitone') {\r\n                semi = semi[1];\r\n            }\r\n        } else if (isNaN(semi) === true) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('please provide a number');\r\n            }\r\n            return;\r\n        }\r\n\r\n        var tmp = this.data1 + parseInt(semi, 10);\r\n        if (tmp < 0) {\r\n            tmp = 0;\r\n        } else if (tmp > 127) {\r\n            tmp = 127;\r\n        }\r\n        this.data1 = tmp;\r\n        var note = createNote(this.data1);\r\n        this.note = note;\r\n        this.noteName = note.fullName;\r\n        this.noteNumber = note.number;\r\n        this.octave = note.octave;\r\n        this.frequency = note.frequency;\r\n\r\n        if (this.midiNote !== undefined) {\r\n            this.midiNote.pitch = this.data1;\r\n        }\r\n\r\n        if (this.state !== 'new') {\r\n            this.state = 'changed';\r\n        }\r\n        if (this.part !== undefined) {\r\n            this.part.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    MidiEvent.prototype.setPitch = function (pitch) {\r\n        if (this.type !== 0x80 && this.type !== 0x90) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('you can only set the pitch of note on and note off events');\r\n            }\r\n            return;\r\n        }\r\n        if (typeString(pitch) === 'array') {\r\n            var type = pitch[0];\r\n            if (type === 'hertz') {\r\n                //convert hertz to pitch\r\n            } else if (type === 'semi' || type === 'semitone') {\r\n                pitch = pitch[1];\r\n            }\r\n        } else if (isNaN(pitch) === true) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('please provide a number');\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.data1 = parseInt(pitch, 10);\r\n        var note = createNote(this.data1);\r\n        this.note = note;\r\n        this.noteName = note.fullName;\r\n        this.noteNumber = note.number;\r\n        this.octave = note.octave;\r\n        this.frequency = note.frequency;\r\n\r\n        if (this.midiNote !== undefined) {\r\n            this.midiNote.pitch = this.data1;\r\n        }\r\n        if (this.state !== 'new') {\r\n            this.state = 'changed';\r\n        }\r\n        if (this.part !== undefined) {\r\n            this.part.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    MidiEvent.prototype.move = function (ticks) {\r\n        if (isNaN(ticks)) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('please provide a number');\r\n            }\r\n            return;\r\n        }\r\n        this.ticks += parseInt(ticks, 10);\r\n        if (this.state !== 'new') {\r\n            this.state = 'changed';\r\n        }\r\n        if (this.part !== undefined) {\r\n            this.part.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    MidiEvent.prototype.moveTo = function () {\r\n        var position = slice.call(arguments);\r\n        //console.log(position);\r\n\r\n        if (position[0] === 'ticks' && isNaN(position[1]) === false) {\r\n            this.ticks = parseInt(position[1], 10);\r\n        } else if (this.song === undefined) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('The midi event has not been added to a song yet; you can only move to ticks values');\r\n            }\r\n        } else {\r\n            position = this.song.getPosition(position);\r\n            if (position === false) {\r\n                if (sequencer.debug >= 1) {\r\n                    console.error('wrong position data');\r\n                }\r\n            } else {\r\n                this.ticks = position.ticks;\r\n            }\r\n        }\r\n\r\n        if (this.state !== 'new') {\r\n            this.state = 'changed';\r\n        }\r\n        if (this.part !== undefined) {\r\n            this.part.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    MidiEvent.prototype.reset = function (fromPart, fromTrack, fromSong) {\r\n\r\n        fromPart = fromPart === undefined ? true : false;\r\n        fromTrack = fromTrack === undefined ? true : false;\r\n        fromSong = fromSong === undefined ? true : false;\r\n\r\n        if (fromPart) {\r\n            this.part = undefined;\r\n            this.partId = undefined;\r\n        }\r\n        if (fromTrack) {\r\n            this.track = undefined;\r\n            this.trackId = undefined;\r\n            this.channel = 0;\r\n        }\r\n        if (fromSong) {\r\n            this.song = undefined;\r\n        }\r\n    };\r\n\r\n\r\n    // implemented because of the common interface of midi and audio events\r\n    MidiEvent.prototype.update = function () {\r\n    };\r\n\r\n\r\n    /**@exports sequencer*/\r\n    sequencer.createMidiEvent = function () {\r\n        /**\r\n            @function createMidiEvent\r\n            @param time {int}\r\n            @param type {int}\r\n            @param data1 {int}\r\n            @param data2 {int}\r\n        */\r\n        var args = slice.call(arguments),\r\n            className = args[0].className;\r\n\r\n        if (className === 'MidiEvent') {\r\n            return args[0].copy();\r\n        }\r\n        return new MidiEvent(args);\r\n    };\r\n\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        createNote = sequencer.createNote;\r\n        typeString = sequencer.protectedScope.typeString;\r\n    });\r\n\r\n}function midiEventNames() {\r\n\r\n    /**\r\n        @public\r\n    */\r\n    'use strict';\r\n\r\n    /**\r\n        @var\r\n    */\r\n    var\r\n        lowerCaseToNumber = {\r\n            'note off': 0x80,\r\n            'note on': 0x90,\r\n            'poly pressure': 0xA0,\r\n            'control change': 0xB0,\r\n            'program change': 0xC0,\r\n            'channel pressure': 0xD0,\r\n            'pitch bend': 0xE0,\r\n            'tempo': 0x51,\r\n            'time signature': 0x58,\r\n            'end of track': 0x2F\r\n        },\r\n\r\n        upperCaseToNumber = {\r\n            'NOTE_OFF': 0x80,\r\n            'NOTE_ON': 0x90,\r\n            'POLY_PRESSURE': 0xA0,\r\n            'CONTROL_CHANGE': 0xB0,\r\n            'PROGRAM_CHANGE': 0xC0,\r\n            'CHANNEL_PRESSURE': 0xD0,\r\n            'PITCH_BEND': 0xE0,\r\n            'TEMPO': 0x51,\r\n            'TIME_SIGNATURE': 0x58,\r\n            'END_OF_TRACK': 0x2F\r\n        },\r\n\r\n        numberToLowerCase = {\r\n            0x80: 'note off',\r\n            0x90: 'note on',\r\n            0xA0: 'poly pressure',\r\n            0xB0: 'control change',\r\n            0xC0: 'program change',\r\n            0xD0: 'channel pressure',\r\n            0xE0: 'pitch bend',\r\n            0x51: 'tempo',\r\n            0x58: 'time signature',\r\n            0x2F: 'end of track'\r\n        },\r\n\r\n        numberToUpperCase = {\r\n            0x80: 'NOTE_OFF',\r\n            0x90: 'NOTE_ON',\r\n            0xA0: 'POLY_PRESSURE',\r\n            0xB0: 'CONTROL_CHANGE',\r\n            0xC0: 'PROGRAM_CHANGE',\r\n            0xD0: 'CHANNEL_PRESSURE',\r\n            0xE0: 'PITCH_BEND',\r\n            0x51: 'TEMPO',\r\n            0x58: 'TIME_SIGNATURE',\r\n            0x2F: 'END_OF_TRACK'\r\n        };\r\n\r\n\r\n    function numberByName(name) {\r\n        var no = false\r\n\r\n        name = name.replace(/_/g, ' ');\r\n        no = lowerCaseToNumber[name] || false;\r\n\r\n        if (no !== false) {\r\n            return no;\r\n        }\r\n\r\n        // try upper\r\n        name = name.replace(/\\s/g, '_');\r\n        no = upperCaseToNumber[name] || false;\r\n\r\n        if (no === false && sequencer.debug === true) {\r\n            console.warn(name, 'is not a valid (or supported) midi event name, please consult documentation');\r\n        }\r\n        return no;\r\n    }\r\n\r\n\r\n    function nameByNumber(no, upperOrLower) {\r\n        var name = false;\r\n        upperOrLower = upperOrLower || 'upper'; // return uppercase names by default\r\n        //upperOrLower = upperOrLower || no.indexOf('_') !== -1 ? 'upper' : 'lower';\r\n\r\n        if (upperOrLower === 'lower') {\r\n            name = numberToLowerCase[no] || false;\r\n            if (name === false && sequencer.debug === true) {\r\n                console.warn(no, 'is not a valid (or supported) midi event number, please consult documentation');\r\n            }\r\n            return name;\r\n        }\r\n\r\n        name = numberToUpperCase[no] || false;\r\n        if (name === false && sequencer.debug === true) {\r\n            console.warn(no, 'is not a valid (or supported) midi event number, please consult documentation');\r\n        }\r\n        return name;\r\n    }\r\n\r\n\r\n    function checkEventType(type) {\r\n        if (isNaN(type)) {\r\n            return numberByName(type);\r\n        }\r\n        return nameByNumber(type);\r\n    }\r\n\r\n\r\n    //heartbeat\r\n    /**\r\n        @memberof sequencer\r\n        @instance\r\n    */\r\n    Object.defineProperty(sequencer, 'DUMMY_EVENT', { value: 0x0 }); //0\r\n    Object.defineProperty(sequencer, 'MIDI_NOTE', { value: 0x70 }); //112\r\n    //standard MIDI\r\n    Object.defineProperty(sequencer, 'NOTE_OFF', { value: 0x80 }); //128\r\n    Object.defineProperty(sequencer, 'NOTE_ON', { value: 0x90 }); //144\r\n    Object.defineProperty(sequencer, 'POLY_PRESSURE', { value: 0xA0 }); //160\r\n    Object.defineProperty(sequencer, 'CONTROL_CHANGE', { value: 0xB0 }); //176\r\n    Object.defineProperty(sequencer, 'PROGRAM_CHANGE', { value: 0xC0 }); //192\r\n    Object.defineProperty(sequencer, 'CHANNEL_PRESSURE', { value: 0xD0 }); //208\r\n    Object.defineProperty(sequencer, 'PITCH_BEND', { value: 0xE0 }); //224\r\n    Object.defineProperty(sequencer, 'SYSTEM_EXCLUSIVE', { value: 0xF0 }); //240\r\n    Object.defineProperty(sequencer, 'MIDI_TIMECODE', { value: 241 });\r\n    Object.defineProperty(sequencer, 'SONG_POSITION', { value: 242 });\r\n    Object.defineProperty(sequencer, 'SONG_SELECT', { value: 243 });\r\n    Object.defineProperty(sequencer, 'TUNE_REQUEST', { value: 246 });\r\n    Object.defineProperty(sequencer, 'EOX', { value: 247 });\r\n    Object.defineProperty(sequencer, 'TIMING_CLOCK', { value: 248 });\r\n    Object.defineProperty(sequencer, 'START', { value: 250 });\r\n    Object.defineProperty(sequencer, 'CONTINUE', { value: 251 });\r\n    Object.defineProperty(sequencer, 'STOP', { value: 252 });\r\n    Object.defineProperty(sequencer, 'ACTIVE_SENSING', { value: 254 });\r\n    Object.defineProperty(sequencer, 'SYSTEM_RESET', { value: 255 });\r\n\r\n    Object.defineProperty(sequencer, 'TEMPO', { value: 0x51 });\r\n    Object.defineProperty(sequencer, 'TIME_SIGNATURE', { value: 0x58 });\r\n    Object.defineProperty(sequencer, 'END_OF_TRACK', { value: 0x2F });\r\n\r\n    // public\r\n    /**\r\n        @memberof sequencer\r\n        @instance\r\n        @function checkEventType\r\n    */\r\n    sequencer.checkEventType = checkEventType;\r\n    sequencer.midiEventNameByNumber = nameByNumber;\r\n    sequencer.midiEventNumberByName = numberByName;\r\n\r\n}/*\n    parse method is based on: https://github.com/gasman/jasmid\n    adapted to work with heartbeatjs' type MidiEvent and Track\n*/\n\nfunction midiFile() {\n\n  'use strict';\n\n  var\n    // import\n    parseUrl, // defined in util.js\n    base64ToBinary, // defined in util.js\n    typeString, // defined in util.js\n    ajax, // defined in util.js\n    findItem, // defined in util.js\n    storeItem, // defined in util.js\n    deleteItem, // defined in util.js\n    parseMidiFile, // defined in midi_parse.js\n    createTrack, // defined in track.js\n    createPart, // defined in part.js\n    createMidiEvent, // defined in midi_event.js\n\n    index = 0,\n    MidiFile;\n\n\n  function cleanup(midifile, callback) {\n    midifile = undefined;\n    if (callback) {\n      callback(false);\n    }\n  }\n\n\n  function parse(midifile, buffer, callback) {\n    //console.time('parse midi');\n    var data, i, j, numEvents, part, track, numTracks,\n      events, event, ticks, tmpTicks, channel,\n      parsed, timeEvents, noteNumber, bpm,\n      lastNoteOn, lastNoteOff, ppqFactor,\n      type, lastType, lastData1, lastData2,\n      numNoteOn, numNoteOff, numOther, noteOns, noteOffs;\n\n    // buffer is ArrayBuffer, so convert it\n    buffer = new Uint8Array(buffer);\n    data = parseMidiFile(buffer);\n    //console.log(data);\n    //console.log(data.header.ticksPerBeat);\n\n    // save some memory\n    midifile.base64 = '';\n    midifile.numTracks = 0;\n\n    i = 0;\n    numTracks = data.tracks.length;\n    if (sequencer.overrulePPQ === true && isNaN(sequencer.defaultPPQ) === false && sequencer.defaultPPQ > 0) {\n      ppqFactor = sequencer.defaultPPQ / data.header.ticksPerBeat;\n      midifile.ppq = sequencer.defaultPPQ;\n    } else {\n      ppqFactor = 1;\n      midifile.ppq = data.header.ticksPerBeat;\n    }\n    timeEvents = [];\n    midifile.tracks = [];\n    //console.log(ppqFactor, midifile.ppq, sequencer.overrulePPQ, sequencer.defaultPPQ);\n\n    while (i < numTracks) {\n      events = data.tracks[i];\n      numEvents = events.length;\n      ticks = 0;\n      tmpTicks = 0;\n      channel = -1;\n      part = createPart();\n      track = createTrack();\n      parsed = [];\n      j = 0;\n      numNoteOn = 0;\n      numNoteOff = 0;\n      numOther = 0;\n      noteOns = {};\n      noteOffs = {};\n\n      for (j = 0; j < numEvents; j++) {\n\n        event = events[j];\n\n        tmpTicks += (event.deltaTime * ppqFactor);\n        //console.log(event.subtype, event.deltaTime, tmpTicks);\n\n        if (channel === -1 && event.channel !== undefined) {\n          channel = event.channel;\n          track.channel = channel;\n        }\n\n        type = event.subtype;\n\n        if (type === 'noteOn') {\n          numNoteOn++;\n        } else if (type === 'noteOff') {\n          numNoteOff++;\n        } else {\n          numOther++;\n        }\n\n        switch (event.subtype) {\n\n          case 'trackName':\n            track.name = event.text;\n            //console.log('name', track.name, numTracks);\n            break;\n\n          case 'instrumentName':\n            if (event.text) {\n              track.instrumentName = event.text;\n            }\n            break;\n\n          case 'noteOn':\n            //track.isUseful = true;\n            /*\n            noteNumber = event.noteNumber;\n            if(tmpTicks === ticks && lastType === type && noteNumber === lastNoteOn){\n                if(sequencer.debug >= 3){\n                    console.info('note on events on the same tick', j, tmpTicks, noteNumber, lastNoteOn, numTracks, parsed.length);\n                }\n                //parsed.pop();\n            }\n            lastNoteOn = noteNumber;\n            parsed.push(createMidiEvent(tmpTicks, 0x90, noteNumber, event.velocity));\n            */\n            /*\n            noteNumber = event.noteNumber;\n            if(noteOns[noteNumber] === undefined){\n                noteOns[noteNumber] = [];\n            }\n            noteOns[noteNumber].push(event);\n            */\n            parsed.push(createMidiEvent(tmpTicks, 0x90, event.noteNumber, event.velocity));\n            break;\n\n          case 'noteOff':\n            //track.isUseful = true;\n            /*\n            noteNumber = event.noteNumber;\n            if(tmpTicks === ticks && lastType === type && noteNumber === lastNoteOff){\n                if(sequencer.debug >= 3){\n                    console.info('note off events on the same tick', j, tmpTicks, noteNumber, lastNoteOff, numTracks, parsed.length);\n                }\n                //parsed.pop();\n            }\n            lastNoteOff = noteNumber;\n            parsed.push(createMidiEvent(tmpTicks, 0x80, noteNumber, event.velocity));\n            */\n            /*\n            noteNumber = event.noteNumber;\n            if(noteOffs[noteNumber] === undefined){\n                noteOffs[noteNumber] = [];\n            }\n            noteOns[noteNumber].push(event);\n            */\n            parsed.push(createMidiEvent(tmpTicks, 0x80, event.noteNumber, event.velocity));\n            break;\n\n          case 'endOfTrack':\n            //console.log(track.name, '0x2F', tmpTicks);\n            //parsed.push(createMidiEvent(tmpTicks,0x2F));\n            break;\n\n          case 'setTempo':\n            //sometimes 2 tempo events have the same position in ticks\n            //→ we use the last in these cases (same as Cubase)\n\n            bpm = 60000000 / event.microsecondsPerBeat;\n            //console.log('setTempo',bpm,event.microsecondsPerBeat);\n\n            if (tmpTicks === ticks && lastType === type) {\n              if (sequencer.debug >= 3) {\n                console.info('tempo events on the same tick', j, tmpTicks, bpm);\n              }\n              timeEvents.pop();\n            }\n\n            if (midifile.bpm === undefined) {\n              midifile.bpm = bpm;\n              // }else{\n              //     timeEvents.push(createMidiEvent(tmpTicks, 0x51, bpm));\n            }\n            timeEvents.push(createMidiEvent(tmpTicks, 0x51, bpm));\n            break;\n\n          case 'timeSignature':\n            //see comment above ↑\n            if (tmpTicks === ticks && lastType === type) {\n              if (sequencer.debug >= 3) {\n                console.info('time signature events on the same tick', j, tmpTicks, event.numerator, event.denominator);\n              }\n              timeEvents.pop();\n            }\n\n            if (midifile.nominator === undefined) {\n              midifile.nominator = event.numerator;\n              midifile.denominator = event.denominator;\n              // }else{\n              //     //console.log('timeSignature', event.numerator, event.denominator, event.metronome, event.thirtyseconds);\n              //     timeEvents.push(createMidiEvent(tmpTicks, 0x58, event.numerator, event.denominator));\n            }\n            timeEvents.push(createMidiEvent(tmpTicks, 0x58, event.numerator, event.denominator));\n            break;\n\n\n          case 'controller':\n            //track.isUseful = true;\n            /*\n            if(\n                tmpTicks === ticks &&\n                event.controllerType === lastData1 &&\n                event.value === lastData2 &&\n                lastData1 !== undefined &&\n                lastData2 !== undefined\n            ){\n                if(sequencer.debug >= 3){\n                    console.warn('double controller events on the same tick', j, tmpTicks, event.controllerType, event.value);\n                }\n            }else{\n                parsed.push(createMidiEvent(tmpTicks, 0xB0, event.controllerType, event.value));\n            }\n            lastData1 = event.controllerType;\n            lastData2 = event.value;\n            */\n            parsed.push(createMidiEvent(tmpTicks, 0xB0, event.controllerType, event.value));\n            //console.log('controller:', tmpTicks, event.type, event.controllerType, event.value);\n            break;\n\n          case 'programChange':\n            //track.isUseful = true;\n            parsed.push(createMidiEvent(tmpTicks, 0xC0, event.programNumber));\n            //console.log(event.type,event.controllerType);\n            break;\n\n          case 'channelAftertouch':\n            parsed.push(createMidiEvent(tmpTicks, 0xD0, event.amount));\n            break;\n\n          case 'pitchBend':\n            parsed.push(createMidiEvent(tmpTicks, 0xE0, event.value));\n            break;\n\n          default:\n          //console.log(track.name, event.type);\n        }\n        lastType = type;\n        ticks = tmpTicks;\n      }\n\n      //console.log('NOTE ON', numNoteOn, 'NOTE OFF', numNoteOff, 'OTHER', numOther);\n      // console.log('PARSED', parsed);\n      if (parsed.length > 0) {\n        track.addPart(part);\n        part.addEvents(parsed);\n        midifile.tracks.push(track);\n        midifile.numTracks++;\n      }\n      i++;\n    }\n\n    midifile.timeEvents = timeEvents;\n    midifile.autoSize = true;\n    //console.timeEnd('parse midi');\n    midifile.loaded = true;\n    callback(midifile);\n  }\n\n\n  function load(midifile, callback) {\n\n    if (midifile.base64 !== undefined) {\n      parse(midifile, base64ToBinary(midifile.base64), callback);\n      return;\n    } else if (midifile.arraybuffer !== undefined) {\n      parse(midifile, midifile.arraybuffer, callback);\n      return;\n    }\n\n    ajax({\n      url: midifile.url,\n      responseType: midifile.responseType,\n      onError: function () {\n        cleanup(midifile, callback);\n      },\n      onSuccess: function (data) {\n        if (midifile.responseType === 'json') {\n          // if the json data is corrupt (for instance because of a trailing comma) data will be null\n          if (data === null) {\n            callback(false);\n            return;\n          }\n\n          if (data.base64 === undefined) {\n            cleanup(midifile, callback);\n            if (sequencer.debug) {\n              console.warn('no base64 data');\n            }\n            return;\n          }\n\n          if (data.name !== undefined && midifile.name === undefined) {\n            midifile.name = data.name;\n          }\n\n          if (data.folder !== undefined && midifile.folder === undefined) {\n            midifile.folder = data.folder;\n          }\n\n          if (midifile.name === undefined) {\n            midifile.name = parseUrl(midifile.url).name;\n          }\n\n          midifile.localPath = midifile.folder !== undefined ? midifile.folder + '/' + midifile.name : midifile.name;\n          parse(midifile, base64ToBinary(data.base64), callback);\n        } else {\n          if (midifile.name === undefined) {\n            midifile.name = parseUrl(midifile.url).name;\n          }\n          midifile.localPath = midifile.folder !== undefined ? midifile.folder + '/' + midifile.name : midifile.name;\n          parse(midifile, data, callback);\n        }\n      }\n    });\n  }\n\n\n  function store(midifile) {\n    var occupied = findItem(midifile.localPath, sequencer.storage.midi, true),\n      action = midifile.action;\n\n    //console.log(occupied);\n    if (occupied && occupied.className === 'MidiFile' && action !== 'overwrite') {\n      if (sequencer.debug >= 2) {\n        console.warn('there is already a midifile at', midifile.localPath);\n        cleanup(midifile);\n      }\n    } else {\n      storeItem(midifile, midifile.localPath, sequencer.storage.midi);\n    }\n  }\n\n\n  MidiFile = function (config) {\n    this.id = 'MF' + index++ + new Date().getTime();\n    this.className = 'MidiFile';\n\n    this.url = config.url;\n    this.json = config.json;\n    this.base64 = config.base64;\n    this.arraybuffer = config.arraybuffer;\n\n    this.name = config.name;\n    this.folder = config.folder;\n\n    if (this.url !== undefined) {\n      this.responseType = this.url.indexOf('.json') === this.url.lastIndexOf('.') ? 'json' : 'arraybuffer';\n    } else {\n      if (this.name === undefined && this.folder === undefined) {\n        this.name = this.id;\n        this.localPath = this.id;\n      } else {\n        this.localPath = this.folder !== undefined ? this.folder + '/' + this.name : this.name;\n      }\n    }\n  };\n\n\n  sequencer.addMidiFile = function (config, callback) {\n    var type = typeString(config),\n      midifile, json, name, folder;\n\n    if (type !== 'object') {\n      if (sequencer.debug >= 2) {\n        console.warn('can\\'t create a MidiFile with this data', config);\n      }\n      return false;\n    }\n\n    if (config.json) {\n      json = config.json;\n      name = config.name;\n      folder = config.folder;\n      if (typeString(json) === 'string') {\n        try {\n          json = JSON.parse(json);\n        } catch (e) {\n          if (sequencer.debug >= 2) {\n            console.warn('can\\'t create a MidiFile with this data', config);\n          }\n          return false;\n        }\n      }\n      if (json.base64 === undefined) {\n        if (sequencer.debug >= 2) {\n          console.warn('can\\'t create a MidiFile with this data', config);\n        }\n        return false;\n      }\n      config = {\n        base64: json.base64,\n        name: name === undefined ? json.name : name,\n        folder: folder === undefined ? json.folder : folder\n      };\n      //console.log('config', name, folder, json.name, json.folder);\n    }\n\n    midifile = new MidiFile(config);\n\n    sequencer.addTask({\n      type: 'load midifile',\n      method: load,\n      params: midifile\n    }, function () {\n      //console.log(midifile);\n      store(midifile);\n      if (callback) {\n        callback(midifile);\n      }\n    });\n\n    sequencer.startTaskQueue();\n\n\n    /*\n            load(midifile, function(){\n                //console.log(midifile);\n                store(midifile);\n                if(callback){\n                    callback(midifile);\n                }\n            });\n    */\n  };\n\n\n  function MidiFile2(config) {\n    var reader = new FileReader();\n\n    function executor(resolve, reject) {\n\n      reader.addEventListener('loadend', function () {\n        // reader.result contains the contents of blob as a typed array\n        parse({}, reader.result, function (midifile) {\n          resolve(midifile);\n        });\n      });\n\n      reader.addEventListener('error', function (e) {\n        reject(e);\n      });\n\n      if (config.blob !== undefined) {\n        reader.readAsArrayBuffer(config.blob);\n      } else if (config.arraybuffer !== undefined) {\n        parse({}, config.arraybuffer, function (midifile) {\n          resolve(midifile);\n        });\n      } else if (config.base64 !== undefined) {\n        parse({}, base64ToBinary(config.base64), function (midifile) {\n          resolve(midifile);\n        });\n      }\n    }\n\n    this._promise = new Promise(executor);\n  }\n\n\n  sequencer.createMidiFile = function (config) {\n    var mf = new MidiFile2(config);\n    return mf._promise;\n  };\n\n\n  sequencer.protectedScope.addInitMethod(function () {\n    ajax = sequencer.protectedScope.ajax;\n    findItem = sequencer.protectedScope.findItem;\n    storeItem = sequencer.protectedScope.storeItem;\n    deleteItem = sequencer.protectedScope.deleteItem;\n    parseUrl = sequencer.protectedScope.parseUrl;\n    typeString = sequencer.protectedScope.typeString;\n    parseMidiFile = sequencer.protectedScope.parseMidiFile;\n    base64ToBinary = sequencer.protectedScope.base64ToBinary;\n    createPart = sequencer.createPart;\n    createTrack = sequencer.createTrack;\n    createMidiEvent = sequencer.createMidiEvent;\n  });\n}function midiNote() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        MidiNote,\r\n\r\n        //public\r\n        createMidiEvent,\r\n\r\n        //protected\r\n        typeString,\r\n\r\n        midiNoteId = 0;\r\n\r\n    /*\r\n        @params: noteOn event, noteOff event\r\n        @params: start ticks, end ticks, note number, velocity\r\n\r\n    */\r\n\r\n    MidiNote = function (args) {\r\n        var numArgs = args.length,\r\n            on, off, startTicks, endTicks, noteNumber, velocity;\r\n\r\n        //console.log(args);\r\n\r\n        if (numArgs === 1) {\r\n            on = args[0];\r\n            if (on === undefined) {\r\n                console.error('please provide at least a note on event');\r\n                return;\r\n            }\r\n            this.noteOn = on;\r\n        } else if (numArgs === 2) {\r\n            on = args[0];\r\n            off = args[1];\r\n            if (on === undefined) {\r\n                console.error('please provide at least a note on event');\r\n                return;\r\n            }\r\n            if (on.className === 'MidiEvent' && off & off.className === 'MidiEvent') {\r\n                if (on.ticks >= off.ticks) {\r\n                    console.error('MidiNote has wrong duration');\r\n                    return;\r\n                }\r\n                this.noteOn = on;\r\n                this.noteOff = off;\r\n            }\r\n        } else if (numArgs === 4) {\r\n            startTicks = args[0];\r\n            endTicks = args[1];\r\n            noteNumber = args[2];\r\n            velocity = args[3];\r\n            if (startTicks && endTicks && startTicks >= endTicks) {\r\n                console.error('MidiNote has wrong duration');\r\n                return;\r\n            }\r\n            if (noteNumber < 0 || noteNumber > 127) {\r\n                console.error('MidiNote has wrong note number');\r\n                return;\r\n            }\r\n            if (velocity < 0 || velocity > 127) {\r\n                console.error('MidiNote has wrong velocity');\r\n                return;\r\n            }\r\n            on = createMidiEvent(startTicks, sequencer.NOTE_ON, noteNumber, velocity);\r\n            if (off) {\r\n                off = createMidiEvent(endTicks, sequencer.NOTE_OFF, noteNumber, 0);\r\n            }\r\n        } else {\r\n            console.error('wrong number of arguments, please consult documentation');\r\n            return;\r\n        }\r\n\r\n        on.midiNote = this;\r\n        this.noteOn = on;\r\n\r\n        if (off === undefined) {\r\n            this.endless = true;\r\n        } else {\r\n            off.midiNote = this;\r\n            this.endless = false;\r\n            this.noteOff = off;\r\n            this.durationTicks = off.ticks - on.ticks;\r\n            this.durationMillis = off.millis - on.millis;\r\n        }\r\n\r\n\r\n        this.note = on.note;\r\n        this.number = on.noteNumber;\r\n        this.ticks = on.ticks;\r\n        this.pitch = on.data1;\r\n        this.velocity = on.velocity;\r\n        this.id = 'N' + midiNoteId + new Date().getTime();\r\n        this.name = on.noteName;\r\n        this.className = 'MidiNote';\r\n        this.type = sequencer.MIDI_NOTE;\r\n        midiNoteId++;\r\n    };\r\n\r\n\r\n    MidiNote.prototype.addNoteOff = function (off) {\r\n        if (this.noteOff !== undefined) {\r\n            console.log(off.ticks, off.noteNumber, this.id, 'override note off event');\r\n            this.noteOff.midiNote = undefined;\r\n        }\r\n        var on = this.noteOn;\r\n        off.midiNote = this;\r\n        this.endless = false;\r\n        this.noteOff = off;\r\n        this.durationTicks = off.ticks - on.ticks;\r\n        this.durationMillis = off.millis - on.millis;\r\n        this.endless = false;\r\n    };\r\n\r\n    /*\r\n        MidiNote.prototype.setDuration = function(duration_in_ticks){\r\n            if(duration_in_ticks <= 0){\r\n                console.error('duration of a MidiNote has to be greater then 0');\r\n                return;\r\n            }\r\n            this.noteOff.ticks = this.noteOn.ticks + duration_in_ticks;\r\n            this.durationTicks = this.noteOff.ticks - this.noteOn.ticks;\r\n            //this.durationMillis = this.noteOff.millis - this.noteOn.millis;\r\n            if(this.part){\r\n                this.part.needsUpdate = true;\r\n            }\r\n        };\r\n    */\r\n    /*\r\n        MidiNote.prototype.setEnd = function(ticks){\r\n            this.noteOff.ticks = ticks;\r\n            if(this.part){\r\n                this.part.needsUpdate = true;\r\n            }\r\n        };\r\n    \r\n    \r\n        MidiNote.prototype.setStart = function(ticks){\r\n            this.noteOn.ticks = ticks;\r\n            if(this.part){\r\n                this.part.needsUpdate = true;\r\n            }\r\n        };\r\n    \r\n    \r\n        MidiNote.prototype.setVelocity = function(velocity){\r\n            if(velocity < 0 || velocity > 127){\r\n                return;\r\n            }\r\n            this.velocity = this.noteOn.data1 = this.noteOn.velocity = velocity;\r\n        };\r\n    \r\n    */\r\n    MidiNote.prototype.setPitch = function (pitch) {\r\n        if (pitch < 0 || pitch > 127) {\r\n            return;\r\n        }\r\n        this.noteOn.setPitch(pitch);\r\n        if (this.endless === false) {\r\n            this.noteOff.setPitch(pitch);\r\n        }\r\n        this.number = this.noteOn.noteNumber;\r\n        this.name = this.noteOn.noteName;\r\n        this.pitch = pitch;\r\n    };\r\n\r\n\r\n    MidiNote.prototype.mute = function (flag) {\r\n        if (flag !== undefined) {\r\n            this.mute = flag;\r\n        } else {\r\n            this.mute = !this.mute;\r\n        }\r\n    };\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        createMidiEvent = sequencer.createMidiEvent;\r\n        typeString = sequencer.protectedScope.typeString;\r\n    });\r\n\r\n\r\n    sequencer.createMidiNote = function () {\r\n        return new MidiNote(Array.prototype.slice.call(arguments));\r\n    };\r\n\r\n}/*\n    based on: https://github.com/gasman/jasmid\n    adapted to work with heartbeatjs' type MidiEvent and Track\n*/\n\nfunction midiParse() {\n\n    'use strict';\n\n    var\n        lastEventTypeByte,\n        trackName,\n        instrumentName,\n\n        //import\n        createStream; // defined in midi_stream.js\n\n\n    function readChunk(stream) {\n        var id = stream.read(4, true);\n        var length = stream.readInt32();\n        //console.log(length);\n        return {\n            'id': id,\n            'length': length,\n            'data': stream.read(length, false)\n        };\n    }\n\n\n    function readEvent(stream) {\n        var event = {};\n        //var lastEventTypeByte; // for running status\n        event.deltaTime = stream.readVarInt();\n        var eventTypeByte = stream.readInt8();\n        var length;\n        //console.log(eventTypeByte, eventTypeByte & 0x80, 146 & 0x0f);\n        if ((eventTypeByte & 0xf0) == 0xf0) {\n            /* system / meta event */\n            if (eventTypeByte == 0xff) {\n                /* meta event */\n                event.type = 'meta';\n                var subtypeByte = stream.readInt8();\n                length = stream.readVarInt();\n                switch (subtypeByte) {\n                    case 0x00:\n                        event.subtype = 'sequenceNumber';\n                        if (length !== 2) throw 'Expected length for sequenceNumber event is 2, got ' + length;\n                        event.number = stream.readInt16();\n                        return event;\n                    case 0x01:\n                        event.subtype = 'text';\n                        event.text = stream.read(length);\n                        return event;\n                    case 0x02:\n                        event.subtype = 'copyrightNotice';\n                        event.text = stream.read(length);\n                        return event;\n                    case 0x03:\n                        event.subtype = 'trackName';\n                        event.text = stream.read(length);\n                        trackName = event.text;\n                        return event;\n                    case 0x04:\n                        event.subtype = 'instrumentName';\n                        event.text = stream.read(length);\n                        instrumentName = event.text;\n                        return event;\n                    case 0x05:\n                        event.subtype = 'lyrics';\n                        event.text = stream.read(length);\n                        return event;\n                    case 0x06:\n                        event.subtype = 'marker';\n                        event.text = stream.read(length);\n                        return event;\n                    case 0x07:\n                        event.subtype = 'cuePoint';\n                        event.text = stream.read(length);\n                        return event;\n                    case 0x20:\n                        event.subtype = 'midiChannelPrefix';\n                        if (length !== 1) throw 'Expected length for midiChannelPrefix event is 1, got ' + length;\n                        event.channel = stream.readInt8();\n                        return event;\n                    case 0x2f:\n                        event.subtype = 'endOfTrack';\n                        if (length !== 0) throw 'Expected length for endOfTrack event is 0, got ' + length;\n                        return event;\n                    case 0x51:\n                        event.subtype = 'setTempo';\n                        if (length !== 3) throw 'Expected length for setTempo event is 3, got ' + length;\n                        event.microsecondsPerBeat = (\n                            (stream.readInt8() << 16) +\n                            (stream.readInt8() << 8) +\n                            stream.readInt8()\n                        );\n                        return event;\n                    case 0x54:\n                        event.subtype = 'smpteOffset';\n                        if (length !== 5) throw 'Expected length for smpteOffset event is 5, got ' + length;\n                        var hourByte = stream.readInt8();\n                        event.frameRate = {\n                            0x00: 24, 0x20: 25, 0x40: 29, 0x60: 30\n                        }[hourByte & 0x60];\n                        event.hour = hourByte & 0x1f;\n                        event.min = stream.readInt8();\n                        event.sec = stream.readInt8();\n                        event.frame = stream.readInt8();\n                        event.subframe = stream.readInt8();\n                        return event;\n                    case 0x58:\n                        event.subtype = 'timeSignature';\n                        if (length !== 4) throw 'Expected length for timeSignature event is 4, got ' + length;\n                        event.numerator = stream.readInt8();\n                        event.denominator = Math.pow(2, stream.readInt8());\n                        event.metronome = stream.readInt8();\n                        event.thirtyseconds = stream.readInt8();\n                        return event;\n                    case 0x59:\n                        event.subtype = 'keySignature';\n                        if (length !== 2) throw 'Expected length for keySignature event is 2, got ' + length;\n                        event.key = stream.readInt8(true);\n                        event.scale = stream.readInt8();\n                        return event;\n                    case 0x7f:\n                        event.subtype = 'sequencerSpecific';\n                        event.data = stream.read(length);\n                        return event;\n                    default:\n                        //if(sequencer.debug >= 2){\n                        //    console.warn('Unrecognised meta event subtype: ' + subtypeByte);\n                        //}\n                        event.subtype = 'unknown';\n                        event.data = stream.read(length);\n                        return event;\n                }\n                event.data = stream.read(length);\n                return event;\n            } else if (eventTypeByte == 0xf0) {\n                event.type = 'sysEx';\n                length = stream.readVarInt();\n                event.data = stream.read(length);\n                return event;\n            } else if (eventTypeByte == 0xf7) {\n                event.type = 'dividedSysEx';\n                length = stream.readVarInt();\n                event.data = stream.read(length);\n                return event;\n            } else {\n                throw 'Unrecognised MIDI event type byte: ' + eventTypeByte;\n            }\n        } else {\n            /* channel event */\n            var param1;\n            if ((eventTypeByte & 0x80) === 0) {\n                /* running status - reuse lastEventTypeByte as the event type.\n                    eventTypeByte is actually the first parameter\n                */\n                //console.log('running status');\n                param1 = eventTypeByte;\n                eventTypeByte = lastEventTypeByte;\n            } else {\n                param1 = stream.readInt8();\n                //console.log('last', eventTypeByte);\n                lastEventTypeByte = eventTypeByte;\n            }\n            var eventType = eventTypeByte >> 4;\n            event.channel = eventTypeByte & 0x0f;\n            event.type = 'channel';\n            switch (eventType) {\n                case 0x08:\n                    event.subtype = 'noteOff';\n                    event.noteNumber = param1;\n                    event.velocity = stream.readInt8();\n                    return event;\n                case 0x09:\n                    event.noteNumber = param1;\n                    event.velocity = stream.readInt8();\n                    if (event.velocity === 0) {\n                        event.subtype = 'noteOff';\n                    } else {\n                        event.subtype = 'noteOn';\n                        //console.log('noteOn');\n                    }\n                    return event;\n                case 0x0a:\n                    event.subtype = 'noteAftertouch';\n                    event.noteNumber = param1;\n                    event.amount = stream.readInt8();\n                    return event;\n                case 0x0b:\n                    event.subtype = 'controller';\n                    event.controllerType = param1;\n                    event.value = stream.readInt8();\n                    return event;\n                case 0x0c:\n                    event.subtype = 'programChange';\n                    event.programNumber = param1;\n                    return event;\n                case 0x0d:\n                    event.subtype = 'channelAftertouch';\n                    event.amount = param1;\n                    //if(trackName === 'SH-S1-44-C09 L=SML IN=3'){\n                    //    console.log('channel pressure', trackName, param1);\n                    //}\n                    return event;\n                case 0x0e:\n                    event.subtype = 'pitchBend';\n                    event.value = param1 + (stream.readInt8() << 7);\n                    return event;\n                default:\n                    /*\n                    throw 'Unrecognised MIDI event type: ' + eventType;\n                    console.log('Unrecognised MIDI event type: ' + eventType);\n                    */\n\n\n\n                    event.value = stream.readInt8();\n                    event.subtype = 'unknown';\n                    //console.log(event);\n                    /*\n                                        event.noteNumber = param1;\n                                        event.velocity = stream.readInt8();\n                                        event.subtype = 'noteOn';\n                                        console.log('weirdo', trackName, param1, event.velocity);\n                    */\n\n                    return event;\n            }\n        }\n    }\n\n\n    function parseStream(stream) {\n        var formatType, trackCount, timeDivision, ticksPerBeat,\n            tracks = [], i,\n            trackNames = [],\n            trackChunk, trackStream,\n            headerChunk, headerStream;\n\n        headerChunk = readChunk(stream);\n        if (headerChunk.id !== 'MThd' || headerChunk.length !== 6) {\n            throw 'Bad .mid file - header not found';\n        }\n        //console.log(headerChunk);\n\n        headerStream = createStream(headerChunk.data);\n        formatType = headerStream.readInt16();\n        trackCount = headerStream.readInt16();\n        timeDivision = headerStream.readInt16();\n\n        if (timeDivision & 0x8000) {\n            throw 'Expressing time division in SMTPE frames is not supported yet';\n        } else {\n            ticksPerBeat = timeDivision;\n        }\n\n        var header = {\n            'formatType': formatType,\n            'trackCount': trackCount,\n            'ticksPerBeat': ticksPerBeat\n        };\n\n        for (i = 0; i < trackCount; i++) {\n            tracks[i] = [];\n            trackNames[i] = trackName;\n            trackChunk = readChunk(stream);\n            if (trackChunk.id !== 'MTrk') {\n                throw 'Unexpected chunk - expected MTrk, got ' + trackChunk.id;\n            }\n            trackStream = createStream(trackChunk.data);\n            while (!trackStream.eof()) {\n                var event = readEvent(trackStream);\n                tracks[i].push(event);\n            }\n        }\n\n        return {\n            'header': header,\n            'tracks': tracks,\n            'trackNames': trackNames\n        };\n    }\n\n\n    /* read a MIDI-style variable-length integer\n        (big-endian value in groups of 7 bits,\n        with top bit set to signify that another byte follows)\n    function readVarInt() {\n        var result = 0;\n        while (true) {\n            var b = readInt8();\n            if (b & 0x80) {\n                result += (b & 0x7f);\n                result <<= 7;\n            } else {\n                // b is the last byte\n                return result + b;\n            }\n        }\n    }\n    */\n\n\n    sequencer.protectedScope.parseMidiFile = function (buffer) {\n        return parseStream(createStream(buffer));\n        //var dv = new DataView(buffer);\n        //return parseStream(dv);\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        createStream = sequencer.protectedScope.createStream;\n    });\n}\n\n/* \n\tWrapper for accessing strings through sequential reads \n\t\n\tbased on: https://github.com/gasman/jasmid\n\tadapted to work with ArrayBuffer -> Uint8Array\n*/\n\nfunction midiStream() {\n\n\t'use strict';\n\n\tvar fcc = String.fromCharCode;\n\n\t// buffer is Uint8Array\n\tfunction createStream(buffer) {\n\t\tvar position = 0;\n\n\t\t/* read string or any number of bytes */\n\t\tfunction read(length, toString) {\n\t\t\tvar result, i;\n\t\t\ttoString = toString === undefined ? true : toString;\n\n\t\t\tif (toString) {\n\t\t\t\tresult = '';\n\t\t\t\tfor (i = 0; i < length; i++ , position++) {\n\t\t\t\t\tresult += fcc(buffer[position]);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\tresult = [];\n\t\t\t\tfor (i = 0; i < length; i++ , position++) {\n\t\t\t\t\tresult.push(buffer[position]);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\t/* read a big-endian 32-bit integer */\n\t\tfunction readInt32() {\n\t\t\tvar result = (\n\t\t\t\t(buffer[position] << 24) +\n\t\t\t\t(buffer[position + 1] << 16) +\n\t\t\t\t(buffer[position + 2] << 8) +\n\t\t\t\tbuffer[position + 3]\n\t\t\t);\n\t\t\tposition += 4;\n\t\t\treturn result;\n\t\t}\n\n\t\t/* read a big-endian 16-bit integer */\n\t\tfunction readInt16() {\n\t\t\tvar result = (\n\t\t\t\t(buffer[position] << 8) +\n\t\t\t\tbuffer[position + 1]\n\t\t\t);\n\t\t\tposition += 2;\n\t\t\treturn result;\n\t\t}\n\n\t\t/* read an 8-bit integer */\n\t\tfunction readInt8(signed) {\n\t\t\tvar result = buffer[position];\n\t\t\tif (signed && result > 127) result -= 256;\n\t\t\tposition += 1;\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction eof() {\n\t\t\treturn position >= buffer.length;\n\t\t}\n\n\t\t/* read a MIDI-style variable-length integer\n\t\t\t(big-endian value in groups of 7 bits,\n\t\t\twith top bit set to signify that another byte follows)\n\t\t*/\n\t\tfunction readVarInt() {\n\t\t\tvar result = 0;\n\t\t\twhile (true) {\n\t\t\t\tvar b = readInt8();\n\t\t\t\tif (b & 0x80) {\n\t\t\t\t\tresult += (b & 0x7f);\n\t\t\t\t\tresult <<= 7;\n\t\t\t\t} else {\n\t\t\t\t\t/* b is the last byte */\n\t\t\t\t\treturn result + b;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t'eof': eof,\n\t\t\t'read': read,\n\t\t\t'readInt32': readInt32,\n\t\t\t'readInt16': readInt16,\n\t\t\t'readInt8': readInt8,\n\t\t\t'readVarInt': readVarInt\n\t\t};\n\t}\n\n\tsequencer.protectedScope.createStream = createStream;\n\n}\n\nfunction midiSystem() {\n\n  'use strict';\n\n  var\n    context, // defined in open_module.js\n    typeString, // defined in util.js\n    objectForEach, // defined in util.js\n    createMidiNote, // defined in midi_note.js\n    createMidiEvent, // defined in midi_event.js\n\n    slice = Array.prototype.slice,\n\n    songMidiEventListener,\n\n    midiAccess,\n    midiInputsOrder,\n    midiOutputsOrder,\n    midiInitialized = false,\n    midiEventListenerId = 0;\n\n\n  function initMidi(cb) {\n\n    // console.log(midiInitialized, navigator.requestMIDIAccess);\n\n    if (midiInitialized === true) {\n      cb();\n      return;\n    }\n\n    midiInitialized = true;\n\n    if (navigator.requestMIDIAccess !== undefined) {\n      navigator.requestMIDIAccess().then(\n        // on success\n        function midiAccessOnSuccess(midi) {\n          if (midi._jazzInstances !== undefined) {\n            sequencer.jazz = midi._jazzInstances[0]._Jazz.version;\n            sequencer.midi = true;\n          } else {\n            sequencer.webmidi = true;\n            sequencer.midi = true;\n          }\n          midiAccess = midi;\n          midiAccess.onstatechange = getDevices;\n          if (!midiAccess.inputs || !midiAccess.outputs) {\n            // Firefox WebMIDI API support is still in progress\n            cb();\n          } else {\n            getDevices();\n            //console.log(midi, sequencer.midi, sequencer.webmidi, sequencer.jazz);    \n            cb();\n          }\n        },\n        // on error\n        function midiAccessOnError(e) {\n          console.log('MIDI could not be initialized:', e);\n          cb();\n        }\n      );\n      // browsers without WebMIDI API\n    } else {\n      if (sequencer.browser === 'chrome') {\n        console.log('Web MIDI API not enabled');\n      } else {\n        console.log('Web MIDI API not supported');\n      }\n      cb();\n    }\n  }\n\n\n  function getDevices(e) {\n    //console.log('getDevices', e);\n    var inputs, outputs;\n    midiInputsOrder = [];\n    midiOutputsOrder = [];\n\n    inputs = midiAccess.inputs;\n\n    inputs.forEach(function (input) {\n      midiInputsOrder.push({ name: input.name, id: input.id });\n      sequencer.midiInputs[input.id] = input;\n    });\n\n    midiInputsOrder.sort(function (a, b) {\n      var nameA = a.name.toLowerCase(),\n        nameB = b.name.toLowerCase();\n      if (nameA < nameB) { //sort string ascending\n        return -1;\n      } else if (nameA > nameB) {\n        return 1;\n      }\n      return 0; //default return value (no sorting)\n    });\n\n    sequencer.numMidiInputs = midiInputsOrder.length;\n\n\n    outputs = midiAccess.outputs;\n\n    outputs.forEach(function (output) {\n      midiOutputsOrder.push({ name: output.name, id: output.id });\n      sequencer.midiOutputs[output.id] = output;\n    });\n\n\n    midiOutputsOrder.sort(function (a, b) {\n      var nameA = a.name.toLowerCase(),\n        nameB = b.name.toLowerCase();\n      if (nameA < nameB) { //sort string ascending\n        return -1;\n      } else if (nameA > nameB) {\n        return 1;\n      }\n      return 0; //default return value (no sorting)\n    });\n\n    sequencer.numMidiOutputs = midiOutputsOrder.length;\n  }\n\n\n  function initMidiSong(song) {\n    songMidiEventListener = function (e) {\n      //console.log(e);\n      handleMidiMessageSong(e, song, this);\n    };\n\n    // by default a song listens to all available midi-in ports\n    objectForEach(sequencer.midiInputs, function (port) {\n      //port.addEventListener('midimessage', songMidiEventListener, false);\n      port.onmidimessage = songMidiEventListener;\n      song.midiInputs[port.id] = port;\n      //console.log(port);\n    });\n    //console.log(sequencer.midiInputs);\n\n    objectForEach(sequencer.midiOutputs, function (port) {\n      song.midiOutputs[port.id] = port;\n    });\n\n    song.numMidiInputs = sequencer.numMidiInputs;\n    song.numMidiOutputs = sequencer.numMidiOutputs;\n  }\n\n\n  function setMidiInputSong(id, flag, song) {\n    var input = sequencer.midiInputs[id],\n      tracks = song.tracks,\n      maxi = song.numTracks - 1,\n      i, track;\n\n    flag = flag === undefined ? true : flag;\n\n    if (input === undefined) {\n      if (sequencer.debug === true) {\n        console.log('no midi input with id', id, 'found');\n      }\n      return;\n    }\n\n    if (flag === false) {\n      delete song.midiInputs[id];\n      //input.removeEventListener('midimessage', songMidiEventListener, false);\n      input.onmidimessage = null;\n      song.numMidiInputs--;\n    } else if (input !== undefined) {\n      song.midiInputs[id] = input;\n      //input.addEventListener('midimessage', songMidiEventListener, false);\n      input.onmidimessage = songMidiEventListener;\n      song.numMidiInputs++;\n    }\n\n    for (i = maxi; i >= 0; i--) {\n      track = tracks[i];\n      track.setMidiInput(id, flag);\n      // if(flag === false){\n      //     delete track.midiInputs[id];\n      // }\n    }\n  }\n\n  function setMidiOutputSong(id, flag, song) {\n    var output = sequencer.midiOutputs[id],\n      tracks = song.tracks,\n      maxi = song.numTracks - 1,\n      i, track, time;\n\n    flag = flag === undefined ? true : flag;\n\n    if (output === undefined) {\n      if (sequencer.debug === true) {\n        console.log('no midi output with id', id, 'found');\n      }\n      return;\n    }\n\n    if (flag === false) {\n      delete song.midiOutputs[id];\n      song.numMidiOutputs--;\n      time = song.scheduler.lastEventTime + 100;\n      output.send([0xB0, 0x7B, 0x00], time); // stop all notes\n      output.send([0xB0, 0x79, 0x00], time); // reset all controllers\n    } else if (output !== undefined) {\n      song.midiOutputs[id] = output;\n      song.numMidiOutputs++;\n    }\n\n    for (i = maxi; i >= 0; i--) {\n      track = tracks[i];\n      track.setMidiOutput(id, flag);\n      // if(flag === false){\n      //     delete track.midiOutputs[id];\n      // }\n    }\n  }\n\n  function handleMidiMessageSong(midiMessageEvent, song, input) {\n    var data = midiMessageEvent.data,\n      i, track,\n      tracks = song.tracks,\n      numTracks = song.numTracks,\n      midiEvent,\n      listeners;\n\n    //console.log(midiMessageEvent.data);\n    midiEvent = createMidiEvent(song.ticks, data[0], data[1], data[2]);\n\n    for (i = 0; i < numTracks; i++) {\n      track = tracks[i];\n      //console.log(track.midiInputs, input);\n      /*\n      if(midiEvent.channel === track.channel || track.channel === 0 || track.channel === 'any'){\n          handleMidiMessageTrack(midiEvent, track);\n      }\n      */\n      // like in Cubase, midi events from all devices, sent on any midi channel are forwarded to all tracks\n      // set track.monitor to false if you don't want to receive midi events on a certain track\n      // note that track.monitor is by default set to false and that track.monitor is automatically set to true\n      // if you are recording on that track\n      // console.log(track.monitor, track.id, input.id);\n      if (track.monitor === true && track.midiInputs[input.id] !== undefined) {\n        handleMidiMessageTrack(midiEvent, track, input);\n      }\n    }\n\n    listeners = song.midiEventListeners[midiEvent.type];\n    if (listeners === undefined) {\n      return;\n    }\n\n    objectForEach(listeners, function (listener) {\n      listener(midiEvent, input);\n    });\n  }\n\n\n  //function handleMidiMessageTrack(midiMessageEvent, track, input){\n  function handleMidiMessageTrack(midiEvent, track, input) {\n    var song = track.song,\n      note, listeners, channel;\n    //data = midiMessageEvent.data,\n    //midiEvent = createMidiEvent(song.ticks, data[0], data[1], data[2]);\n\n    //midiEvent.source = midiMessageEvent.srcElement.name;\n    //console.log(midiMessageEvent)\n    //console.log('---->', midiEvent.type);\n\n    // add the exact time of this event so we can calculate its ticks position\n    midiEvent.recordMillis = context.currentTime * 1000; // millis\n    midiEvent.state = 'recorded';\n\n    if (midiEvent.type === 144) {\n      note = createMidiNote(midiEvent);\n      track.recordingNotes[midiEvent.data1] = note;\n      //track.song.recordingNotes[note.id] = note;\n    } else if (midiEvent.type === 128) {\n      note = track.recordingNotes[midiEvent.data1];\n      // check if the note exists: if the user plays notes on her keyboard before the midi system has\n      // been fully initialized, it can happen that the first incoming midi event is a NOTE OFF event\n      if (note === undefined) {\n        return;\n      }\n      note.addNoteOff(midiEvent);\n      delete track.recordingNotes[midiEvent.data1];\n      //delete track.song.recordingNotes[note.id];\n    }\n\n    //console.log(song.preroll, song.recording, track.recordEnabled);\n\n    if ((song.prerolling || song.recording) && track.recordEnabled === 'midi') {\n      if (midiEvent.type === 144) {\n        track.song.recordedNotes.push(note);\n      }\n      track.recordPart.addEvent(midiEvent);\n      // song.recordedEvents is used in the key editor\n      track.song.recordedEvents.push(midiEvent);\n    } else if (track.enableRetrospectiveRecording) {\n      track.retrospectiveRecording.push(midiEvent);\n    }\n\n    // call all midi event listeners\n    listeners = track.midiEventListeners[midiEvent.type];\n    if (listeners !== undefined) {\n      objectForEach(listeners, function (listener) {\n        listener(midiEvent, input);\n      });\n    }\n\n    channel = track.channel;\n    if (channel === 'any' || channel === undefined || isNaN(channel) === true) {\n      channel = 0;\n    }\n\n    objectForEach(track.midiOutputs, function (output) {\n      //console.log('midi out', output, midiEvent.type);\n      if (midiEvent.type === 128 || midiEvent.type === 144 || midiEvent.type === 176) {\n        //console.log(midiEvent.type, midiEvent.data1, midiEvent.data2);\n        output.send([midiEvent.type, midiEvent.data1, midiEvent.data2]);\n        // }else if(midiEvent.type === 192){\n        //     output.send([midiEvent.type + channel, midiEvent.data1]);\n      }\n      //output.send([midiEvent.status + channel, midiEvent.data1, midiEvent.data2]);\n    });\n\n    // @TODO: maybe a track should be able to send its event to both a midi-out port and an internal heartbeat song?\n    //console.log(track.routeToMidiOut);\n    if (track.routeToMidiOut === false) {\n      midiEvent.track = track;\n      track.instrument.processEvent(midiEvent);\n    }\n  }\n\n\n  function addMidiEventListener(args, obj) { // obj can be a track or a song\n    args = slice.call(args);\n\n    var id = midiEventListenerId++,\n      types = {},\n      ids = [],\n      listener,\n      loop;\n\n\n    // should I inline this?\n    loop = function (args, i, maxi) {\n      for (i = 0; i < maxi; i++) {\n        var arg = args[i],\n          type = typeString(arg);\n        //console.log(type);\n        if (type === 'array') {\n          loop(arg, 0, arg.length);\n        } else if (type === 'function') {\n          listener = arg;\n        } else if (isNaN(arg) === false) {\n          arg = parseInt(arg, 10);\n          if (sequencer.checkEventType(arg) !== false) {\n            types[arg] = arg;\n          }\n        } else if (type === 'string') {\n          if (sequencer.checkEventType(arg) !== false) {\n            arg = sequencer.midiEventNumberByName(arg);\n            types[arg] = arg;\n          }\n        }\n      }\n    };\n\n    loop(args, 0, args.length);\n    //console.log('types', types, 'listener', listener);\n\n    objectForEach(types, function (type) {\n      //console.log(type);\n      if (obj.midiEventListeners[type] === undefined) {\n        obj.midiEventListeners[type] = {};\n      }\n      obj.midiEventListeners[type][id] = listener;\n      ids.push(type + '_' + id);\n    });\n\n    //console.log(obj.midiEventListeners);\n    return ids.length === 1 ? ids[0] : ids;\n  }\n\n\n  function removeMidiEventListener(id, obj) {\n    var type;\n    id = id.split('_');\n    type = id[0];\n    id = id[1];\n    delete obj.midiEventListeners[type][id];\n  }\n\n\n  function removeMidiEventListeners() {\n\n  }\n\n\n  function getMidiPortsAsDropdown(config, obj) {\n    var select = document.createElement('select'),\n      option, ports,\n      type = config.type,\n      id = config.id || type,\n      div = config.div,\n      firstOption = config.firstOption;\n\n    if (type !== 'input' && type !== 'output') {\n      console.log('please set type to \"input\" or \"output\"');\n      return;\n    }\n\n    if (firstOption === undefined) {\n      firstOption = type === 'input' ? 'choose MIDI in' : 'choose MIDI out';\n    }\n\n    select.id = id;\n    ports = type === 'input' ? obj.midiInputs : obj.midiOutputs;\n\n    if (firstOption !== false) {\n      option = document.createElement('option');\n      option.value = -1;\n      option.innerHTML = firstOption;\n      select.appendChild(option);\n    }\n\n    objectForEach(ports, function (port) {\n      option = document.createElement('option');\n      option.value = port.id;\n      option.innerHTML = port.name;\n      select.appendChild(option);\n    });\n\n    if (div) {\n      div.appendChild(select);\n    }\n    return select;\n  }\n\n\n  sequencer.getMidiPortsAsDropdown = function () {\n    getMidiPortsAsDropdown(sequencer);\n  };\n\n\n  sequencer.getMidiInputsAsDropdown = function (config) {\n    config = config || {\n      type: 'input'\n    };\n    return getMidiPortsAsDropdown(config, sequencer);\n  };\n\n\n  sequencer.getMidiOutputsAsDropdown = function (config) {\n    config = config || {\n      type: 'output'\n    };\n    return getMidiPortsAsDropdown(config, sequencer);\n  };\n\n\n  function getMidiInputs(cb, obj) {\n    var i, maxi;\n    if (obj === sequencer) {\n      for (i = 0, maxi = midiInputsOrder.length; i < maxi; i++) {\n        cb(obj.midiInputs[midiInputsOrder[i].id], i);\n      }\n    } else {\n      objectForEach(obj.midiInputs, function (port) {\n        cb(port, i);\n      });\n    }\n  }\n\n\n  function getMidiOutputs(cb, obj) {\n    var i, maxi;\n    if (obj === sequencer) {\n      for (i = 0, maxi = midiOutputsOrder.length; i < maxi; i++) {\n        cb(obj.midiOutputs[midiOutputsOrder[i].id], i);\n      }\n    } else {\n      objectForEach(obj.midiOutputs, function (port, i) {\n        cb(port, i);\n      });\n    }\n  }\n\n\n  sequencer.getMidiInputs = function (cb) {\n    getMidiInputs(cb, sequencer);\n  };\n\n\n  sequencer.getMidiOutputs = function (cb) {\n    getMidiOutputs(cb, sequencer);\n  };\n\n\n  sequencer.protectedScope.addInitMethod(function () {\n    context = sequencer.protectedScope.context;\n    createMidiNote = sequencer.createMidiNote;\n    createMidiEvent = sequencer.createMidiEvent;\n    typeString = sequencer.protectedScope.typeString;\n    objectForEach = sequencer.protectedScope.objectForEach;\n  });\n\n\n  // close_module.js\n  sequencer.protectedScope.initMidi = initMidi;\n\n  // song.js\n  sequencer.protectedScope.initMidiSong = initMidiSong;\n  sequencer.protectedScope.getMidiInputs = getMidiInputs;\n  sequencer.protectedScope.getMidiOutputs = getMidiOutputs;\n  sequencer.protectedScope.setMidiInputSong = setMidiInputSong;\n  sequencer.protectedScope.setMidiOutputSong = setMidiOutputSong;\n  sequencer.protectedScope.addMidiEventListener = addMidiEventListener;\n  sequencer.protectedScope.getMidiPortsAsDropdown = getMidiPortsAsDropdown;\n  sequencer.protectedScope.removeMidiEventListener = removeMidiEventListener;\n  sequencer.protectedScope.removeMidiEventListeners = removeMidiEventListeners;\n  sequencer.protectedScope.handleMidiMessageTrack = handleMidiMessageTrack;\n\n}\n\n\n\n\n/*\n    function handleMidiMessageTrack(e, track){\n        var data = e.data,\n            midiEvent,\n            song = track.song,\n            note, listeners;\n\n        //console.log(track.recordPart);\n        if(song){\n            midiEvent = sequencer.createMidiEvent(song.ticks, data[0], data[1], data[2]);\n            //console.log(midiEvent);\n            if(midiEvent.type === 144){\n                note = createMidiNote(midiEvent);\n                track.recordingNotes[midiEvent.data1] = note;\n                //track.song.recordingNotes[note.id] = note;\n            }else if(midiEvent.type === 128){\n                note = track.recordingNotes[midiEvent.data1];\n                note.addNoteOff(midiEvent);\n                delete track.recordingNotes[midiEvent.data1];\n                //delete track.song.recordingNotes[note.id];\n            }\n            if(song.recording && song.playing && track.recordEnabled){\n                if(midiEvent.type === 144){\n                    track.song.recordedNotes.push(note);\n                }\n                track.recordPart.addEvent(midiEvent);\n                track.song.recordedEvents.push(midiEvent);\n            }else if(track.enableRetrospectiveRecording){\n                track.retrospectiveRecording.push(midiEvent);\n            }\n\n            // call all midi event listeners\n            listeners = track.midiEventListeners[midiEvent.type];\n            if(listeners !== undefined){\n                objectForEach(listeners, function(listener, id){\n                    listener(midiEvent);\n                });\n            }\n        }else{\n            console.error('unexpected situation!');\n            // does this ever happen?\n            midiEvent = sequencer.createMidiEvent(0, data[0], data[1], data[2]);\n            midiEvent.millis = song.recordTimestamp - sequencer.getTime();\n            if(track.enableRetrospectiveRecording){\n                track.retrospectiveRecording.push(midiEvent);\n            }\n            //@TODO: add parser for retrospective recording: convert millis to ticks\n        }\n\n        if(track.midiOutput !== undefined){\n            track.midiOutput.send([data[0], data[1], data[2]]);\n        }else{\n            midiEvent.track = track;\n            track.instrument.processEvent(midiEvent);\n        }\n    }\n*///http://www.deluge.co/?q=midi-tempo-bpm\n// This code is based on https://github.com/sergi/jsmidi\n\nfunction midiWrite() {\n\n    'use strict';\n\n    var\n        AP = Array.prototype,\n        PPQ = sequencer.defaultPPQ,\n        HDR_CHUNKID = [\n            'M'.charCodeAt(0),\n            'T'.charCodeAt(0),\n            'h'.charCodeAt(0),\n            'd'.charCodeAt(0)\n        ],\n        HDR_CHUNK_SIZE = [0x0, 0x0, 0x0, 0x6], // Header size for SMF\n        // HDR_TYPE0 = [0x0, 0x0], // Midi Type 0 id\n        HDR_TYPE1 = [0x0, 0x1], // Midi Type 1 id\n        //HDR_PPQ = [0x01, 0xE0], // Defaults to 480 ticks per beat\n        //HDR_PPQ = [0x00, 0x80], // Defaults to 128 ticks per beat\n        HDR_PPQ = str2Bytes(PPQ.toString(16), 2),\n\n        TRK_CHUNKID = [\n            'M'.charCodeAt(0),\n            'T'.charCodeAt(0),\n            'r'.charCodeAt(0),\n            'k'.charCodeAt(0)\n        ],\n\n        // Meta event codes\n        META_SEQUENCE = 0x00,\n        META_TEXT = 0x01,\n        META_COPYRIGHT = 0x02,\n        META_TRACK_NAME = 0x03,\n        META_INSTRUMENT = 0x04,\n        META_LYRIC = 0x05,\n        META_MARKER = 0x06,\n        META_CUE_POINT = 0x07,\n        META_CHANNEL_PREFIX = 0x20,\n        META_END_OF_TRACK = 0x2f,\n        META_TEMPO = 0x51,\n        META_SMPTE = 0x54,\n        META_TIME_SIG = 0x58,\n        META_KEY_SIG = 0x59,\n        META_SEQ_EVENT = 0x7f;\n\n\n    function write(song) {\n        var byteArray = [].concat(HDR_CHUNKID, HDR_CHUNK_SIZE, HDR_TYPE1),\n            tracks = song.tracks,\n            numTracks = song.tracks.length + 1,\n            i, maxi, track, midiFile, destination, b64,\n            arrayBuffer, dataView, uintArray;\n\n\n        byteArray = byteArray.concat(str2Bytes(numTracks.toString(16), 2), HDR_PPQ);\n        //console.log(byteArray);\n        byteArray = byteArray.concat(trackToBytes(song.timeEvents, song.durationTicks, 'tempo'));\n        //console.log(song.durationMillis);\n\n        for (i = 0, maxi = tracks.length; i < maxi; i++) {\n            track = tracks[i];\n            byteArray = byteArray.concat(trackToBytes(track.events, song.durationTicks, track.name, track.instrumentId));\n        }\n\n        //b64 = btoa(codes2Str(byteArray));\n        //window.location.assign(\"data:audio/midi;base64,\" + b64);\n        //console.log(b64);// send to server\n\n        maxi = byteArray.length;\n        arrayBuffer = new ArrayBuffer(maxi);\n        uintArray = new Uint8Array(arrayBuffer);\n        for (i = 0; i < maxi; i++) {\n            uintArray[i] = byteArray[i];\n        }\n        midiFile = new Blob([uintArray], { type: 'application/x-midi', endings: 'transparent' });\n        saveAs(midiFile, song.name);\n        //window.location.assign(window.URL.createObjectURL(midiFile));\n    }\n\n\n    function trackToBytes(events, lastEventTicks, trackName, instrumentName) {\n        var lengthBytes,\n            i, maxi, event, status,\n            trackLength, // number of bytes in track chunk\n            ticks = 0,\n            delta = 0,\n            trackBytes = [];\n\n        if (trackName) {\n            trackBytes.push(0x00);\n            trackBytes.push(0xFF);\n            trackBytes.push(0x03);\n            trackBytes = trackBytes.concat(convertToVLQ(trackName.length));\n            trackBytes = trackBytes.concat(stringToNumArray(trackName));\n        }\n\n        if (instrumentName) {\n            trackBytes.push(0x00);\n            trackBytes.push(0xFF);\n            trackBytes.push(0x04);\n            trackBytes = trackBytes.concat(convertToVLQ(instrumentName.length));\n            trackBytes = trackBytes.concat(stringToNumArray(instrumentName));\n        }\n\n        for (i = 0, maxi = events.length; i < maxi; i++) {\n            event = events[i];\n            delta = event.ticks - ticks;\n            delta = convertToVLQ(delta);\n            //console.log(delta);\n            trackBytes = trackBytes.concat(delta);\n            //trackBytes.push.apply(trackBytes, delta);\n            if (event.type === 0x80 || event.type === 0x90) { // note off, note on\n                //status = parseInt(event.type.toString(16) + event.channel.toString(16), 16);\n                status = event.type + event.channel;\n                trackBytes.push(status);\n                trackBytes.push(event.noteNumber);\n                trackBytes.push(event.velocity);\n            } else if (event.type === 0x51) { // tempo\n                trackBytes.push(0xFF);\n                trackBytes.push(0x51);\n                trackBytes.push(0x03);// length\n                //trackBytes = trackBytes.concat(convertToVLQ(3));// length\n                var microSeconds = Math.round(60000000 / event.bpm);\n                trackBytes = trackBytes.concat(str2Bytes(microSeconds.toString(16), 3));\n            } else if (event.type === 0x58) { // time signature\n                var denom = event.denominator;\n                if (denom === 2) {\n                    denom = 0x01;\n                } else if (denom === 4) {\n                    denom = 0x02;\n                } else if (denom === 8) {\n                    denom = 0x03;\n                } else if (denom === 16) {\n                    denom = 0x04;\n                } else if (denom === 32) {\n                    denom = 0x05;\n                }\n                trackBytes.push(0xFF);\n                trackBytes.push(0x58);\n                trackBytes.push(0x04);// length\n                //trackBytes = trackBytes.concat(convertToVLQ(4));// length\n                trackBytes.push(event.nominator);\n                trackBytes.push(denom);\n                trackBytes.push(PPQ / event.nominator);\n                trackBytes.push(0x08); // 32nd notes per crotchet\n                //console.log(trackName, event.nominator, event.denominator, denom, PPQ/event.nominator);\n            }\n            // set the new ticks reference\n            //console.log(status, event.ticks, ticks);\n            ticks = event.ticks;\n        }\n        delta = lastEventTicks - ticks;\n        //console.log('d', delta, 't', ticks, 'l', lastEventTicks);\n        delta = convertToVLQ(delta);\n        //console.log(trackName, ticks, delta);\n        trackBytes = trackBytes.concat(delta);\n        trackBytes.push(0xFF);\n        trackBytes.push(0x2F);\n        trackBytes.push(0x00);\n        //console.log(trackName, trackBytes);\n        trackLength = trackBytes.length;\n        lengthBytes = str2Bytes(trackLength.toString(16), 4);\n        return [].concat(TRK_CHUNKID, lengthBytes, trackBytes);\n    }\n\n\n    // Helper functions\n\n    /*\n     * Converts an array of bytes to a string of hexadecimal characters. Prepares\n     * it to be converted into a base64 string.\n     *\n     * @param byteArray {Array} array of bytes that will be converted to a string\n     * @returns hexadecimal string\n     */\n\n    function codes2Str(byteArray) {\n        return String.fromCharCode.apply(null, byteArray);\n    }\n\n    /*\n     * Converts a String of hexadecimal values to an array of bytes. It can also\n     * add remaining '0' nibbles in order to have enough bytes in the array as the\n     * |finalBytes| parameter.\n     *\n     * @param str {String} string of hexadecimal values e.g. '097B8A'\n     * @param finalBytes {Integer} Optional. The desired number of bytes that the returned array should contain\n     * @returns array of nibbles.\n     */\n\n    function str2Bytes(str, finalBytes) {\n        if (finalBytes) {\n            while ((str.length / 2) < finalBytes) {\n                str = '0' + str;\n            }\n        }\n\n        var bytes = [];\n        for (var i = str.length - 1; i >= 0; i = i - 2) {\n            var chars = i === 0 ? str[i] : str[i - 1] + str[i];\n            bytes.unshift(parseInt(chars, 16));\n        }\n\n        return bytes;\n    }\n\n\n    /**\n     * Translates number of ticks to MIDI timestamp format, returning an array of\n     * bytes with the time values. Midi has a very particular time to express time,\n     * take a good look at the spec before ever touching this function.\n     *\n     * @param ticks {Integer} Number of ticks to be translated\n     * @returns Array of bytes that form the MIDI time value\n     */\n    function convertToVLQ(ticks) {\n        var buffer = ticks & 0x7F;\n\n        while (ticks = ticks >> 7) {\n            buffer <<= 8;\n            buffer |= ((ticks & 0x7F) | 0x80);\n        }\n\n        var bList = [];\n        while (true) {\n            bList.push(buffer & 0xff);\n\n            if (buffer & 0x80) {\n                buffer >>= 8;\n            } else {\n                break;\n            }\n        }\n\n        //console.log(ticks, bList);\n        return bList;\n    }\n\n\n    /*\n     * Converts a string into an array of ASCII char codes for every character of\n     * the string.\n     *\n     * @param str {String} String to be converted\n     * @returns array with the charcode values of the string\n     */\n    function stringToNumArray(str) {\n        return AP.map.call(str, function (char) {\n            return char.charCodeAt(0);\n        });\n    }\n\n\n    sequencer.protectedScope.saveToMidiFile = write;\n    sequencer.saveSongAsMidiFile = write;\n\n}\nfunction musicXMLParser() {\n\n  'use strict';\n\n  var\n    //import\n    ajax, // → defined in util.js\n    typeString, // → defined in util.js\n    getNoteNumber, // → defined in note.js\n\n    nsResolver;\n\n\n  function load(url, cb, returnAsXML) {\n    if (url === undefined || cb === undefined) {\n      if (sequencer.debug >= sequencer.WARN) {\n        console.warn('please provide an url and a callback method');\n      }\n    }\n\n    ajax({\n      url: url + '?' + new Date().getTime(),\n      method: 'GET',\n      onError: function () {\n        cb(false);\n      },\n      onSuccess: function (response) {\n        if (returnAsXML === true) {\n          cb(response);\n        } else {\n          cb(parse(response));\n        }\n      },\n      responseType: 'xml'\n    });\n  }\n\n\n  function parse(xml) {\n    var parser = new DOMParser(),\n      xmlDoc = parser.parseFromString(xml, 'application/xml'),\n      type = xmlDoc.firstChild.nextSibling.nodeName;\n\n    //console.log('type', type);\n\n    nsResolver = xmlDoc.createNSResolver(xmlDoc.ownerDocument === null ? xmlDoc.documentElement : xmlDoc.ownerDocument.documentElement);\n\n    if (type === 'score-partwise') {\n      return parsePartWise(xmlDoc);\n    } else if (type === 'score-timewise') {\n      return parseTimeWise(xmlDoc);\n    } else {\n      console.log('unknown type', type);\n      return false;\n    }\n  }\n\n\n  function parsePartWise(xmlDoc) {\n    var partIterator = xmlDoc.evaluate('//score-part', xmlDoc, nsResolver, XPathResult.ANY_TYPE, null),\n      partNode,\n      measureIterator,\n      measureNode,\n      noteIterator,\n      noteNode,\n      measureNumber,\n      tracks = [],\n      timeEvents = [],\n      tiedNotes = {},\n      tieStart,\n      tieStop,\n      tieIterator, tieNode,\n      events,\n      song, track, part, noteOn, noteOff,\n      name, id, tmp1, tmp2,\n      step, alter, octave, voice, noteType, noteDuration, noteName, noteNumber, velocity,\n      rest, chord,\n      divisions, numerator, denominator,\n      ppq = sequencer.defaultPPQ,\n      ticks;\n\n    while ((partNode = partIterator.iterateNext()) !== null) {\n      // get id and name of the part\n      id = xmlDoc.evaluate('@id', partNode, nsResolver, XPathResult.STRING_TYPE, null).stringValue;\n      name = xmlDoc.evaluate('part-name', partNode, nsResolver, XPathResult.STRING_TYPE, null).stringValue;\n      velocity = xmlDoc.evaluate('midi-instrument/volume', partNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n      velocity = parseInt((velocity / 100) * 127);\n\n      ticks = 0;\n      track = sequencer.createTrack(name);\n      part = sequencer.createPart();\n      track.addPart(part);\n      tracks.push(track);\n      events = [];\n\n      //console.log(id, name, velocity);\n\n      // get all measures\n      measureIterator = xmlDoc.evaluate('//part[@id=\"' + id + '\"]/measure', partNode, nsResolver, XPathResult.ANY_TYPE, null);\n      while ((measureNode = measureIterator.iterateNext()) !== null) {\n\n        measureNumber = xmlDoc.evaluate('@number', measureNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n\n        tmp1 = xmlDoc.evaluate('attributes/divisions', measureNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n        if (!isNaN(tmp1)) {\n          divisions = tmp1;\n        }\n\n        tmp1 = xmlDoc.evaluate('attributes/time/beats', measureNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n        tmp2 = xmlDoc.evaluate('attributes/time/beat-type', measureNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n        if (!isNaN(tmp1)) {\n          numerator = tmp1;\n          denominator = tmp2;\n          timeEvents.push(sequencer.createMidiEvent(ticks, sequencer.TIME_SIGNATURE, numerator, denominator));\n        }\n        //console.log(divisions, numerator, denominator);\n\n        // get all notes and backups\n        //noteIterator = xmlDoc.evaluate('note', measureNode, nsResolver, XPathResult.ANY_TYPE, null);\n        noteIterator = xmlDoc.evaluate('*[self::note or self::backup or self::forward]', measureNode, nsResolver, XPathResult.ANY_TYPE, null);\n        while ((noteNode = noteIterator.iterateNext()) !== null) {\n          //console.log(noteNode);\n\n          tieStart = false;\n          tieStop = false;\n          tieIterator = xmlDoc.evaluate('tie', noteNode, nsResolver, XPathResult.ANY_TYPE, null);\n          while ((tieNode = tieIterator.iterateNext()) !== null) {\n            tmp1 = xmlDoc.evaluate('@type', tieNode, nsResolver, XPathResult.STRING_TYPE, null).stringValue;\n            //console.log(tmp1);\n            if (tmp1 === 'start') {\n              tieStart = true;\n            } else if (tmp1 === 'stop') {\n              tieStop = true;\n            }\n            //tieStart = xmlDoc.evaluate('@type=\"start\"', tieNode, nsResolver, XPathResult.BOOLEAN_TYPE, null).booleanValue;\n            //tieStop = xmlDoc.evaluate('@type=\"stop\"', tieNode, nsResolver, XPathResult.BOOLEAN_TYPE, null).booleanValue;\n            //console.log(tieStart, tieStop);\n          }\n\n          rest = xmlDoc.evaluate('rest', noteNode, nsResolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n          chord = xmlDoc.evaluate('chord', noteNode, nsResolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n\n          if (rest !== null) {\n            //console.log(rest);\n            noteDuration = xmlDoc.evaluate('duration', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            ticks += (noteDuration / divisions) * ppq;\n\n          } else if (noteNode.nodeName === 'note') {\n\n            step = xmlDoc.evaluate('pitch/step', noteNode, nsResolver, XPathResult.STRING_TYPE, null).stringValue;\n            alter = xmlDoc.evaluate('pitch/alter', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            voice = xmlDoc.evaluate('voice', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            octave = xmlDoc.evaluate('pitch/octave', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            noteDuration = xmlDoc.evaluate('duration', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            noteType = xmlDoc.evaluate('type', noteNode, nsResolver, XPathResult.STRING_TYPE, null).stringValue;\n            noteName = step;\n\n            if (step !== '') {\n              if (!isNaN(alter)) {\n                switch (alter) {\n                  case -2:\n                    noteName += 'bb';\n                    break;\n                  case -1:\n                    noteName += 'b';\n                    break;\n                  case 1:\n                    noteName += '#';\n                    break;\n                  case 2:\n                    noteName += '##';\n                    break;\n                }\n              }\n              noteNumber = getNoteNumber(noteName, octave);\n              noteOn = sequencer.createMidiEvent(ticks, sequencer.NOTE_ON, noteNumber, velocity);\n              ticks += (noteDuration / divisions) * ppq;\n              noteOff = sequencer.createMidiEvent(ticks, sequencer.NOTE_OFF, noteNumber, 0);\n              if (chord !== null) {\n                ticks -= (noteDuration / divisions) * ppq;\n              }\n\n              //console.log('tie', tieStart, tieStop);\n\n              if (tieStart === false && tieStop === false) {\n                // no ties\n                events.push(noteOn, noteOff);\n                //console.log('no ties', measureNumber, voice, noteNumber, tiedNotes);\n              } else if (tieStart === true && tieStop === false) {\n                // start of tie\n                tiedNotes[voice + '-' + noteNumber] = noteOff;\n                events.push(noteOn, noteOff);\n                //console.log('start', measureNumber, voice, noteNumber, tiedNotes);\n              } else if (tieStart === true && tieStop === true) {\n                // tied to yet another note\n                tiedNotes[voice + '-' + noteNumber].ticks += (noteDuration / divisions) * ppq;\n                //console.log('thru', measureNumber, voice, noteNumber, tiedNotes);\n              } else if (tieStart === false && tieStop === true) {\n                // end of tie\n                tiedNotes[voice + '-' + noteNumber].ticks += (noteDuration / divisions) * ppq;\n                delete tiedNotes[voice + '-' + noteNumber];\n                //console.log('end', measureNumber, voice, noteNumber, tiedNotes);\n              }\n              //console.log(noteNumber, ticks);\n            }\n\n          } else if (noteNode.nodeName === 'backup') {\n            noteDuration = xmlDoc.evaluate('duration', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            ticks -= (noteDuration / divisions) * ppq;\n            //console.log(noteDuration, divisions);\n          } else if (noteNode.nodeName === 'forward') {\n            noteDuration = xmlDoc.evaluate('duration', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            ticks += (noteDuration / divisions) * ppq;\n            //console.log(noteDuration, divisions);\n          }\n          //console.log(ticks);\n        }\n      }\n      part.addEvents(events);\n      //console.log(tiedNotes);\n    }\n\n    song = sequencer.createSong({\n      bpm: 110,\n      tracks: tracks[0],\n      timeEvents: timeEvents,\n      useMetronome: false\n    });\n\n    return song;\n  }\n\n\n  function parseTimeWise(xmlDoc) {\n    return xmlDoc;\n  }\n\n  sequencer.loadMusicXML = load;\n  sequencer.parseMusicXML = parse;\n\n  sequencer.protectedScope.addInitMethod(function () {\n    ajax = sequencer.protectedScope.ajax;\n    typeString = sequencer.protectedScope.typeString;\n    getNoteNumber = sequencer.getNoteNumber;\n  });\n\n}\nfunction note() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        //import\r\n        typeString, // → defined in util.js\r\n\r\n        //local\r\n        noteNames,\r\n        getNoteNumber,\r\n        getNoteName,\r\n        checkNoteName,\r\n        getFrequency,\r\n        createNote,\r\n        isNoteMode,\r\n        isBlackKey,\r\n        pow = Math.pow;\r\n\r\n    noteNames = {\r\n        'sharp': ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'],\r\n        'flat': ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'],\r\n        'enharmonic-sharp': ['B#', 'C#', 'C##', 'D#', 'D##', 'E#', 'F#', 'F##', 'G#', 'G##', 'A#', 'A##'],\r\n        'enharmonic-flat': ['Dbb', 'Db', 'Ebb', 'Eb', 'Fb', 'Gbb', 'Gb', 'Abb', 'Ab', 'Bbb', 'Bb', 'Cb']\r\n    };\r\n\r\n\r\n    /*\r\n        arguments\r\n        - noteNumber: 60\r\n        - noteName: 'C#4'\r\n        - name and octave: 'C#', 4\r\n\r\n\r\n        note {\r\n            name: 'C',\r\n            octave: 1,\r\n            fullName: 'C1',\r\n            frequency: 234.16,\r\n            number: 60\r\n        }\r\n    */\r\n    createNote = function () {\r\n        var args = Array.prototype.slice.call(arguments),\r\n            numArgs = args.length,\r\n            data,\r\n            warn = false,\r\n            error = false,\r\n            octave,\r\n            noteName,\r\n            noteNumber,\r\n            noteNameMode,\r\n            frequency,\r\n            arg0 = args[0],\r\n            arg1 = args[1],\r\n            arg2 = args[2];\r\n\r\n\r\n        // arg: note number\r\n        if (numArgs === 1 && !isNaN(arg0)) {\r\n            if (arg0 < 0 || arg0 > 127) {\r\n                error = 'please provide a note number >= 0 and <= 127', arg0;\r\n            } else {\r\n                noteNumber = arg0;\r\n                data = getNoteName(noteNumber);\r\n                noteName = data[0];\r\n                octave = data[1];\r\n            }\r\n\r\n            // arguments: full note name\r\n        } else if (numArgs === 1 && typeString(arg0) === 'string') {\r\n            data = checkNoteName(arg0);\r\n            if (!data) {\r\n                error = arg0 + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb, followed by a number for the octave';\r\n            } else {\r\n                noteName = data[0];\r\n                octave = data[1];\r\n                noteNumber = getNoteNumber(noteName, octave);\r\n                if (!noteNumber) {\r\n                    error = arg0 + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb, followed by a number for the octave';\r\n                } else if (noteNumber < 0 || noteNumber > 127) {\r\n                    error = 'please provide a note between C0 and G10';\r\n                }\r\n            }\r\n\r\n            // arguments: note name, octave\r\n        } else if (numArgs === 2 && typeString(arg0) === 'string' && !isNaN(arg1)) {\r\n            data = checkNoteName(arg0, arg1);\r\n            if (!data) {\r\n                error = arg0 + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb';\r\n            } else {\r\n                noteName = data[0];\r\n                octave = data[1];\r\n                noteNumber = getNoteNumber(noteName, octave);\r\n                if (!noteNumber) {\r\n                    error = noteName + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb';\r\n                } else if (noteNumber < 0 || noteNumber > 127) {\r\n                    error = 'please provide a note between C0 and G10';\r\n                }\r\n            }\r\n\r\n            // arguments: full note name, note name mode\r\n        } else if (numArgs === 2 && typeString(arg0) === 'string' && typeString(arg1) === 'string') {\r\n            data = checkNoteName(arg0);\r\n            if (!data) {\r\n                error = arg0 + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb, followed by a number for the octave';\r\n            } else {\r\n                noteNameMode = isNoteMode(arg1);\r\n                if (!noteNameMode) {\r\n                    noteNameMode = sequencer.noteNameMode;\r\n                    warn = arg1 + ' is not a valid note name mode, using ' + noteNameMode;\r\n                }\r\n                noteName = data[0];\r\n                octave = data[1];\r\n                noteNumber = getNoteNumber(noteName, octave);\r\n                if (!noteNumber) {\r\n                    error = noteName + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb, followed by a number for the octave';\r\n                } else if (noteNumber < 0 || noteNumber > 127) {\r\n                    error = 'please provide a note between C0 and G10';\r\n                }\r\n                noteName = getNoteName(noteNumber, noteNameMode)[0];\r\n            }\r\n\r\n\r\n            // arguments: note number, note name mode\r\n        } else if (numArgs === 2 && typeString(arg0) === 'number' && typeString(arg1) === 'string') {\r\n            if (arg0 < 0 || arg0 > 127) {\r\n                error = 'please provide a note number >= 0 and <= 127', arg0;\r\n            } else {\r\n                noteNameMode = isNoteMode(arg1);\r\n                if (!noteNameMode) {\r\n                    noteNameMode = sequencer.noteNameMode;\r\n                    warn = arg1 + ' is not a valid note name mode, using ' + noteNameMode;\r\n                }\r\n                noteNumber = arg0;\r\n                data = getNoteName(noteNumber, noteNameMode);\r\n                noteName = data[0];\r\n                octave = data[1];\r\n                noteName = getNoteName(noteNumber, noteNameMode)[0];\r\n            }\r\n\r\n\r\n            // arguments: note name, octave, note name mode\r\n        } else if (numArgs === 3 && typeString(arg0) === 'string' && !isNaN(arg1) && typeString(arg2) === 'string') {\r\n            data = checkNoteName(arg0, arg1);\r\n            if (!data) {\r\n                error = arg0 + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb, followed by a number for the octave';\r\n            } else {\r\n                noteNameMode = isNoteMode(arg2);\r\n                if (!noteNameMode) {\r\n                    noteNameMode = sequencer.noteNameMode;\r\n                    warn = arg2 + ' is not a valid note name mode, using ' + noteNameMode;\r\n                }\r\n                noteName = data[0];\r\n                octave = data[1];\r\n                noteNumber = getNoteNumber(noteName, octave);\r\n                if (!noteNumber) {\r\n                    error = noteName + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb, followed by a number for the octave';\r\n                } else if (noteNumber < 0 || noteNumber > 127) {\r\n                    error = 'please provide a note between C0 and G10';\r\n                }\r\n                noteName = getNoteName(noteNumber, noteNameMode)[0];\r\n            }\r\n        } else {\r\n            error = 'wrong arguments, please consult documentation';\r\n        }\r\n\r\n        if (error) {\r\n            console.error(error);\r\n            return false;\r\n        }\r\n\r\n        if (warn) {\r\n            console.warn(warn);\r\n        }\r\n\r\n        frequency = getFrequency(noteNumber);\r\n        //console.log(noteName,octave,noteNumber,frequency);\r\n\r\n        return {\r\n            name: noteName,\r\n            octave: octave,\r\n            fullName: noteName + octave,\r\n            number: noteNumber,\r\n            frequency: frequency,\r\n            blackKey: isBlackKey(noteNumber)\r\n        };\r\n\r\n    };\r\n\r\n\r\n    getNoteName = function (number, mode) {\r\n        mode = mode || sequencer.noteNameMode;\r\n        //console.log(mode);\r\n        //var octave = Math.floor((number / 12) - 2), // → in Cubase central C = C3 instead of C4\r\n        var octave = Math.floor((number / 12) - 1),\r\n            noteName = noteNames[mode][number % 12];\r\n        return [noteName, octave];\r\n    };\r\n\r\n\r\n    getNoteNumber = function (name, octave, mode) {\r\n        var key, index, i, maxi, number;\r\n        //mode = mode || sequencer.noteNameMode;\r\n\r\n        //if(mode){}\r\n\r\n        for (key in noteNames) {\r\n            if (noteNames.hasOwnProperty(key)) {\r\n                mode = noteNames[key];\r\n                //console.log(key);\r\n                for (i = 0, maxi = mode.length; i < maxi; i = i + 1) {\r\n                    //console.log(mode[i],name,i);\r\n                    if (mode[i] === name) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (index === -1) {\r\n            return false;\r\n        }\r\n\r\n        //number = (index + 12) + (octave * 12) + 12; // → in Cubase central C = C3 instead of C4\r\n        number = (index + 12) + (octave * 12);// → midi standard + scientific naming, see: http://en.wikipedia.org/wiki/Middle_C and http://en.wikipedia.org/wiki/Scientific_pitch_notation\r\n        return number;\r\n    };\r\n\r\n\r\n    getFrequency = function (number) {\r\n        return sequencer.pitch * pow(2, (number - 69) / 12); // midi standard, see: http://en.wikipedia.org/wiki/MIDI_Tuning_Standard\r\n    };\r\n\r\n\r\n    function getPitch(hertz) {\r\n        //fm  =  2(m−69)/12(440 Hz).\r\n    }\r\n\r\n\r\n    checkNoteName = function () {\r\n        var\r\n            args = Array.prototype.slice.call(arguments),\r\n            numArgs = args.length,\r\n            arg0 = args[0],\r\n            arg1 = args[1],\r\n            length, i, char,\r\n            name,\r\n            octave;\r\n\r\n\r\n        if (numArgs === 1 && typeString(arg0) === 'string') {\r\n\r\n            length = arg0.length;\r\n            name = '';\r\n            octave = '';\r\n\r\n            for (i = 0; i < length; i++) {\r\n                char = arg0[i];\r\n                if (isNaN(char) && char !== '-') {\r\n                    name += char;\r\n                } else {\r\n                    octave += char;\r\n                }\r\n            }\r\n\r\n            if (octave === '') {\r\n                octave = 0;\r\n            }\r\n\r\n        } else if (numArgs === 2 && typeString(arg0) === 'string' && !isNaN(arg1)) {\r\n\r\n            name = arg0;\r\n            octave = arg1;\r\n\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n        octave = parseInt(octave, 10);\r\n        name = name.substring(0, 1).toUpperCase() + name.substring(1);\r\n\r\n        //console.log(name,'|',octave);\r\n        return [name, octave];\r\n    };\r\n\r\n\r\n    isNoteMode = function (mode) {\r\n        var result = false;\r\n        switch (mode) {\r\n            case 'sharp':\r\n            case 'flat':\r\n            case 'enharmonic-sharp':\r\n            case 'enharmonic-flat':\r\n                result = mode;\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n\r\n    isBlackKey = function (noteNumber) {\r\n        var black;\r\n\r\n        switch (true) {\r\n            case noteNumber % 12 === 1://C#\r\n            case noteNumber % 12 === 3://D#\r\n            case noteNumber % 12 === 6://F#\r\n            case noteNumber % 12 === 8://G#\r\n            case noteNumber % 12 === 10://A#\r\n                black = true;\r\n                break;\r\n            default:\r\n                black = false;\r\n        }\r\n\r\n        return black;\r\n    };\r\n\r\n    ///*\r\n    sequencer.getNoteNumber = function () {\r\n        var note = createNote.apply(this, arguments);\r\n        if (note) {\r\n            return note.number;\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    sequencer.getNoteName = function () {\r\n        var note = createNote.apply(this, arguments);\r\n        if (note) {\r\n            return note.name;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    sequencer.getNoteNameFromNoteNumber = function (number, mode) {\r\n        return getNoteName(number, mode);\r\n    };\r\n\r\n\r\n    sequencer.getNoteOctave = function () {\r\n        var note = createNote.apply(this, arguments);\r\n        if (note) {\r\n            return note.octave;\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    sequencer.getFullNoteName = function () {\r\n        var note = createNote.apply(this, arguments);\r\n        if (note) {\r\n            return note.fullName;\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    sequencer.getFrequency = function () {\r\n        var note = createNote.apply(this, arguments);\r\n        if (note) {\r\n            return note.frequency;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    //*/\r\n    sequencer.isBlackKey = function () {\r\n        var note = createNote.apply(this, arguments);\r\n        if (note) {\r\n            return note.blackKey;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /*\r\n        sequencer.SHARP = 'sharp';\r\n        sequencer.FLAT = 'flat';\r\n        sequencer.ENHARMONIC_SHARP = 'enharmonic-sharp';\r\n        sequencer.ENHARMONIC_FLAT = 'enharmonic-flat';\r\n    */\r\n\r\n    Object.defineProperty(sequencer, 'SHARP', { value: 'sharp' });\r\n    Object.defineProperty(sequencer, 'FLAT', { value: 'flat' });\r\n    Object.defineProperty(sequencer, 'ENHARMONIC_SHARP', { value: 'enharmonic-sharp' });\r\n    Object.defineProperty(sequencer, 'ENHARMONIC_FLAT', { value: 'enharmonic-flat' });\r\n\r\n    sequencer.createNote = createNote;\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        typeString = sequencer.protectedScope.typeString;\r\n    });\r\n\r\n}function parseEvents() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        round = Math.round,\r\n\r\n        precision = Math.pow(10, sequencer.precision),\r\n\r\n        //local\r\n        factor,\r\n        nominator,\r\n        denominator,\r\n\r\n        bar,\r\n        beat,\r\n        sixteenth,\r\n        tick,\r\n\r\n        ticksPerBar,\r\n        ticksPerBeat,\r\n        ticksPerSixteenth,\r\n        numSixteenth,\r\n        millisPerTick,\r\n        secondsPerTick,\r\n\r\n        millis,\r\n\r\n        bpm;\r\n\r\n    // public\r\n    function parse(song, events) {\r\n\r\n        var event,\r\n            numEvents,\r\n            startEvent = 0,\r\n            lastEventTick = 0,\r\n            diffTicks,\r\n            i;\r\n\r\n        numEvents = events.length;\r\n        //console.log('parseEvents', numEvents);\r\n        events.sort(function (a, b) {\r\n            return a.sortIndex - b.sortIndex;\r\n        });\r\n\r\n        getDataFromEvent(song.timeEvents[0]);\r\n\r\n        for (i = startEvent; i < numEvents; i++) {\r\n\r\n            event = events[i];\r\n            //console.log(i, event);\r\n            diffTicks = event.ticks - lastEventTick;\r\n            tick += diffTicks;\r\n\r\n            while (tick >= ticksPerSixteenth) {\r\n                sixteenth++;\r\n                tick -= ticksPerSixteenth;\r\n                while (sixteenth > numSixteenth) {\r\n                    sixteenth -= numSixteenth;\r\n                    beat++;\r\n                    while (beat > nominator) {\r\n                        beat -= nominator;\r\n                        bar++;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            switch (event.type) {\r\n\r\n                case 0x51:\r\n                    bpm = event.bpm;\r\n                    millis = event.millis;\r\n                    millisPerTick = event.millisPerTick;\r\n                    secondsPerTick = event.secondsPerTick;\r\n                    //console.log(millisPerTick,event.millisPerTick);\r\n                    //console.log(event);\r\n                    break;\r\n\r\n                case 0x58:\r\n                    factor = event.factor;\r\n                    nominator = event.nominator;\r\n                    denominator = event.denominator;\r\n                    numSixteenth = event.numSixteenth;\r\n                    ticksPerBar = event.ticksPerBar;\r\n                    ticksPerBeat = event.ticksPerBeat;\r\n                    ticksPerSixteenth = event.ticksPerSixteenth;\r\n                    millis = event.millis;\r\n                    //console.log(nominator,numSixteenth,ticksPerSixteenth);\r\n                    //console.log(event);\r\n                    break;\r\n\r\n                default:\r\n                    millis = millis + (diffTicks * millisPerTick);\r\n                    updateEvent(event);\r\n            }\r\n\r\n            lastEventTick = event.ticks;\r\n        }\r\n        song.lastEventTmp = event;\r\n    }\r\n\r\n\r\n    function getDataFromEvent(event) {\r\n\r\n        bpm = event.bpm;\r\n        factor = event.factor;\r\n        nominator = event.nominator;\r\n        denominator = event.denominator;\r\n\r\n        ticksPerBar = event.ticksPerBar;\r\n        ticksPerBeat = event.ticksPerBeat;\r\n        ticksPerSixteenth = event.ticksPerSixteenth;\r\n\r\n        numSixteenth = event.numSixteenth;\r\n\r\n        millisPerTick = event.millisPerTick;\r\n        secondsPerTick = event.secondsPerTick;\r\n\r\n        millis = event.millis;\r\n\r\n        bar = event.bar;\r\n        beat = event.beat;\r\n        sixteenth = event.sixteenth;\r\n        tick = event.tick;\r\n    }\r\n\r\n\r\n    function updateEvent(event) {\r\n        var timeData, tickAsString;\r\n\r\n        timeData = sequencer.getNiceTime(millis);\r\n\r\n        event.bpm = bpm;\r\n        event.factor = factor;\r\n        event.nominator = nominator;\r\n        event.denominator = denominator;\r\n\r\n        event.ticksPerBar = ticksPerBar;\r\n        event.ticksPerBeat = ticksPerBeat;\r\n        event.ticksPerSixteenth = ticksPerSixteenth;\r\n\r\n        event.numSixteenth = numSixteenth;\r\n\r\n        event.millisPerTick = millisPerTick;\r\n        event.secondsPerTick = secondsPerTick;\r\n\r\n        event.millis = round(millis * precision) / precision;\r\n        //event.millis = millis;\r\n        //event.seconds = millis/1000;\r\n\r\n        event.hour = timeData.hour;\r\n        event.minute = timeData.minute;\r\n        event.second = timeData.second;\r\n        event.millisecond = timeData.millisecond;\r\n        event.timeAsString = timeData.timeAsString;\r\n        event.timeAsArray = timeData.timeAsArray;\r\n\r\n        event.bar = bar;\r\n        event.beat = beat;\r\n        event.sixteenth = sixteenth;\r\n        event.tick = tick;\r\n        tickAsString = tick === 0 ? '000' : tick < 10 ? '00' + tick : tick < 100 ? '0' + tick : tick;\r\n        event.barsAsString = bar + ':' + beat + ':' + sixteenth + ':' + tickAsString;\r\n        event.barsAsArray = [bar, beat, sixteenth, tick];\r\n\r\n        event.state = 'clean';\r\n        event.update();\r\n\r\n        //console.log(event.nominator, event.ticks);\r\n    }\r\n\r\n\r\n\r\n    sequencer.protectedScope.parseEvents = parse;\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n    });\r\n\r\n}\r\nfunction parseTimeEvents() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        //import\r\n        createMidiEvent, // → defined in midi_event.js\r\n\r\n        //local\r\n        ppq,\r\n        bpm,\r\n        factor,\r\n        nominator,\r\n        denominator,\r\n        playbackSpeed,\r\n\r\n        bar,\r\n        beat,\r\n        sixteenth,\r\n        tick,\r\n        ticks,\r\n        millis,\r\n\r\n        millisPerTick,\r\n        secondsPerTick,\r\n\r\n        ticksPerBeat,\r\n        ticksPerBar,\r\n        ticksPerSixteenth,\r\n        numSixteenth,\r\n\r\n        timeEvents,\r\n        numTimeEvents,\r\n        index;\r\n\r\n\r\n    function setTickDuration() {\r\n        secondsPerTick = (1 / playbackSpeed * 60) / bpm / ppq;\r\n        millisPerTick = secondsPerTick * 1000;\r\n        //console.log(millisPerTick, bpm, ppq, playbackSpeed, (ppq * millisPerTick));\r\n        //console.log(ppq);\r\n    }\r\n\r\n\r\n    function setTicksPerBeat() {\r\n        factor = (4 / denominator);\r\n        numSixteenth = factor * 4;\r\n        ticksPerBeat = ppq * factor;\r\n        ticksPerBar = ticksPerBeat * nominator;\r\n        ticksPerSixteenth = ppq / 4;\r\n        //console.log(denominator, factor, numSixteenth, ticksPerBeat, ticksPerBar, ticksPerSixteenth);\r\n    }\r\n\r\n\r\n    function parse(song) {\r\n        //console.time('parse time events ' + song.name);\r\n        var diffTicks,\r\n            event,\r\n            type,\r\n            i = 0;\r\n\r\n        if (song === undefined) {\r\n            timeEvents = [];\r\n            console.log('reset', timeEvents);\r\n            return;\r\n        }\r\n\r\n        reset(song);\r\n\r\n        //console.log('parse time events', numTimeEvents);\r\n        setTickDuration();\r\n        setTicksPerBeat();\r\n\r\n        timeEvents.sort(function (a, b) {\r\n            return a.ticks - b.ticks;\r\n        });\r\n\r\n        for (i = 0; i < numTimeEvents; i++) {\r\n\r\n            event = timeEvents[i];\r\n            event.song = song;\r\n            diffTicks = event.ticks - ticks;\r\n            tick += diffTicks;\r\n            ticks = event.ticks;\r\n            type = event.type;\r\n            //console.log(diffTicks, millisPerTick);\r\n            millis += diffTicks * millisPerTick;\r\n\r\n            while (tick >= ticksPerSixteenth) {\r\n                sixteenth++;\r\n                tick -= ticksPerSixteenth;\r\n                while (sixteenth > numSixteenth) {\r\n                    sixteenth -= numSixteenth;\r\n                    beat++;\r\n                    while (beat > nominator) {\r\n                        beat -= nominator;\r\n                        bar++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            switch (type) {\r\n\r\n                case 0x51:\r\n                    bpm = event.bpm;\r\n                    setTickDuration();\r\n                    break;\r\n\r\n                case 0x58:\r\n                    nominator = event.nominator;\r\n                    denominator = event.denominator;\r\n                    setTicksPerBeat();\r\n                    break;\r\n\r\n                default:\r\n                    continue;\r\n            }\r\n\r\n            //time data of time event is valid from (and included) the position of the time event\r\n            updateEvent(event);\r\n            //console.log(event.barsAsString);\r\n        }\r\n\r\n        song.lastEventTmp = event;\r\n        //console.log(event);\r\n        //console.log(timeEvents);\r\n    }\r\n\r\n\r\n    function reset(song) {\r\n        playbackSpeed = song.playbackSpeed;\r\n        timeEvents = song.timeEvents;\r\n        numTimeEvents = timeEvents.length;\r\n        ppq = song.ppq;\r\n        bpm = song.bpm;\r\n        nominator = song.nominator;\r\n        denominator = song.denominator;\r\n\r\n        //console.log('reset', timeEvents, numTimeEvents, bpm, ppq, nominator, denominator);\r\n        //console.log('reset', numTimeEvents, bpm, ppq, nominator, denominator);\r\n\r\n        index = 0;\r\n\r\n        bar = 1;//0\r\n        beat = 1;//0\r\n        sixteenth = 1;//0\r\n        tick = 0;\r\n        ticks = 0;\r\n        millis = 0;\r\n    }\r\n\r\n\r\n    function updateEvent(event) {\r\n\r\n        //console.log(event, bpm, millisPerTick, ticks, millis);\r\n\r\n        event.bpm = bpm;\r\n        event.nominator = nominator;\r\n        event.denominator = denominator;\r\n\r\n        event.ticksPerBar = ticksPerBar;\r\n        event.ticksPerBeat = ticksPerBeat;\r\n        event.ticksPerSixteenth = ticksPerSixteenth;\r\n\r\n        event.factor = factor;\r\n        event.numSixteenth = numSixteenth;\r\n        event.secondsPerTick = secondsPerTick;\r\n        event.millisPerTick = millisPerTick;\r\n\r\n\r\n        event.ticks = ticks;\r\n\r\n        event.millis = millis;\r\n        event.seconds = millis / 1000;\r\n\r\n\r\n        event.bar = bar;\r\n        event.beat = beat;\r\n        event.sixteenth = sixteenth;\r\n        event.tick = tick;\r\n        //event.barsAsString = (bar + 1) + ':' + (beat + 1) + ':' + (sixteenth + 1) + ':' + tick;\r\n        var tickAsString = tick === 0 ? '000' : tick < 10 ? '00' + tick : tick < 100 ? '0' + tick : tick;\r\n        event.barsAsString = bar + ':' + beat + ':' + sixteenth + ':' + tickAsString;\r\n        event.barsAsArray = [bar, beat, sixteenth, tick];\r\n\r\n\r\n        var timeData = sequencer.getNiceTime(millis);\r\n\r\n        event.hour = timeData.hour;\r\n        event.minute = timeData.minute;\r\n        event.second = timeData.second;\r\n        event.millisecond = timeData.millisecond;\r\n        event.timeAsString = timeData.timeAsString;\r\n        event.timeAsArray = timeData.timeAsArray;\r\n    }\r\n\r\n\r\n    sequencer.protectedScope.parseTimeEvents = parse;\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        createMidiEvent = sequencer.createMidiEvent;\r\n    });\r\n\r\n}\r\n\r\n\r\n/*\r\n    scaffoldingTicks = function(song){\r\n        var end = song.ticks,\r\n            interval = 480,\r\n            range = 0,\r\n            event,\r\n            events,\r\n            numEvents,\r\n            diffTicks,\r\n            diffMillis;\r\n\r\n        song.eventRanges.ticks = {};\r\n        reset();\r\n\r\n        while(range <= end){\r\n            events = getNextTimeEvents('ticks',range);\r\n            numEvents = events.length;\r\n\r\n            if(numEvents === 0){\r\n                //add at least one event in this range\r\n                event = createMidiEvent(0,sequencer.DUMMY_EVENT);\r\n                //calculate position\r\n                diffTicks = range - ticks;\r\n                tick += diffTicks;\r\n                diffMillis = diffTicks * millisPerTick;\r\n                millis += diffMillis;\r\n\r\n                while(tick >= ticksPerSixteenth){\r\n                    sixteenth++;\r\n                    tick -= ticksPerSixteenth;\r\n                    while(sixteenth >= numSixteenth){\r\n                        sixteenth -= numSixteenth;\r\n                        beat++;\r\n                        while(beat >= nominator){\r\n                            beat -= nominator;\r\n                            bar++;\r\n                        }\r\n                    }\r\n                }\r\n                ticks = range;\r\n                updateEvent(event);\r\n                events.push(event);\r\n            }else{\r\n                getDataFromEvent(events[numEvents - 1]);\r\n            }\r\n            song.eventRanges.ticks[range] = events;\r\n            //console.log(bar+1,beat+1,sixteenth+1,tick+1);\r\n            range += interval;\r\n        }\r\n    };\r\n\r\n\r\n    scaffoldingMillis = function(song){\r\n        var end = song.durationMillis,\r\n            interval = 500,\r\n            events,\r\n            numEvents,\r\n            event,\r\n            range = 0,\r\n            diffTicks;\r\n\r\n        song.eventRanges.millis = {};\r\n        reset();\r\n\r\n        while(range <= end){\r\n            events = getNextTimeEvents('millis',range);\r\n            numEvents = events.length;\r\n            if(numEvents === 0){\r\n                //add at least one event in this range\r\n                event = createMidiEvent(range,sequencer.DUMMY_EVENT);\r\n                //calculate position data\r\n                diffTicks = (range - millis)/millisPerTick;\r\n                tick += diffTicks;\r\n                ticks += diffTicks;\r\n\r\n                while(tick >= ticksPerSixteenth){\r\n                    sixteenth++;\r\n                    tick -= ticksPerSixteenth;\r\n                    tick = tick;\r\n                    while(sixteenth >= numSixteenth){\r\n                        sixteenth -= numSixteenth;\r\n                        beat++;\r\n                        while(beat >= nominator){\r\n                            beat -= nominator;\r\n                            bar++;\r\n                        }\r\n                    }\r\n                }\r\n                millis = range;\r\n                updateEvent(event);\r\n                events.push(event);\r\n            }else{\r\n                getDataFromEvent(events[numEvents - 1]);\r\n            }\r\n            song.eventRanges.millis[range] = events;\r\n            //console.log(bar+1,beat+1,sixteenth+1,tick+1);\r\n            range += interval;\r\n        }\r\n    };\r\n\r\n\r\n    scaffoldingBars = function(){\r\n        var song = sequencer.song,\r\n            end = song.durationTicks,\r\n            range = 0,\r\n            bars = [],\r\n            event,\r\n            events,\r\n            numEvents,\r\n            diffTicks,\r\n            diffMillis;\r\n\r\n        index = 0;\r\n        getDataFromEvent(song.timeEvents[0]);\r\n\r\n        while(range <= end){\r\n            events = getNextTimeEvents('ticks',ticksPerBar);\r\n            numEvents = events.length;\r\n            if(numEvents > 0){\r\n                getDataFromEvent(events[numEvents - 1]);\r\n            }\r\n            event = createMidiEvent(0,sequencer.DUMMY_EVENT);\r\n\r\n            //calculate position of newly created event\r\n            diffTicks = range - ticks;\r\n            tick += diffTicks;\r\n            diffMillis = diffTicks * millisPerTick;\r\n            millis += diffMillis;\r\n\r\n            while(tick >= ticksPerSixteenth){\r\n                sixteenth++;\r\n                tick -= ticksPerSixteenth;\r\n                while(sixteenth >= numSixteenth){\r\n                    sixteenth -= numSixteenth;\r\n                    beat++;\r\n                    while(beat >= nominator){\r\n                        beat -= nominator;\r\n                        bar++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            ticks = range;\r\n            updateEvent(event);\r\n            bars.push(event);\r\n            range += ticksPerBar;\r\n        }\r\n        return bars;\r\n    };\r\n\r\n\r\n\r\n    sequencer.protectedScope.createScaffolding = function(song){\r\n        reset(song);\r\n        scaffoldingTicks(song);\r\n        scaffoldingMillis(song);\r\n        console.log(song.eventRanges);\r\n    };\r\n\r\n    sequencer.protectedScope.getScaffoldingBars = scaffoldingBars;\r\n\r\n\r\n*/\r\nfunction part() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        //import\r\n        createMidiNote, // → defined in midi_note.js\r\n        createMidiEvent, // → defined in midi_event.js\r\n        copyName, // → defined in utils.js\r\n        typeString, // → defined in utils.js\r\n\r\n        findEvent, // → defined in find_event.js\r\n        findNote, // → defined in find_event.js\r\n        getStats, // → defined in event_statistics.js\r\n\r\n        //private\r\n        getEvent,\r\n        addEvents,\r\n        moveEvents,\r\n        removeEvents,\r\n        transposeEvents,\r\n        getEventsAndConfig,\r\n\r\n        reverseByPitch,\r\n        reverseByTicks,\r\n\r\n        partId = 0,\r\n\r\n        //public/protected\r\n        Part;\r\n\r\n\r\n    Part = function (name) {\r\n        this.className = 'Part';\r\n        this.id = 'P' + partId++ + '' + new Date().getTime();\r\n        this.partIndex = partId;\r\n        this.name = name || this.id;\r\n\r\n        this.events = [];\r\n        this.eventsById = {};\r\n        this.numEvents = 0;\r\n\r\n        this.notes = [];\r\n        this.notesById = {};\r\n        this.numNotes = 0;\r\n\r\n        this.dirtyEvents = {};\r\n        this.dirtyNotes = {};\r\n\r\n        this.song = undefined;\r\n        this.autoSize = 'right'; // 'right' or 'both'\r\n\r\n        this.ticks = 0;\r\n        this.millis = 0;\r\n        this.start = {\r\n            ticks: this.ticks,\r\n            millis: this.millis\r\n        };\r\n        this.end = {\r\n            ticks: 0,\r\n            millis: 0\r\n        };\r\n        this.duration = {\r\n            ticks: 0,\r\n            millis: 0\r\n        };\r\n        this.startPosition = undefined;\r\n        this.endPosition = undefined;\r\n\r\n        //this.fixedPitch = false;\r\n        this.needsUpdate = false;\r\n        this.state = 'clean';\r\n        this.mute = false;\r\n        this.solo = false;\r\n        this.keepWhenEmpty = true; // if set to false, the parts gets deleted automatically if it contains no events\r\n    };\r\n\r\n    getEventsAndConfig = function (args, part) {\r\n\r\n        args = Array.prototype.slice.call(args);\r\n\r\n        var\r\n            j = 0,\r\n            i = 0,\r\n            maxi,\r\n            e,\r\n            arg,\r\n            arg0 = args[0],\r\n            events = [],\r\n            config = [];\r\n\r\n        //console.log(args, arg0);\r\n\r\n        if (typeString(arg0) === 'array') {\r\n\r\n            for (i = arg0.length - 1; i >= 0; i--) {\r\n                arg = arg0[i];\r\n                e = getEvent(arg, part);\r\n                if (e) {\r\n                    events.push(e);\r\n                }\r\n            }\r\n            j = events.length === 0 ? 0 : 1;\r\n        }\r\n\r\n        maxi = args.length;\r\n        for (i = j; i < maxi; i++) {\r\n            arg = args[i];\r\n            e = getEvent(arg, part);\r\n            if (e) {\r\n                events.push(e);\r\n            } else {\r\n                config.push(arg);\r\n            }\r\n        }\r\n\r\n        if (events.length === 0) {\r\n            //console.error('Please provide one or more events, event ids, event indices, or an array of events, events ids, event indices');\r\n            if (sequencer.debug) {\r\n                console.warn('no events added', part.name);\r\n            }\r\n            return false;\r\n        }\r\n\r\n        if (config.length === 1 && typeString(config[0]) === 'array') {\r\n            config = config[0];\r\n        }\r\n\r\n        //console.log(events, config);\r\n\r\n        return {\r\n            events: events,\r\n            config: config\r\n        };\r\n    };\r\n\r\n\r\n\r\n    getEvent = function (data, part) {\r\n        var event = false;\r\n        if (!data) {\r\n            event = false;\r\n        } else if (data.className === 'MidiEvent' || data.className === 'AudioEvent') {\r\n            // new event\r\n            event = data;\r\n        } else if (typeString(data) === 'array' && data.length === 4) {\r\n            // new event as array\r\n            event = createMidiEvent(data);\r\n        } else if (typeString(data) === 'string') {\r\n            // get by id\r\n            event = part.eventsById[data];\r\n        } else if (isNaN(data) === false) {\r\n            // get by index\r\n            event = part.events[data];\r\n        }\r\n        return event;\r\n    };\r\n\r\n\r\n\r\n    addEvents = function (args, part, relative) {\r\n        if (args === false) {\r\n            return;\r\n        }\r\n        var i, e,\r\n            newEvents = args.events,\r\n            ticks = part.ticks,\r\n            maxi = newEvents.length,\r\n            track = part.track,\r\n            eventsById = part.eventsById;\r\n\r\n        //console.log(newEvents);\r\n\r\n        //for(i = newEvents.length - 1; i >=0; i--){\r\n        for (i = 0; i < maxi; i++) {\r\n\r\n            e = newEvents[i];\r\n\r\n            if (e.type === sequencer.END_OF_TRACK || (e.className !== 'MidiEvent' && e.className !== 'AudioEvent')) {\r\n                continue;\r\n            }\r\n            if (e.className === 'AudioEvent' && part.hasAudioEvents !== true) {\r\n                part.hasAudioEvents = true;\r\n            }\r\n\r\n            if (e.part !== undefined) {\r\n                //console.warn('this event has already been added to part', e.part.id, ', adding a copy to', part.id);\r\n                e = e.clone();\r\n            }\r\n\r\n            e.part = part;\r\n            e.partId = part.id;\r\n\r\n            if (relative) {\r\n                ticks += e.ticks;\r\n                e.ticks = ticks;\r\n            }\r\n\r\n            e.track = track;\r\n            e.trackId = track ? track.id : undefined;\r\n\r\n            e.song = undefined;\r\n            if (track !== undefined) {\r\n                e.song = track.song;\r\n            }\r\n\r\n            if (e.state !== 'recorded') {\r\n                e.state = 'new';\r\n            }\r\n            eventsById[e.id] = e;\r\n        }\r\n\r\n        if (part.state !== 'new') {\r\n            part.state = 'changed';\r\n        }\r\n        part.needsUpdate = true;\r\n    };\r\n\r\n\r\n    transposeEvents = function (args, part) {\r\n        //if(args === false || part.fixedPitch === true){\r\n        if (args === false) {\r\n            return;\r\n        }\r\n        var i, e,\r\n            events = args.events,\r\n            semi = args.config[0];\r\n\r\n        //console.log(semi, args);\r\n\r\n        for (i = events.length - 1; i >= 0; i--) {\r\n            e = events[i];\r\n            e.transpose(semi);\r\n            /*\r\n                // moved to midi_event.js\r\n                if(e.state !== 'new'){\r\n                    e.state = 'changed';\r\n                }\r\n            */\r\n            //console.log(e.state);\r\n        }\r\n        //part.needsUpdate = true; -> moved to midi_event.js\r\n        if (part.state !== 'new' && part.track !== undefined) {\r\n            part.state = 'changed';\r\n            part.track.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    moveEvents = function (args, part) {\r\n        if (args === false) {\r\n            return;\r\n        }\r\n        var i, e, newTicks,\r\n            events = args.events,\r\n            ticks = args.config[0];\r\n        //console.log('moveEvents', events, ticks, events.length);\r\n        if (isNaN(ticks)) {\r\n            console.warn('Part.moveEvent(s) -> please provide a number');\r\n            return;\r\n        }\r\n\r\n        for (i = events.length - 1; i >= 0; i--) {\r\n            e = events[i];\r\n            newTicks = e.ticks + ticks;\r\n\r\n            if (newTicks < 0) {\r\n                newTicks = 0;\r\n            }\r\n            e.ticks = newTicks;\r\n\r\n            if (e.state !== 'new') {\r\n                e.state = 'changed';\r\n            }\r\n        }\r\n        part.needsUpdate = true;\r\n        if (part.state !== 'new' && part.track) {\r\n            part.state = 'changed';\r\n            part.track.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    removeEvents = function (tobeRemoved, part) {\r\n        var i, event,\r\n            removed = [];\r\n\r\n        //console.log('removeEvents', tobeRemoved);\r\n\r\n        for (i = tobeRemoved.length - 1; i >= 0; i--) {\r\n            event = getEvent(tobeRemoved[i], part);\r\n            if (event === false) {\r\n                continue;\r\n            }\r\n            // console.log('removing event', e);\r\n            if (event.part !== part && event.part !== null) {\r\n                console.warn('can\\'t remove: this event belongs to part', event.part.id);\r\n                continue;\r\n            }\r\n            event.state = 'removed';\r\n            event.reset();\r\n            removed.push(event);\r\n        }\r\n        if (part.track !== undefined) {\r\n            part.track.needsUpdate = true;\r\n        }\r\n        part.needsUpdate = true;\r\n        return removed;\r\n    };\r\n\r\n\r\n    reverseByPitch = function (part) {\r\n        var notes = part.notes,\r\n            min = part.lowestNote,\r\n            max = part.highestNote,\r\n            on, off,\r\n            i, note;\r\n\r\n        for (i = notes.length - 1; i >= 0; i--) {\r\n            note = notes[i];\r\n            note.setPitch(min + (max - note.number));\r\n            on = note.noteOn;\r\n            off = note.noteOff;\r\n            on.state = 'changed';\r\n            off.state = 'changed';\r\n            note.state = 'changed';\r\n        }\r\n        part.needsUpdate = true;\r\n        if (part.state !== 'new' && part.track) {\r\n            part.state = 'changed';\r\n            part.track.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    reverseByTicks = function (part, durationTicks) {\r\n        var notes = part.notes,\r\n            note, on, off, onTicks, offTicks, i;\r\n\r\n        durationTicks = durationTicks || part.duration.ticks;\r\n\r\n        for (i = notes.length - 1; i >= 0; i--) {\r\n            note = notes[i];\r\n            on = note.noteOn;\r\n            off = note.noteOff;\r\n\r\n            onTicks = durationTicks - off.ticks;\r\n            offTicks = durationTicks - on.ticks;\r\n\r\n            on.ticks = onTicks;\r\n            off.ticks = offTicks;\r\n            note.ticks = onTicks;\r\n            //console.log('on', onTicks, 'off', offTicks, note.noteOn.ticks, note.noteOff.ticks);\r\n            on.state = 'changed';\r\n            off.state = 'changed';\r\n            note.state = 'changed';\r\n        }\r\n        part.needsUpdate = true;\r\n        if (part.state !== 'new' && part.track) {\r\n            part.state = 'changed';\r\n            part.track.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    Part.prototype.addEvent = Part.prototype.addEvents = function () {//events\r\n        //console.log(arguments);\r\n        var args = getEventsAndConfig(arguments, this);\r\n        //console.log(args.events, args.config);\r\n        addEvents(args, this, false);\r\n    };\r\n\r\n\r\n    Part.prototype.addEventsRelative = function () {//events\r\n        var args = getEventsAndConfig(arguments, this);\r\n        addEvents(args, this, true);\r\n    };\r\n\r\n\r\n    Part.prototype.removeEvent = Part.prototype.removeEvents = function () {//events\r\n        var args = getEventsAndConfig(arguments, this);\r\n        if (args === false) {\r\n            return false;\r\n        }\r\n        return removeEvents(args.events, this);\r\n    };\r\n\r\n\r\n    Part.prototype.moveEvent = Part.prototype.moveEvents = function () {//events, ticks\r\n        var args = getEventsAndConfig(arguments, this);\r\n        //console.log(args)\r\n        moveEvents(args, this);\r\n    };\r\n\r\n    Part.prototype.moveAllEvents = function (ticks) {//events, ticks\r\n        //console.log(args)\r\n        moveEvents({ events: this.events, config: [ticks] }, this);\r\n    };\r\n\r\n\r\n    Part.prototype.moveNote = function (note, ticks) {\r\n        moveEvents({ events: [note.noteOn, note.noteOff], config: [ticks] }, this);\r\n    };\r\n\r\n\r\n    Part.prototype.transposeEvents = function () {//events, semi\r\n        var args = getEventsAndConfig(arguments, this);\r\n        transposeEvents(args, this);\r\n    };\r\n\r\n\r\n    Part.prototype.transposeAllEvents = function (semi) {\r\n        //console.log('transposeAllEvents', semi);\r\n        transposeEvents({ events: this.events, config: [semi] }, this);\r\n    };\r\n\r\n\r\n    Part.prototype.transposeNote = function (note, semi) {\r\n        //console.log('transposeNote', semi);\r\n        transposeEvents({ events: [note.noteOn, note.noteOff], config: [semi] }, this);\r\n    };\r\n    /*\r\n        Part.prototype.setNotePitch = function(note, pitch){\r\n            note.setPitch(pitch);\r\n        };\r\n    */\r\n\r\n    Part.prototype.reverseByTicks = function (duration) {\r\n        if (this.needsUpdate) {\r\n            this.update();\r\n        }\r\n        reverseByTicks(this, duration);\r\n    };\r\n\r\n\r\n    Part.prototype.reverseByPitch = function () {\r\n        if (this.needsUpdate) {\r\n            this.update();\r\n        }\r\n        reverseByPitch(this);\r\n    };\r\n\r\n\r\n    Part.prototype.findEvents = function (pattern) {\r\n        return findEvent(this, pattern);\r\n    };\r\n\r\n\r\n    Part.prototype.findNotes = function (pattern) {\r\n        return findNote(this, pattern);\r\n    };\r\n\r\n\r\n    Part.prototype.getStats = function (pattern) {\r\n        return getStats(this, pattern);\r\n    };\r\n\r\n\r\n    Part.prototype.getIndex = function () {\r\n        var parts, part, i;\r\n\r\n        if (this.track) {\r\n            parts = this.track.parts;\r\n\r\n            for (i = this.track.numParts - 1; i >= 0; i--) {\r\n                part = parts[i];\r\n                if (part.id === this.id) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n\r\n\r\n    Part.prototype.copy = function () {\r\n        var part = new Part(copyName(this.name)),\r\n            partTicks = this.ticks,\r\n            eventsById = this.eventsById,\r\n            copies = [],\r\n            copy, id, event;\r\n        //console.log('Part.copy', events);\r\n\r\n        part.song = undefined;\r\n        part.track = undefined;\r\n        part.trackId = undefined;\r\n\r\n        for (id in eventsById) {\r\n            if (eventsById.hasOwnProperty(id)) {\r\n                event = eventsById[id];\r\n                copy = event.copy();\r\n                //console.log(copy.ticks, partTicks);\r\n                copy.ticks = copy.ticks - partTicks;\r\n                copies.push(copy);\r\n            }\r\n        }\r\n        part.addEvents(copies);\r\n        return part;\r\n    };\r\n\r\n    Part.prototype.setSolo = function (flag) {\r\n        if (flag === undefined) {\r\n            flag = !this.solo;\r\n        }\r\n        this.mute = false;\r\n        this.solo = flag;\r\n        // stop all sounds here\r\n        this.allNotesOff();\r\n        if (this.track) {\r\n            this.track.setPartSolo(this, flag);\r\n        }\r\n        //console.log(this.solo, this.mute);\r\n    };\r\n\r\n\r\n    Part.prototype.allNotesOff = function () {\r\n        if (this.track === undefined) {\r\n            return;\r\n        }\r\n        this.track.instrument.allNotesOffPart(this.id);\r\n    };\r\n\r\n\r\n    // called by Track if a part gets removed from a track\r\n    Part.prototype.reset = function (fromTrack, fromSong) {\r\n        var eventsById = this.eventsById,\r\n            id, event;\r\n\r\n        if (fromSong) {\r\n            this.song = undefined;\r\n        }\r\n        if (fromTrack) {\r\n            this.track = undefined;\r\n        }\r\n        this.trackId = undefined;\r\n        this.start.millis = undefined;\r\n        this.end.millis = undefined;\r\n\r\n        for (id in eventsById) {\r\n            if (eventsById.hasOwnProperty(id)) {\r\n                event = eventsById[id];\r\n                event.ticks -= this.ticks;\r\n                event.reset(false, fromTrack, fromSong);\r\n                //event.state = 'removed';\r\n            }\r\n        }\r\n        this.ticks = 0;\r\n        this.needsUpdate = true;\r\n    };\r\n\r\n\r\n    Part.prototype.update = function () {\r\n        //console.log('part update');\r\n\r\n        var i, maxi, j, maxj, id, event, noteNumber, note, onEvents, onEvent,\r\n            firstEvent, lastEvent, stats,\r\n            noteOnEvents = [],\r\n            notes = [],\r\n            numNotes = 0,\r\n            part = this,\r\n            partId = this.id,\r\n            track = this.track,\r\n            trackId = this.track ? this.track.id : undefined;\r\n\r\n        // if(!trackId){\r\n        //     console.log(this, 'does not belong to a track anymore');\r\n        // }\r\n\r\n        //console.log('Part.update()', this.state, this.eventsById);\r\n\r\n        this.events = [];\r\n\r\n        for (id in this.eventsById) {\r\n            if (this.eventsById.hasOwnProperty(id)) {\r\n                event = this.eventsById[id];\r\n                //console.log(event);\r\n                if (event.state !== 'clean') {\r\n                    //console.log(event.state);\r\n                    this.dirtyEvents[event.id] = event;\r\n                }\r\n\r\n                if (event.state !== 'removed') {\r\n                    this.events.push(event);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.events.sort(function (a, b) {\r\n            return a.sortIndex - b.sortIndex;\r\n        });\r\n\r\n\r\n        for (i = 0, maxi = this.notes.length; i < maxi; i++) {\r\n            note = this.notes[i];\r\n            //console.log(note.noteOn.state);\r\n            if (note.noteOn.state === 'removed' || (note.noteOff !== undefined && note.noteOff.state === 'removed')) {\r\n                note.state = 'removed';\r\n                this.dirtyNotes[note.id] = note;\r\n                delete this.notesById[note.id];\r\n            } else if (note.noteOn.state === 'changed' || (note.noteOff !== undefined && note.noteOff.state === 'changed')) {\r\n                note.state = 'changed';\r\n                this.dirtyNotes[note.id] = note;\r\n            }\r\n        }\r\n\r\n        //console.log('part', this.events.length);\r\n\r\n        for (i = 0, maxi = this.events.length; i < maxi; i++) {\r\n            event = this.events[i];\r\n            noteNumber = event.noteNumber;\r\n\r\n            if (event.type === sequencer.NOTE_ON) {\r\n                if (event.midiNote === undefined) {\r\n\r\n                    /*\r\n                    if(noteOnEvents[noteNumber] === undefined){\r\n                        noteOnEvents[noteNumber] = [];\r\n                    }\r\n                    noteOnEvents[noteNumber].push(event);\r\n                    */\r\n\r\n\r\n                    //console.log(i, 'NOTE_ON', event.eventNumber, noteNumber, noteOnEvents[noteNumber]);\r\n                    note = createMidiNote(event);\r\n                    note.part = part;\r\n                    note.partId = partId;\r\n                    note.track = track;\r\n                    note.trackId = trackId;\r\n                    note.state = 'new';\r\n                    this.notesById[note.id] = note;\r\n                    this.dirtyNotes[note.id] = note;\r\n                    if (notes[noteNumber] === undefined) {\r\n                        notes[noteNumber] = [];\r\n                    }\r\n                    notes[noteNumber].push(note);\r\n                    //console.log('create note:', note.id, 'for:', noteNumber, 'ticks:', event.ticks);\r\n                }\r\n            } else if (event.type === sequencer.NOTE_OFF) {\r\n                //console.log(event.midiNote);\r\n                if (event.midiNote === undefined) {\r\n                    if (notes[noteNumber] === undefined) {\r\n                        //console.log('no note!', noteNumber);\r\n                        continue;\r\n                    }\r\n\r\n                    var l = notes[noteNumber].length - 1;\r\n                    note = notes[noteNumber][l];\r\n                    if (note.noteOff !== undefined && note.durationTicks > 0) {\r\n                        //console.log('has already a note off event!', noteNumber, note.durationTicks, note.noteOff.ticks, event.ticks);\r\n                        continue;\r\n                    }\r\n                    /*\r\n                                        // get the lastly added note\r\n                                        var l = notes[noteNumber].length - 1;\r\n                                        var t = 0;\r\n                                        note = null;\r\n                    \r\n                                        while(t <= l){\r\n                                            note = notes[noteNumber][t];\r\n                                            if(note.noteOff === undefined){\r\n                                                break;\r\n                                            }\r\n                                            t++\r\n                                        }\r\n                    */\r\n                    if (note === null) {\r\n                        continue;\r\n                    }\r\n\r\n                    //console.log('add note off to note:', note.id, 'for:', noteNumber, 'ticks:', event.ticks, 'num note on:', l, 'index:', t);\r\n                    if (note.noteOn === undefined) {\r\n                        //console.log('no NOTE ON');\r\n                        continue;\r\n                    }\r\n                    if (note.state !== 'new') {\r\n                        note.state = 'changed';\r\n                    }\r\n                    this.dirtyNotes[note.id] = note;\r\n                    note.addNoteOff(event);\r\n\r\n\r\n                    /*\r\n                    onEvents = noteOnEvents[noteNumber];\r\n                    if(onEvents){\r\n                        onEvent = onEvents.shift();\r\n                        //console.log(note.midiNote);\r\n                        if(onEvent && onEvent.midiNote){\r\n                            note = onEvent.midiNote;\r\n                            if(note.state !== 'new'){\r\n                                note.state = 'changed';\r\n                            }\r\n                            this.dirtyNotes[note.id] = note;\r\n                            if(event.ticks - note.noteOn.ticks === 0){\r\n                                console.log(note.noteOn.ticks, event.ticks);\r\n                                note.adjusted = true;\r\n                                //event.ticks += 120;\r\n                            }\r\n                            note.addNoteOff(event);\r\n                            //console.log(i, 'NOTE_OFF', event.midiNote);\r\n                        }\r\n                    }else{\r\n                        maxj = this.notes.length;\r\n                        for(j = maxj - 1; j >= 0; j--){\r\n                            note = this.notes[j];\r\n                            if(note.number === event.noteNumber){\r\n                                note.state = 'changed';\r\n                                note.addNoteOff(event);\r\n                                this.dirtyNotes[note.id] = note;\r\n                                //console.log(note.id);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    */\r\n\r\n                } else if (this.notesById[event.midiNote.id] === undefined) {\r\n                    //console.log('not here');\r\n                    // note is recorded and has already a duration\r\n                    note = event.midiNote;\r\n                    //console.log('recorded notes', note.id);\r\n                    //note.state = 'new';\r\n                    note.part = part;\r\n                    note.partId = partId;\r\n                    note.track = track;\r\n                    note.trackId = trackId;\r\n                    //this.dirtyNotes[note.id] = note;\r\n                    this.notesById[note.id] = note;\r\n                } else {\r\n                    //console.log('certainly not here');\r\n                }\r\n            }\r\n        }\r\n\r\n        this.notes = [];\r\n        notes = null;\r\n        for (id in this.notesById) {\r\n            if (this.notesById.hasOwnProperty(id)) {\r\n                note = this.notesById[id];\r\n                this.notes.push(note);\r\n            }\r\n        }\r\n\r\n        this.notes.sort(function (a, b) {\r\n            return a.ticks - b.ticks;\r\n        });\r\n\r\n        this.numEvents = this.events.length;\r\n        this.numNotes = this.notes.length;\r\n\r\n        //console.log(this.numEvents, this.numNotes);\r\n\r\n        firstEvent = this.events[0];\r\n        lastEvent = this.events[this.numEvents - 1];\r\n\r\n        //console.log(firstEvent.ticks, lastEvent.ticks);\r\n\r\n        if (firstEvent) {\r\n            if (firstEvent.ticks < this.ticks) {\r\n                this.autoSize = 'both';\r\n            }\r\n\r\n            switch (this.autoSize) {\r\n                case 'right':\r\n                    this.start.ticks = this.ticks;\r\n                    this.end.ticks = lastEvent.ticks;\r\n                    this.duration.ticks = lastEvent.ticks - this.start.ticks;\r\n                    break;\r\n                case 'both':\r\n                    this.start.ticks = firstEvent.ticks;\r\n                    this.end.ticks = lastEvent.ticks;\r\n                    this.duration.ticks = lastEvent.ticks - firstEvent.ticks;\r\n                    break;\r\n            }\r\n        } else {\r\n            // fixing issue #6\r\n            this.start.ticks = this.ticks;\r\n            this.end.ticks = this.ticks + 100; // give the part a minimal duration of 100 ticks\r\n            this.duration.ticks = 100;\r\n        }\r\n\r\n        stats = this.getStats('noteNumber all');\r\n        this.lowestNote = stats.min;\r\n        this.highestNote = stats.max;\r\n\r\n        this.ticks = this.start.ticks;\r\n\r\n        if (this.state === 'clean') {\r\n            //@TODO: check if this is the preferred way of doing it after all, add: part.track.needsUpdate = true;\r\n            //console.log('part sets its own status in update() -> this shouldn\\'t happen');\r\n            this.state = 'changed';\r\n        }\r\n\r\n        this.needsUpdate = false;\r\n    };\r\n\r\n    sequencer.createPart = function () {\r\n        return new Part();\r\n    };\r\n\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n\r\n        createMidiNote = sequencer.createMidiNote;\r\n        createMidiEvent = sequencer.createMidiEvent;\r\n\r\n        copyName = sequencer.protectedScope.copyName;\r\n        typeString = sequencer.protectedScope.typeString;\r\n\r\n        findEvent = sequencer.findEvent;\r\n        findNote = sequencer.findNote;\r\n        getStats = sequencer.getStats;\r\n    });\r\n\r\n}function playhead() {\n\n    'use strict';\n    var\n        instanceId = 0,\n        range = 10,\n\n        debug,\n\n        Playhead,\n\n        //import\n        getPosition2, // → defined in position.js\n        objectForEach; // → defined in util.js\n\n\n    Playhead = function (song, type, name, data) {\n        this.id = 'POS' + instanceId++ + '' + new Date().getTime();\n        //console.log(name);\n        this.song = song;\n        this.type = type || '';\n        this.name = name || this.id;\n        this.data = data || {};\n        this.lastEvent = undefined;\n\n        this.activeParts = [];\n        this.activeNotes = [];\n        this.activeEvents = [];\n    };\n\n\n    Playhead.prototype.set = function (u, v) {\n        //console.log(this.name, 'set', u, v);\n        this.unit = u;\n        this.currentValue = v;\n        this.eventIndex = 0;\n        this.noteIndex = 0;\n        this.partIndex = 0;\n        this.calculate();\n        return this.data;\n    };\n\n\n    Playhead.prototype.get = function () {\n        return this.data;\n    };\n\n\n    Playhead.prototype.update = function (u, diff) {\n        //console.log(this.name, 'update', u, diff);\n        if (diff === 0) {\n            return this.data;\n        }\n        this.unit = u;\n        this.currentValue += diff;\n        this.calculate();\n        return this.data;\n    };\n\n\n    Playhead.prototype.updateSong = function () {\n        this.events = this.song.eventsMidiTime;\n        this.numEvents = this.events.length;\n        this.notes = this.song.notes;\n        this.numNotes = this.song.numNotes;\n        this.parts = this.song.parts;\n        this.numParts = this.song.numParts;\n\n        this.set('millis', this.song.millis || 0);\n    };\n\n\n    Playhead.prototype.setType = function (t) {\n        this.type = t;\n        this.set(this.unit, this.currentValue);\n        //console.log(type,activeParts);\n    };\n\n\n    Playhead.prototype.addType = function (t) {\n        this.type += ' ' + t;\n        this.set(this.unit, this.currentValue);\n        //console.log(type,activeParts);\n    };\n\n\n    Playhead.prototype.removeType = function (t) {\n        var arr = this.type.split(' ');\n        this.type = '';\n        arr.forEach(function (type) {\n            if (type !== t) {\n                this.type += t + ' ';\n            }\n        });\n        this.type.trim();\n        this.set(this.currentValue);\n        //console.log(type,activeParts);\n    };\n\n\n    Playhead.prototype.calculate = function () {\n        var\n            i,\n            event,\n            note,\n            part,\n            position,\n            newParts = [],\n            stillActiveNotes = [],\n            stillActiveEvents = [],\n            collectedParts = [],\n            collectedNotes = [],\n            collectedEvents = [];\n\n        for (i = this.eventIndex; i < this.numEvents; i++) {\n            event = this.events[i];\n            //console.log(event);\n            //event.mute = event.mute || event.part.mute || event.track.mute;\n            if (event[this.unit] <= this.currentValue) {\n                //console.log(event[this.unit], this.currentValue, event.type)\n                //if(event.mute === false && event.type !== sequencer.MIDI_NOTE && event.type !== sequencer.DUMMY_EVENT){\n                if (event.type !== sequencer.MIDI_NOTE && event.type !== sequencer.DUMMY_EVENT) {\n                    //console.log(event.mute, event.part.mute, event.track.mute);\n                    collectedEvents.push(event);\n                }\n                this.lastEvent = event;\n                this.eventIndex++;\n            } else {\n                break;\n            }\n        }\n\n        // if a song has no events yet, use the first time event as reference\n        if (this.lastEvent === undefined) {\n            this.lastEvent = this.song.timeEvents[0];\n        }\n\n        position = getPosition2(this.song, this.unit, this.currentValue, 'all', this.lastEvent);\n        this.data.eventIndex = this.eventIndex;\n        this.data.millis = position.millis;\n        this.data.ticks = position.ticks;\n\n        //console.log('millis:', position.millis, 'ticks:', position.ticks, this.unit, ':', this.currentValue);\n        // if(this.name === 'iterators'){\n        //     console.log('nominator:', position.nominator, 'ticks:', position.ticks, this.unit, ':', this.currentValue);\n        // }\n\n        if (this.type.indexOf('all') !== -1) {\n            var data = this.data;\n            objectForEach(position, function (value, key) {\n                data[key] = value;\n            });\n        } else if (this.type.indexOf('barsbeats') !== -1) {\n            this.data.bar = position.bar;\n            this.data.beat = position.beat;\n            this.data.sixteenth = position.sixteenth;\n            this.data.tick = position.tick;\n            this.data.barsAsString = position.barsAsString;\n\n            this.data.ticksPerBar = position.ticksPerBar;\n            this.data.ticksPerBeat = position.ticksPerBeat;\n            this.data.ticksPerSixteenth = position.ticksPerSixteenth;\n            this.data.numSixteenth = position.numSixteenth;\n        } else if (this.type.indexOf('time') !== -1) {\n            this.data.hour = position.hour;\n            this.data.minute = position.minute;\n            this.data.second = position.second;\n            this.data.millisecond = position.millisecond;\n            this.data.timeAsString = position.timeAsString;\n        } else if (this.type.indexOf('percentage') !== -1) {\n            this.data.percentage = position.percentage;\n        }\n\n        if (this.type.indexOf('events') !== -1 || this.type.indexOf('all') !== -1) {\n\n            this.collectedEvents = collectedEvents;\n\n            for (i = this.activeEvents.length - 1; i >= 0; i--) {\n                event = this.activeEvents[i];\n\n                // skip the tempo and time signature events\n                if (event.type === 0x51 || event.type === 0x58) {\n                    continue;\n                }\n                //event.mute = event.mute || event.part.mute || event.track.mute;\n                /*\n                if(event.mute === true){\n                    //console.log('skipping muted event', event.id);\n                    continue;\n                }\n                */\n                if (event.state.indexOf('removed') === 0 || this.song.eventsById[event.id] === undefined) {\n                    //console.log('skipping removed event', event.id);\n                    continue;\n                }\n\n                if (event[this.unit] <= this.currentValue && event[this.unit] > this.currentValue - range) {\n                    stillActiveEvents.push(event);\n                }\n            }\n\n            this.activeEvents = [].concat(stillActiveEvents);\n\n            // find and add new active events\n            for (i = collectedEvents.length - 1; i >= 0; i--) {\n                event = collectedEvents[i];\n                //console.log(event.mute);\n                if (event[this.unit] > this.currentValue - range) {\n                    this.activeEvents.push(event);\n                }\n            }\n\n            this.song.activeEvents = {};\n\n            for (i = this.activeEvents.length - 1; i >= 0; i--) {\n                event = this.activeEvents[i];\n                //console.log('active', event);\n                this.song.activeEvents[event.id] = event;\n            }\n        }\n\n\n        if (this.type.indexOf('notes') !== -1 || this.type.indexOf('all') !== -1) {\n\n            // get all events between the noteIndex and the current playhead position\n            for (i = this.noteIndex; i < this.numNotes; i++) {\n                note = this.notes[i];\n                if (note.noteOn[this.unit] <= this.currentValue) {\n                    //note.mute = note.noteOn.mute || note.noteOff.mute;\n                    //if(note.mute === false){\n                    collectedNotes.push(note);\n                    //}\n                    this.noteIndex++;\n                } else {\n                    break;\n                }\n            }\n\n\n            // filter notes that are no longer active\n            for (i = this.activeNotes.length - 1; i >= 0; i--) {\n                note = this.activeNotes[i];\n                //note.mute = note.noteOn.mute || note.noteOff.mute;\n                //if(note.mute){\n                //    continue;\n                //}\n                if (note.noteOn.state.indexOf('removed') === 0 || this.song.notesById[note.id] === undefined) {\n                    //console.log('skipping removed note', note.id);\n                    continue;\n                }\n\n                if (note.noteOff === undefined) {\n                    if (sequencer.debug) {\n                        console.warn('note with id', note.id, 'has no noteOff event', note.noteOn.track.name);\n                    }\n                    continue;\n                }\n\n                if (note.noteOn[this.unit] <= this.currentValue && note.noteOff[this.unit] > this.currentValue) {\n                    //note.active = true;\n                    stillActiveNotes.push(note);\n                } else {\n                    //note.active = false;\n\n                    //@TODO: do something here to unschedule notes\n                }\n            }\n\n\n            // add the still active notes back to the active notes array\n            this.activeNotes = [].concat(stillActiveNotes);\n\n\n            // find and add new active notes\n            for (i = collectedNotes.length - 1; i >= 0; i--) {\n                note = collectedNotes[i];\n\n                if (note.noteOff === undefined) {\n                    if (sequencer.debug) {\n                        console.warn('note with id', note.id, 'has no noteOff event', note.noteOn.track.name);\n                    }\n                    continue;\n                }\n\n                if (note.noteOff[this.unit] > this.currentValue) {\n                    this.activeNotes.push(note);\n                    //note.active = true;\n                } else {\n                    //note.active = false;\n                }\n            }\n\n            this.song.activeNotes = {};\n\n            for (i = this.activeNotes.length - 1; i >= 0; i--) {\n                note = this.activeNotes[i];\n                //console.log('active', note);\n                this.song.activeNotes[note.id] = note;\n            }\n        }\n\n\n\n        // get active parts\n        if (this.type.indexOf('parts') !== -1 || this.type.indexOf('all') !== -1) {\n\n\n            for (i = this.partIndex; i < this.numParts; i++) {\n                part = this.parts[i];\n                //console.log(part, this.unit, this.currentValue);\n                if (part.start[this.unit] <= this.currentValue) {// && part.end[this.unit] > this.currentValue){\n                    //part.mute = part.mute || part.track.mute;\n                    //if(part.mute === false){\n                    collectedParts.push(part);\n                    //}\n                    this.partIndex++;\n                } else {\n                    break;\n                }\n            }\n\n            // filter existing active parts\n            for (i = this.activeParts.length - 1; i >= 0; i--) {\n                part = this.activeParts[i];\n                //part.mute = part.mute || part.track.mute;\n                //if(part.mute){\n                //    continue;\n                //}\n                if (part.start[this.unit] <= this.currentValue && part.end[this.unit] > this.currentValue) {\n                    newParts.push(part);\n                }\n            }\n\n            this.activeParts = [].concat(newParts);\n\n            for (i = collectedParts.length - 1; i >= 0; i--) {\n                part = collectedParts[i];\n                if (part.end[this.unit] > this.currentValue) {\n                    this.activeParts.push(part);\n                }\n            }\n\n            this.song.activeParts = {};\n            for (i = this.activeParts.length - 1; i >= 0; i--) {\n                part = this.activeParts[i];\n                //console.log('active part', part);\n                this.song.activeParts[part.id] = part;\n            }\n        }\n\n        if (this.busy === true) {\n            this.busy = false;\n        }\n    };\n\n\n    sequencer.protectedScope.createPlayhead = function (song, type, name, data) {\n        return new Playhead(song, type, name, data);\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        getPosition2 = sequencer.protectedScope.getPosition2;\n        objectForEach = sequencer.protectedScope.objectForEach;\n        debug = sequencer.debug;\n    });\n\n}function position() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        //import\r\n        round, // → defined in util.js\r\n        floor, // → defined in util.js\r\n        typeString, // → defined in util.js\r\n\r\n        supportedTypes = 'barsandbeats barsbeats time millis ticks perc percentage',\r\n        supportedReturnTypes = 'barsandbeats barsbeats time millis ticks all',\r\n\r\n        //local\r\n        bpm,\r\n        nominator,\r\n        denominator,\r\n\r\n        ticksPerBeat,\r\n        ticksPerBar,\r\n        ticksPerSixteenth,\r\n\r\n        millisPerTick,\r\n        secondsPerTick,\r\n        numSixteenth,\r\n\r\n        ticks,\r\n        millis,\r\n        diffTicks,\r\n        diffMillis,\r\n\r\n        bar,\r\n        beat,\r\n        sixteenth,\r\n        tick,\r\n\r\n        type,\r\n        index,\r\n        returnType = 'all',\r\n        beyondEndOfSong = true,\r\n\r\n        //public (song)\r\n        millisToTicks,\r\n        ticksToMillis,\r\n        barsToMillis,\r\n        barsToTicks,\r\n        ticksToBars,\r\n        millisToBars,\r\n\r\n        //private\r\n        checkBarsAndBeats,\r\n        getDataFromEvent,\r\n        getPositionData,\r\n        calculateBarsAndBeats,\r\n\r\n        //protected\r\n        getPosition,\r\n        checkPosition,\r\n        fromMillis,\r\n        fromTicks,\r\n        fromBars;\r\n\r\n\r\n    function getTimeEvent(song, unit, target) {\r\n        // finds the time event that comes the closest before the target position\r\n        var timeEvents = song.timeEvents,\r\n            i, event;\r\n\r\n        for (i = timeEvents.length - 1; i >= 0; i--) {\r\n            event = timeEvents[i];\r\n            if (event[unit] <= target) {\r\n                index = i;\r\n                return event;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    millisToTicks = function (song, targetMillis, beos) {\r\n        beyondEndOfSong = beos === undefined ? true : false;\r\n        fromMillis(song, targetMillis);\r\n        //return round(ticks);\r\n        return ticks;\r\n    };\r\n\r\n\r\n    ticksToMillis = function (song, targetTicks, beos) {\r\n        beyondEndOfSong = beos === undefined ? true : false;\r\n        fromTicks(song, targetTicks);\r\n        return millis;\r\n    };\r\n\r\n\r\n    barsToMillis = function (song, position, beos) { // beos = beyondEndOfSong\r\n        position = ['barsbeats'].concat(position);\r\n        getPosition(song, position, 'millis', beos);\r\n        return millis;\r\n    };\r\n\r\n\r\n    barsToTicks = function (song, position, beos) { // beos = beyondEndOfSong\r\n        position = ['barsbeats'].concat(position);\r\n        getPosition(song, position, 'ticks', beos);\r\n        //return round(ticks);\r\n        return ticks;\r\n    };\r\n\r\n\r\n    ticksToBars = function (song, ticks, beos) {\r\n        beyondEndOfSong = beos === undefined ? true : false;\r\n        fromTicks(song, ticks);\r\n        calculateBarsAndBeats();\r\n        returnType = 'barsandbeats';\r\n        return getPositionData();\r\n    };\r\n\r\n\r\n    millisToBars = function (song, millis, beos) {\r\n        beyondEndOfSong = beos === undefined ? true : false;\r\n        fromMillis(song, millis);\r\n        calculateBarsAndBeats();\r\n        returnType = 'barsandbeats';\r\n        return getPositionData();\r\n    };\r\n\r\n\r\n    fromMillis = function (song, targetMillis, event) {\r\n        var lastEvent = song.lastEvent;\r\n\r\n        if (beyondEndOfSong === false) {\r\n            if (targetMillis > lastEvent.millis) {\r\n                targetMillis = lastEvent.millis;\r\n            }\r\n        }\r\n\r\n        if (event === undefined) {\r\n            event = getTimeEvent(song, 'millis', targetMillis);\r\n        }\r\n        getDataFromEvent(event);\r\n\r\n        // if the event is not exactly at target millis, calculate the diff\r\n        if (event.millis === targetMillis) {\r\n            diffMillis = 0;\r\n            diffTicks = 0;\r\n        } else {\r\n            diffMillis = targetMillis - event.millis;\r\n            diffTicks = diffMillis / millisPerTick;\r\n        }\r\n\r\n        millis += diffMillis;\r\n        ticks += diffTicks;\r\n\r\n        return ticks;\r\n    };\r\n\r\n\r\n    fromTicks = function (song, targetTicks, event) {\r\n        var lastEvent = song.lastEvent;\r\n\r\n        if (beyondEndOfSong === false) {\r\n            if (targetTicks > lastEvent.ticks) {\r\n                targetTicks = lastEvent.ticks;\r\n            }\r\n        }\r\n\r\n        if (event === undefined) {\r\n            event = getTimeEvent(song, 'ticks', targetTicks);\r\n        }\r\n        getDataFromEvent(event);\r\n\r\n        // if the event is not exactly at target ticks, calculate the diff\r\n        if (event.ticks === targetTicks) {\r\n            diffTicks = 0;\r\n            diffMillis = 0;\r\n        } else {\r\n            diffTicks = targetTicks - ticks;\r\n            diffMillis = diffTicks * millisPerTick;\r\n        }\r\n\r\n        ticks += diffTicks;\r\n        millis += diffMillis;\r\n\r\n        return millis;\r\n    };\r\n\r\n\r\n    fromBars = function (song, targetBar, targetBeat, targetSixteenth, targetTick, event) {\r\n        //console.time('fromBars');\r\n        var i = 0,\r\n            diffBars,\r\n            diffBeats,\r\n            diffSixteenth,\r\n            diffTick,\r\n            lastEvent = song.lastEvent;\r\n\r\n        if (beyondEndOfSong === false) {\r\n            if (targetBar > lastEvent.bar) {\r\n                targetBar = lastEvent.bar;\r\n            }\r\n        }\r\n\r\n        targetBar = checkBarsAndBeats(targetBar);\r\n        targetBeat = checkBarsAndBeats(targetBeat);\r\n        targetSixteenth = checkBarsAndBeats(targetSixteenth);\r\n        targetTick = checkBarsAndBeats(targetTick, true);\r\n\r\n        if (event === undefined) {\r\n            event = getTimeEvent(song, 'bar', targetBar);\r\n        }\r\n        getDataFromEvent(event);\r\n\r\n        //correct wrong position data, for instance: '3,3,2,788' becomes '3,4,4,068' in a 4/4 measure at PPQ 480\r\n        while (targetTick >= ticksPerSixteenth) {\r\n            targetSixteenth++;\r\n            targetTick -= ticksPerSixteenth;\r\n        }\r\n\r\n        while (targetSixteenth > numSixteenth) {\r\n            targetBeat++;\r\n            targetSixteenth -= numSixteenth;\r\n        }\r\n\r\n        while (targetBeat > nominator) {\r\n            targetBar++;\r\n            targetBeat -= nominator;\r\n        }\r\n\r\n        event = getTimeEvent(song, 'bar', targetBar, index);\r\n        for (i = index; i >= 0; i--) {\r\n            event = song.timeEvents[i];\r\n            if (event.bar <= targetBar) {\r\n                getDataFromEvent(event);\r\n                break;\r\n            }\r\n        }\r\n\r\n        // get the differences\r\n        diffTick = targetTick - tick;\r\n        diffSixteenth = targetSixteenth - sixteenth;\r\n        diffBeats = targetBeat - beat;\r\n        diffBars = targetBar - bar; //bar is always less then or equal to targetBar, so diffBars is always >= 0\r\n\r\n        //console.log('diff',diffBars,diffBeats,diffSixteenth,diffTick);\r\n        //console.log('millis',millis,ticksPerBar,ticksPerBeat,ticksPerSixteenth,millisPerTick);\r\n\r\n        // convert differences to milliseconds and ticks\r\n        diffMillis = (diffBars * ticksPerBar) * millisPerTick;\r\n        diffMillis += (diffBeats * ticksPerBeat) * millisPerTick;\r\n        diffMillis += (diffSixteenth * ticksPerSixteenth) * millisPerTick;\r\n        diffMillis += diffTick * millisPerTick;\r\n        diffTicks = diffMillis / millisPerTick;\r\n        //console.log(diffBars, ticksPerBar, millisPerTick, diffMillis, diffTicks);\r\n\r\n        // set all current position data\r\n        bar = targetBar;\r\n        beat = targetBeat;\r\n        sixteenth = targetSixteenth;\r\n        tick = targetTick;\r\n        //console.log(tick, targetTick)\r\n\r\n        millis += diffMillis;\r\n        //console.log(targetBar, targetBeat, targetSixteenth, targetTick, ' -> ', millis);\r\n        ticks += diffTicks;\r\n\r\n        //console.timeEnd('fromBars');\r\n    };\r\n\r\n\r\n    calculateBarsAndBeats = function () {\r\n        // spread the difference in tick over bars, beats and sixteenth\r\n        var tmp = round(diffTicks);\r\n        while (tmp >= ticksPerSixteenth) {\r\n            sixteenth++;\r\n            tmp -= ticksPerSixteenth;\r\n            while (sixteenth > numSixteenth) {\r\n                sixteenth -= numSixteenth;\r\n                beat++;\r\n                while (beat > nominator) {\r\n                    beat -= nominator;\r\n                    bar++;\r\n                }\r\n            }\r\n        }\r\n        tick = round(tmp);\r\n    };\r\n\r\n\r\n    getDataFromEvent = function (event) {\r\n\r\n        bpm = event.bpm;\r\n        nominator = event.nominator;\r\n        denominator = event.denominator;\r\n\r\n        ticksPerBar = event.ticksPerBar;\r\n        ticksPerBeat = event.ticksPerBeat;\r\n        ticksPerSixteenth = event.ticksPerSixteenth;\r\n        numSixteenth = event.numSixteenth;\r\n        millisPerTick = event.millisPerTick;\r\n        secondsPerTick = event.secondsPerTick;\r\n\r\n        bar = event.bar;\r\n        beat = event.beat;\r\n        sixteenth = event.sixteenth;\r\n        tick = event.tick;\r\n\r\n        ticks = event.ticks;\r\n        millis = event.millis;\r\n\r\n        //console.log(bpm, event.type);\r\n        //console.log('ticks', ticks, 'millis', millis, 'bar', bar);\r\n    };\r\n\r\n\r\n    getPositionData = function (song) {\r\n        var timeData,\r\n            tickAsString,\r\n            positionData = {};\r\n\r\n        switch (returnType) {\r\n\r\n            case 'millis':\r\n                //positionData.millis = millis;\r\n                positionData.millis = round(millis * 1000) / 1000;\r\n                positionData.millisRounded = round(millis);\r\n                break;\r\n\r\n            case 'ticks':\r\n                //positionData.ticks = ticks;\r\n                positionData.ticks = round(ticks);\r\n                //positionData.ticksUnrounded = ticks;\r\n                break;\r\n\r\n            case 'barsbeats':\r\n            case 'barsandbeats':\r\n                positionData.bar = bar;\r\n                positionData.beat = beat;\r\n                positionData.sixteenth = sixteenth;\r\n                positionData.tick = tick;\r\n                tickAsString = tick === 0 ? '000' : tick < 10 ? '00' + tick : tick < 100 ? '0' + tick : tick;\r\n                //positionData.barsAsString = (bar + 1) + ':' + (beat + 1) + ':' + (sixteenth + 1) + ':' + tickAsString;\r\n                positionData.barsAsString = bar + ':' + beat + ':' + sixteenth + ':' + tickAsString;\r\n                break;\r\n\r\n            case 'time':\r\n                timeData = sequencer.getNiceTime(millis);\r\n                positionData.hour = timeData.hour;\r\n                positionData.minute = timeData.minute;\r\n                positionData.second = timeData.second;\r\n                positionData.millisecond = timeData.millisecond;\r\n                positionData.timeAsString = timeData.timeAsString;\r\n                break;\r\n\r\n            case 'all':\r\n                // millis\r\n                //positionData.millis = millis;\r\n                positionData.millis = round(millis * 1000) / 1000;\r\n                positionData.millisRounded = round(millis);\r\n\r\n                // ticks\r\n                //positionData.ticks = ticks;\r\n                positionData.ticks = round(ticks);\r\n                //positionData.ticksUnrounded = ticks;\r\n\r\n                // barsbeats\r\n                positionData.bar = bar;\r\n                positionData.beat = beat;\r\n                positionData.sixteenth = sixteenth;\r\n                positionData.tick = tick;\r\n                tickAsString = tick === 0 ? '000' : tick < 10 ? '00' + tick : tick < 100 ? '0' + tick : tick;\r\n                //positionData.barsAsString = (bar + 1) + ':' + (beat + 1) + ':' + (sixteenth + 1) + ':' + tickAsString;\r\n                positionData.barsAsString = bar + ':' + beat + ':' + sixteenth + ':' + tickAsString;\r\n\r\n                // time\r\n                timeData = sequencer.getNiceTime(millis);\r\n                positionData.hour = timeData.hour;\r\n                positionData.minute = timeData.minute;\r\n                positionData.second = timeData.second;\r\n                positionData.millisecond = timeData.millisecond;\r\n                positionData.timeAsString = timeData.timeAsString;\r\n\r\n                // extra data\r\n                positionData.bpm = round(bpm * song.playbackSpeed, 3);\r\n                positionData.nominator = nominator;\r\n                positionData.denominator = denominator;\r\n\r\n                positionData.ticksPerBar = ticksPerBar;\r\n                positionData.ticksPerBeat = ticksPerBeat;\r\n                positionData.ticksPerSixteenth = ticksPerSixteenth;\r\n\r\n                positionData.numSixteenth = numSixteenth;\r\n                positionData.millisPerTick = millisPerTick;\r\n                positionData.secondsPerTick = secondsPerTick;\r\n\r\n                // use ticks to make tempo changes visible by a faster moving playhead\r\n                positionData.percentage = ticks / song.durationTicks;\r\n                //positionData.percentage = millis / song.durationMillis;\r\n                break;\r\n        }\r\n\r\n        return positionData;\r\n    };\r\n\r\n\r\n    checkBarsAndBeats = function (value, isTick) {\r\n        value = isNaN(value) ? isTick ? 0 : 1 : value;\r\n        value = round(value);\r\n        //value = value > maxValue ? maxValue : value;\r\n        if (isTick) {\r\n            value = value < 0 ? 0 : value;\r\n        } else {\r\n            value = value < 1 ? 1 : value;\r\n        }\r\n        return value;\r\n    };\r\n\r\n\r\n    //@param: 'millis', 1000, [true]\r\n    //@param: 'ticks', 1000, [true]\r\n    //@param: 'barsandbeats', 1, ['all', true]\r\n    //@param: 'barsandbeats', 60, 4, 3, 120, ['all', true]\r\n    //@param: 'barsandbeats', 60, 4, 3, 120, [true, 'all']\r\n\r\n    checkPosition = function (args) {\r\n        returnType = 'all';\r\n        beyondEndOfSong = true;\r\n        //console.log('----> checkPosition:', args);\r\n\r\n        if (typeString(args) === 'array') {\r\n            var\r\n                numArgs = args.length,\r\n                position,\r\n                i, a, positionLength;\r\n\r\n            type = args[0];\r\n\r\n            // support for [['millis', 3000]]\r\n            if (typeString(args[0]) === 'array') {\r\n                //console.warn('this shouldn\\'t happen!');\r\n                args = args[0];\r\n                type = args[0];\r\n                numArgs = args.length;\r\n            }\r\n\r\n            position = [type];\r\n\r\n            //console.log('check position', args, numArgs);\r\n\r\n            //console.log('arg', 0, '->', type);\r\n\r\n            if (supportedTypes.indexOf(type) !== -1) {\r\n                for (i = 1; i < numArgs; i++) {\r\n                    a = args[i];\r\n                    //console.log('arg', i, '->', a);\r\n                    if (a === true || a === false) {\r\n                        beyondEndOfSong = a;\r\n                    } else if (isNaN(a)) {\r\n                        if (supportedReturnTypes.indexOf(a) !== -1) {\r\n                            returnType = a;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    } else {\r\n                        position.push(a);\r\n                    }\r\n                }\r\n                //check number of arguments -> either 1 number or 4 numbers in position, e.g. ['barsbeats', 1] or ['barsbeats', 1, 1, 1, 0],\r\n                // or ['perc', 0.56, numberOfTicksToSnapTo]\r\n                positionLength = position.length;\r\n                if (positionLength !== 2 && positionLength !== 3 && positionLength !== 5) {\r\n                    return false;\r\n                }\r\n                //console.log(position, returnType, beyondEndOfSong);\r\n                //console.log('------------------------------------')\r\n                return position;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    function getPosition2(song, unit, target, type, event) {\r\n        if (unit === 'millis') {\r\n            fromMillis(song, target, event);\r\n        } else if (unit === 'ticks') {\r\n            fromTicks(song, target, event);\r\n        }\r\n        if (type === 'all') {\r\n            calculateBarsAndBeats();\r\n        }\r\n        return getPositionData(song);\r\n    }\r\n\r\n    getPosition = function (song, args) {\r\n        //console.log('getPosition', args);\r\n\r\n        var position = checkPosition(args),\r\n            millis, tmp, snap;\r\n\r\n        if (position === false) {\r\n            console.error('wrong position data');\r\n            return false;\r\n        }\r\n\r\n        switch (type) {\r\n\r\n            case 'barsbeats':\r\n            case 'barsandbeats':\r\n                fromBars(song, position[1], position[2], position[3], position[4]);\r\n                return getPositionData(song);\r\n\r\n            case 'time':\r\n                // calculate millis out of time array: hours, minutes, seconds, millis\r\n                millis = 0;\r\n                tmp = position[1] || 0;\r\n                millis += tmp * 60 * 60 * 1000; //hours\r\n                tmp = position[2] || 0;\r\n                millis += tmp * 60 * 1000; //minutes\r\n                tmp = position[3] || 0;\r\n                millis += tmp * 1000; //seconds\r\n                tmp = position[4] || 0;\r\n                millis += tmp; //milliseconds\r\n\r\n                fromMillis(song, millis);\r\n                calculateBarsAndBeats();\r\n                return getPositionData(song);\r\n\r\n            case 'millis':\r\n                fromMillis(song, position[1]);\r\n                calculateBarsAndBeats();\r\n                return getPositionData(song);\r\n\r\n            case 'ticks':\r\n                fromTicks(song, position[1]);\r\n                calculateBarsAndBeats();\r\n                return getPositionData(song);\r\n\r\n            case 'perc':\r\n            case 'percentage':\r\n                snap = position[2];\r\n\r\n                //millis = position[1] * song.durationMillis;\r\n                //fromMillis(song, millis);\r\n                //console.log(millis);\r\n\r\n                ticks = position[1] * song.durationTicks;\r\n                if (snap !== undefined) {\r\n                    ticks = floor(ticks / snap) * snap;\r\n                    //fromTicks(song, ticks);\r\n                    //console.log(ticks);\r\n                }\r\n                fromTicks(song, ticks);\r\n                calculateBarsAndBeats();\r\n                tmp = getPositionData(song);\r\n                //console.log('diff', position[1] - tmp.percentage);\r\n                return tmp;\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    sequencer.protectedScope.getPosition = getPosition;\r\n    sequencer.protectedScope.getPosition2 = getPosition2;\r\n    sequencer.protectedScope.checkPosition = checkPosition;\r\n\r\n    sequencer.protectedScope.millisToTicks = millisToTicks;\r\n    sequencer.protectedScope.ticksToMillis = ticksToMillis;\r\n    sequencer.protectedScope.ticksToBars = ticksToBars;\r\n    sequencer.protectedScope.millisToBars = millisToBars;\r\n    sequencer.protectedScope.barsToTicks = barsToTicks;\r\n    sequencer.protectedScope.barsToMillis = barsToMillis;\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        round = sequencer.protectedScope.round;\r\n        floor = sequencer.protectedScope.floor;\r\n        typeString = sequencer.protectedScope.typeString;\r\n    });\r\n}\r\nfunction quantizeFixedLength() {\n\n  'use strict';\n\n  var\n    copyObject, // defined in util.js\n\n    floor = Math.floor,\n    round = Math.round,\n\n    noteFractions =\n    {\n      '1': 1 * 4, // whole note\n      '1.': 1.5 * 4,\n      '1..': 1.75 * 4,\n      '1...': 1.875 * 4,\n      '1T': 2 / 3 * 4,\n\n      '2': 1 * 2, // half note\n      '2.': 1.5 * 2,\n      '2..': 1.75 * 2,\n      '2...': 1.875 * 2,\n      '2T': 2 / 3 * 2,\n\n      '4': 1 * 1, // quarter note (beat)\n      '4.': 1.5 * 1,\n      '4..': 1.75 * 1,\n      '4...': 1.875 * 1,\n      '4T': 2 / 3 * 1,\n\n      '8': 1 * 1 / 2, // eighth note\n      '8.': 1.5 * 1 / 2,\n      '8..': 1.75 * 1 / 2,\n      '8...': 1.875 * 1 / 2,\n      '8T': 2 / 3 * 1 / 2,\n\n      '16': 1 * 1 / 4, // sixteenth note\n      '16.': 1.5 * 1 / 4,\n      '16..': 1.75 * 1 / 4,\n      '16...': 1.875 * 1 / 4,\n      '16T': 2 / 3 * 1 / 4,\n\n      '32': 1 * 1 / 8,\n      '32.': 1.5 * 1 / 8,\n      '32..': 1.75 * 1 / 8,\n      '32...': 1.875 * 1 / 8,\n      '32T': 2 / 3 * 1 / 8,\n\n      '64': 1 * 1 / 16,\n      '64.': 1.5 * 1 / 16,\n      '64..': 1.75 * 1 / 16,\n      '64...': 1.875 * 1 / 16,\n      '64T': 2 / 3 * 1 / 16,\n\n      '128': 1 * 1 / 32,\n      '128.': 1.5 * 1 / 32,\n      '128..': 1.75 * 1 / 32,\n      '128...': 1.875 * 1 / 32,\n      '128T': 2 / 3 * 1 / 32\n    };\n\n\n\n\n  function quantize(events, value, ppq, history) {\n    var track;\n\n    value = '' + value;\n    value = value.toUpperCase();\n    ppq = ppq || sequencer.defaultPPQ;\n    //console.log('quantize', value);\n    if (value === 0) {// pass by\n      return {};\n    }\n    var i, event, ticks, quantized, diff, quantizeTicks,\n      quantizeHistory = history || {};\n\n    if (quantizeHistory.events === undefined) {\n      quantizeHistory.events = {};\n    }\n\n    if (quantizeHistory.tracks === undefined) {\n      quantizeHistory.tracks = {};\n    }\n\n    //console.log(events, value, ppq, history);\n\n    if (value.indexOf('TICKS') !== -1) {\n      quantizeTicks = parseInt(value.replace(/TICKS/, ''), 10);\n    } else {\n      quantizeTicks = noteFractions[value] * ppq;\n    }\n\n    //console.log('quantize', quantizeTicks);\n\n    if (quantizeTicks === undefined) {\n      if (sequencer.debug) {\n        console.warn('invalid quantize value');\n      }\n      return;\n    }\n\n    for (i = events.length - 1; i >= 0; i--) {\n      event = events[i];\n\n      quantizeHistory.events[event.id] = {\n        event: event,\n        ticks: event.ticks\n      };\n\n      if (event.type !== 128) {\n        ticks = event.ticks;\n        quantized = round(ticks / quantizeTicks) * quantizeTicks;\n        //console.log(ticks, quantized, '[', ppq, ']');\n        diff = quantized - ticks;\n        event.ticks = quantized;\n        event.state = 'changed';\n        event.part.needsUpdate = true;\n        event.track.needsUpdate = true;\n\n        // add quantize history per track as well\n        track = event.track;\n        if (quantizeHistory.tracks[track.id] === undefined) {\n          quantizeHistory.tracks[track.id] = {\n            track: track,\n            quantizedEvents: []\n          };\n        }\n        quantizeHistory.tracks[track.id].quantizedEvents.push(event);\n\n        // quantize the note off event\n        if (event.midiNote !== undefined) {\n          event.midiNote.noteOff.ticks += diff;\n          event.midiNote.noteOff.state = 'changed';\n          event.midiNote.state = 'changed';\n          quantizeHistory.tracks[track.id].quantizedEvents.push(event.midiNote.noteOff);\n        }\n      }\n    }\n\n    return quantizeHistory;//copyObject(quantizeHistory);\n  }\n\n\n  function fixedLength(events, value, ppq, history) {\n    var fixedLengthHistory = history || {};\n\n  }\n\n\n  sequencer.protectedScope.addInitMethod(function () {\n    copyObject = sequencer.protectedScope.copyObject;\n  });\n\n  sequencer.quantize = quantize;\n  sequencer.fixedLength = fixedLength;\n\n}\n\n\nfunction sample() {\n\n    'use strict';\n\n    var\n        //import\n        context, // defined in open_module.js\n        timedTasks, // defined in open_module.js\n        legacy, // defined in open_module.js\n        typeString, // defined in util.js\n        getSampleId, // defined in open_module.js\n        createPanner, // defined in effects.js\n        getEqualPowerCurve, // defined in util.js\n\n        //private\n        stopSample,\n        fadeOut,\n\n        SampleSynth,\n        SampleRelease,\n        SampleSustainRelease,\n        SampleReleasePanning,\n        SampleSustainReleasePanning,\n\n\n        Sample = function (config) {\n            this.id = getSampleId();\n            this.output = context.createGainNode();\n            this.output.connect(config.track.input);\n            this.buffer = config.buffer;\n            if (this.buffer) {\n                this.duration = this.buffer.duration;\n            }\n            this.noteNumber = config.noteNumber;\n            this.stopCallback = function () { };\n            this.track = config.track;\n            //console.log(this.buffer, this.noteNumber)\n        };\n\n\n    stopSample = function (sample, time) {\n        sample.source.onended = function () {\n            sample.stopCallback(sample);\n        };\n        time = time || 0;\n        try {\n            sample.source.stop(time);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n\n    fadeOut = function (sample) {\n        var now = context.currentTime,\n            values,\n            i, maxi;\n\n        if (sample.release_duration > 0) {\n            //console.log(sample.releaseEnvelope);\n            try {\n                switch (sample.releaseEnvelope) {\n\n                    case 'linear':\n                        sample.output.gain.linearRampToValueAtTime(sample.volume, now);\n                        sample.output.gain.linearRampToValueAtTime(0, now + sample.releaseDuration);\n                        break;\n\n                    case 'equal power':\n                        values = getEqualPowerCurve(100, 'fadeOut', sample.volume);\n                        sample.output.gain.setValueCurveAtTime(values, now, sample.releaseDuration);\n                        break;\n\n                    case 'array':\n                        maxi = sample.releaseEnvelopeArray.length;\n                        values = new Float32Array(maxi);\n                        for (i = 0; i < maxi; i++) {\n                            values[i] = sample.releaseEnvelopeArray[i] * sample.volume;\n                        }\n                        sample.output.gain.setValueCurveAtTime(values, now, sample.releaseDuration);\n                        break;\n                }\n            } catch (e) {\n                console.error(sample.id, e);\n            }\n        }\n    };\n\n\n    Sample.prototype.addData = function (obj) {\n        this.sourceId = obj.sourceId;\n        this.noteName = obj.noteName;\n        this.midiNote = obj.midiNote;\n    };\n\n    Sample.prototype.createSource = function () {\n        // overrule to do or add other stuff\n        this.source = context.createBufferSource();\n        this.source.buffer = this.buffer;\n    };\n\n    Sample.prototype.route = function () {\n        // overrule to do or add other stuff\n        this.source.connect(this.output);\n    };\n\n\n    // called on a NOTE ON event\n    Sample.prototype.start = function (event) {\n        // console.log('NOTE ON', event.velocity, legacy);\n        if (this.source !== undefined) {\n            console.error('this should never happen');\n            return;\n        }\n\n        this.volume = event.velocity / 127;\n        this.output.gain.value = this.volume;\n\n        this.createSource();\n        this.phase = 'decay'; // -> naming of phases is not completely correct, we skip attack\n        this.route();\n\n        if (legacy === true) {\n            this.source.start = this.source.noteOn;\n            this.source.stop = this.source.noteOff;\n        }\n\n        try {\n            // if(event.offset !== undefined){\n            //     console.log(event.offset);\n            // }\n            this.source.start(event.time, event.offset || 0, event.duration || this.duration);\n            //alert(event.offset + ':' + event.duration);\n            //this.source.start(event.time, 0, 0);\n            //this.source.start(event.time);\n            //console.log('start', event.time, event.offset, event.duration, sequencer.getTime());\n            //console.log('start', time, sequencer.getTime());\n        } catch (e) {\n            console.warn(e);\n        }\n    };\n\n\n    // called on a NOTE OFF event\n    Sample.prototype.stop = function (seconds, cb) {\n        //console.log('NOTE OFF', cb);\n        //console.log('NOTE OFF', this.source);\n        //console.log('NOTE OFF', this.release);\n        if (this.source === undefined) {\n            if (sequencer.debug) {\n                console.log('Sample.stop() source is undefined');\n            }\n            return;\n        }\n\n        // this happens when midi events are sent live from a midi device\n        if (seconds === 0 || seconds === undefined) {\n            //console.log('seconds is undefined!');\n            seconds = sequencer.getTime();\n        }\n        this.stopCallback = cb || function () { };\n\n        if (this.release) {\n            this.source.loop = false;\n            this.startReleasePhase = seconds;\n            this.stopTime = seconds + this.releaseDuration;\n            //console.log(this.stopTime, seconds, this.releaseDuration);\n        } else {\n            stopSample(this, seconds);\n        }\n    };\n\n\n    Sample.prototype.unschedule = function (when, cb) {\n        var now = context.currentTime,\n            sample = this,\n            fadeOut = when === null ? 100 : when;//milliseconds\n\n        this.source.onended = undefined;\n        // Comment this out, see fix by Nicolar Lair below:\n        // this.output.gain.cancelScheduledValues(now);\n\n        //console.log(this.volume, now);\n        //this.output.gain.linearRampToValueAtTime(this.volume, now);\n\n        try {\n            // Fix by Nicolar Lair:\n            /*\n              A DOM Exception occurs when a fade out is called while the sound is playing / planned to play\n              until a later value in time:\n              \"Failed to execute 'linearRampToValueAtTime' on 'AudioParam': linearRampToValueAtTime()\n              overlaps setValueCurveAt()\"\n            */\n            this.output.gain.cancelScheduledValues(0);\n            this.output.gain.linearRampToValueAtTime(0, now + fadeOut / 1000); // fade out in seconds\n\n            if (fadeOut === 0) {\n                if (sample.source !== undefined) {\n                    sample.source.disconnect(0);\n                    sample.source = undefined;\n                    if (typeof cb === 'function') {\n                        cb(sample);\n                    }\n                }\n            } else {\n                timedTasks['unschedule_' + this.id] = {\n                    time: now + fadeOut / 1000,\n                    execute: function () {\n                        if (!sample) {\n                            console.log('sample is gone');\n                            return;\n                        }\n                        if (sample.panner) {\n                            sample.panner.node.disconnect(0);\n                        }\n                        if (sample.source !== undefined) {\n                            sample.source.disconnect(0);\n                            sample.source = undefined;\n                        }\n                        if (cb) {\n                            cb(sample);\n                        }\n                    }\n                };\n            }\n        } catch (e) {\n            // firefox gives sometimes an error \"SyntaxError: An invalid or illegal string was specified\"\n            console.log(e);\n        }\n\n    };\n\n\n    // called every frame\n    Sample.prototype.update = function (value) {\n        var doLog = this.track.name === 'Sonata # 3' && this.track.song.bar >= 6 && this.track.song.bar <= 10;\n        //var doLog = true;\n        //console.log('update', this.phase);\n        if (this.autopan) {\n            this.panner.setPosition(value);\n        }\n\n        if (this.startReleasePhase !== undefined && context.currentTime >= this.startReleasePhase && this.phase === 'decay') {\n            if (doLog === true) {\n                console.log(this.phase, '-> release', this.releaseDuration);\n            }\n            this.phase = 'release';\n            fadeOut(this);\n        } else if (this.stopTime !== undefined && context.currentTime >= this.stopTime && this.phase === 'release') {\n            if (doLog === true) {\n                console.log(this.phase, '-> stopped', this.stopTime, context.currentTime);\n            }\n            this.phase = 'stopped';\n            stopSample(this);\n        }\n    };\n\n\n    sequencer.createSample = function (config) {\n        var debug = false;\n        //return new Sample(config);\n        //console.log(config.release_duration);\n        if (debug) console.log(config);\n\n        if (config.oscillator) {\n            if (debug) console.log('synth');\n            return new SampleSynth(config);\n\n        } else if (config.sustain && config.release && config.panning) {\n            if (debug) console.log('sustain, release, panning');\n            return new SampleSustainReleasePanning(config);\n\n        } else if (config.release && config.panning) {\n            if (debug) console.log('release, panning');\n            return new SampleReleasePanning(config);\n\n        } else if (config.release && config.sustain) {\n            if (debug) console.log('release, sustain');\n            return new SampleSustainRelease(config);\n\n        } else if (config.release) {\n            if (debug) console.log('release');\n            return new SampleRelease(config);\n\n        } else {\n            if (debug) console.log('simple');\n            return new Sample(config);\n        }\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        var createClass = sequencer.protectedScope.createClass;\n\n        context = sequencer.protectedScope.context;\n        timedTasks = sequencer.protectedScope.timedTasks;\n        getEqualPowerCurve = sequencer.util.getEqualPowerCurve;\n        legacy = sequencer.legacy;\n        getSampleId = sequencer.protectedScope.getSampleId;\n        typeString = sequencer.protectedScope.typeString;\n        createPanner = sequencer.createPanner;\n\n\n        SampleRelease = createClass(Sample, function (config) {\n            this.release = true;\n\n            this.releaseDuration = config.release_duration / 1000;\n            this.releaseEnvelope = config.release_envelope;\n            //console.log(this.releaseDuration, this.releaseEnvelope);\n        });\n\n\n        SampleSustainRelease = createClass(Sample, function (config) {\n            this.release = true;\n\n            this.sustainStart = config.sustain_start / 1000;\n            this.sustainEnd = config.sustain_end / 1000;\n            this.releaseDuration = config.release_duration / 1000;\n            this.releaseEnvelope = config.release_envelope;\n            if (this.releaseEnvelope === undefined) {\n                this.releaseEnvelope = 'equal power';\n            } else if (typeString(this.releaseEnvelope) === 'array') {\n                this.releaseEnvelopeArray = config.release_envelope_array;\n                this.releaseEnvelope = 'array';\n            }\n        });\n\n        SampleSustainRelease.prototype.route = function () {\n            this.source.loop = true;\n            this.source.loopStart = this.sustainStart;\n            this.source.loopEnd = this.sustainEnd;\n            this.source.connect(this.output);\n            //console.log(this.sustainStart, this.sustainEnd);\n        };\n\n\n        SampleReleasePanning = createClass(Sample, function (config) {\n            this.release = true;\n\n            this.releaseDuration = config.release_duration / 1000;\n            this.releaseEnvelope = config.release_envelope;\n            if (this.releaseEnvelope === undefined) {\n                this.releaseEnvelope = 'equal power';\n            } else if (typeString(this.releaseEnvelope) === 'array') {\n                this.releaseEnvelopeArray = config.release_envelope_array;\n                this.releaseEnvelope = 'array';\n            }\n            this.panPosition = config.panPosition;\n        });\n\n\n        SampleReleasePanning.prototype.route = function () {\n            //console.log(this.panning);\n            this.panner = createPanner();\n            this.panner.setPosition(this.panPosition || 0);\n            this.source.connect(this.panner.node);\n            this.panner.node.connect(this.output);\n        };\n\n        SampleSustainReleasePanning = createClass(Sample, function (config) {\n            this.release = true;\n\n            this.sustainStart = config.sustain_start / 1000;\n            this.sustainEnd = config.sustain_end / 1000;\n            this.releaseDuration = config.release_duration / 1000;\n            this.releaseEnvelope = config.release_envelope;\n            if (this.releaseEnvelope === undefined) {\n                this.releaseEnvelope = 'equal power';\n            } else if (typeString(this.releaseEnvelope) === 'array') {\n                this.releaseEnvelopeArray = config.release_envelope_array;\n                this.releaseEnvelope = 'array';\n            }\n            this.panPosition = config.panPosition;\n        });\n\n\n        SampleSustainReleasePanning.prototype.route = function () {\n            this.source.loop = true;\n            this.source.loopStart = this.sustainStart;\n            this.source.loopEnd = this.sustainEnd;\n\n            this.panner = createPanner();\n            this.panner.setPosition(this.panPosition || 0);\n            this.source.connect(this.panner.node);\n            this.panner.node.connect(this.output);\n        };\n\n\n        SampleSynth = createClass(Sample, function (config) {\n            this.release = true;\n            this.panPosition = 0;\n            this.autopan = config.autopan || false;\n            this.frequency = config.event.frequency;\n            this.waveForm = config.wave_form || 0;//'sine';\n            this.releaseDuration = config.release_duration / 1000 || 1.5;\n            this.releaseEnvelope = config.release_envelope || 'equal power';\n            //console.log(config);\n        });\n\n        SampleSynth.prototype.createSource = function () {\n            this.source = context.createOscillator();\n            this.source.type = this.waveForm;\n            this.source.frequency.value = this.frequency;\n        };\n\n        SampleSynth.prototype.route = function () {\n            //create some headroom for multi-timbrality\n            this.volume *= 0.3;\n            this.output.gain.value = this.volume;\n\n            if (this.autopan) {\n                this.panner = createPanner();\n                this.panner.setPosition(0);\n                this.source.connect(this.panner.node);\n                this.panner.node.connect(this.output);\n            } else {\n                //alert(this.source + ':' + this.output.gain.value);\n                this.source.connect(this.output);\n            }\n        };\n/*\n        SampleSynth.prototype.createSource = function(){\n            this.autoPanner = context.createOscillator();\n            this.autoPanner.type = 0;\n            this.autoPanner.frequency.value = 50;\n\n\n            var tmp = context.createScriptProcessor(256,1,1);\n            tmp.onaudioprocess = function(e){\n                console.log(e.inputBuffer.getChannelData(0)[0]);\n            };\n            this.autoPanner.connect(tmp);\n            tmp.connect(context.destination);\n\n            this.source = context.createOscillator();\n            this.source.type = this.waveForm;\n            this.source.frequency.value = this.frequency;\n        };\n\n        SampleSynth.prototype.route = function(){\n            this.panner = createPanner();\n            this.panner.setPosition(0);\n            this.source.connect(this.panner.node);\n            this.panner.node.connect(this.output);\n            this.autoPanner.start();\n\n            //create some headroom for multi-timbrality\n            this.volume *= 0.3;\n            this.output.gain.value = this.volume;\n        };\n*/\n    });\n}\nfunction samplePack() {\n\n    'use strict';\n\n    var\n        ajax, //defined in util.js\n        findItem, //defined in util.js\n        storeItem, //defined in util.js\n        deleteItem, //defined in util.js\n        typeString, //defined in util.js\n        parseUrl, //defined in util.js\n        base64ToBinary, // defined in util.js\n        context, //defined in open_module.js\n        storage, //defined in open_module.js\n\n        parseTime,\n\n        folder,\n        sampleId,\n        index = 0,\n        SamplePack;\n\n\n    function parse(samplepack, config) {\n        var i, mapping = config.mapping, url, path, name, ext, slash, dot, data,\n            remotePath,\n            sampleData,\n            extension;\n\n        samplepack.samples = [];\n        samplepack.samplesById = {};\n\n        remotePath = config.remote_path;\n        remotePath = remotePath === undefined ? false : remotePath;\n\n        //console.log(samplepack.folder, samplepack.name);\n        //console.log(samplepack, config);\n\n        for (i in mapping) {\n            if (mapping.hasOwnProperty(i)) {\n                sampleData = {\n                    id: i,\n                    folder: samplepack.folder + '/' + samplepack.name,\n                };\n\n                //@TODO: this is not correct! A remote_path is not mandatory for a sample pack with urls!\n                if (remotePath !== false) {\n                    url = mapping[i];\n                    if (url.indexOf('http://') === 0 || url.indexOf('https://') === 0) {\n                        sampleData.url = url;\n                    } else {\n                        name = url;\n                        // check if the url has a path and/or an extension\n                        slash = url.lastIndexOf('/');\n                        if (slash !== -1) {\n                            name = url.substring(slash + 1);\n                        }\n                        path = url.substring(0, slash);\n                        dot = url.lastIndexOf('.');\n                        extension = config.extension;\n                        if (dot !== -1) {\n                            ext = url.substring(dot + 1);\n                            if (ext.length >= 3 && ext.length <= 4) {\n                                extension = ext;\n                                name = url.substring(slash, dot);\n                            }\n                        }\n                        //console.log('u', url, 'r',remotePath, 'p', path, 'n', name, 'e', extension);\n                        url = remotePath + '/' + path + '/' + name + '.' + extension;\n                        url = url.replace(/\\/{2,}/g, '/');\n                        url = url.replace(/^\\//, '');\n                        url = url.replace(/$\\//, '');\n                        sampleData.url = url;\n                    }\n                    //console.log('loading sample from:', sampleData.url);\n                } else {\n                    data = mapping[i];\n                    if (data.d !== undefined) {\n                        sampleData.base64 = mapping[i].d;\n                        // get the sustain loop start and end\n                        if (data.s !== undefined) {\n                            sampleData.sustain = data.s;\n                        }\n                        // get the sample specific release duration and envelope, or reference to group release duration\n                        if (data.r !== undefined) {\n                            sampleData.release = data.r;\n                        }\n                    } else {\n                        sampleData.base64 = mapping[i];\n                    }\n                    // store sample data by id so the instrument can easily retreive the loop information per sample\n                    samplepack.samplesById[i] = sampleData;\n                    //console.log(sampleData)\n                }\n                samplepack.samples.push(sampleData);\n            }\n        }\n    }\n\n\n    function loadLoop(pack, callback) {\n        //console.log('load sample pack', pack.name);\n        loadSamples(pack.samples, function (buffer) {\n            //console.log('kheb er een ferig', buffer);\n        }, function () {\n            pack.loaded = true;\n            pack.parseTime = parseTime;\n            if (sequencer.debug >= 2) {\n                console.info('parsing', pack.name, 'took', parseTime * 1000, 'ms');\n            }\n            //console.log(pack.localPath, pack.loaded);\n            if (callback) {\n                callback(true);\n            }\n        });\n    }\n\n\n    function cleanup(samplepack, callback) {\n        samplepack.reset();\n        samplepack = undefined;\n        callback(false);\n    }\n\n\n    function store(samplepack) {\n        var occupied = findItem(samplepack.localPath, sequencer.storage.samplepacks, true),\n            action = samplepack.action,\n            i, samples, sample;\n\n\n        //console.log(action, occupied);\n\n        if (occupied && occupied.className === 'SamplePack') {\n            if (action === 'overwrite') {\n                samples = occupied.samples;\n                for (i = samples.length - 1; i >= 0; i--) {\n                    sample = samples[i];\n                    deleteItem(sample.name + '/' + sample.folder, sequencer.storage.audio);\n                }\n            } else if (action === 'append') {\n                samples = occupied.samples;\n                for (i = samples.length - 1; i >= 0; i--) {\n                    samplepack.samples.push(samples[i]);\n                }\n            } else {\n                if (sequencer.debug >= 2) {\n                    console.warn('there is already a samplepack at', samplepack.localPath);\n                }\n                return false;\n            }\n        }\n\n        storeItem(samplepack, samplepack.localPath, sequencer.storage.samplepacks);\n        return true;\n    }\n\n\n    function load(pack, callback) {\n        // check if sample pack file needs to be loaded first\n        if (pack.hasMapping !== true) {\n            ajax({\n                url: pack.url,\n                responseType: 'json',\n                onError: function () {\n                    cleanup(pack, callback);\n                },\n                onSuccess: function (data) {\n                    // if the json data is corrupt (for instance because of a trailing comma) data will be null\n                    if (data === null) {\n                        callback(false);\n                        return;\n                    }\n\n                    if (data.mapping === undefined) {\n                        if (sequencer.debug >= 2) {\n                            console.warn('can\\'t create a SamplePack with this data', data);\n                        }\n                        cleanup(pack, callback);\n                        return;\n                    }\n                    if (data.name !== undefined && pack.name === undefined) {\n                        pack.name = data.name;\n                    }\n\n                    if (data.folder !== undefined && pack.folder === undefined) {\n                        pack.folder = data.folder;\n                    }\n\n                    if (pack.name === undefined) {\n                        pack.name = parseUrl(pack.url).name;\n                    }\n\n                    pack.action = data.action;\n                    pack.localPath = pack.folder !== undefined ? pack.folder + '/' + pack.name : pack.name;\n\n                    if (store(pack) === true) {\n                        parse(pack, data);\n                        loadLoop(pack, callback);\n                    } else {\n                        callback(false);\n                    }\n                }\n            });\n        } else {\n            if (store(pack) === true) {\n                loadLoop(pack, callback);\n            } else {\n                //console.log(callback);\n                callback(false);\n            }\n        }\n    }\n\n\n\n    // private\n    function loadSamples(samples, callback1, callback2) {\n        var i = 0,\n            numSamples = samples.length,\n            sample = samples[i];\n\n        function loaded(buffer) {\n            //console.log('store item', folder + '/' + sampleId);\n            // sample.buffer = buffer;\n            // storeItem(sample, folder + '/' + sampleId, storage.audio);\n            storeItem(buffer, folder + '/' + sampleId, storage.audio);\n            if (callback1) {\n                callback1(buffer);\n            }\n            i++;\n            if (i < numSamples) {\n                sample = samples[i];\n                loadSample(sample, loaded);\n            } else {\n                callback2();\n            }\n        }\n        loadSample(sample, loaded);\n    }\n\n\n    // private\n    function loadSample(data, callback) {\n        var sample,\n            url = data.url,\n            base64 = data.base64;\n\n        sampleId = data.id;\n        folder = data.folder;\n        sample = findItem(folder + '/' + sampleId, storage.audio, true);\n\n        //console.log('load sample', sample, folder, sampleId, callback.name);\n        //console.log(url);\n\n        if (sample !== false) {\n            // sample has already been loaded\n            callback(sample);\n        } else if (base64) {\n            // sample is stored as base64 data\n            //console.log(data.id, sample)\n            //sample = atob(base64);\n            //console.log(base64.substring(0,10));\n            if (base64 !== 'TWAAAP') {\n                sample = base64ToBinary(base64);\n                parseAudioData(sample, callback);\n            } else {\n                callback(sample);\n            }\n            data.base64 = '';\n        } else if (url) {\n            // sample needs to be loaded from the server\n            ajax({\n                url: url,\n                responseType: 'arraybuffer',\n                onError: function () {\n                    callback();\n                },\n                onSuccess: function (buffer) {\n                    //console.log(sampleId, buffer);\n                    parseAudioData(buffer, callback);\n                }\n            });\n        } else {\n            console.error('could not load sample', folder + '/' + sampleId);\n            //callback();\n        }\n    }\n\n    // private\n    function parseAudioData(audiodata, callback) {\n        //console.log(audiodata, typeString(audiodata), audiodata.byteLength, ArrayBuffer.isView(audiodata));\n        var ts = sequencer.getTime();\n        //console.log(ts);\n        if (audiodata !== null) {\n            try {\n                context.decodeAudioData(audiodata, function (buffer) {\n                    //console.log(buffer);\n                    parseTime += (sequencer.getTime() - ts);\n                    callback(buffer);\n                }, function (e) {\n                    console.log('error decoding audiodata', sampleId, e);\n                    callback();\n                });\n            } catch (e) {\n                console.log(sampleId, e);\n                callback();\n            }\n        }\n    }\n\n\n    SamplePack = function (config) {\n        this.id = 'SP' + index++ + new Date().getTime();\n        this.className = 'SamplePack';\n\n        this.loaded = false;\n        this.loadTime = 0;\n        this.parseTime = parseTime = 0;\n\n        this.url = config.url;\n        this.name = config.name;\n        this.folder = config.folder;\n\n        this.info = config.info || config.samplepack_info;\n        this.author = config.author || config.samplepack_author;\n        this.license = config.license || config.samplepack_license;\n        this.compression = config.compression || config.samplepack_compression;\n        if (this.compression === undefined) {\n            if (config.compression_type !== undefined) {\n                this.compression = config.compression_type + ' ' + config.compression_level;\n            }\n        }\n        this.pack = config.pack;\n        this.filesize = config.filesize;\n\n        if (this.filesize === undefined && this.pack !== undefined) {\n            this.filesize = this.pack.filesize;\n            //console.log(this.filesize);\n        }\n\n\n        if (config.mapping) {\n            if (this.name === undefined && this.folder === undefined) {\n                this.name = this.id;\n                this.localPath = this.id;\n            } else {\n                this.localPath = this.folder !== undefined ? this.folder + '/' + this.name : this.name;\n            }\n            // set hasMapping to \"true\" so we know that we don't have to load json data from the server\n            this.hasMapping = true;\n            this.action = config.action;\n            parse(this, config);\n        } else if (config.url) {\n            this.url = config.url;\n            //console.log(this.url);\n        }\n    };\n\n\n    SamplePack.prototype.reset = function () {\n        this.samples = [];\n    };\n\n\n    sequencer.addSamplePack = function (config, callback, callbackAfterAllTasksAreDone) {\n        var type = typeString(config),\n            samplepack, json, name, folder;\n\n        callbackAfterAllTasksAreDone = callbackAfterAllTasksAreDone === undefined ? false : callbackAfterAllTasksAreDone;\n\n        //console.log(config);\n\n        if (type !== 'object') {\n            if (sequencer.debug >= 2) {\n                console.warn('can\\'t create a SamplePack with this data', config);\n            }\n            return false;\n        }\n\n        if (config.json) {\n            json = config.json;\n            name = config.name;\n            folder = config.folder;\n            if (typeString(json) === 'string') {\n                try {\n                    json = JSON.parse(json);\n                } catch (e) {\n                    if (sequencer.debug >= 2) {\n                        console.warn('can\\'t create a SamplePack with this data', config);\n                    }\n                    return false;\n                }\n            }\n            if (json.mapping === undefined) {\n                if (sequencer.debug >= 2) {\n                    console.warn('can\\'t create a SamplePack with this data', config);\n                }\n                return false;\n            }\n            config = {\n                mapping: json.mapping,\n                name: name === undefined ? json.name : name,\n                folder: folder === undefined ? json.folder : folder\n            };\n            //console.log('config', name, folder, json.name, json.folder);\n        }\n\n\n        samplepack = new SamplePack(config);\n        //console.log(samplepack.filesize);\n\n        sequencer.addTask({\n            type: 'load sample pack',\n            method: load,\n            params: samplepack\n        }, function (value) {\n            //console.log(samplepack, value);\n            if (callback) {\n                if (value === false) {\n                    samplepack = null;\n                    callback(null);\n                } else {\n                    callback(samplepack);\n                }\n            }\n        }, callbackAfterAllTasksAreDone);\n\n        sequencer.startTaskQueue();\n\n        /*\n                load(samplepack, function(){\n                    //console.log(samplepack);\n                    store(samplepack);\n                    if(callback){\n                        callback(samplepack);\n                    }\n                });\n        */\n    };\n\n    sequencer.protectedScope.addInitMethod(function () {\n        storage = sequencer.storage;\n        ajax = sequencer.protectedScope.ajax;\n        context = sequencer.protectedScope.context;\n        findItem = sequencer.protectedScope.findItem;\n        parseUrl = sequencer.protectedScope.parseUrl;\n        storeItem = sequencer.protectedScope.storeItem;\n        deleteItem = sequencer.protectedScope.deleteItem;\n        typeString = sequencer.protectedScope.typeString;\n        base64ToBinary = sequencer.protectedScope.base64ToBinary;\n    });\n\n}function scheduler() {\n\n  'use strict';\n\n  var\n    typeString, // defined in util.js\n    objectForEach, // defined in util.js\n    context,\n    getTimeDiff,\n\n    // the amount of time in millis that events are scheduled ahead relative to the current playhead position, defined in open_module.js\n    //bufferTime = sequencer.bufferTime * 1000,\n\n    Scheduler;\n\n\n  Scheduler = function (song) {\n    this.song = song;\n    this.looped = false;\n    this.notes = {};\n    this.audioEvents = {};\n    this.timeDiff = getTimeDiff();\n  };\n\n\n  Scheduler.prototype.updateSong = function () {\n    this.events = this.song.eventsMidiAudioMetronome;\n    this.numEvents = this.events.length;\n    this.index = 0;\n    this.maxtime = 0;\n    this.notes = {};\n    this.audioEvents = this.song.audioEvents;\n    this.numAudioEvents = this.audioEvents.length;\n    this.scheduledAudioEvents = {};\n    this.looped = false;\n    this.setIndex(this.song.millis);\n    //console.log('Scheduler.setIndex', this.index, this.numEvents);\n  };\n\n\n  Scheduler.prototype.setIndex = function (millis) {\n    var i;\n    for (i = 0; i < this.numEvents; i++) {\n      if (this.events[i].millis >= millis) {\n        this.index = i;\n        break;\n      }\n    }\n    //console.log(millis);\n    this.beyondLoop = false;\n    if (millis > this.song.loopEnd) {\n      this.beyondLoop = true;\n    }\n\n    this.scheduledAudioEvents = {};\n  };\n\n  /*\n      A dangling audio event start before, and ends after the current position of the playhead. We have to calculate the difference between\n      the start of the sample (event.millis) and the position of the playhead (song.millis). This value is the playheadOffset, and the sample\n      starts the number of seconds of the playheadOffset into the sample.\n\n      Also the audio event is scheduled the number of milliseconds of the playhead later to keep it in sync with the rest of the song.\n\n      The playheadOffset is applied to the audio sample in audio_track.js\n  */\n  Scheduler.prototype.getDanglingAudioEvents = function (millis, events) {\n    var i, event, num = 0;\n\n    for (i = 0; i < this.numAudioEvents; i++) {\n      event = this.audioEvents[i];\n      if (event.millis < millis && event.endMillis > millis) {\n        event.playheadOffset = (millis - event.millis);\n        event.time = this.startTime + event.millis - this.songStartMillis + event.playheadOffset;\n        event.playheadOffset /= 1000;\n        this.scheduledAudioEvents[event.id] = event;\n        //console.log('getDanglingAudioEvents', event.id);\n        events.push(event);\n        num++;\n      } else {\n        event.playheadOffset = 0;\n      }\n      //console.log('playheadOffset', event.playheadOffset);\n    }\n    //console.log('getDanglingAudioEvents', num);\n    return events;\n  };\n\n\n  Scheduler.prototype.getEvents = function () {\n    var i, event, events = [], note, noteOn, noteOff, endMillis, endTicks, diff, buffertime, audioEvent;\n\n    buffertime = sequencer.bufferTime * 1000;\n    if (this.song.doLoop === true && this.song.loopDuration < buffertime) {\n      this.maxtime = this.songMillis + this.song.loopDuration - 1;\n      //console.log(maxtime, this.song.loopDuration);\n    }\n\n    if (this.song.doLoop === true) {\n\n      if (this.maxtime >= this.song.loopEnd && this.beyondLoop === false) {\n        //if(this.maxtime >= this.song.loopEnd && this.prevMaxtime < this.song.loopEnd){\n        //if(this.maxtime >= this.song.loopEnd && this.song.jump !== true){\n\n        diff = this.maxtime - this.song.loopEnd;\n        this.maxtime = this.song.loopStart + diff;\n\n        //console.log(maxtime, this.song.loopEnd, diff);\n        if (this.looped === false) {\n          //console.log(this.song.millis, maxtime, diff);\n          this.looped = true;\n          //console.log('LOOP', this.song.loopEnd, this.maxtime);\n          for (i = this.index; i < this.numEvents; i++) {\n            event = this.events[i];\n            if (event.millis < this.song.loopEnd) {\n              //console.log('  ', event.track.name, maxtime, this.index, this.numEvents);\n              event.time = this.startTime + event.millis - this.songStartMillis;\n              events.push(event);\n              this.index++;\n            } else {\n              break;\n            }\n          }\n\n          // stop overflowing notes-> move the note off event to the position of the right locator (end of the loop)\n          endTicks = this.song.loopEndTicks - 1;\n          endMillis = this.song.getPosition('ticks', endTicks).millis;\n          for (i in this.notes) {\n            if (this.notes.hasOwnProperty(i)) {\n              note = this.notes[i];\n              noteOn = note.noteOn;\n              noteOff = note.noteOff;\n              if (noteOff.millis <= this.song.loopEnd) {\n                continue;\n              }\n              event = sequencer.createMidiEvent(endTicks, 128, noteOn.data1, 0);\n              event.millis = endMillis;\n              event.part = noteOn.part;\n              event.track = noteOn.track;\n              event.midiNote = noteOn.midiNote;\n              event.time = this.startTime + event.millis - this.songStartMillis;\n              events.push(event);\n            }\n          }\n          // stop overflowing audio samples\n          for (i in this.scheduledAudioEvents) {\n            if (this.scheduledAudioEvents.hasOwnProperty(i)) {\n              audioEvent = this.scheduledAudioEvents[i];\n              if (audioEvent.endMillis > this.song.loopEnd) {\n                audioEvent.stopSample(this.song.loopEnd / 1000);\n                delete this.scheduledAudioEvents[i];\n                //console.log('stopping audio event', i);\n              }\n            }\n          }\n          this.notes = {};\n          this.setIndex(this.song.loopStart);\n          this.song.startTime += this.song.loopDuration;\n          this.startTime = this.song.startTime;\n          // get the audio events that start before song.loopStart\n          this.getDanglingAudioEvents(this.song.loopStart, events);\n        }\n      } else {\n        this.looped = false;\n      }\n    }\n\n    if (this.firstRun === true) {\n      this.getDanglingAudioEvents(this.song.millis, events);\n      this.firstRun = false;\n    }\n\n    for (i = this.index; i < this.numEvents; i++) {\n      event = this.events[i];\n\n      if (event.millis < this.maxtime) {\n        // if(this.song.bar >= 6 && event.track.name === 'Sonata # 3'){\n        //     console.log('  song:', this.song.millis, 'event:', event.millis, ('(' + event.type + ')'), 'max:', maxtime, 'id:', event.midiNote.id);\n        // }\n        event.time = this.startTime + event.millis - this.songStartMillis;\n\n        if (event.type === 144 || event.type === 128) {\n          if (event.midiNote !== undefined && event.midiNote.noteOff !== undefined) {\n            if (event.type === 144) {\n              this.notes[event.midiNote.id] = event.midiNote;\n            } else if (event.type === 128) {\n              delete this.notes[event.midiNote.id];\n            }\n            events.push(event);\n          }\n        } else if (event.type === 'audio') {\n          if (this.scheduledAudioEvents[event.id] !== undefined) {\n            // @TODO: delete the entry in this.scheduledAudioEvents after the sample has finished\n            // -> this happens when you move the playhead outside a loop if doLoop is true\n            //console.log('this shouldn\\'t happen!');\n            //continue;\n            audioEvent = this.scheduledAudioEvents[event.id];\n            if (audioEvent.sample !== undefined && audioEvent.sample.source !== undefined) {\n              audioEvent.stopSample(0);\n              // }else{\n              //     continue;\n            }\n          }\n          this.scheduledAudioEvents[event.id] = event;\n          //console.log('scheduling', event.id);\n          // the scheduling time has to be compensated with the playheadOffset (in millis)\n          event.time = event.time + (event.playheadOffset * 1000);\n          events.push(event);\n        } else {\n          // controller events\n          events.push(event);\n        }\n        this.index++;\n      } else {\n        break;\n      }\n    }\n    // const f = events.filter(e => e.type === 144).map(e => e.time);\n    // if (f.length > 0) {\n    //     console.log(Math.round(context.currentTime * 1000000) / 1000);\n    //     console.log(f);\n    //     console.log('---');\n    // }\n    return events;\n  };\n\n\n  Scheduler.prototype.update = function () {\n    var i,\n      event,\n      numEvents,\n      events,\n      track,\n      channel,\n      // timeDiff = this.timeDiff;\n      timeDiff = getTimeDiff();\n\n    this.prevMaxtime = this.maxtime;\n\n    if (this.song.precounting === true) {\n      this.songMillis = this.song.metronome.millis;\n      this.maxtime = this.songMillis + (sequencer.bufferTime * 1000);\n      events = [].concat(this.song.metronome.getPrecountEvents(this.maxtime));\n\n      if (this.maxtime > this.song.metronome.endMillis) {\n        // start scheduling events of the song -> add the first events of the song\n        this.songMillis = 0;//this.song.millis;\n        this.maxtime = this.song.millis + (sequencer.bufferTime * 1000);\n        this.startTime = this.song.startTime;\n        this.songStartMillis = this.song.startMillis;\n        events = this.getEvents();\n      }\n    } else {\n      this.songMillis = this.song.millis;\n      this.maxtime = this.songMillis + (sequencer.bufferTime * 1000);\n      this.startTime = this.song.startTime;\n      this.songStartMillis = this.song.startMillis;\n      events = this.getEvents();\n    }\n\n    numEvents = events.length;\n\n    //for(i = events.length - 1; i >= 0; i--){\n    for (i = 0; i < numEvents; i++) {\n      event = events[i];\n      track = event.track;\n      // if(event.muted) {\n      //     console.log(event.ticks, event.noteNumber);\n      // }\n      if (\n        track === undefined ||\n        event.muted === true ||\n        event.part.mute === true ||\n        event.track.mute === true ||\n        (event.track.type === 'metronome' && this.song.useMetronome === false)\n      ) {\n        continue;\n      }\n\n\n      if (event.type === 'audio') {\n        event.time /= 1000;\n        track.audio.processEvent(event);\n      } else {\n\n        if (track.routeToMidiOut === false) {\n          // if(event.type === 144){\n          //     console.log(event.time/1000, sequencer.getTime(), event.time/1000 - sequencer.getTime());\n          // }\n          event.time /= 1000;\n          //console.log('scheduled', event.type, event.time, event.midiNote.id);\n          //console.log(track.instrument.processEvent);\n          track.instrument.processEvent(event);\n        } else {\n          channel = track.channel;\n          if (channel === 'any' || channel === undefined || isNaN(channel) === true) {\n            channel = 0;\n          }\n          objectForEach(track.midiOutputs, function (midiOutput) {\n            if (event.type === 128 || event.type === 144 || event.type === 176) {\n              // midiOutput.send([event.type, event.data1, event.data2], event.time + sequencer.midiOutLatency);\n              // console.log(context.currentTime, performance.now(), timeDiff, event.time + track.audioLatency);\n              let vel = event.data2;\n              if (event.type === 128 || event.type === 144) {\n                vel *= track.volume;\n              }\n              midiOutput.send([event.type + channel, event.data1, vel], event.time + track.audioLatency + timeDiff);\n              // console.log('TIMEDIFF', timeDiff);\n            } else if (event.type === 192 || event.type === 224) {\n              midiOutput.send([event.type + channel, event.data1], event.time + track.audioLatency);\n            }\n          });\n          // needed for Song.resetExternalMidiDevices()\n          this.lastEventTime = event.time;\n        }\n      }\n    }\n  };\n\n\n  function loop(data, i, maxi, events) {\n    var arg;\n    for (i = 0; i < maxi; i++) {\n      arg = data[i];\n      if (arg === undefined) {\n        continue;\n      } else if (arg.className === 'MidiEvent') {\n        events.push(arg);\n      } else if (arg.className === 'MidiNote') {\n        events.push(arg.noteOn);\n      } else if (typeString(arg) === 'array') {\n        loop(arg, 0, arg.length);\n      }\n    }\n  }\n\n\n  Scheduler.prototype.unschedule = function () {\n    var args = Array.prototype.slice.call(arguments),\n      events = [],\n      i, e, track, instrument;\n\n    loop(args, 0, args.length, events);\n\n    for (i = events.length - 1; i >= 0; i--) {\n      e = events[i];\n      track = e.track;\n      instrument = track.instrument;\n      if (instrument) {\n        instrument.unscheduleEvent(e);\n      }\n    }\n  };\n\n\n  Scheduler.prototype.reschedule = function () {\n    var i, track,\n      numTracks = this.song.numTracks,\n      tracks = this.song.tracks;\n\n    for (i = 0; i < numTracks; i++) {\n      track = tracks[i];\n      track.instrument.reschedule(this.song);\n    }\n  };\n\n  sequencer.protectedScope.addInitMethod(function () {\n    getTimeDiff = sequencer.getTimeDiff;\n    context = sequencer.protectedScope.context;\n    typeString = sequencer.protectedScope.typeString;\n    objectForEach = sequencer.protectedScope.objectForEach;\n  });\n\n\n  sequencer.protectedScope.createScheduler = function (song) {\n    return new Scheduler(song);\n  };\n\n}function createSequencer() {\n\n    'use strict';\n\n    var\n        slice = Array.prototype.slice,\n\n        //import\n        typeString, // defined in util.js\n        isEmptyObject, // defined in util.js\n        objectToArray, // defined in util.js\n        objectForEach, // defined in util.js\n        createMidiEvent, // defined in midi_event.js\n        context, // defined in open_module.js\n        timedTasks, // defined in open_module.js\n        scheduledTasks, // defined in open_module.js\n        repetitiveTasks, // defined in open_module.js\n        masterGainNode, // defined in open_module.js\n        parseTimeEvents, // defined in parse_time_events.js\n\n        r = 0,\n\n        heartbeat, // the heartbeat of the sequencer\n        lastTimeStamp,\n\n        processEventTracks = {},\n        events, // the events that are currently been processed\n\n        pausedSongs = [],\n        activeSongs = {},\n        snapshots = {};\n\n\n    function addSong(song) {\n        activeSongs[song.id] = song;\n    }\n\n\n    sequencer.getSongs = function () {\n        return activeSongs;\n    };\n\n\n    function removeProperties(obj) {\n        var i;\n        for (i in obj) {\n            if (obj.hasOwnProperty(i)) {\n                //console.log(i);\n                obj[i] = null;\n            }\n        }\n    }\n\n    sequencer.deleteSong = function (song) {\n        if (song === undefined || song === null || song.className !== 'Song') {\n            return;\n        }\n\n        // clean up\n        song.stop();\n        song.disconnect(masterGainNode);\n        //parseTimeEvents();\n\n        // remove reference\n        delete activeSongs[song.id];\n\n        var i, track,\n            j, part,\n            k, note, event;\n\n        //console.log(allEvents.length, song.events.length, metronome.events.length);\n        ///*\n        for (i = song.eventsMidiAudioMetronome.length - 1; i >= 0; i--) {\n            event = song.eventsMidiAudioMetronome[i];\n            removeProperties(event);\n        }\n\n        for (i = song.timeEvents.length - 1; i >= 0; i--) {\n            event = song.timeEvents[i];\n            //removeProperties(event);\n        }\n        //*/\n\n        for (i = song.numTracks - 1; i >= 0; i--) {\n\n            track = song.tracks[i];\n\n            if (track.audio !== undefined) {\n                track.audio.recorder.cleanup();\n            }\n\n            for (j = track.numParts - 1; j >= 0; j--) {\n                part = track.parts[j];\n\n                for (k = part.numNotes - 1; k >= 0; k--) {\n                    note = part.notes[k];\n                    removeProperties(note);\n                }\n\n                // for(k = part.numEvents - 1; k >= 0; k--){\n                //     event = part.events[k];\n                //     removeProperties(event);\n                // }\n\n                removeProperties(part);\n                part = null;\n            }\n            removeProperties(track);\n            track = null;\n        }\n        removeProperties(song);\n        song = null;\n        return null;\n    };\n\n\n    sequencer.getSnapshot = function (song, id) {\n\n        if (song === undefined) {\n            console.error('song is undefined');\n            return;\n        }\n\n        id = id || song.id;\n\n        var snapshot = snapshots[id],\n            activeEvents = song.activeEvents,\n            activeNotes = song.activeNotes,\n            activeParts = song.activeParts,\n            nonActiveEvents = [],\n            nonActiveNotes = [],\n            nonActiveParts = [],\n            prevActiveEvents,\n            prevActiveNotes,\n            prevActiveParts,\n            e, n, p, i;\n\n        if (snapshot !== undefined) {\n            prevActiveEvents = snapshot.activeEvents;\n            prevActiveNotes = snapshot.activeNotes;\n            prevActiveParts = snapshot.activeParts;\n\n            for (i = prevActiveEvents.length - 1; i >= 0; i--) {\n                e = prevActiveEvents[i];\n                if (activeEvents[e.id] === undefined) {\n                    if (song.eventsLib[e.id] !== undefined) {\n                        nonActiveEvents.push(e);\n                    }\n                }\n            }\n\n            for (i = prevActiveNotes.length - 1; i >= 0; i--) {\n                n = prevActiveNotes[i];\n                if (activeNotes[n.id] === undefined) {\n                    if (song.notesLib[n.id] !== undefined) {\n                        nonActiveNotes.push(n);\n                    }\n                }\n            }\n\n            for (i = prevActiveParts.length - 1; i >= 0; i--) {\n                p = prevActiveParts[i];\n                if (activeParts[p.id] === undefined) {\n                    nonActiveParts.push(p);\n                }\n            }\n        }\n\n        snapshot = {\n            activeEvents: objectToArray(activeEvents),\n            activeNotes: objectToArray(activeNotes),\n            activeParts: objectToArray(activeParts),\n            nonActiveEvents: nonActiveEvents,\n            nonActiveNotes: nonActiveNotes,\n            nonActiveParts: nonActiveParts\n        };\n\n        snapshots[id] = snapshot;\n\n        return snapshot;\n    };\n\n\n    heartbeat = function (timestamp) {\n        var i, diff, task, now = sequencer.getTime();\n\n        // if(isEmptyObject(timedTasks) === false){\n        //     console.log(timedTasks);\n        // }\n\n        // for instance: the callback of sample.unschedule;\n        for (i in timedTasks) {\n            if (timedTasks.hasOwnProperty(i)) {\n                task = timedTasks[i];\n                if (task.time >= now) {\n                    task.execute();\n                    task = null;\n                    delete timedTasks[i];\n                }\n            }\n        }\n\n\n        // for instance: song.update();\n        for (i in scheduledTasks) {\n            if (scheduledTasks.hasOwnProperty(i)) {\n                scheduledTasks[i]();\n            }\n        }\n\n        // for instance: song.pulse();\n        for (i in repetitiveTasks) {\n            if (repetitiveTasks.hasOwnProperty(i)) {\n                repetitiveTasks[i]();\n            }\n        }\n\n        // skip the first 10 frames because they tend to have weird intervals\n        if (r >= 10) {\n            diff = (timestamp - lastTimeStamp) / 1000;\n            sequencer.diff = diff;\n            // if(r < 40){\n            //     console.log(diff);\n            //     r++;\n            // }\n            if (diff > sequencer.bufferTime && sequencer.autoAdjustBufferTime === true) {\n                if (sequencer.debug) {\n                    console.log('adjusted buffertime:' + sequencer.bufferTime + ' -> ' + diff);\n                }\n                sequencer.bufferTime = diff;\n            }\n        } else {\n            r++;\n        }\n        lastTimeStamp = timestamp;\n        scheduledTasks = {};\n\n        //setTimeout(heartbeat, 100);\n        window.requestAnimationFrame(heartbeat);\n    };\n\n\n    sequencer.processEvent = sequencer.processEvents = function () {\n        var args = slice.call(arguments),\n            loop, arg, i, maxi, time, contextTime, event,\n            bpm = 60,\n            midiEvent, type,\n            instrument, part, track,\n            secondsPerTick;\n\n        events = [];\n\n        loop = function (data, i, maxi) {\n            for (i = 0; i < maxi; i++) {\n                arg = data[i];\n                type = typeString(arg);\n                if (arg === undefined) {\n                    //console.log(i, arg);\n                    continue;\n                } else if (type === 'midimessageevent') {\n                    data = arg.data;\n                    midiEvent = createMidiEvent(0, data[0], data[1], data[2]);\n                    events.push(midiEvent);\n                } else if (arg.className === 'MidiEvent') {\n                    events.push(arg);\n                } else if (type === 'array') {\n                    loop(arg, 0, arg.length);\n                } else if (type === 'string') {\n                    instrument = arg;\n                } else if (isNaN(arg) === false) {\n                    bpm = arg;\n                }\n            }\n        };\n\n        loop(args, 0, args.length);\n\n        part = sequencer.createPart();\n        track = sequencer.createTrack();\n        track.setInstrument(instrument);\n\n        if (processEventTracks[track.instrumentId] === undefined) {\n            processEventTracks[track.instrumentId] = track;\n            track.addPart(part);\n            track.connect(context.destination);\n        } else {\n            track = processEventTracks[track.instrumentId];\n            part = track.parts[0];\n        }\n\n        part.addEvents(events);\n        track.update();\n\n        maxi = events.length;\n        contextTime = sequencer.getTime();\n        secondsPerTick = 60 / bpm / sequencer.defaultPPQ;\n        for (i = 0; i < maxi; i++) {\n            event = events[i];\n            event.time = contextTime + (event.ticks * secondsPerTick) + (2 / 1000);//ms -> sec, add 2 ms prebuffer time\n            //time = contextTime + (event.ticks * secondsPerTick) + (2/1000);//ms -> sec, add 2 ms prebuffer time\n            //console.log(event.ticks, time, contextTime);\n            //track.instrument.processEvent(event, time);\n            track.instrument.processEvent(event);\n        }\n    };\n\n\n    sequencer.stopProcessEvent = sequencer.stopProcessEvents = function () {\n        objectForEach(processEventTracks, function (track) {\n            track.instrument.allNotesOff();\n            track = undefined;\n        });\n        processEventTracks = {};\n    };\n\n\n    sequencer.play = function () {\n        var args = slice.call(arguments),\n            events = [],\n            parts = [],\n            tracks = [],\n            songs = [],\n            timeEvents = [],\n            i, arg, loop, store = false,\n            song, track, part, bpm, nominator, denominator, instrument;\n\n        //console.log('sequencer.play()', args);\n\n        loop = function (data, i, maxi, indentation) {\n            for (i = 0; i < maxi; i++) {\n                arg = data[i];\n                if (arg === undefined) {\n                    //console.log(indentation, i, arg);\n                    continue;\n                } else if (typeString(arg) === 'string') {\n                    instrument = arg;\n                } else if (arg.className === 'Song') {\n                    if (bpm === undefined) {\n                        bpm = arg.bpm;\n                        nominator = arg.nominator;\n                        denominator = arg.denominator;\n                    }\n                    songs.push(arg);\n                } else if (arg.className === 'Track') {\n                    if (bpm === undefined) {\n                        song = arg.song;\n                        if (song !== undefined) {\n                            bpm = song.bpm;\n                            nominator = song.nominator;\n                            denominator = song.denominator;\n                        }\n                    }\n                    tracks.push(arg);\n                } else if (arg.className === 'Part') {\n                    if (bpm === undefined) {\n                        song = arg.song;\n                        if (song !== undefined) {\n                            bpm = song.bpm;\n                            nominator = song.nominator;\n                            denominator = song.denominator;\n                        }\n                    }\n                    parts.push(arg);\n                } else if (arg.className === 'MidiEvent' || arg.className === 'AudioEvent') {\n                    if (bpm === undefined) {\n                        part = arg.part;\n                        if (part !== undefined) {\n                            song = part.song;\n                            if (song !== undefined) {\n                                bpm = song.bpm;\n                                nominator = song.nominator;\n                                denominator = song.denominator;\n                            }\n                        }\n                    }\n                    if (arg.type === 0x51 || arg.type === 0x58) {\n                        timeEvents.push(arg);\n                    } else {\n                        events.push(arg);\n                    }\n                } else if (typeString(arg) === 'array') {\n                    //console.log('recursive loop')\n                    loop(arg, 0, arg.length, '    ');\n                } else if (arg === true || arg === false) {\n                    store = arg;\n                } else if (arg.indexOf('S') === 0) {\n                    // play song by id, not sure if this is useful\n                    song = activeSongs[arg];\n                    if (song) {\n                        song.play();\n                    }\n                }\n            }\n        };\n\n        loop(args, 0, args.length, '  ');\n\n        for (i = songs.length - 1; i >= 0; i--) {\n            song = songs[i];\n            //console.log(song.numEvents);\n            tracks = tracks.concat(song.tracks);\n            //parts = parts.concat(song.parts);\n            //events = events.concat(song.events);\n            timeEvents = timeEvents.concat(song.timeEvents);\n        }\n\n        if (parts.length > 0) {\n            track = sequencer.createTrack();\n            track.instrument = instrument;\n            track.addParts(parts);\n            tracks.push(track);\n        }\n\n        if (events.length > 0) {\n            track = sequencer.createTrack();\n            track.instrument = instrument;\n            part = sequencer.createPart();\n            part.addEvents(events);\n            track.addPart(part);\n            tracks.push(track);\n        }\n\n\n        //console.log(songs.length, tracks.length, parts.length, events.length, bpm, nominator, denominator);\n\n        song = sequencer.createSong({\n            bpm: bpm || 120,\n            nominator: nominator || 4,\n            denominator: denominator || 4,\n            timeEvents: timeEvents,\n            tracks: tracks\n        });\n\n        addSong(song);\n        song.play();\n        return song;\n    };\n\n\n    /*\n        animationFrame = function(cb) {\n            animationFrameRequests.push(cb);\n    \n            if (animationFrameTimer !== undefined) {\n                return animationFrameTimer;\n            }\n    \n            animationFrameTimer = setTimeout(function() {\n                while (animationFrameRequests.length > 0) {\n                    animationFrameRequests.shift()();\n                }\n                animationFrameTimer = undefined;\n            }, animationFrameInterval);\n    \n            return animationFrameTimer;\n        };\n    */\n\n\n    sequencer.setAnimationFrameType = function (type, interval) {\n        type = type || 'default';\n        type = type.toLowerCase();\n        interval = interval || 15;\n        switch (type) {\n            case 'settimeout':\n                /*\n                animationFrameInterval = interval || animationFrameInterval;\n                animationFrameRequests = [];\n                window.requestAnimationFrame = animationFrame;\n                */\n                // quick and dirty\n                window.requestAnimationFrame = function (cb) {\n                    setTimeout(cb, interval);\n                };\n                break;\n            default:\n                /*\n                clearTimeout(animationFrameTimer);\n                */\n                window.requestAnimationFrame = window.webkitRequestAnimationFrame || window.requestAnimationFrame;\n        }\n    };\n\n\n    // used by asset_manager.js if an instrument or a sample pack has been unloaded\n    sequencer.protectedScope.updateInstruments = function () {\n        var i, j, tracks, track, song;\n\n        for (i in activeSongs) {\n            if (activeSongs.hasOwnProperty(i)) {\n                song = activeSongs[i];\n                tracks = song.tracks;\n                for (j = tracks.length - 1; j >= 0; j--) {\n                    track = tracks[j];\n                    //console.log(track.id);\n                    track.instrument.reset();\n                }\n            }\n        }\n    };\n\n\n    sequencer.allNotesOff = function () {\n        objectForEach(activeSongs, function (song) {\n            song.allNotesOff();\n        });\n    };\n\n\n    window.onblur = function () {\n        if (sequencer.pauseOnBlur === false) {\n            return;\n        }\n        //console.log('blur', sequencer.getTime() * 1000);\n        sequencer.allNotesOff();\n        pausedSongs = [];\n        objectForEach(activeSongs, function (song) {\n            if (song.playing === true) {\n                if (sequencer.debug) {\n                    console.log('pause song', song.id);\n                }\n                pausedSongs.push(song);\n                song.pause();\n                //song.stop();\n            }\n        });\n    };\n\n\n    window.onfocus = function () {\n        if (sequencer.pauseOnBlur === false) {\n            return;\n        }\n        //console.log('focus', sequencer.getTime() * 1000);\n        var song, millis, i, maxi = pausedSongs.length;\n        for (i = 0; i < maxi; i++) {\n            song = pausedSongs[i];\n            millis = song.millis;\n            song.stop();\n            song.setPlayhead('millis', millis);\n            if (sequencer.restartOnFocus) {\n                song.play();\n            }\n        }\n        pausedSongs = [];\n    };\n\n\n    sequencer.protectedScope.addSong = addSong;\n\n    sequencer.protectedScope.addInitMethod(function () {\n        objectToArray = sequencer.protectedScope.objectToArray;\n        isEmptyObject = sequencer.protectedScope.isEmptyObject;\n        isEmptyObject = sequencer.protectedScope.isEmptyObject;\n        objectForEach = sequencer.protectedScope.objectForEach;\n        timedTasks = sequencer.protectedScope.timedTasks;\n        scheduledTasks = sequencer.protectedScope.scheduledTasks;\n        repetitiveTasks = sequencer.protectedScope.repetitiveTasks;\n        typeString = sequencer.protectedScope.typeString;\n        context = sequencer.protectedScope.context;\n        createMidiEvent = sequencer.createMidiEvent;\n        masterGainNode = sequencer.protectedScope.masterGainNode;\n        parseTimeEvents = sequencer.protectedScope.parseTimeEvents;\n        heartbeat();\n    });\n\n}\n\n\n\n\n/*\n    // removed for clarity\n\n    sequencer.play = function(song){\n        song = checkSong(song);\n        if(song === false){\n            console.error('no song loaded or specified');\n            return;\n        }\n        song.play();\n    };\n\n\n    sequencer.pause = function(song){\n        song = checkSong(song);\n        if(song === false){\n            console.error('no song loaded or specified');\n            return;\n        }\n        song.pause();\n    };\n\n\n    sequencer.stop = function(song){\n        song = checkSong(song);\n        if(song === false){\n            console.error('no song loaded or specified');\n            return;\n        }\n        song.stop();\n    };\n\n\n    sequencer.addEventListener = function(){\n        if(sequencer.song === undefined){\n            console.error('no song in sequencer');\n            return;\n        }\n        return sequencer.song.addEventListener.apply(sequencer.song, arguments);\n    };\n\n\n    sequencer.removeEventListener = function(){\n        if(sequencer.song === undefined){\n            console.error('no song in sequencer');\n            return;\n        }\n        return sequencer.song.removeEventListener.apply(sequencer.song, arguments);\n    };\n\n\n    checkSong = function(song){\n        if(song){\n            return song.className === 'Song' ? song : false;\n        }else if(sequencer.song){\n            return sequencer.song.className === 'Song' ? sequencer.song : false;\n        }else{\n            return false;\n        }\n    };\n\n\n\n*/\n\n\n/*\n    sequencer.playEvents = function(){\n        var args = slice.call(arguments),\n            i, arg, loop, bpm, nominator, denominator,\n            part, song, events = [];\n\n        loop = function(data){\n            for(i = data.length - 1; i >= 0; i--){\n                arg = data[i];\n                if(typeString(arg) === 'array'){\n                    loop(arg);\n                }else if(arg.className === 'MidiEvent' || arg.className === 'AudioEvent'){\n                    if(bpm === undefined){\n                        part = arg.part;\n                        if(part !== undefined){\n                            song = part.song\n                            if(song !== undefined){\n                                bpm = song.bpm;\n                                nominator = song.nominator;\n                                denominator = song.denominator;\n                            }\n                        }\n                    }\n                    events.push(arg);\n                }\n            }\n        };\n\n        loop(args);\n\n        //console.log(events, bpm, nominator, denominator);\n\n        song = sequencer.createSong({\n            bpm: bpm || 120,\n            nominator: nominator || 4,\n            denominator: denominator || 4,\n            events: events\n        });\n\n        songs[song.id] = song;\n        //console.log(song.durationMillis);\n        //console.log(songs);\n\n        song.addEventListener('end', function(){\n            console.log('end', this.id);\n            //delete songs[this.id];\n            //console.log(songs);\n        });\n        song.play();\n        return song.id;\n    };\n*/\n\n/*\n    // moved to song\n\n    sequencer.midiIn = function(){// events, [song|track|part]\n\n    };\n\n\n    sequencer.midiOut = function(){// channel\n\n    };\n\n\n    sequencer.midiThru = function(){// channel\n\n    };\n\n*/\nfunction song() {\n\n  'use strict';\n\n  var\n    slice = Array.prototype.slice,\n\n    //import\n    createMidiEvent, // → defined in midi_event.js\n    createPlayhead, // → defined in playhead.js\n    createFollowEvent, // → defined in song_follow_event.js\n    createScheduler, // → defined in scheduler.js\n    createMetronome, // → defined in metronome.js\n    followEvent, // → defined in follow_event_song.js\n    masterGainNode, // -> defined in open_module.js\n    context, // -> defined in open_module.js\n    timedTasks, // -> defined in open_module.js\n    repetitiveTasks, // -> defined in open_module.js\n    initMidi, // defined in midi_system.js\n    addMidiEventListener, // defined in midi_system.js\n    removeMidiEventListener, // defined in midi_system.js\n    setMidiInput, // defined in midi_system.js\n    setMidiOutput, // defined in midi_system.js\n    getMidiInputs, // defined in midi_system.js\n    getMidiOutputs, // defined in midi_system.js\n    getMidiPortsAsDropdown, // defined in midi_system.js\n\n    getPosition, // → defined in position.js\n    millisToTicks, // → defined in position.js\n    ticksToMillis, // → defined in position.js\n    ticksToBars, // → defined in position.js\n    millisToBars, // → defined in position.js\n    barsToTicks, // → defined in position.js\n    barsToMillis, // → defined in position.js\n\n    addEventListener, // → defined in song_event_listener.js\n    removeEventListener, // → defined in song_event_listener.js\n    dispatchEvent, // → defined in song_event_listener.js\n\n    update, // → defined in song_update.js\n    checkDuration, // → defined in song_update.js\n    addMetronomeEvents, // → defined in song_update.js\n\n    gridToSong, // → defined in song_grid.js\n    noteToGrid, // → defined in song_grid.js\n    eventToGrid, // → defined in song_grid.js\n    positionToGrid, // → defined in song_grid.js\n\n    //createTrack, // → defined in track.js\n    typeString, // → defined in util.js\n    removeFromArray, // → defined in util.js\n    removeFromArray2, // → defined in util.js\n    getNoteLengthName, // → defined in util.js\n    getStats, // → defined in event_statistics.js\n    findEvent, // → defined in find_event.js\n    findNote, // → defined in find_event.js\n\n    objectForEach, // → defined in util.js\n    addSong, // → defined in sequencer.js\n    getTimeDiff, // → defined in open_module.js\n\n    //private\n    _removeTracks,\n    pulse,\n    getArguments,\n    getTrack,\n    addTracks,\n    getPart,\n    getParts,\n    getTimeEvents,\n    setRecordingStatus,\n    _getRecordingPerTrack,\n\n    songIndex = 0,\n\n    //protected\n    createGrid,\n\n    //public\n    Song;\n\n  Song = function (config) {\n    //Object.defineProperty(this,'tracks',{value: []});\n    //Object.defineProperty(this, 'events', {value: 'val'});\n\n    config = config || {};\n\n    this.id = 'S' + songIndex++ + '' + new Date().getTime();\n    this.name = config.name || this.id;\n    this.className = 'Song';\n    addSong(this);\n\n    this.midiInputs = {};\n    this.midiOutputs = {};\n    initMidi(this);\n\n    this.bpm = config.bpm || 120;\n    this.ppq = config.ppq || sequencer.defaultPPQ;\n    this.bars = config.bars || 30; //default song duration is 30 bars @ 120 bpm is 1 minute\n    this.lastBar = this.bars;\n    this.lowestNote = config.lowestNote || 0;\n    this.highestNote = config.highestNote || 127;\n    this.pitchRange = this.highestNote - this.lowestNote + 1;\n    this.nominator = config.nominator || 4;\n    this.denominator = config.denominator || 4;\n    this.factor = 4 / this.denominator;\n    this.ticksPerBeat = this.ppq * this.factor;\n    this.ticksPerBar = this.ticksPerBeat * this.nominator;\n    this.millisPerTick = (60000 / this.bpm / this.ppq);\n    this.quantizeValue = config.quantizeValue || '8';\n    this.fixedLengthValue = config.fixedLengthValue || false;\n    this.positionType = config.positionType || 'all';\n    this.useMetronome = config.useMetronome;\n    this.autoSize = config.autoSize === undefined ? true : config.autoSize === true;\n    this.playbackSpeed = 1;\n    this.defaultInstrument = config.defaultInstrument || sequencer.defaultInstrument;\n    this.recordId = -1;\n    this.autoQuantize = false;\n    this.loop = config.loop || false;\n    this.doLoop = false;\n    this.illegalLoop = true;\n    this.loopStart = 0;\n    this.loopEnd = 0;\n    this.loopDuration = 0;\n    this.audioRecordingLatency = 0;\n\n    //console.log('PPQ song', this.ppq)\n\n    if (this.useMetronome !== true && this.useMetronome !== false) {\n      this.useMetronome = false;\n    }\n    //console.log(this.useMetronome);\n\n    this.grid = undefined;\n\n    if (config.timeEvents && config.timeEvents.length > 0) {\n      this.timeEvents = [].concat(config.timeEvents);\n\n      this.tempoEvent = getTimeEvents(sequencer.TEMPO, this)[0];\n      this.timeSignatureEvent = getTimeEvents(sequencer.TIME_SIGNATURE, this)[0];\n\n      if (this.tempoEvent === undefined) {\n        this.tempoEvent = createMidiEvent(0, sequencer.TEMPO, this.bpm);\n        this.timeEvents.unshift(this.tempoEvent);\n      } else {\n        this.bpm = this.tempoEvent.bpm;\n      }\n      if (this.timeSignatureEvent === undefined) {\n        this.timeSignatureEvent = createMidiEvent(0, sequencer.TIME_SIGNATURE, this.nominator, this.denominator);\n        this.timeEvents.unshift(this.timeSignatureEvent);\n      } else {\n        this.nominator = this.timeSignatureEvent.nominator;\n        this.denominator = this.timeSignatureEvent.denominator;\n      }\n      //console.log(1, this.nominator, this.denominator, this.bpm);\n    } else {\n      // there has to be a tempo and time signature event at ticks 0, otherwise the position can't be calculated, and moreover, it is dictated by the MIDI standard\n      this.tempoEvent = createMidiEvent(0, sequencer.TEMPO, this.bpm);\n      this.timeSignatureEvent = createMidiEvent(0, sequencer.TIME_SIGNATURE, this.nominator, this.denominator);\n      this.timeEvents = [\n        this.tempoEvent,\n        this.timeSignatureEvent\n      ];\n    }\n\n    // TODO: A value for bpm, nominator and denominator in the config overrules the time events specified in the config -> maybe this should be the other way round\n\n    // if a value for bpm is set in the config, and this value is different from the bpm value of the first\n    // tempo event, all tempo events will be updated to the bpm value in the config.\n    if (config.timeEvents !== undefined && config.bpm !== undefined) {\n      if (this.bpm !== config.bpm) {\n        this.setTempo(config.bpm, false);\n      }\n    }\n\n    // if a value for nominator and/or denominator is set in the config, and this/these value(s) is/are different from the values\n    // of the first time signature event, all time signature events will be updated to the values in the config.\n    // @TODO: maybe only the first time signature event should be updated?\n    if (config.timeEvents !== undefined && (config.nominator !== undefined || config.denominator !== undefined)) {\n      if (this.nominator !== config.nominator || this.denominator !== config.denominator) {\n        this.setTimeSignature(config.nominator || this.nominator, config.denominator || this.denominator, false);\n      }\n    }\n\n    //console.log(2, this.nominator, this.denominator, this.bpm);\n\n    this.tracks = [];\n    this.parts = [];\n    this.notes = [];\n    this.events = [];//.concat(this.timeEvents);\n    this.allEvents = []; // all events plus metronome ticks\n\n    this.tracksById = {};\n    this.tracksByName = {};\n    this.partsById = {};\n    this.notesById = {};\n    this.eventsById = {};\n\n    this.activeEvents = null;\n    this.activeNotes = null;\n    this.activeParts = null;\n\n    this.recordedNotes = [];\n    this.recordedEvents = [];\n    this.recordingNotes = {}; // notes that don't have their note off events yet\n\n    this.numTracks = 0;\n    this.numParts = 0;\n    this.numNotes = 0;\n    this.numEvents = 0;\n    this.instruments = [];\n\n    this.playing = false;\n    this.paused = false;\n    this.stopped = true;\n    this.recording = false;\n    this.prerolling = false;\n    this.precounting = false;\n    this.preroll = true;\n    this.precount = 0;\n    this.listeners = {};\n\n    this.playhead = createPlayhead(this, this.positionType, this.id, this);//, this.position);\n    this.playheadRecording = createPlayhead(this, 'all', this.id + '_recording');\n    this.scheduler = createScheduler(this);\n    this.followEvent = createFollowEvent(this);\n\n    this.volume = 1;\n    this.gainNode = context.createGainNode();\n    this.gainNode.gain.value = this.volume;\n    this.metronome = createMetronome(this, dispatchEvent);\n    this.connect();\n\n\n    if (config.className === 'MidiFile' && config.loaded === false) {\n      if (sequencer.debug) {\n        console.warn('midifile', config.name, 'has not yet been loaded!');\n      }\n    }\n\n    //if(config.tracks && config.tracks.length > 0){\n    if (config.tracks) {\n      this.addTracks(config.tracks);\n    }\n\n    if (config.parts) {\n      this.addParts(config.parts);\n    }\n\n    if (config.events) {\n      this.addEvents(config.events);\n    }\n\n    if (config.events || config.parts || config.tracks) {\n      //console.log(config.events, config.parts, config.tracks)\n      // the length of the song will be determined by the events, parts and/or tracks that are added to the song\n      if (config.bars === undefined) {\n        this.lastBar = 0;\n      }\n      this.lastEvent = createMidiEvent([this.lastBar, sequencer.END_OF_TRACK]);\n    } else {\n      this.lastEvent = createMidiEvent([this.bars * this.ticksPerBar, sequencer.END_OF_TRACK]);\n    }\n    //console.log('update');\n    this.update(true);\n\n    this.numTimeEvents = this.timeEvents.length;\n    this.playhead.set('ticks', 0);\n    this.midiEventListeners = {};\n    //console.log(this.timeEvents);\n  };\n\n\n  getPart = function (data, song) {\n    var part = false;\n    if (data === undefined) {\n      part = false;\n    } else if (part.className === 'Part') {\n      part = data;\n    } else if (typeString(data) === 'string') {\n      part = song.partsById[data];\n    } else if (isNaN(data) === false) {\n      part = song.parts[data];\n    }\n    return part;\n  };\n\n\n  getTrack = function (data, song) {\n    var track = false;\n    //console.log(data);\n    if (data === undefined) {\n      track = false;\n    } else if (data.className === 'Track') {\n      track = data;\n    } else if (typeString(data) === 'string') {\n      track = song.tracksById[data];\n      if (track === undefined) {\n        track = song.tracksByName[data];\n        // objectForEach(song.tracksById, function(t){\n        //     if(t.name === data){\n        //         track = t;\n        //     }\n        // });\n      }\n    } else if (isNaN(data) === false) {\n      track = song.tracks[data];\n    }\n\n    if (track === undefined) {\n      track = false;\n    }\n    return track;\n  };\n\n\n  addTracks = function (newTracks, song) {\n    //console.log('addTracks');\n    var tracksById = song.tracksById,\n      tracksByName = song.tracksByName,\n      addedIds = [],\n      i, part, track;\n\n    for (i = newTracks.length - 1; i >= 0; i--) {\n      track = getTrack(newTracks[i]);\n      if (track === false) {\n        continue;\n      }\n      //console.log(track.song);\n      if (track.song !== undefined && track.song !== null) {\n        track = track.copy();\n      }\n      track.song = song;\n      track.instrument.song = song;\n      track.quantizeValue = song.quantizeValue;\n      track.connect(song.gainNode);\n      /*\n                  // -> not possible because of the endless midi feedback loop with IAC virtual midi ports on OSX\n                  //console.log(song.midiInputs);\n                  objectForEach(song.midiInputs, function(port){\n                      //console.log(port.id);\n                      track.setMidiInput(port.id, true);\n                  });\n      */\n\n      track.state = 'new';\n      track.needsUpdate = true;\n      tracksById[track.id] = track;\n      tracksByName[track.name] = track;\n      addedIds.push(track.id);\n\n      objectForEach(track.partsById, function (part) {\n        part.state = 'new';\n      });\n      /*\n                  for(j in track.partsById){\n                      if(track.partsById.hasOwnProperty(j)){\n                          //console.log('addTracks, part', part);\n                          part = track.partsById[j];\n                          //part.song = song;\n                          part.state = 'new';\n                      }\n                  }\n      */\n    }\n    return addedIds;\n  };\n\n\n  _removeTracks = function (tobeRemoved) {\n    var i, track, removed = [];\n\n    for (i = tobeRemoved.length - 1; i >= 0; i--) {\n      track = getTrack(tobeRemoved[i]);\n      if (track === false) {\n        continue;\n      }\n      //console.log(track);\n      if (track.song !== undefined && track.song !== this) {\n        console.warn('can\\'t remove: this track belongs to song', track.song.id);\n        continue;\n      }\n      track.state = 'removed';\n      track.disconnect(this.gainNode);\n      track.reset();\n      delete this.tracksById[track.id];\n      delete this.tracksByName[track.name];\n      removed.push(track);\n    }\n    return removed;\n  };\n\n  /*\n      getParts = function(args, song){\n          var part, i,\n              result = [];\n          for(i = args.length - 1; i >= 0; i--){\n              part = getPart(args[i], song);\n              if(part){\n                  result.push(part);\n              }\n          }\n          return result;\n      };\n  */\n\n  getParts = function (args) {\n    var part, i,\n      result = [];\n    for (i = args.length - 1; i >= 0; i--) {\n      part = getPart(args[i], this);\n      if (part) {\n        result.push(part);\n      }\n    }\n    return result;\n  };\n\n\n  function getEvents(args, song) {\n    var result = [];\n\n    args = slice.call(args);\n    //console.log(args);\n\n    function loop(data, i, maxi) {\n      var arg, type, event;\n\n      for (i = 0; i < maxi; i++) {\n        arg = data[i];\n        type = typeString(arg);\n\n        if (type === 'array') {\n          loop(arg, 0, arg.length);\n        }\n\n        else if (type === 'string') {\n          event = song.eventsById[arg];\n          if (event !== undefined) {\n            result.push(arg);\n          }\n        }\n\n        else if (arg.className === 'MidiEvent') {\n          result.push(arg);\n        }\n      }\n    }\n\n    loop(args, 0, args.length);\n    return result;\n  }\n\n\n  getTimeEvents = function (type, song) {\n    var events = [];\n    song.timeEvents.forEach(function (event) {\n      if (event.type === type) {\n        events.push(event);\n      }\n    });\n    return events;\n  };\n\n\n  pulse = function (song) {\n    var\n      //now = window.performance.now(),\n      now = sequencer.getTime() * 1000,\n      diff = now - song.timeStamp,\n      millis = song.millis + diff;\n\n    song.diff = diff;\n    //console.log(diff);\n    //console.log(now, song.recordTimestamp, song.eventsMidiAudioMetronome[0].time);\n\n    song.timeStamp = now;\n\n    if (song.precounting === true) {\n      song.metronome.millis += diff;\n      song.scheduler.update(diff);\n      // now return otherwise the position of the song gets updated\n      return;\n    }\n\n    // is this comment still valid?\n    // put followEvent and scheduler before playhead.update(), otherwise followEvent will miss the first event (scheduler could come after playhead.update)\n    song.prevMillis = song.millis;\n    //song.playhead.update('millis', diff);\n    // song.followEvent.update();\n    // song.scheduler.update();\n    //console.log(song.millis, diff, song.loopEnd);\n    //console.log(song.doLoop, song.scheduler.looped, song.millis > song.loopEnd);\n    //console.log(song.scheduler.prevMaxtime, song.loopEnd);\n    if (song.doLoop && song.scheduler.looped && millis >= song.loopEnd) {// && song.jump !== true){\n      //console.log(song.prevMillis, song.millis);\n      //song.scheduler.looped = false;\n      song.followEvent.resetAllListeners();\n      song.playhead.set('millis', song.loopStart + (millis - song.loopEnd));\n      song.followEvent.update();\n      //console.log('-->', song.millis);\n      song.scheduler.update();\n      dispatchEvent(song, 'loop');\n      //song.startTime += (song.loopEnd - song.loopStart);\n    } else if (millis >= song.durationMillis) {\n      song.playhead.update('millis', song.durationMillis - song.millis);\n      song.followEvent.update();\n      song.pause();\n      song.endOfSong = true;\n      dispatchEvent(song, 'end');\n    } else {\n      song.playhead.update('millis', diff);\n      song.followEvent.update();\n      song.scheduler.update();\n    }\n\n    song.jump = false;\n\n    //console.log(now, sequencer.getTime());\n    //console.log(song.barsAsString);\n    //console.log('pulse', song.playhead.barsAsString, song.playhead.millis);\n    //console.log(song.millis);\n  };\n\n\n  Song.prototype.remove = function () {\n    console.warn('Song.remove() is deprecated, please use sequencer.deleteSong()');\n    sequencer.deleteSong(this);\n  };\n\n\n  Song.prototype.play = function () {\n    sequencer.unlockWebAudio();\n    var song, playstart;\n\n    //console.log(this.playing);\n    if (this.playing) {\n      this.pause();\n      return;\n    }\n    // tell the scheduler to schedule the audio events that start before the current position of the playhead\n    this.scheduler.firstRun = true;\n\n    // only loop when the loop is legal and this.loop is set to true\n    this.doLoop = (this.illegalLoop === false && this.loop === true);\n    //console.log('play', this.doLoop, this.illegalLoop, this.loop);\n    // or should I move to loopStart here if loop is enabled?\n    if (this.endOfSong) {\n      this.followEvent.resetAllListeners();\n      this.playhead.set('millis', 0);\n      this.scheduler.setIndex(0);\n    }\n    // timeStamp is used for calculating the diff in time of every consecutive frame\n    this.timeStamp = sequencer.getTime() * 1000;\n    this.startTime = this.timeStamp;\n    try {\n      this.startTime2 = window.performance.now();\n      //this.startTime2 = undefined;\n    } catch (e) {\n      if (sequencer.debug) {\n        console.log('window.performance.now() not supported');\n      }\n    }\n\n    if (this.precounting) {\n      this.metronome.startTime = this.startTime;\n      this.metronome.startTime2 = this.startTime2;\n      this.startTime += this.metronome.precountDurationInMillis;\n      this.startTime2 += this.metronome.precountDurationInMillis;\n\n      //console.log(this.metronome.startTime, this.recordTimestamp);\n\n      song = this;\n      playstart = this.startTime / 1000;\n\n      //console.log(this.startTime, playstart, this.recordTimestamp/1000 - playstart);\n\n      repetitiveTasks.playAfterPrecount = function () {\n        if (sequencer.getTime() >= playstart) {\n          song.precounting = false;\n          song.prerolling = false;\n          song.recording = true;\n          song.playing = true;\n          dispatchEvent(song, 'record_start');\n          dispatchEvent(song, 'play');\n          //console.log('playAfterPrecount', sequencer.getTime(), playstart, song.metronome.precountDurationInMillis);\n          repetitiveTasks.playAfterPrecount = undefined;\n          delete repetitiveTasks.playAfterPrecount;\n        }\n      };\n    }\n    // this value will be deducted from the millis value of the event as soon as the event get scheduled\n    this.startMillis = this.millis;\n    //console.log(this.startMillis);\n\n    // make first call right after setting a time stamp to avoid delay\n    //pulse(this);\n\n    song = this;\n\n    // fixes bug: when an event listener is added to a midi note, the listener sometimes misses the first note\n    song.playhead.update('millis', 0);\n    song.followEvent.update();\n\n    repetitiveTasks[this.id] = function () {\n      pulse(song);\n    };\n\n    this.paused = false;\n    this.stopped = false;\n    this.endOfSong = false;\n    if (this.precounting !== true) {\n      this.playing = true;\n      dispatchEvent(this, 'play');\n    }\n  };\n\n\n  Song.prototype.pause = function () {\n    if (this.recording === true || this.precounting === true) {\n      this.stop();\n      return;\n    }\n    if (this.stopped || this.paused) {\n      this.play();\n      return;\n    }\n    delete repetitiveTasks[this.id];\n    this.allNotesOff();\n    this.playing = false;\n    this.paused = true;\n    dispatchEvent(this, 'pause');\n  };\n\n\n  Song.prototype.stop = function () {\n    if (this.stopped) {\n      // is this necessary?\n      this.followEvent.resetAllListeners();\n      this.playhead.set('millis', 0);\n      this.scheduler.setIndex(0);\n      return;\n    }\n    if (this.recording === true || this.precounting === true) {\n      this.stopRecording();\n    }\n    delete repetitiveTasks[this.id];\n    // remove unschedule callback of all samples\n    objectForEach(timedTasks, function (task, id) {\n      //console.log(id);\n      if (id.indexOf('unschedule_') === 0 || id.indexOf('event_') === 0) {\n        task = null;\n        delete timedTasks[id];\n      }\n    });\n    this.allNotesOff();\n\n    this.playing = false;\n    this.paused = false;\n    this.stopped = true;\n    this.endOfSong = false;\n\n    this.followEvent.resetAllListeners();\n    this.playhead.set('millis', 0);\n    this.scheduler.setIndex(0);\n    dispatchEvent(this, 'stop');\n  };\n\n\n  Song.prototype.adjustLatencyForAllRecordings = function (value) {\n    // @todo: add callback here!\n    this.audioRecordingLatency = value;\n    this.tracks.forEach(function (track) {\n      track.setAudioRecordingLatency(value);\n    });\n  };\n\n\n  Song.prototype.setAudioRecordingLatency = function (recordId, value, callback) {\n    var i, event, sampleId;\n\n    for (i = this.audioEvents.length - 1; i >= 0; i--) {\n      event = this.audioEvents[i];\n      sampleId = event.sampleId;\n      if (sampleId === undefined) {\n        continue;\n      }\n      if (recordId === sampleId) {\n        break;\n      }\n    }\n    //console.log(recordId, value, callback);\n    event.track.setAudioRecordingLatency(recordId, value, callback);\n  };\n\n\n  Song.prototype.startRecording = Song.prototype.record = function (precount) {\n    //console.log(this.recording, this.precounting, precount);\n    if (this.recording === true || this.precounting === true) {\n      this.stop();\n      return;\n    }\n\n    var userFeedback = false,\n      audioRecording = false,\n      i, track, self = this;\n\n    this.metronome.precountDurationInMillis = 0;\n\n    // allow to start a recording while playing\n    if (this.playing) {\n      this.precount = 0;\n      this.recordStartMillis = this.millis;\n    } else {\n      if (precount === undefined) {\n        this.precount = 0;\n        this.recordStartMillis = this.millis;\n      } else {\n        // a recording with a precount always starts at the beginning of a bar\n        this.setPlayhead('barsbeats', this.bar);\n        this.metronome.createPrecountEvents(precount);\n        this.precount = precount;\n        this.recordStartMillis = this.millis - this.metronome.precountDurationInMillis;\n        //console.log(this.metronome.precountDurationInMillis);\n      }\n      /*\n                  if(this.preroll === true){\n                      // TODO: improve this -> leave it, preroll is always on unless the user sets it to false\n                      //this.preroll = (this.bar - this.precount) > 0;\n                  }\n      */\n    }\n    //console.log('preroll', this.preroll);\n    //console.log('precount', this.precount);\n    //console.log('precountDurationInMillis', this.metronome.precountDurationInMillis);\n    //console.log('recordStartMillis', this.recordStartMillis);\n\n\n    this.recordTimestampTicks = this.ticks;\n    this.recordId = 'REC' + new Date().getTime();\n    this.recordedNotes = [];\n    this.recordedEvents = [];\n    this.recordingNotes = {};\n    this.recordingAudio = false;\n\n    if (this.keyEditor !== undefined) {\n      this.keyEditor.prepareForRecording(this.recordId);\n    }\n\n    for (i = this.numTracks - 1; i >= 0; i--) {\n      track = this.tracks[i];\n      if (track.recordEnabled === 'audio') {\n        this.recordingAudio = true;\n      }\n      //console.log(track.name, track.index);\n      if (track.recordEnabled === 'audio') {\n        audioRecording = true;\n        track.prepareForRecording(this.recordId, function () {\n          if (userFeedback === false) {\n            userFeedback = true;\n            setRecordingStatus.call(self);\n          }\n        });\n      } else {\n        track.prepareForRecording(this.recordId);\n      }\n    }\n\n    if (audioRecording === false) {\n      setRecordingStatus.call(this);\n    }\n\n    return this.recordId;\n  };\n\n\n  setRecordingStatus = function () {\n\n    this.recordTimestamp = context.currentTime * 1000; // millis\n\n    if (this.playing === false) {\n      if (this.precount > 0) {\n        // recording with precount always starts at the beginning of a bar\n        //this.setPlayhead('barsbeats', this.bar);\n        this.precounting = true;\n        this.prerolling = this.preroll;\n        if (this.prerolling) {\n          dispatchEvent(this, 'record_preroll');\n        } else {\n          dispatchEvent(this, 'record_precount');\n        }\n      } else {\n        this.recording = true;\n        dispatchEvent(this, 'record_start');\n      }\n      this.play();\n    } else {\n      this.recording = true;\n      this.precounting = false;\n      dispatchEvent(this, 'record_start');\n    }\n  };\n\n\n  _getRecordingPerTrack = function (index, recordingHistory, callback) {\n    var track, scope = this;\n\n    if (index < this.numTracks) {\n      track = this.tracks[index];\n      track.stopRecording(this.recordId, function (events) {\n        if (events !== undefined) {\n          recordingHistory[track.name] = events;\n        }\n        index++;\n        _getRecordingPerTrack.call(scope, index, recordingHistory, callback);\n      });\n    } else {\n      callback(recordingHistory);\n    }\n  };\n\n\n  Song.prototype.stopRecording = function () {\n    if (this.recording === false) {\n      return;\n    }\n    this.recording = false;\n    this.prerolling = false;\n    this.precounting = false;\n\n    //repetitiveTasks.playAfterPrecount = undefined;\n    delete repetitiveTasks.playAfterPrecount;\n    var scope = this;\n\n    _getRecordingPerTrack.call(this, 0, {}, function (history) {\n      scope.update();\n      dispatchEvent(scope, 'recorded_events', history);\n    });\n\n    // perform update immediately for midi recordings\n    this.update();\n\n    dispatchEvent(this, 'record_stop');\n\n    return this.recordId;\n  };\n\n\n  Song.prototype.undoRecording = function (history) {\n    var i, tracksByName;\n\n    if (history === undefined) {\n      for (i = this.numTracks - 1; i >= 0; i--) {\n        this.tracks[i].undoRecording(this.recordId);\n      }\n    } else {\n      tracksByName = this.tracksByName;\n      objectForEach(history, function (events, name) {\n        var track = tracksByName[name];\n        track.undoRecording(events);\n      });\n    }\n    //this.update();\n  };\n\n\n  Song.prototype.getAudioRecordingData = function (recordId) {\n    var i, event, sampleId;\n\n    for (i = this.audioEvents.length - 1; i >= 0; i--) {\n      event = this.audioEvents[i];\n      sampleId = event.sampleId;\n      if (sampleId === undefined) {\n        continue;\n      }\n      if (recordId === sampleId) {\n        break;\n      }\n    }\n    if (event === undefined) {\n      return false;\n    }\n    return event.track.getAudioRecordingData(recordId);\n  };\n\n\n  // non-mandatory arguments: quantize value, history object\n  Song.prototype.quantize = function () {\n    var i, track, arg, type,\n      args = slice.call(arguments),\n      numArgs = args.length,\n      value,\n      historyObject = {};\n\n    //console.log(arguments);\n\n    for (i = 0; i < numArgs; i++) {\n      arg = args[i];\n      type = typeString(arg);\n      //console.log(arg, type);\n      if (type === 'string' || type === 'number') {\n        // overrule the quantize values of all tracks in this song, but the song's quantizeValue doesn't change\n        value = arg;\n      } else if (type === 'object') {\n        historyObject = arg;\n      }\n    }\n\n    //console.log(value, historyObject)\n    for (i = this.numTracks - 1; i >= 0; i--) {\n      track = this.tracks[i];\n      // if no value is specified, use the value of the track\n      if (value === undefined) {\n        value = track.quantizeValue;\n      }\n      sequencer.quantize(track.events, value, this.ppq, historyObject);\n    }\n\n    return historyObject;\n    //this.update();\n  };\n\n\n  Song.prototype.undoQuantize = function (history) {\n    if (history === undefined) {\n      if (sequencer.debug >= 2) {\n        console.warn('please pass a quantize history object');\n      }\n      return;\n    }\n\n    var i, track;\n    for (i = this.numTracks - 1; i >= 0; i--) {\n      track = this.tracks[i];\n      track.undoQuantize(history);\n    }\n  };\n\n\n  Song.prototype.quantizeRecording = function (value) {\n    var i, track;\n    for (i = this.numTracks - 1; i >= 0; i--) {\n      track = this.tracks[i];\n      if (track.recordId === this.recordId) {\n        track.quantizeRecording(value);\n      }\n    }\n    //this.update();\n  };\n\n\n  // left: song position >= left locator\n  Song.prototype.setLeftLocator = function () {\n    //var pos = getPosition(this, [].concat(type, value));\n    //this.leftLocator = AP.slice.call(arguments);\n    var pos = getPosition(this, slice.call(arguments));\n    if (pos !== undefined) {\n      this.loopStartPosition = pos;\n      this.loopStart = pos.millis;\n      this.loopStartTicks = pos.ticks;\n    }\n    this.illegalLoop = this.loopStart >= this.loopEnd;\n    this.doLoop = (this.illegalLoop === false && this.loop === true);\n    this.loopDuration = this.illegalLoop === true ? 0 : this.loopEnd - this.loopStart;\n    // if(this.doLoop === false && this.loop === true){\n    //     dispatchEvent('loop_off', this);\n    // }\n    //console.log('left', this.doLoop, this.illegalLoop, this.loop);\n    //console.log(pos.millis, pos.millis, pos.ticks);\n    //console.log('l', this.loopStartPosition, pos);\n  };\n\n\n  // right: song position < right locator\n  Song.prototype.setRightLocator = function () {//(value){\n    //var pos = getPosition(this, [].concat(type, value));\n    //this.rightLocator = AP.slice.call(arguments);\n    var pos = getPosition(this, slice.call(arguments)),\n      previousState = this.illegalLoop;\n    //var pos = getPosition(this, value);\n    if (pos !== undefined) {\n      this.loopEndPosition = pos;\n      this.loopEnd = pos.millis;\n      this.loopEndTicks = pos.ticks;\n    }\n    //console.log(this.loopEnd);\n    this.illegalLoop = this.loopEnd <= this.loopStart;\n    this.doLoop = (this.illegalLoop === false && this.loop === true);\n    this.loopDuration = this.illegalLoop === true ? 0 : this.loopEnd - this.loopStart;\n    // if(previousState !== false && this.loop === true){\n    //     dispatchEvent('loop_off', this);\n    // }\n    //console.log('right', this.doLoop, this.illegalLoop, this.loop);\n    //console.log(pos.millis, pos.millis, pos.ticks);\n    //console.log('r', this.loopEndPosition);\n  };\n\n\n  Song.prototype.setLoop = function (flag) {\n    if (flag === undefined) {\n      this.loop = !this.loop;\n    } else if (flag === true || flag === false) {\n      this.loop = flag;\n    } else {\n      if (sequencer.debug >= 1) {\n        console.error('pass \"true\", \"false\" or no value');\n      }\n      return;\n    }\n    this.doLoop = (this.illegalLoop === false && this.loop === true);\n  };\n\n\n  Song.prototype.setPlayhead = function () {\n    //console.log('setPlayhead');\n    this.jump = true;\n    this.scheduler.looped = false;\n    this.scheduler.firstRun = true;\n    this.timeStamp = sequencer.getTime() * 1000;\n    this.startTime = this.timeStamp;\n\n    if (this.playing) {\n      this.allNotesOff();\n    }\n\n    //console.log(slice.call(arguments));\n    var pos = getPosition(this, slice.call(arguments)),\n      millis = pos.millis;\n    this.startMillis = millis;\n    this.playhead.set('millis', millis);\n    this.scheduler.setIndex(millis);\n    //console.log(pos.bar, this.bar);\n    //console.log(this.playhead.activeEvents);\n  };\n\n\n  Song.prototype.addEventListener = function () {\n    return addEventListener.apply(this, arguments);\n  };\n\n\n  Song.prototype.removeEventListener = function () {\n    removeEventListener.apply(this, arguments);\n  };\n\n\n  Song.prototype.addEvent = Song.prototype.addEvents = function () {\n    var track, part;\n\n    track = this.tracks[0];\n    if (track === undefined) {\n      track = sequencer.createTrack();\n      this.addTrack(track);\n    }\n    // we need to find the first part on the track, so update the track if necessary\n    if (track.needsUpdate) {\n      track.update();\n    }\n\n    part = track.parts[0];\n    if (part === undefined) {\n      part = sequencer.createPart();\n      track.addPart(part);\n    }\n    part.addEvents.apply(part, arguments);\n    //console.log(part.needsUpdate);\n    return this;\n  };\n\n\n  Song.prototype.addPart = Song.prototype.addParts = function () {\n    var track = this.tracks[0];\n    if (track === undefined) {\n      //console.log('-> create track for parts')\n      track = sequencer.createTrack();\n      this.addTrack(track);\n    }\n    //console.log(arguments);\n    track.addParts.apply(track, arguments);\n    return this;\n  };\n\n\n  Song.prototype.addTrack = function () {\n    var args = getArguments(arguments),\n      arg0 = args[0],\n      numArgs = args.length;\n\n    if (typeString(arg0) === 'array' || numArgs > 1) {\n      console.warn('please use addTracks() if you want to get more that one tracks');\n      args = [arg0];\n    }\n    return addTracks(args, this)[0];\n  };\n\n\n  Song.prototype.addTracks = function () {\n    //console.log(arguments, getArguments(arguments));\n    return addTracks(getArguments(arguments), this);\n  };\n\n\n  Song.prototype.getTrack = function (arg) {\n    return getTrack(arg, this);\n  };\n\n\n  Song.prototype.getTracks = function () {\n    var args = getArguments(arguments),\n      track, i,\n      result = [];\n    for (i = args.length - 1; i >= 0; i--) {\n      track = getTrack(args[i], this);\n      if (track) {\n        result.push(track);\n      }\n    }\n    return result;\n  };\n\n\n  Song.prototype.getPart = function () {\n    var args = getArguments(arguments);\n    if (args.length > 1) {\n      console.warn('please use getParts() if you want to get more that one part');\n    }\n    //@TODO: check if a call is faster\n    //return getParts(args, this)[0];\n    return getParts.call(this, args)[0];\n  };\n\n\n  Song.prototype.getParts = function () {\n    var args = getArguments(arguments);\n    //return getParts(args, this);\n    return getParts.call(this, args);\n  };\n\n\n  Song.prototype.removeTrack = function () {\n    var args = getArguments(arguments);\n    //var args = getArguments.apply(null, arguments);\n    if (args.length > 1) {\n      console.warn('please use removeTracks() if you want to remove more that one tracks');\n    }\n    //return _removeTracks(args, this)[0];\n    return _removeTracks.call(this, args)[0];\n  };\n\n\n  Song.prototype.removeTracks = function () {\n    return _removeTracks.call(this, getArguments(arguments));\n  };\n\n\n  Song.prototype.setPlaybackSpeed = function (speed) {\n    if (speed < 0.01 || speed > 100) {\n      console.error('playback speed has to be > 0.01 and < 100');\n      return;\n    }\n    var ticks = this.ticks,\n      startLoop, endLoop, newPos;\n\n    this.playbackSpeed = speed;\n    //console.log('setPlaybackSpeed -> update()');\n    this.update(true);\n\n    // get the new position of the locators after the update\n    if (this.loopStartTicks !== undefined) {\n      startLoop = this.getPosition('ticks', this.loopStartTicks);\n      this.loopStart = startLoop.millis;\n      this.loopStartTicks = startLoop.ticks;\n    }\n    if (this.loopEndTicks !== undefined) {\n      endLoop = this.getPosition('ticks', this.loopEndTicks);\n      this.loopEnd = endLoop.millis;\n      this.loopEndTicks = endLoop.ticks;\n    }\n\n    // get the new position of the playhead after the update\n    newPos = this.getPosition('ticks', ticks);\n    this.setPlayhead('ticks', newPos.ticks);\n  };\n\n\n  Song.prototype.gridToSong = function (x, y, width, height) {\n    return gridToSong(this, x, y, width, height);\n  };\n\n\n  Song.prototype.noteToGrid = function (note, height) {\n    return noteToGrid(note, height, this);\n  };\n\n\n  Song.prototype.eventToGrid = function (event, width, height) {\n    return eventToGrid(event, width, height, this);\n  };\n\n\n  Song.prototype.positionToGrid = function (position, width) {\n    return positionToGrid(position, width, this);\n  };\n\n\n  Song.prototype.getPosition = function () {\n    //console.log(slice.call(arguments));\n    return getPosition(this, slice.call(arguments));\n  };\n\n\n  Song.prototype.ticksToMillis = function (ticks, beyondEndOfSong) {\n    return ticksToMillis(this, ticks, beyondEndOfSong);\n  };\n\n\n  Song.prototype.millisToTicks = function (millis, beyondEndOfSong) {\n    return millisToTicks(this, millis, beyondEndOfSong);\n  };\n\n\n  Song.prototype.ticksToBars = function (ticks, beyondEndOfSong) {\n    return ticksToBars(this, ticks, beyondEndOfSong);\n  };\n\n\n  Song.prototype.millisToBars = function (millis, beyondEndOfSong) {\n    return millisToBars(this, millis, beyondEndOfSong);\n  };\n\n\n  Song.prototype.barsToTicks = function () {\n    return barsToTicks(this, slice.call(arguments));\n  };\n\n\n  Song.prototype.barsToMillis = function () {\n    return barsToMillis(this, slice.call(arguments));\n  };\n\n\n  Song.prototype.findEvent = Song.prototype.findEvents = function (pattern) {\n    return findEvent(this, pattern);\n  };\n\n\n  Song.prototype.findNote = Song.prototype.findNotes = function (pattern) {\n    return findNote(this, pattern);\n  };\n\n\n  Song.prototype.getStats = function (pattern) {\n    return getStats(this, pattern);\n  };\n\n\n  Song.prototype.createGrid = function (config) {\n    if (this.grid === undefined) {\n      this.grid = createGrid(this, config);\n    } else {\n      this.grid.update(config);\n    }\n    return this.grid;\n  };\n\n\n  Song.prototype.update = function (updateTimeEvents) {\n    //console.log('Song.update()');\n    update(this, updateTimeEvents);\n  };\n\n\n  Song.prototype.updateGrid = function (config) {\n    this.grid.update(config);\n    return this.grid;\n  };\n\n\n  Song.prototype.updateTempoEvent = function (event, bpm) {\n    if (event.type !== sequencer.TEMPO) {\n      if (sequencer.debug >= 4) {\n        console.error('this is not a tempo event');\n      }\n      return;\n    }\n    if (event.song !== this) {\n      if (sequencer.debug >= 4) {\n        console.error('this event has not been added to this song yet');\n      }\n      return;\n    }\n    var ticks = this.ticks,\n      percentage = this.percentage;\n    event.bpm = bpm;\n    this.update(true);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n\n  Song.prototype.updateTimeSignatureEvent = function (event, nominator, denominator) {\n    if (event.type !== sequencer.TIME_SIGNATURE) {\n      if (sequencer.debug >= 4) {\n        console.error('this is not a time signature event');\n      }\n      return;\n    }\n    if (event.song !== this) {\n      if (sequencer.debug >= 4) {\n        console.error('this event has not been added to this song yet');\n      }\n      return;\n    }\n    var ticks = this.ticks,\n      percentage = this.percentage;\n    event.nominator = nominator || event.nominator;\n    event.denominator = denominator || event.denominator;\n    this.update(true);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n\n  Song.prototype.getTempoEvents = function () {\n    return getTimeEvents(sequencer.TEMPO, this);\n  };\n\n\n  Song.prototype.getTimeSignatureEvents = function () {\n    return getTimeEvents(sequencer.TIME_SIGNATURE, this);\n  };\n\n\n  Song.prototype.updatePlayheadAndLocators = function (ticks) {\n    var newStartPos,\n      newEndPos,\n      startPos = this.loopStartPosition,\n      endPos = this.loopEndPosition,\n      newPos;\n\n    // get the new position of the locators after the update\n    if (startPos !== undefined) {\n      /*\n      newStartPos = this.getPosition('barsbeats', startPos.bar, startPos.beat, startPos.sixteenth, startPos.tick);\n      if(newStartPos.ticks > this.durationTicks || newStartPos.bar > this.bars + 1){\n          newStartPos = this.getPosition('barsbeats', 1, 1, 1, 0);\n          console.log('start', newStartPos.barsAsString);\n      }\n      */\n      newStartPos = this.getPosition('ticks', startPos.ticks);\n      this.loopStart = newStartPos.millis;\n      this.loopStartTicks = newStartPos.ticks;\n      this.loopStartPosition = newStartPos;\n    }\n    if (endPos !== undefined) {\n      /*\n      newEndPos = this.getPosition('barsbeats', endPos.bar, endPos.beat, endPos.sixteenth, endPos.tick);\n      if(newEndPos.ticks > this.durationTicks || newEndPos.bar > this.bars + 1){\n          newEndPos = this.getPosition('barsbeats', this.bars, 1, 1, 0);\n          console.log('end', newEndPos.barsAsString);\n      }\n      */\n      //console.log('right locator', endPos.barsAsString, endPos.ticks);\n      newEndPos = this.getPosition('ticks', endPos.ticks);\n      if (newEndPos.ticks > this.durationTicks) {\n        //console.log('right locator beyond end of song');\n        newEndPos = this.getPosition('ticks', this.bars);\n      }\n      this.loopEnd = newEndPos.millis;\n      this.loopEndTicks = newEndPos.ticks;\n      this.loopEndPosition = newEndPos;\n      //console.log('right locator', newEndPos.barsAsString, newEndPos.ticks);\n    }\n    //console.log('l', this.loopStartPosition, 'r', this.loopEndPosition);\n\n    // get the new position of the playhead after the update\n    /*\n            newPos = this.getPosition('ticks', ticks);\n            if(newPos.ticks > this.durationTicks || newPos.bar > this.bars + 1){\n                newPos = this.getPosition('barsbeats', 1, 1, 1, 0);\n                //console.log('playhead', newPos.barsAsString);\n            }\n    */\n    newPos = this.getPosition('ticks', ticks);\n    if (this.doLoop && newPos.ticks > this.durationTicks) {\n      //console.log('playhead beyond end of song');\n      this.setPlayhead('ticks', 0);\n    } else {\n      this.setPlayhead('ticks', newPos.ticks);\n    }\n\n\n    this.loopDuration = this.illegalLoop === true ? 0 : this.loopEnd - this.loopStart;\n    /*\n            console.log(percentage);\n            newPos = this.getPosition('percentage', percentage);\n            this.setPlayhead('ticks', newPos.ticks);\n    */\n  };\n\n\n  Song.prototype.setTempo = function (bpm, update) {\n    var timeEvents = getTimeEvents(sequencer.TEMPO, this),\n      i, event,\n      ticks = this.ticks,\n      percentage = this.percentage,\n      ratio = bpm / timeEvents[0].bpm;\n\n    for (i = timeEvents.length - 1; i >= 0; i--) {\n      event = timeEvents[i];\n      event.bpm = ratio * event.bpm;\n    }\n    this.bpm = bpm;\n\n    if (update === false) {\n      return;\n    }\n    //console.log('setTempo -> update()');\n    this.update(true);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n\n  Song.prototype.setTimeSignature = function (nominator, denominator, update) {\n    var timeEvents = getTimeEvents(sequencer.TIME_SIGNATURE, this),\n      i, event,\n      percentage = this.percentage,\n      ticks = this.ticks;\n\n    for (i = timeEvents.length - 1; i >= 0; i--) {\n      event = timeEvents[i];\n      event.nominator = nominator;\n      event.denominator = denominator;\n    }\n    this.nominator = nominator;\n    this.denominator = denominator;\n\n    if (update === false) {\n      return;\n    }\n\n    //console.log('setTimeSignature -> update()');\n    this.update(true);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n\n  Song.prototype.resetTempo = function (bpm) {\n    var firstTempoEvent = getTimeEvents(sequencer.TEMPO, this)[0],\n      timeEvents = this.timeEvents;\n\n    firstTempoEvent.bpm = bpm;\n\n    timeEvents = removeFromArray2(timeEvents, function (event) {\n      if (event.type === 0x51) {\n        return true;\n      }\n      return false;\n    });\n\n    this.numTimeEvents = timeEvents.length;\n    this.update(true);\n  };\n\n\n  Song.prototype.resetTimeSignature = function (nominator, denominator) {\n    var firstTimeSignatureEvent = getTimeEvents(sequencer.TIME_SIGNATURE, this)[0],\n      timeEvents = this.timeEvents,\n      ticks = this.ticks;\n\n    firstTimeSignatureEvent.nominator = nominator;\n    firstTimeSignatureEvent.denominator = denominator;\n\n    timeEvents = removeFromArray2(timeEvents, function (event) {\n      if (event.type === 0x58) {\n        return true;\n      }\n      return false;\n    });\n\n    this.numTimeEvents = timeEvents.length;\n    this.update(true);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n\n  Song.prototype.addTimeEvent = Song.prototype.addTimeEvents = function () {\n    var events = getArguments(arguments),\n      ticks = this.ticks,\n      i, event, position;\n\n    // console.log(events);\n\n    for (i = events.length - 1; i >= 0; i--) {\n      event = events[i];\n      if (event.className === 'MidiEvent') {\n        if (event.type === sequencer.TEMPO) {\n          this.timeEvents.push(event);\n        } else if (event.type === sequencer.TIME_SIGNATURE) {\n          /*\n              A time signature event can only be positioned at the beginning of a bar,\n              so we look for the nearest bar and put the event there.\n          */\n          position = this.getPosition('ticks', event.ticks);\n          if (position.beat > position.nominator / 2) {\n            position = this.getPosition('barsbeats', position.bar + 1);\n          } else {\n            position = this.getPosition('barsbeats', position.bar);\n          }\n          event.ticks = position.ticks;\n          this.timeEvents.push(event);\n        }\n      }\n    }\n    this.numTimeEvents = this.timeEvents.length;\n    this.update(true);\n    //console.log('addTimeEvents', this.timeEvents);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n  /*\n      Song.prototype.addTimeEvent = function(){\n          var events = getArguments(arguments),\n              arg0 = events[0],\n              numArgs = events.length;\n  \n          if(typeString(arg0) === 'array' || numArgs > 1){\n              console.warn('please use addTimeEvents() if you want to add more that one time event');\n              events = [arg0];\n          }\n          addTimeEvents(events, this);\n      };\n  */\n\n  Song.prototype.removeTimeEvent = Song.prototype.removeTimeEvents = function () {\n    var tmp = getArguments(arguments),\n      i, maxi = tmp.length,\n      event,\n      ticks = this.ticks,\n      events = [];\n\n    for (i = 0; i < maxi; i++) {\n      event = tmp[i];\n      if (event !== this.tempoEvent && event !== this.timeSignatureEvent) {\n        events.push(event);\n      }\n    }\n    //console.log(events);\n\n    this.timeEvents = removeFromArray(events, this.timeEvents);\n    this.numTimeEvents = this.timeEvents.length;\n    this.update(true);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n\n  Song.prototype.removeDoubleTimeEvents = function () {\n    var events = [],\n      i, event, ticks, type,\n      eventsByTicks = {\n        '81': {},\n        '88': {},\n      };\n\n    //console.log('before', this.timeEvents);\n\n    for (i = this.timeEvents.length - 1; i >= 0; i--) {\n      event = this.timeEvents[i];\n      if (eventsByTicks[event.type][event.ticks] !== undefined) {\n        continue;\n      }\n\n      type = event.type;\n      ticks = event.ticks;\n      eventsByTicks[type][ticks] = event;\n\n      if (ticks === 0) {\n        if (type === 0x51) {\n          this.tempoEvent = event;\n        } else if (type === 0x58) {\n          this.timeSignatureEvent = event;\n        }\n      }\n    }\n\n    objectForEach(eventsByTicks['81'], function (event) {\n      events.push(event);\n    });\n\n    objectForEach(eventsByTicks['88'], function (event) {\n      events.push(event);\n    });\n\n    this.timeEvents = events;\n    this.update(true);\n\n    //console.log('after', this.timeEvents);\n    //this.timeEvents.forEach(function(event){\n    //    console.log(event.barsAsString, event.bpm, event.nominator, event.denominator);\n    //});\n    //console.log('tempo', this.tempoEvent.bpm, this.tempoEvent.nominator, this.tempoEvent.denominator, this.tempoEvent.barsAsString);\n    //console.log('time signature', this.timeSignatureEvent.bpm, this.timeSignatureEvent.nominator, this.timeSignatureEvent.denominator, this.timeSignatureEvent.barsAsString);\n  };\n\n\n  Song.prototype.setPitchRange = function (min, max) {\n    var me = this;\n    me.lowestNote = min;\n    me.highestNote = max;\n    me.numNotes = me.pitchRange = me.highestNote - me.lowestNote + 1;\n  };\n\n\n  Song.prototype.trim = function () {\n    checkDuration(this, true);\n  };\n\n\n  Song.prototype.setDurationInBars = function (bars) {\n    var me = this,\n      removedEvents = me.findEvent('bar > ' + bars),\n      removedParts = [],\n      changedTracks = [],\n      changedParts = [],\n      dirtyTracks = {},\n      dirtyParts = {};\n\n    //console.log(removedEvents);\n\n    removedEvents.forEach(function (event) {\n      var trackId = event.trackId,\n        partId = event.partId;\n\n      if (dirtyTracks[trackId] === undefined) {\n        dirtyTracks[trackId] = [];\n      }\n      dirtyTracks[trackId].push(event);\n\n      if (dirtyParts[partId] === undefined) {\n        dirtyParts[partId] = event.part;\n        //console.log(me.getPart(partId));\n      }\n    });\n\n    objectForEach(dirtyTracks, function (events, trackId) {\n      var track = me.getTrack(trackId);\n      //console.log(track.name)\n      track.removeEvents(events);\n      changedTracks.push(track);\n    });\n\n    objectForEach(dirtyParts, function (part, partId) {\n      if (part.events.length === 0) {\n        //console.log(partId, 'has no events');\n        part.track.removePart(part);\n        removedParts.push(part);\n      } else {\n        changedParts.push(part);\n      }\n    });\n\n    me.bars = bars;\n    me.lastBar = bars;\n\n    // user needs to call song.update() after setDurationInBars()!\n    //checkDuration(this);\n\n    //console.log(this.ticks);\n\n    return {\n      removedEvents: removedEvents,\n      removedParts: removedParts,\n      changedTracks: changedTracks,\n      changedParts: changedParts\n    };\n  };\n\n\n  Song.prototype.addEffect = function () {\n  };\n\n\n  Song.prototype.removeEffect = function () {\n  };\n\n\n  Song.prototype.setVolume = function () { // value, Track, Track, Track, etc. in any order\n    var args = slice.call(arguments),\n      numArgs = args.length,\n      tracks = [],\n      value, i;\n\n    function loop(data, i, maxi) {\n      for (i = 0; i < maxi; i++) {\n        var arg = data[i],\n          type = typeString(arg);\n\n        if (type === 'array') {\n          loop(arg, 0, arg.length);\n        } else if (type === 'number') {\n          value = arg;\n        } else if (arg.className === 'Track') {\n          tracks.push(arg);\n        }\n      }\n    }\n\n    if (numArgs === 1) {\n      value = args[0];\n      if (isNaN(value)) {\n        console.warn('please pass a number');\n        return;\n      }\n      this.volume = value < 0 ? 0 : value > 1 ? 1 : value;\n      this.gainNode.gain.value = this.volume;\n    } else {\n      loop(args, 0, numArgs);\n      for (i = tracks.length - 1; i >= 0; i--) {\n        tracks[i].setVolume(value);\n      }\n    }\n  };\n\n\n  Song.prototype.getVolume = function () {\n    return this.gainNode.gain.value;\n  };\n\n\n  Song.prototype.connect = function () {\n    this.gainNode.connect(masterGainNode);\n    //this.gainNode.connect(context.destination);\n  };\n\n\n  Song.prototype.disconnect = function () {\n    this.gainNode.disconnect(masterGainNode);\n    //this.gainNode.disconnect(context.destination);\n  };\n\n  /*\n      Song.prototype.cleanUp = function(){\n          // add other references that need to be removed\n          this.disconnect(masterGainNode);\n          //this.disconnect(context.destination);\n      };\n  */\n\n  Song.prototype.getMidiInputs = function (cb) {\n    getMidiInputs(cb, this);\n  };\n\n\n  Song.prototype.getMidiOutputs = function (cb) {\n    getMidiOutputs(cb, this);\n  };\n\n\n  Song.prototype.setTrackSolo = function (soloTrack, flag) {\n    var i, track;\n    for (i = this.numTracks - 1; i >= 0; i--) {\n      track = this.tracks[i];\n      if (flag === true) {\n        track.mute = track === soloTrack ? !flag : flag;\n      } else if (flag === false) {\n        track.mute = false;\n      }\n      track.solo = track === soloTrack ? flag : false;\n    }\n  };\n\n\n  Song.prototype.muteAllTracks = function (flag) {\n    var i, track;\n    for (i = this.numTracks - 1; i >= 0; i--) {\n      track = this.tracks[i];\n      track.mute = flag;\n    }\n  };\n\n\n  Song.prototype.setMetronomeVolume = function (value) {\n    this.metronome.setVolume(value);\n  };\n\n  Song.prototype.configureMetronome = function (config) {\n    //console.log(config)\n    this.metronome.configure(config);\n  };\n\n  Song.prototype.resetMetronome = function () {\n    this.metronome.reset();\n  };\n\n\n  Song.prototype.setPrecount = function (value) {\n    this.precount = value;\n  };\n\n\n  Song.prototype.allNotesOff = function () {\n    //console.log('song.allNotesOff');\n    /*\n    var i;\n    for(i in this.tracks){\n        if(this.tracks.hasOwnProperty(i)){\n            this.tracks[i].instrument.allNotesOff();\n        }\n    }\n    */\n    var time = this.scheduler.lastEventTime + 100;\n    objectForEach(this.tracks, function (track) {\n      track.allNotesOff();\n      if (track.routeToMidiOut) {\n        // console.log(track.channel);\n        objectForEach(track.midiOutputs, function (midiOutput) {\n          midiOutput.send([0xB0 + track.channel, 0x7B, 0x00], time + getTimeDiff() + 100 + track.audioLatency); // stop all notes\n          midiOutput.send([0xB0 + track.channel, 0x79, 0x00], time + getTimeDiff() + 100 + track.audioLatency); // reset all controllers\n        });\n      }\n      // track.audio.allNotesOff();\n      // track.instrument.allNotesOff();\n    });\n    this.metronome.allNotesOff();\n    this.scheduler.unschedule();\n    // this.resetExternalMidiDevices();\n  };\n\n\n  Song.prototype.resetExternalMidiDevices = function () {\n    //var time = this.millis + (sequencer.bufferTime * 1000); // this doesn't work, why? -> because the scheduler uses a different time\n    var time = this.scheduler.lastEventTime + 100;\n    if (isNaN(time)) {\n      time = 100;\n    }\n\n\n    // console.log('allNotesOff', this.millis, time);\n    objectForEach(this.midiOutputs, function (output) {\n      // console.log(output)\n      for (let i = 0xB0; i < 0xC0; i++) {\n        output.send([i, 0x7B, 0x00], time + getTimeDiff() + 100); // stop all notes\n        output.send([i, 0x79, 0x00], time + getTimeDiff() + 100); // reset all controllers\n      }\n      //output.send([176, 123, 0], sequencer.getTime());\n    });\n  };\n\n\n  Song.prototype.addMidiEventListener = function () {\n    return addMidiEventListener(arguments, this);\n  };\n\n\n  Song.prototype.removeMidiEventListener = function (id) {\n    removeMidiEventListener(id, this);\n  };\n\n\n  Song.prototype.removeMidiEventListeners = function () {\n    removeMidiEventListener(arguments, this);\n  };\n\n\n  Song.prototype.getMidiInputsAsDropdown = function (config) {\n    config = config || {\n      type: 'input'\n    };\n    return getMidiPortsAsDropdown(config, this);\n  };\n\n\n  Song.prototype.getMidiOutputsAsDropdown = function (config) {\n    config = config || {\n      type: 'output'\n    };\n    return getMidiPortsAsDropdown(config, this);\n  };\n\n  Song.prototype.setMidiInput = function (id, flag) {\n    setMidiInput(id, flag, this);\n  };\n\n\n  Song.prototype.setMidiOutput = function (id, flag) {\n    setMidiOutput(id, flag, this);\n  };\n\n\n  Song.prototype.getNoteLengthName = function (ticks) {\n    return getNoteLengthName(this, ticks);\n\n    /*\n            var args = slice(arguments);\n            if(args.length > 0){\n                pos = getPosition.apply(this, args);\n            }\n    */\n  };\n\n  //sequencer.Song = Song;\n\n  sequencer.createSong = function (config) {\n    return new Song(config);\n  };\n\n\n  sequencer.protectedScope.addInitMethod(function () {\n    context = sequencer.protectedScope.context;\n    timedTasks = sequencer.protectedScope.timedTasks;\n    repetitiveTasks = sequencer.protectedScope.repetitiveTasks;\n    masterGainNode = sequencer.protectedScope.masterGainNode;\n\n    createMidiEvent = sequencer.createMidiEvent;\n    createGrid = sequencer.protectedScope.createGrid;\n\n    initMidi = sequencer.protectedScope.initMidiSong;\n    setMidiInput = sequencer.protectedScope.setMidiInputSong;\n    setMidiOutput = sequencer.protectedScope.setMidiOutputSong;\n    getMidiInputs = sequencer.protectedScope.getMidiInputs;\n    getMidiOutputs = sequencer.protectedScope.getMidiOutputs;\n    addMidiEventListener = sequencer.protectedScope.addMidiEventListener;\n    getMidiPortsAsDropdown = sequencer.protectedScope.getMidiPortsAsDropdown;\n    removeMidiEventListener = sequencer.protectedScope.removeMidiEventListener;\n\n    getPosition = sequencer.protectedScope.getPosition;\n    millisToTicks = sequencer.protectedScope.millisToTicks;\n    ticksToMillis = sequencer.protectedScope.ticksToMillis;\n    ticksToBars = sequencer.protectedScope.ticksToBars;\n    millisToBars = sequencer.protectedScope.millisToBars;\n    barsToTicks = sequencer.protectedScope.barsToTicks;\n    barsToMillis = sequencer.protectedScope.barsToMillis;\n\n    typeString = sequencer.protectedScope.typeString;\n    removeFromArray = sequencer.protectedScope.removeFromArray;\n    removeFromArray2 = sequencer.protectedScope.removeFromArray2;\n    findEvent = sequencer.findEvent;\n    findNote = sequencer.findNote;\n    getStats = sequencer.getStats;\n\n    gridToSong = sequencer.gridToSong;\n    noteToGrid = sequencer.noteToGrid;\n    eventToGrid = sequencer.eventToGrid;\n    positionToGrid = sequencer.positionToGrid;\n\n    getArguments = sequencer.protectedScope.getArguments;\n    objectForEach = sequencer.protectedScope.objectForEach;\n    getNoteLengthName = sequencer.protectedScope.getNoteLengthName;\n\n    update = sequencer.protectedScope.update;\n    checkDuration = sequencer.protectedScope.checkDuration;\n    addMetronomeEvents = sequencer.protectedScope.addMetronomeEvents;\n\n    followEvent = sequencer.protectedScope.followEvent;\n    createPlayhead = sequencer.protectedScope.createPlayhead;\n    createScheduler = sequencer.protectedScope.createScheduler;\n    createFollowEvent = sequencer.protectedScope.createFollowEvent;\n    createMetronome = sequencer.protectedScope.createMetronome;\n\n    addEventListener = sequencer.protectedScope.songAddEventListener;\n    removeEventListener = sequencer.protectedScope.songRemoveEventListener;\n    dispatchEvent = sequencer.protectedScope.songDispatchEvent;\n    addSong = sequencer.protectedScope.addSong;\n\n    getTimeDiff = sequencer.getTimeDiff;\n\n  });\n}\nfunction songEventListener() {\n\n  'use strict';\n\n  var\n    slice = Array.prototype.slice,\n\n    // import\n    typeString, // defined in util.js\n    listenerIndex = 0,\n\n    addEventListener,\n    removeEventListener,\n    dispatchEvent;\n\n\n  dispatchEvent = function () {\n    var i, tmp, listener,\n      args = slice.call(arguments),\n      numArgs = args.length,\n      song = args[0],\n      type = args[1],\n      params = [];\n\n    //console.log(arguments, args);\n\n    // if there are arguments specified, put them before the argument song\n    if (numArgs > 2) {\n      i = 2;\n      while (i < numArgs) {\n        params.push(args[i]);\n        i++;\n      }\n    }\n    params.push(song);\n\n    tmp = song.listeners[type];\n    if (tmp === undefined || tmp.length === undefined) {\n      return;\n    }\n\n    for (i = tmp.length - 1; i >= 0; i--) {\n      listener = tmp[i];\n      if (listener.callback) {\n        listener.callback.apply(null, params);\n      }\n    }\n  };\n\n\n  //@param: type, callback\n  //@param: type, data, callback\n  addEventListener = function () {\n    var args = slice.call(arguments),\n      listenerId,\n      type = args[0];\n\n    switch (type) {\n      case 'play':\n      case 'stop':\n      case 'pause':\n      case 'end':\n      case 'record_start':\n      case 'record_stop':\n      case 'record_precount':\n      case 'record_preroll':\n      case 'recorded_events':\n      case 'latency_adjusted':\n      case 'loop_off':\n      case 'loop_on':\n      case 'loop': // the playhead jumps from the loop end position to the loop start position\n      case 'sustain_pedal':\n        if (this.listeners[type] === undefined) {\n          this.listeners[type] = [];\n        }\n        listenerId = type + '_' + listenerIndex++;\n        this.listeners[type].push({\n          id: listenerId,\n          callback: args[1]\n        });\n        //console.log(type, listenerId);\n        return listenerId;\n      case 'note':\n      case 'event':\n      case 'position':\n        //console.log(type, args[1], args[2]);\n        return this.followEvent.addEventListener(type, args[1], args[2]);\n      default:\n        console.log(type, 'is not a supported event');\n    }\n  };\n\n\n  removeEventListener = function () {\n    var args = slice.call(arguments),\n      tmp,\n      arg0 = args[0],\n      callback = args[1],\n      type, id,\n      filteredListeners = [],\n      i, listener;\n\n    if (arg0.indexOf('_') !== -1) {\n      tmp = arg0.split('_');\n      type = tmp[0];\n      id = arg0;\n    } else {\n      type = arg0;\n    }\n\n    // an array of listener ids is provided so this is not a transport event -> send to FollowEvent\n    if (typeString(type) === 'array') {\n      return this.followEvent.removeEventListener(args);\n    }\n\n\n    switch (type) {\n      case 'play':\n      case 'stop':\n      case 'pause':\n      case 'end':\n      case 'record_start':\n      case 'record_stop':\n      case 'record_precount':\n      case 'record_preroll':\n      case 'recorded_events':\n      case 'latency_adjusted':\n      case 'loop_off':\n      case 'loop_on':\n      case 'loop': // the playhead jumps from the loop end position to the loop start position\n      case 'sustain_pedal':\n        tmp = this.listeners[type];\n        if (tmp && tmp.length > 0) {\n          for (i = tmp.length - 1; i >= 0; i--) {\n            listener = tmp[i];\n            // remove by id\n            if (id !== undefined) {\n              if (listener.id !== id) {\n                filteredListeners.push(listener);\n              }\n              // remove by callback\n            } else if (callback !== undefined && listener.callback !== callback) {\n              filteredListeners.push(listener);\n            }\n          }\n          this.listeners[type] = [].concat(filteredListeners);\n        }\n        break;\n      case 'note':\n      case 'event':\n      case 'position':\n        return this.followEvent.removeEventListener(args);\n      default:\n        console.error('unsupported event');\n    }\n  };\n\n\n  sequencer.protectedScope.songAddEventListener = addEventListener;\n  sequencer.protectedScope.songRemoveEventListener = removeEventListener;\n  sequencer.protectedScope.songDispatchEvent = dispatchEvent;\n\n  sequencer.protectedScope.addInitMethod(function () {\n    typeString = sequencer.protectedScope.typeString;\n  });\n\n}function songFollowEvent() {\r\n\r\n  'use strict';\r\n\r\n  var\r\n    //import\r\n    findEvent, // → defined in find_position.js\r\n    typeString, // → defined in util.js\r\n    getPosition, // → defined in get_position.js\r\n    midiEventNameByNumber, // → defined in midi_event_names.js\r\n    midiEventNumberByName, // → defined in midi_event_names.js\r\n\r\n    listenerIndex = 0, // global id that increases per created eventlistener\r\n\r\n    supportedTimeEvents = {\r\n\r\n      //bars and beats\r\n      bar: 1,\r\n      beat: 1,\r\n      sixteenth: 1,\r\n      tick: 0, // the granularity of requestAnimationFrame is too coarse for tick values\r\n      ticks: 1, // from start of song\r\n      barsbeats: 1, // as number (will be interpreted as bar) or as array of numbers: [bar,beat,sixteenth,tick]\r\n      barsandbeats: 1, // same as above\r\n\r\n      //time\r\n      hour: 1,\r\n      minute: 1,\r\n      second: 1,\r\n      millisecond: 0, // the granularity of requestAnimationFrame is too coarse for millisecond values\r\n      millis: 1, // from start of song\r\n      time: 1 // as number (will be interpreted as second) or as array of numbers: [hour,minute,second,millisecond]\r\n    },\r\n\r\n    supportedOperators = '= == === > >= < <= != !== %=', //'= == === > >= < <= != !== *= ^= ~= $=',\r\n    //supportedOperatorsRegex = new RegExp(' ' + supportedOperators.replace(/\\s+/g,' | ').replace(/\\*/,'\\\\*') + ' '),\r\n    supportedOperatorsRegex = new RegExp(' ' + supportedOperators.replace(/\\s+/g, ' | ') + ' '),\r\n\r\n\r\n    //private\r\n    getEvents,\r\n    checkOperatorConflict,\r\n\r\n    //private class, only accessible in Song\r\n    FollowEvent;\r\n\r\n\r\n  FollowEvent = function (song) {\r\n    this.song = song;\r\n\r\n    this.allListenersById = {};\r\n    this.allListenersByType = {};\r\n    this.searchPatterns = [];\r\n\r\n    this.eventListenersBySearchstring = {};\r\n    this.positionListenersBySearchstring = {};\r\n\r\n    this.allListenersByType = {\r\n      'event': {\r\n        // all events that are registered as event, keys are the event ids, values are array with listener ids\r\n        'instance': {},\r\n        // all events that are registered after a search action, for instance: addEventListener('event', 'velocity > 50', callback)\r\n        'searchstring': {}\r\n      },\r\n      'position': {\r\n        // millis, ticks, time, barsbeats\r\n        'ticks': [],\r\n        // every bar, beat, sixteenth, hour, minute, second\r\n        'repetitive': {},\r\n        // on single conditional values of bar, beat, sixteenth, hour, minute, second, e.g. bar > 3, bar %= 2, bar === 3\r\n        'conditional_simple': {},\r\n        // on conditional values of bar, beat, sixteenth, hour, minute, second, e.g. bar > 3 < 10\r\n        'conditional_complex': {}\r\n      }\r\n    };\r\n  };\r\n\r\n\r\n  FollowEvent.prototype.updateSong = function () {\r\n\r\n    //adjust all event listeners based on registered events and events found by a searchstring\r\n\r\n    var i, j, e, eventId, events, tmp, data,\r\n      listenerIds = [], listeners,\r\n      listener, listenerId;\r\n\r\n    listeners = this.allListenersByType.event.instance;\r\n    // loop over event ids\r\n    for (eventId in listeners) {\r\n      if (listeners.hasOwnProperty(eventId)) {\r\n        // check if event has been removed\r\n        if (this.song.eventsById[eventId] === undefined) {\r\n          // get all listeners that are registered to this event and delete them\r\n          listenerIds = listeners[eventId];\r\n          for (i = listenerIds.length - 1; i >= 0; i--) {\r\n            listenerId = listenerIds[i];\r\n            delete this.allListenersById[listenerId];\r\n          }\r\n          //delete listeners[eventId];\r\n          delete this.allListenersByType.event.instance[eventId];\r\n        }\r\n      }\r\n    }\r\n\r\n    //console.log(listeners);\r\n\r\n    // remove all listeners that are currently bound to found events\r\n    listeners = this.allListenersByType.event.searchstring;\r\n    listenerIds = [];\r\n    for (eventId in listeners) {\r\n      // step 1: collect all ids of listeners\r\n      if (listeners.hasOwnProperty(eventId)) {\r\n        listenerIds = listenerIds.concat(listeners[eventId]);\r\n      }\r\n    }\r\n    // step 2: delete the listeners\r\n    for (i = listenerIds.length - 1; i >= 0; i--) {\r\n      delete this.allListenersById[listenerIds[i]];\r\n    }\r\n\r\n    // all event listeners have been removed, now create a new object and run search string on updated song\r\n    this.allListenersByType.event.searchstring = {};\r\n    tmp = this.allListenersByType.event.searchstring;\r\n\r\n    //@TODO: this can't possibly work!! -> but it actually does..\r\n\r\n    for (i = this.searchPatterns.length - 1; i >= 0; i--) {\r\n      data = this.searchPatterns[i];\r\n      events = findEvent(this.song, data.searchstring);\r\n      //console.log(data, events);\r\n\r\n      //add listeners for both note on and note off and ignore the other event types\r\n      if (tmp.type === 'note') {\r\n        events = findEvent(events, 'type = NOTE_ON OR type = NOTE_OFF');\r\n      }\r\n\r\n      for (j = events.length - 1; j >= 0; j--) {\r\n        e = events[j];\r\n\r\n        listenerId = 'event_' + listenerIndex++;\r\n        listener = {\r\n          id: listenerId,\r\n          event: e,\r\n          type: data.type,\r\n          subtype: data.subtype,\r\n          callback: data.callback\r\n        };\r\n\r\n        this.allListenersById[listenerId] = listener;\r\n\r\n        if (tmp[e.id] === undefined) {\r\n          tmp[e.id] = [];\r\n        }\r\n        tmp[e.id].push(listenerId);\r\n        //listenerIds.push(listenerId);\r\n      }\r\n    }\r\n\r\n    //console.log(allListenersByType.event.searchstring);\r\n    //console.log(allListenersByType.event.instance);\r\n    //console.log(allListenersById);\r\n  };\r\n\r\n\r\n  FollowEvent.prototype.update = function () {\r\n    var\r\n      i,\r\n      position = this.song,\r\n      ticks = position.ticks,\r\n      events = [],\r\n      numEvents,\r\n      event;\r\n\r\n    //events = this.song.playhead.activeEvents;\r\n    events = this.song.playhead.collectedEvents;\r\n    //      events = this.song.playhead.changedEvents; -> do something with a snapshot here\r\n    numEvents = events.length;\r\n    /*\r\n            if(numEvents !== undefined && numEvents > 0){\r\n                console.log(numEvents, position.barsAsString, this.bar, this.beat);\r\n            }\r\n    */\r\n    //call event listeners registered to specific midi events\r\n    for (i = 0; i < numEvents; i++) {\r\n      event = events[i];\r\n      //console.log(event, event.ticks);\r\n      this.callEventListeners(event.id, event);\r\n    }\r\n\r\n    this.callListenersPositionTicks(ticks);\r\n\r\n    if (position.bar !== this.bar) {\r\n      this.bar = position.bar;\r\n      this.callListenersPositionRepetitive('bar');\r\n      this.callListenersPositionConditionalSimple('bar', this.bar);\r\n      this.callListenersPositionConditionalComplex('bar', this.bar);\r\n    }\r\n\r\n    if (position.beat !== this.beat) {\r\n      this.beat = position.beat;\r\n      this.callListenersPositionRepetitive('beat');\r\n      this.callListenersPositionConditionalSimple('beat', this.beat);\r\n      this.callListenersPositionConditionalComplex('beat', this.beat);\r\n    }\r\n\r\n    if (position.sixteenth !== this.sixteenth) {\r\n      this.sixteenth = position.sixteenth;\r\n      this.callListenersPositionRepetitive('sixteenth');\r\n      this.callListenersPositionConditionalSimple('sixteenth', this.sixteenth);\r\n      this.callListenersPositionConditionalComplex('sixteenth', this.sixteenth);\r\n    }\r\n\r\n    if (position.hour !== this.hour) {\r\n      this.hour = position.hour;\r\n      this.callListenersPositionRepetitive('hour');\r\n      this.callListenersPositionConditionalSimple('hour', this.hour);\r\n      this.callListenersPositionConditionalComplex('hour', this.hour);\r\n    }\r\n\r\n    if (position.minute !== this.minute) {\r\n      this.minute = position.minute;\r\n      this.callListenersPositionRepetitive('minute');\r\n      this.callListenersPositionConditionalSimple('minute', this.minute);\r\n      this.callListenersPositionConditionalComplex('minute', this.minute);\r\n    }\r\n\r\n    if (position.second !== this.second) {\r\n      this.second = position.second;\r\n      this.callListenersPositionRepetitive('second');\r\n      this.callListenersPositionConditionalSimple('second', this.second);\r\n      this.callListenersPositionConditionalComplex('second', this.second);\r\n    }\r\n  };\r\n\r\n\r\n  // call callbacks that are bound to a specific event\r\n  FollowEvent.prototype.callEventListeners = function (eventId, event) {\r\n    var i, id, tmp,\r\n      listener,\r\n      listenerIds = [];\r\n\r\n    tmp = this.allListenersByType.event.instance;\r\n    if (tmp[eventId]) {\r\n      listenerIds = listenerIds.concat(tmp[eventId]);\r\n    }\r\n\r\n    tmp = this.allListenersByType.event.searchstring;\r\n    if (tmp[eventId]) {\r\n      listenerIds = listenerIds.concat(tmp[eventId]);\r\n    }\r\n\r\n    if (listenerIds.length > 0) {\r\n      //console.log(listenerIds, event.id, event.ticks);\r\n    }\r\n\r\n    for (i = listenerIds.length - 1; i >= 0; i--) {\r\n      id = listenerIds[i];\r\n      listener = this.allListenersById[id];\r\n      if (listener.called !== true) {\r\n        listener.called = true;\r\n        listener.callback(event);\r\n        //console.log('called', event.id)\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // for instance: addEventListener('position', 'bar') -> call callback every bar\r\n  FollowEvent.prototype.callListenersPositionRepetitive = function (positionType) {\r\n    var listener,\r\n      listenerIds = this.allListenersByType.position.repetitive[positionType],\r\n      me = this;\r\n\r\n    if (listenerIds) {\r\n      listenerIds.forEach(function (id) {\r\n        listener = me.allListenersById[id];\r\n        listener.callback(listener.searchstring);\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  // can be repetitive or fire once:\r\n  // addEventListener('position', 'beat === 2') -> call callback every second beat\r\n  // addEventListener('position', 'bar === 2') -> call callback at start of bar 2\r\n  FollowEvent.prototype.callListenersPositionConditionalSimple = function (positionType, value) {\r\n    var listener,\r\n      data,\r\n      operator,\r\n      call = false,\r\n      listenerIds = this.allListenersByType.position.conditional_simple[positionType],\r\n      me = this;\r\n\r\n    //console.log(positionType, listenerIds);\r\n\r\n    if (listenerIds) {\r\n      listenerIds.forEach(function (id) {\r\n        // -> check condition\r\n        listener = me.allListenersById[id];\r\n        data = listener.data;\r\n        operator = listener.operator;\r\n\r\n        switch (operator) {\r\n          case '>':\r\n            call = value > data;\r\n            break;\r\n          case '<':\r\n            call = value < data;\r\n            break;\r\n          case '%=':\r\n            //call = (value + 1) % (data + 1) === 0;\r\n            call = value % data === 0;\r\n            break;\r\n          case '!=':\r\n          case '!==':\r\n            call = value !== data;\r\n            break;\r\n          case '===':\r\n            call = value === data;\r\n            break;\r\n        }\r\n\r\n        if (call === true) {\r\n          listener.callback(listener.searchstring);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  // for instance: addEventListener('position', 'bar > 2 < 7') -> call callback every bar from bar 3 to 6\r\n  FollowEvent.prototype.callListenersPositionConditionalComplex = function (positionType, value) {\r\n    var listener,\r\n      value1,\r\n      value2,\r\n      operator1,\r\n      operator2,\r\n      listenerIds = this.allListenersByType.position.conditional_complex[positionType],\r\n      me = this;\r\n\r\n    if (listenerIds) {\r\n      listenerIds.forEach(function (id) {\r\n        // -> check condition(s)\r\n        listener = me.allListenersById[id];\r\n        value1 = listener.value1;\r\n        value2 = listener.value2;\r\n        operator1 = listener.operator1;\r\n        operator2 = listener.operator2;\r\n        if (operator1 === '<') {\r\n          if (value < value1 || value > value2) {\r\n            listener.callback(listener.searchstring);\r\n          }\r\n        } else if (operator1 === '>') {\r\n          //console.log(value1,value2,value,operator1,operator2);\r\n          if (value > value1 && value < value2) {\r\n            listener.callback(listener.searchstring);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  FollowEvent.prototype.callListenersPositionTicks = function (ticks) {\r\n    var tmp = this.allListenersByType.position.ticks,\r\n      i, maxi = tmp.length,\r\n      listener;\r\n\r\n    for (i = 0; i < maxi; i++) {\r\n      listener = this.allListenersById[tmp[i]];\r\n      //console.log(listener,ticks);\r\n      if (ticks >= listener.ticks && !listener.called) {\r\n        listener.callback(listener.searchstring);\r\n        listener.called = true;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n      event types: event, note or position\r\n\r\n      event → when the playhead passes the event\r\n\r\n      note → both on the note on and the note off event, the events array may be an array of notes or an array of events\r\n\r\n      position\r\n          'bar' -> every bar\r\n          'bar = 3' -> start of bar 3\r\n          'bar > 3 < 7' -> every bar after bar 3 and before bar 7\r\n\r\n          'beat' -> every beat\r\n          'beat = 3' -> start of beat 3\r\n          'beat > 3' -> every beat after beat 3\r\n\r\n          etc.\r\n\r\n\r\n      addEventListener('event',eventsArray,callback)\r\n      addEventListener('event',findEvent(eventsArray,'type = NOTE_ON'),callback)\r\n\r\n      addEventListener('note',eventsArray,callback)\r\n      addEventListener('note',findEvent(eventsArray,'velocity = 90'),callback)\r\n\r\n      addEventListener('event','bar > 5', callback)\r\n      addEventListener('note','id = 45654544345',callback)\r\n\r\n      addEventListener('position','bar',callback)\r\n      addEventListener('position','bar > 5 < 17',callback)\r\n      addEventListener('position','beat',callback)\r\n\r\n      addEventListener('position','second',callback)\r\n      addEventListener('position','second > 5',callback)\r\n\r\n      addEventListener('position','barsbeats = 1,2,0,0',callback)\r\n\r\n\r\n  */\r\n\r\n  FollowEvent.prototype.addEventListener = function (type, data, callback) {\r\n    var i, events, event, storeArray, tmp, subtype,\r\n      listener, listenerId, listenerIds = [],\r\n      dataType = typeString(data);\r\n\r\n    //console.log(type,data,callback);\r\n    //console.log(dataType, data);\r\n\r\n    if (typeString(callback) !== 'function') {\r\n      console.error(callback, 'is not a function; please provide a function for callback');\r\n      return -1;\r\n    }\r\n\r\n\r\n    if (type === 'position') {\r\n      listenerId = this.addPositionEventListener(data, callback);\r\n      //console.log(allListenersByType, allListenersById);\r\n      return listenerId;\r\n    }\r\n\r\n\r\n    if (dataType === 'string') {\r\n      events = findEvent(this.song, data);\r\n      // store the search string so we can run it again after the song has changed\r\n      this.searchPatterns.push({\r\n        searchstring: data,\r\n        callback: callback,\r\n        type: 'event',\r\n        subtype: 'searchstring'\r\n      });\r\n      //console.log(data, events);\r\n\r\n      if (events.length === 0) {\r\n        return -1;\r\n      }\r\n      subtype = 'searchstring';\r\n      storeArray = this.allListenersByType.event.searchstring;\r\n      this.eventListenersBySearchstring[data] = tmp = [];\r\n    } else {\r\n      events = getEvents(type, data);\r\n      if (events === -1) {\r\n        return -1;\r\n      }\r\n      subtype = 'instance';\r\n      storeArray = this.allListenersByType.event.instance;\r\n    }\r\n\r\n\r\n    //add listeners for both note on and note off and ignore the other event types\r\n    if (type === 'note') {\r\n      events = findEvent(events, 'type = NOTE_ON OR type = NOTE_OFF');\r\n    }\r\n\r\n    for (i = events.length - 1; i >= 0; i--) {\r\n      event = events[i];\r\n      listenerId = 'event_' + listenerIndex++;\r\n      listener = {\r\n        id: listenerId,\r\n        event: event,\r\n        type: type,\r\n        subtype: subtype,\r\n        callback: callback\r\n      };\r\n\r\n      //allListeners.push(listener);\r\n      this.allListenersById[listenerId] = listener;\r\n\r\n      if (storeArray[event.id] === undefined) {\r\n        storeArray[event.id] = [];\r\n      }\r\n      storeArray[event.id].push(listenerId);\r\n      listenerIds.push(listenerId);\r\n\r\n      if (subtype === 'searchstring') {\r\n        tmp.push(listenerId);\r\n      }\r\n    }\r\n    //console.log(this.allListenersById, this.allListenersByType);\r\n\r\n    if (subtype === 'searchstring' || dataType === 'array' || type === 'note') {\r\n      return listenerIds;\r\n    } else {\r\n      //console.log('num listeners:', listenerIds.length);\r\n      return listenerIds[0];\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n\r\n      'bar'; -> repetitive\r\n      'bar == 3'; -> fire once\r\n      'bar < 3 > 5'; -> conditionally repetitive\r\n      'bar = 3 AND beat > 1' -> not supported here! (doesn't make sense, use events or position instead)\r\n\r\n      - check if has valid operators\r\n      - some types need an operator -> filter\r\n      - check values that the operator has to act upon\r\n      - split into repetitive and one-shot listeners\r\n\r\n  */\r\n  FollowEvent.prototype.addPositionEventListener = function (data, callback) {\r\n    var tmp,\r\n      listenerId, listener,\r\n      millis,\r\n      searchString = data.split(/[\\s+]/g),\r\n      len = searchString.length,\r\n      type = searchString[0],\r\n      operator1 = searchString[1],\r\n      value1 = searchString[2],\r\n      operator2 = searchString[3],\r\n      value2 = searchString[4],\r\n      value1Type = typeString(value1);\r\n    //hasOperator = supportedOperatorsRegex.test(data);\r\n\r\n    //console.log(data, searchString, len);\r\n    //console.log(type, value1, operator1, value2, operator2);\r\n\r\n    if (len !== 1 && len !== 3 && len !== 5) {\r\n      console.error('invalid search string, please consult documentation');\r\n      return false;\r\n    }\r\n    /*\r\n            //split position data into an array -> is now done in find_event.js -> not anymore ;)\r\n            if(value1 && value1.indexOf(',') !== -1){\r\n                value1 = value1.split(',');\r\n            }\r\n    \r\n            if(value2 && value2.indexOf(',') !== -1){\r\n                value2 = value2.split(',');\r\n            }\r\n    */\r\n\r\n    if (supportedTimeEvents[type] !== 1) {\r\n      console.error(type, 'is not a supported event id, please consult documentation');\r\n      return -1;\r\n    }\r\n\r\n    if (operator1 === '=' || operator1 === '==') {\r\n      operator1 = '===';\r\n    }\r\n\r\n\r\n    // check values per type\r\n\r\n    switch (type) {\r\n      // these type can only fire once\r\n      case 'barsbeats':\r\n      case 'barsandbeats':\r\n      case 'time':\r\n      //case 'musical_time':\r\n      //case 'linear_time':\r\n      case 'ticks':\r\n      case 'millis':\r\n        if (operator1 === undefined || operator1 !== '===') {\r\n          console.error(type, 'can only be used conditionally with the operators \\'===\\', \\'==\\' or \\'=\\'');\r\n          return -1;\r\n        }\r\n        // if(isNaN(value1) && typeString(value1) !== 'array'){\r\n        //  console.error('please provide a number or an array of numbers');\r\n        //  return -1;\r\n        // }\r\n        if (operator2) {\r\n          console.warn('this position event type can only be used with a single condition, ignoring second condition');\r\n        }\r\n        break;\r\n\r\n      // these type fire repeatedly or once\r\n      case 'bar': // -> fired once if used with === operator\r\n      case 'beat':\r\n      case 'sixteenth':\r\n      //case 'tick':\r\n      case 'hour': // -> fired once if used with === operator\r\n      case 'minute':\r\n      case 'second':\r\n        //case 'millisecond':\r\n\r\n        if (value1 && isNaN(value1)) {\r\n          console.error('please provide a number');\r\n          return -1;\r\n        }\r\n        if (value2 && isNaN(value2)) {\r\n          console.error('please provide a number');\r\n          return -1;\r\n        }\r\n        break;\r\n    }\r\n\r\n\r\n    // check operators\r\n\r\n    if (operator1 && supportedOperators.indexOf(operator1) === -1) {\r\n      console.error(operator1, 'is not a supported operator, please use any of', supportedOperators);\r\n      return -1;\r\n    }\r\n\r\n    if (operator1 && value1 === undefined) {\r\n      console.error('operator without value');\r\n      return;\r\n    }\r\n\r\n    if (operator2 && supportedOperators.indexOf(operator1) === -1) {\r\n      console.error(operator2, 'is not a supported operator, please use any of', supportedOperators);\r\n      return -1;\r\n    }\r\n\r\n    if (operator2 && value2 === undefined) {\r\n      console.error('operator without value');\r\n      return;\r\n    }\r\n\r\n    if (operator1 && operator2 && checkOperatorConflict(operator1, operator2) === false) {\r\n      console.error('you can\\'t use ' + operator1 + ' together with ' + operator2);\r\n      return -1;\r\n    }\r\n\r\n\r\n    // check callback\r\n\r\n    if (typeString(callback) !== 'function') {\r\n      console.error(callback, 'is not a function; please provide a function for callback');\r\n      return -1;\r\n    }\r\n\r\n\r\n    // simplify searchstring and adjust values\r\n\r\n    switch (type) {\r\n\r\n      // event types that fire repeatedly or once\r\n\r\n      case 'bar':\r\n      case 'beat':\r\n      case 'sixteenth':\r\n        // make zero based\r\n        value1 = value1 - 0;\r\n        value2 = value2 - 0;\r\n      //case 'tick':\r\n      case 'hour':\r\n      case 'minute':\r\n      case 'second':\r\n        //case 'millisecond':\r\n        // make zero based\r\n        value1 = value1 - 0;\r\n        value2 = value2 - 0;\r\n\r\n        // convert <= to < and >= to > to make it easier\r\n        if (operator1) {\r\n          if (operator1 === '<=') {\r\n            value1++;\r\n            operator1 = '<';\r\n          } else if (operator1 === '>=') {\r\n            value1--;\r\n            operator1 = '>';\r\n          }\r\n        }\r\n\r\n        if (operator2) {\r\n          if (operator2 === '<=') {\r\n            value2++;\r\n            operator2 = '<';\r\n          } else if (operator2 === '>=') {\r\n            value2--;\r\n            operator2 = '>';\r\n          }\r\n        }\r\n\r\n        break;\r\n\r\n\r\n      // event types that fire only once, these get all converted to type 'ticks'\r\n\r\n      case 'ticks':\r\n        // we already have the position value in ticks\r\n        value1 = value1 - 0;\r\n        break;\r\n\r\n\r\n      case 'barsbeats':\r\n      case 'barsandbeats':\r\n        //case 'musical_time':\r\n\r\n        // convert position value to ticks\r\n        if (!isNaN(value1)) {\r\n          // only a single number is provided, we consider it to be the bar number\r\n          value1 = getPosition(this.song, ['barsbeats', value1, 1, 1, 0]).ticks;\r\n        } else if (value1Type === 'string') {\r\n          // a full barsandbeats array is provided: bar, beat, sixteenth, ticks\r\n          value1 = value1.replace(/[\\[\\]\\s]/g, '');\r\n          value1 = value1.split(',');\r\n          value1 = getPosition(this.song, ['barsbeats', value1[0], value1[1] || 1, value1[2] || 1, value1[3] || 0]).ticks;\r\n          /*\r\n                          }else if(value1Type === 'array'){\r\n                              // a full barsandbeats array is provided: bar, beat, sixteenth, ticks\r\n                              value1 = getPosition(this.song, ['barsbeats', value1[0], value1[1], value1[2], value1[3]]).ticks;\r\n          */\r\n        } else {\r\n          console.error('please provide a number or an array of numbers');\r\n        }\r\n        type = 'ticks';\r\n        break;\r\n\r\n\r\n      case 'millis':\r\n        // convert position value to ticks\r\n        value1 = getPosition(this.song, ['millis', value1]).ticks;\r\n        type = 'ticks';\r\n        break;\r\n\r\n\r\n      case 'time':\r\n        //case 'linear_time':\r\n        // convert position value to ticks\r\n        if (!isNaN(value1)) {\r\n          // a single number is provided, we treat this as the value for minutes\r\n          millis = value1 * 60 * 1000; //seconds\r\n          value1 = getPosition(this.song, ['millis', millis]).ticks;\r\n        } else if (value1Type === 'string') {\r\n          // a full barsandbeats array is provided: bar, beat, sixteenth, ticks\r\n          value1 = value1.replace(/[\\[\\]\\s]/g, '');\r\n          console.log(value1);\r\n          value1 = value1.split(',');\r\n          if (value1.length === 1) {\r\n            millis = value1[0] * 60 * 1000;\r\n            value1 = getPosition(this.song, ['millis', millis]).ticks;\r\n          } else {\r\n            value1 = getPosition(this.song, ['time', value1[0], value1[1], value1[2], value1[3]]).ticks;\r\n          }\r\n          /*\r\n                          }else if(value1Type === 'array'){\r\n                              // a full time array is provided: hours, minutes, seconds, millis\r\n                              value1 = getPosition(this.song, ['time', value1[0], value1[1], value1[2], value1[3]]).ticks;\r\n          */\r\n        } else {\r\n          console.error('please provide a number or an array of numbers');\r\n        }\r\n        console.log(value1);\r\n        type = 'ticks';\r\n        break;\r\n    }\r\n\r\n\r\n    listenerId = 'position_' + listenerIndex++;\r\n\r\n    //console.log(value1,value2);\r\n\r\n    if (type === 'ticks') {\r\n      //console.log(value1,listenerId)\r\n\r\n      listener = {\r\n        id: listenerId,\r\n        callback: callback,\r\n        type: 'position',\r\n        subtype: 'ticks',\r\n        ticks: value1,\r\n        searchstring: data\r\n      };\r\n\r\n      this.allListenersByType.position.ticks.push(listenerId);\r\n\r\n    } else if (!operator1 && !operator2) {\r\n      // every bar, beat, sixteenth, hour, minute, second\r\n      listener = {\r\n        id: listenerId,\r\n        callback: callback,\r\n        type: 'position',\r\n        subtype: 'repetitive',\r\n        position_type: type,\r\n        searchstring: data\r\n      };\r\n\r\n      tmp = this.allListenersByType.position.repetitive;\r\n      if (tmp[type] === undefined) {\r\n        tmp[type] = [];\r\n      }\r\n      tmp[type].push(listenerId);\r\n\r\n    } else if (operator1 && !operator2) {\r\n      // every time a bar, beat, sixteenth, hour, minute, second meets a certain simple condition, can be both repetitive and fire once\r\n      listener = {\r\n        id: listenerId,\r\n        callback: callback,\r\n        type: 'position',\r\n        subtype: 'conditional_simple',\r\n        position_type: type,\r\n        data: value1,\r\n        operator: operator1,\r\n        searchstring: data\r\n      };\r\n\r\n      tmp = this.allListenersByType.position.conditional_simple;\r\n      if (tmp[type] === undefined) {\r\n        tmp[type] = [];\r\n      }\r\n      tmp[type].push(listenerId);\r\n\r\n    } else if (operator1 && operator2) {\r\n      // every time a bar, beat, sixteenth, hour, minute, second meets a certain complex condition\r\n      listener = {\r\n        id: listenerId,\r\n        callback: callback,\r\n        type: 'position',\r\n        subtype: 'conditional_complex',\r\n        position_type: type,\r\n        value1: value1,\r\n        value2: value2,\r\n        operator1: operator1,\r\n        operator2: operator2,\r\n        searchstring: data\r\n      };\r\n\r\n      tmp = this.allListenersByType.position.conditional_complex;\r\n      if (tmp[type] === undefined) {\r\n        tmp[type] = [];\r\n      }\r\n      tmp[type].push(listenerId);\r\n\r\n    }\r\n\r\n    this.allListenersById[listenerId] = listener;\r\n    this.positionListenersBySearchstring[data] = listenerId;\r\n    return listenerId;\r\n  };\r\n\r\n  // @param type, data, callback\r\n  // @param id\r\n  FollowEvent.prototype.removeEventListener = function (args) {\r\n    var\r\n      //args = Array.prototype.slice.call(arguments),\r\n      arg0,\r\n      numArgs,\r\n      type, subtype, data, callback, id, ids, tmp,\r\n      listener, listenerId,\r\n      event, eventId, eventIds,\r\n      i, j, k, removeMe,\r\n      listenerIds,\r\n      filteredListenerIds = [],\r\n      removedListenerIds = [],\r\n      dataType;\r\n\r\n    //console.log(args);\r\n    //args = Array.prototype.slice.call(args[0]);\r\n    arg0 = args[0];\r\n    numArgs = args.length;\r\n\r\n    if (numArgs === 1) {\r\n      if (typeString(arg0) === 'array') {\r\n        ids = arg0;\r\n      } else {\r\n        ids = [arg0];\r\n      }\r\n      //console.log(ids);\r\n\r\n      for (i = ids.length - 1; i >= 0; i--) {\r\n        id = ids[i];\r\n        //console.log(id);\r\n        if (this.allListenersById[id] !== undefined) {\r\n          listener = this.allListenersById[id];\r\n          type = listener.type;\r\n          subtype = listener.subtype;\r\n\r\n          if (type === 'position') {\r\n            // reference to an array of all the listeners bound to this event type\r\n            listenerIds = this.allListenersByType[type][subtype][listener.position_type];\r\n            // loop over listeners and filter the one that has to be removed\r\n            for (j = listenerIds.length - 1; j >= 0; j--) {\r\n              listenerId = listenerIds[j];\r\n              if (listenerId !== id) {\r\n                filteredListenerIds.push(listenerId);\r\n              }\r\n            }\r\n            // add the filtered array back\r\n            this.allListenersByType[listener.type][listener.subtype][listener.position_type] = [].concat(filteredListenerIds);\r\n            delete this.allListenersById[id];\r\n\r\n          } else if (type === 'event' || type === 'note') {\r\n            event = listener.event;\r\n            eventId = event.id;\r\n            listenerIds = this.allListenersByType.event[subtype][eventId];\r\n            for (j = listenerIds.length - 1; j >= 0; j--) {\r\n              listenerId = listenerIds[j];\r\n              listener = this.allListenersById[listenerId];\r\n              if (listenerId !== id) {\r\n                filteredListenerIds.push(listenerId);\r\n                break;\r\n              }\r\n            }\r\n            // add the filtered array back per event\r\n            this.allListenersByType.event[subtype][eventId] = [].concat(filteredListenerIds);\r\n            delete this.allListenersById[id];\r\n\r\n            //@TODO: we have to add allListenersByType.notes\r\n            /*\r\n                                    if(type === 'note'){\r\n                                        console.log(event);\r\n                                        if(event.type === sequencer.NOTE_ON){\r\n                                            eventId = event.midiNote.noteOff.id;\r\n                                            tmp = allListenersByType.event[subtype][eventId];\r\n                                            listenerIds = listenerIds.concat(tmp);\r\n                                        }else if(event.type === sequencer.NOTE_OFF){\r\n                                            eventId = event.midiNote.noteOn.id;\r\n                                            tmp = allListenersByType.event[subtype][eventId];\r\n                                            listenerIds = listenerIds.concat(tmp);\r\n                                        }\r\n            \r\n                                        for(j = listenerIds.length - 1; j >= 0; j--){\r\n                                            listenerId = listenerIds[j];\r\n                                            listener = allListenersById[listenerId];\r\n                                            if(listenerId !== id){\r\n                                                filteredListenerIds.push(listenerId);\r\n                                                break;\r\n                                            }\r\n                                        }\r\n                                        // add the filtered array back per event\r\n                                        allListenersByType.event[subtype][eventId] = [].concat(filteredListenerIds);\r\n                                        delete allListenersById[id];\r\n                                    }\r\n            */\r\n          }\r\n\r\n          //console.log(this.allListenersById,this.allListenersByType);\r\n\r\n        } else {\r\n          console.warn('no event listener found with id', id);\r\n        }\r\n      }\r\n\r\n    } else if (numArgs === 2 || numArgs === 3) {\r\n\r\n      type = args[0];\r\n      data = args[1];\r\n      callback = args[2];\r\n      dataType = typeString(data);\r\n\r\n      //console.log(type, data, callback, dataType);\r\n\r\n      switch (type) {\r\n        case 'position':\r\n          if (dataType === 'string') {\r\n            // get the id of the listener by the searchstring\r\n            id = this.positionListenersBySearchstring[data];\r\n            // get the listener by id\r\n            listener = this.allListenersById[id];\r\n            // reference to an array of all the listeners bound to this event type\r\n            listenerIds = this.allListenersByType[listener.type][listener.subtype][listener.position_type];\r\n            // loop over listeners and filter the one that has to be removed\r\n            for (i = listenerIds.length - 1; i >= 0; i--) {\r\n              listenerId = listenerIds[i];\r\n              if (listenerId !== id) {\r\n                filteredListenerIds.push(listenerId);\r\n              }\r\n            }\r\n            // add the filtered array back\r\n            this.allListenersByType[listener.type][listener.subtype][listener.position_type] = [].concat(filteredListenerIds);\r\n            delete this.allListenersById[id];\r\n            delete this.positionListenersBySearchstring[data];\r\n            //console.log(allListenersById, allListenersByType, positionListenersBySearchstring);\r\n          }\r\n          break;\r\n\r\n        case 'event':\r\n        case 'note':\r\n\r\n          if (dataType === 'string') {\r\n            // get all listener ids that are connected to this searchstring\r\n            listenerIds = this.eventListenersBySearchstring[data];\r\n            for (i = listenerIds.length - 1; i >= 0; i--) {\r\n              // collect all ids of listeners that need to be removed\r\n              removedListenerIds.push(listenerIds[i]);\r\n            }\r\n\r\n            // loop over all searchstring listeners and filter the ones that have to be removed\r\n            eventIds = this.allListenersByType.event.searchstring;\r\n            for (eventId in eventIds) {\r\n              if (eventIds.hasOwnProperty(eventId)) {\r\n                listenerIds = eventIds[eventId];\r\n                filteredListenerIds = [];\r\n                for (i = listenerIds.length - 1; i >= 0; i--) {\r\n                  listenerId = listenerIds[i];\r\n                  removeMe = false;\r\n                  for (j = removedListenerIds.length - 1; j >= 0; j--) {\r\n                    //console.log(listenerId, removedListenerIds[j], callback);\r\n                    if (listenerId === removedListenerIds[j]) {\r\n                      removeMe = true;\r\n                      /*\r\n                      if(callback === undefined){\r\n                          removeMe = true;\r\n                      }else{\r\n                          removeMe = allListenersById[listenerId].callback === callback\r\n                      }\r\n                      */\r\n                      break;\r\n                    }\r\n                  }\r\n                  if (removeMe === false) {\r\n                    filteredListenerIds.push(listenerId);\r\n                  } else {\r\n                    // remove the listeners from the id library\r\n                    delete this.allListenersById[listenerIds[i]];\r\n                  }\r\n                }\r\n                // add the filtered array back\r\n                this.allListenersByType.event.searchstring[eventId] = [].concat(filteredListenerIds);\r\n              }\r\n            }\r\n            // delete the searchstring listeners array\r\n            delete this.eventListenersBySearchstring[data];\r\n            //console.log(allListenersById,eventListenersBySearchstring,allListenersByType);\r\n\r\n          } else if (dataType === 'object') {\r\n            if (data.className !== 'MidiEvent' && data.className !== 'MidiNote') {\r\n              console.error('please provide a midi event or a midi note');\r\n              return;\r\n            }\r\n            if (data.className === 'MidiNote') {\r\n              id = data.noteOn.id;\r\n            } else if (data.className === 'MidiEvent') {\r\n              id = data.id;\r\n            }\r\n            if (this.allListenersByType.event.instance[id] !== undefined) {\r\n              type = 'instance';\r\n              listenerIds = this.allListenersByType.event.instance[id];\r\n            } else if (this.allListenersByType.event.searchstring[id] !== undefined) {\r\n              type = 'searchstring';\r\n              listenerIds = this.allListenersByType.event.searchstring[id];\r\n            }\r\n            if (listenerIds === undefined) {\r\n              console.warn('no event listener bound to event with id', id);\r\n              return;\r\n            }\r\n            if (data.className === 'MidiNote') {\r\n              ids = this.allListenersByType.event[type][data.noteOff.id];\r\n              listenerIds = listenerIds.concat(ids);\r\n            }\r\n            //console.log(listenerIds);\r\n            for (i = listenerIds.length - 1; i >= 0; i--) {\r\n              listenerId = listenerIds[i];\r\n              listener = this.allListenersById[listenerId];\r\n              if (callback && listener.callback !== callback) {\r\n                filteredListenerIds.push(listener.id);\r\n              } else {\r\n                delete this.allListenersById[listener.id];\r\n              }\r\n              this.allListenersByType.event[type][listener.event.id] = [].concat(filteredListenerIds);\r\n            }\r\n            //console.log(allListenersById,allListenersByType);\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // set the 'called' key of every listener to false, this is necessary if the playhead is moved (by a loop of by the user)\r\n  FollowEvent.prototype.resetAllListeners = function () {\r\n    var listeners = this.allListenersById, key, listener;\r\n\r\n    for (key in listeners) {\r\n      if (listeners.hasOwnProperty(key)) {\r\n        listener = listeners[key];\r\n        listener.called = false;\r\n        //console.log(listener);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  getEvents = function (type, data) {\r\n\r\n    var dataType = typeString(data),\r\n      events = [], i, e;\r\n\r\n    if (dataType !== 'array' && data !== undefined && data.className !== 'MidiEvent' && data.className !== 'MidiNote') {\r\n      console.error(data, ' is not valid data for event type \\'event\\', please consult documentation');\r\n      return -1;\r\n    }\r\n\r\n    if (dataType === 'array') {\r\n      for (i = data.length - 1; i >= 0; i--) {\r\n        e = data[i];\r\n        if (type === 'event' && e.className !== 'MidiEvent' && e.className !== 'AudioEvent') {\r\n          console.warn('skipping', e, 'because it is not a MidiEvent nor an AudioEvent');\r\n          continue;\r\n        } else if (type === 'note' && e.className !== 'MidiNote') {\r\n          console.warn('skipping', e, 'because it is not a MidiNote');\r\n          continue;\r\n        }\r\n        events.push(e);\r\n      }\r\n    } else {\r\n      if (type === 'event') {\r\n        if (data.className !== 'MidiEvent' && data.className !== 'AudioEvent') {\r\n          console.error(data, ' is not a MidiEvent nor an AudioEvent');\r\n          return -1;\r\n        } else {\r\n          events = [data];\r\n        }\r\n      } else if (type === 'note') {\r\n        if (data.className !== 'MidiNote') {\r\n          console.error(data, ' is not a MidiNote');\r\n          return -1;\r\n        } else {\r\n          events = [data.noteOn, data.noteOff];\r\n        }\r\n      }\r\n    }\r\n\r\n    return events;\r\n  };\r\n\r\n\r\n  checkOperatorConflict = function (operator1, operator2) {\r\n\r\n    switch (operator1) {\r\n      case '=':\r\n      case '==':\r\n      case '===':\r\n        return false;\r\n    }\r\n\r\n    switch (operator2) {\r\n      case '=':\r\n      case '==':\r\n      case '===':\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n\r\n  sequencer.protectedScope.createFollowEvent = function (song) {\r\n    return new FollowEvent(song);\r\n  };\r\n\r\n\r\n  sequencer.protectedScope.addInitMethod(function () {\r\n    typeString = sequencer.protectedScope.typeString;\r\n    getPosition = sequencer.protectedScope.getPosition;\r\n    midiEventNumberByName = sequencer.midiEventNumberByName;\r\n    midiEventNameByNumber = sequencer.midiEventNameByNumber;\r\n    findEvent = sequencer.findEvent;\r\n  });\r\n}function songGrid() {\r\n\r\n\t/*\r\n\r\n\t[[ gridPositionFromSong(seqPosition,width,height) ]]\r\n\t\r\n\tgridCoordinateFromPosition(position,width,height)\r\n\r\n\t[[ gridPositionFromNote(notePitch,width,height) ]]\r\n\r\n\tgridCoordinateFromNote(note,width,height)\r\n\tgridCoordinateFromNote(pitch,width,height) -> basically a y-position\r\n\tgridCoordinateFromNote(event,width,height) -> specific event\r\n\t\r\n\r\n\t[[ songPositionFromGrid(x,y,width,height) ]]\r\n\r\n\tpositionFromGridCoordinate(x,y,width,height)\r\n\r\n\tnoteFromGridCoordinate(x,y,width,height) -> returns same as positionFromGridCoordinate\r\n\r\n\tsetSequenceLength(totalBars)\r\n\t\r\n\tsong.setGrid(height, width, pitchMin, pitchMax)\r\n\r\n\r\n\timplemented:\r\n\r\n\tsetGridPitchRange(min,max)\r\n\r\n\tgridToSong([song],x,y,width,height)\r\n\r\n\tsongToGrid(event) -> x and y\r\n\tsongToGrid(position,note) -> x and y\r\n\t\r\n\tsongToGrid(position,width,height) -> x, y = 0\r\n\t\r\n\tsongToGrid(note,width,height) -> y, x = 0\r\n\tsongToGrid(pitch)\r\n\r\n\tsongToGrid(event,width,height)\r\n\tsongToGrid('x',position,width,height)\r\n\tsongToGrid('y',note,width,height)\r\n\tsongToGrid('x','y',position,note,width,height)\r\n\r\n\r\n\t*/\r\n\r\n\t'use strict';\r\n\r\n\tvar\r\n\t\t//import\r\n\t\tgetPosition, // → defined in get_position.js\r\n\t\tfloor, // → defined in util.js\r\n\t\tround, // → defined in util.js\r\n\t\ttypeString, // → defined in util.js\r\n\r\n\t\t//public\r\n\t\tsongToGrid, // catch all -> may be remove this\r\n\t\tpositionToGrid,\r\n\t\teventToGrid,\r\n\t\tnoteToGrid,\r\n\r\n\t\tgridToSong, // catch all -> may be remove this\r\n\t\tpositionToSong;\r\n\r\n\r\n\tpositionToSong = function (song, x, y, width, height) {\r\n\t\tvar ticks, note, position, coordinate;\r\n\t\t//console.log(song.millis,x,y,width,height);\r\n\r\n\t\tif (song === undefined) {\r\n\t\t\tconsole.error('please provide a song');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (x === undefined || y === undefined) {\r\n\t\t\tconsole.error('please provide a coordinate');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (width === undefined || height === undefined) {\r\n\t\t\tconsole.error('please provide width and height');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tticks = floor((x / width) * song.ticks);\r\n\t\t//note = 127 - floor((y/height) * 128);\r\n\t\tnote = song.highestNote - floor((y / height) * song.pitchRange);\r\n\t\t//note = song.highestNote - round((y/height) * song.numNotes);\r\n\r\n\t\tposition = getPosition(song, ['ticks', ticks]);\r\n\t\tnote = sequencer.createNote(note);\r\n\r\n\t\t//console.log(position,note);\r\n\r\n\t\treturn {\r\n\t\t\tposition: position,\r\n\t\t\tnote: note\r\n\t\t};\r\n\t};\r\n\r\n\t//[song],x,y,width,height\r\n\tsequencer.positionToSong = sequencer.coordinatesToPosition = sequencer.gridToSong = function () {\r\n\t\tvar args = Array.prototype.slice.call(arguments),\r\n\t\t\tnumArgs = args.length,\r\n\t\t\targ0 = args[0];\r\n\r\n\t\t//todo: add error messages here\r\n\t\tif (numArgs === 4 && arg0.className !== 'Song') {\r\n\t\t\treturn positionToSong(sequencer.getSong(), arg0, args[1], args[2], args[3]);\r\n\t\t}\r\n\t\treturn positionToSong(arg0, args[1], args[2], args[3], args[4]);\r\n\t};\r\n\r\n\r\n\tsequencer.songToGrid = function () {\r\n\t\tvar args = Array.prototype.slice.call(arguments),\r\n\t\t\tnumArgs = args.length,\r\n\t\t\targ0 = args[0],\r\n\t\t\targ1 = args[1];\r\n\r\n\t\tswitch (numArgs) {\r\n\t\t\tcase 3:\r\n\t\t\t\teventToGrid(arg0, arg1, args[2]);//event,width,height\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tif (arg0 === 'x') {\r\n\t\t\t\t\tpositionToGrid(arg1, args[2], args[3]);//[position], width, height\r\n\t\t\t\t} else if (arg0 === 'y') {\r\n\t\t\t\t\tnoteToGrid(arg1, args[2], args[3]);//note, width, height\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.error('wrong number of arguments');\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\teventToGrid = function (event, width, height, song) {\r\n\t\tif (song === undefined) {\r\n\t\t\tsong = sequencer.getSong();\r\n\t\t}\r\n\r\n\t\tif (event.type !== sequencer.NOTE_ON && event.type !== sequencer.NOTE_OFF) {\r\n\t\t\tconsole.error('please provide a NOTE_ON or a NOTE_OFF event');\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar x = (event.millis / song.durationMillis) * width,\r\n\t\t\ty,\r\n\t\t\tnote = sequencer.createNote(event.noteNumber);\r\n\t\t//position = sequencer.createPosition('ticks', event.ticks);\r\n\r\n\t\treturn {\r\n\t\t\tx: positionToGrid(['ticks', event.ticks], width, song),\r\n\t\t\ty: noteToGrid(note, height, song)\r\n\t\t};\r\n\t};\r\n\r\n\r\n\tpositionToGrid = function (position, width, song) {\r\n\t\tif (song === undefined) {\r\n\t\t\tsong = sequencer.getSong();\r\n\t\t}\r\n\r\n\t\tif (typeString(position) === 'array' || position.type !== 'ticks') {\r\n\t\t\tposition = getPosition(song, position);\r\n\t\t}\r\n\t\t//console.log(position)\r\n\t\tvar x = floor(position.ticks / song.quantizeTicks) * song.quantizeTicks;\r\n\t\t//console.log(x, song.ticks, position.data, song.quantizeTicks);\r\n\t\tx = x / song.ticks;\r\n\t\tx = x * width;\r\n\r\n\t\t//return round(x);\r\n\t\treturn x;\r\n\t};\r\n\r\n\r\n\tnoteToGrid = function (note, height, song) {\r\n\t\tif (song === undefined) {\r\n\t\t\tsong = sequencer.getSong();\r\n\t\t}\r\n\r\n\t\tvar noteNumber = note.number,\r\n\t\t\ty;\r\n\r\n\t\tif (noteNumber < song.lowestNote || noteNumber > song.highestNote) {\r\n\t\t\tconsole.error('note is out of range of the pitch range of this song');\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\ty = (noteNumber - song.highestNote) / song.pitchRange;\r\n\t\ty = y < 0 ? -y : y;\r\n\t\ty = y * height;\r\n\t\t//return round(y);\r\n\t\treturn y;\r\n\t};\r\n\r\n\t// should this be added to sequencer publically? -> no, add to song\r\n\t/*\r\n\t\tsequencer.positionToGrid = positionToGrid;\r\n\t\tsequencer.eventToGrid = eventToGrid;\r\n\t\tsequencer.noteToGrid = noteToGrid;\r\n\t*/\r\n\tsequencer.protectedScope.addInitMethod(function () {\r\n\t\tgetPosition = sequencer.protectedScope.getPosition;\r\n\t\tfloor = sequencer.protectedScope.floor;\r\n\t\tround = sequencer.protectedScope.round;\r\n\t\ttypeString = sequencer.protectedScope.typeString;\r\n\t});\r\n}\r\nfunction songUpdate() {\n\n    'use strict';\n\n    var\n        // import\n        getPosition, // -> defined in position.js\n        parseTimeEvents, // -> defined in parse_time_events.js\n        parseEvents, // -> defined in parse_events.js\n        getInstrument, // -> defined in instrument_manager.js\n        scheduledTasks, // -> defined in open_module.js\n\n        update,\n        update2;\n\n\n    update = function (song, updateTimeEvents) {\n\n        if (sequencer.playing === true) {\n            scheduledTasks.updateSong = function () {\n                update2(song, updateTimeEvents);\n            };\n            return;\n        }\n        //console.log('not here while playing');\n        // console.log('update song');\n        update2(song, updateTimeEvents);\n    };\n\n\n    update2 = function (song, updateTimeEvents) {\n        //console.log('update song');\n        //console.time('update song');\n        var\n            i, id1, id2, id3, tmp,\n            track,\n            part,\n            event,\n            note,\n\n            dirtyEvents,\n            dirtyNotes,\n\n            newEvents = [],\n            changedEvents = [],\n            removedEvents = [],\n            recordedEvents = [],\n\n            newNotes = [],\n            changedNotes = [],\n            removedNotes = [],\n\n            newParts = [],\n            changedParts = [],\n            removedParts = [],\n\n            newTracks = [],\n            changedTracks = [],\n            removedTracks = [],\n\n            eventsMidiAudioMetronome = [],\n            eventsMidiTime = [],\n            events = [],\n            midiEvents = [],\n            audioEvents = [],\n            notes = [],\n            parts = [],\n            tracks = [],\n\n            eventsById = {},\n            notesById = {},\n            partsById = {};\n\n\n        if (updateTimeEvents === true) {\n            //console.log('update time events');\n            parseTimeEvents(song);\n        }\n\n\n        for (id1 in song.tracksById) {\n\n            if (song.tracksById.hasOwnProperty(id1)) {\n\n                track = song.tracksById[id1];\n\n                // console.log('song update track', track.needsUpdate);\n\n                if (track.needsUpdate === true) {\n                    track.update();\n                }\n\n\n                for (id2 in track.partsById) {\n                    if (track.partsById.hasOwnProperty(id2)) {\n\n                        part = track.partsById[id2];\n                        // console.log(part.id, part.needsUpdate, part.dirtyEvents);\n\n                        if (part.needsUpdate === true) {\n                            // console.log('song update calls part.update()');\n                            part.update();\n                        }\n\n                        //console.log(part);\n\n                        dirtyEvents = part.dirtyEvents;\n\n                        for (id3 in dirtyEvents) {\n                            if (dirtyEvents.hasOwnProperty(id3)) {\n                                event = dirtyEvents[id3];\n                                switch (event.state) {\n                                    case 'new':\n                                        newEvents.push(event);\n                                        break;\n                                    case 'recorded':\n                                        recordedEvents.push(event);\n                                        break;\n                                    case 'changed':\n                                        changedEvents.push(event);\n                                        break;\n                                    case 'removed':\n                                        removedEvents.push(event);\n                                        delete part.eventsById[id3];\n                                        break;\n                                }\n                            }\n                        }\n\n\n                        dirtyNotes = part.dirtyNotes;\n\n                        for (id3 in dirtyNotes) {\n                            if (dirtyNotes.hasOwnProperty(id3)) {\n                                note = dirtyNotes[id3];\n                                //console.log(note.state);\n                                switch (note.state) {\n                                    case 'new':\n                                        newNotes.push(note);\n                                        break;\n                                    case 'changed':\n                                        changedNotes.push(note);\n                                        break;\n                                    case 'removed':\n                                        removedNotes.push(note);\n                                        delete part.notesById[id3];\n                                        break;\n                                }\n                            }\n                        }\n\n                        part.dirtyEvents = {};\n                        part.dirtyNotes = {};\n                        /*\n                        if(part.state === 'new' && part.track !== track){\n                            part.state = 'removed';\n                        }\n                        console.log(part.state, part.track);\n                        */\n                        if (part.state !== 'removed') {\n                            notes = notes.concat(part.notes);\n                            events = events.concat(part.events);\n                        } else {\n                            removedNotes = removedNotes.concat(part.notes);\n                            removedEvents = removedEvents.concat(part.events);\n                        }\n\n\n                        switch (part.state) {\n                            case 'new':\n                                newParts.push(part);\n                                partsById[part.id] = part;\n                                break;\n                            case 'changed':\n                                //console.log(part.id);\n                                changedParts.push(part);\n                                partsById[part.id] = part;\n                                break;\n                            case 'removed':\n                                removedParts.push(part);\n                                delete track.partsById[part.id];\n                                break;\n                        }\n                    }\n                }\n\n                //events = events.concat(track.events);\n                //notes = notes.concat(track.notes);\n                parts = parts.concat(track.parts);\n\n\n                switch (track.state) {\n                    case 'clean':\n                        track.index = tracks.length;\n                        tracks.push(track);\n                        break;\n                    case 'new':\n                        newTracks.push(track);\n                        track.state = 'clean';\n                        track.index = tracks.length;\n                        tracks.push(track);\n                        break;\n                    case 'changed':\n                        changedTracks.push(track);\n                        track.state = 'clean';\n                        track.index = tracks.length;\n                        tracks.push(track);\n                        break;\n                    case 'removed':\n                        removedTracks.push(track);\n                        delete song.tracksById[track.id];\n                        break;\n                }\n            }\n        }\n\n\n        for (i = removedEvents.length - 1; i >= 0; i--) {\n            event = removedEvents[i];\n            event.state = 'clean';\n        }\n\n        for (i = removedNotes.length - 1; i >= 0; i--) {\n            note = removedNotes[i];\n            note.state = 'clean';\n        }\n\n        for (i = removedParts.length - 1; i >= 0; i--) {\n            part = removedParts[i];\n            part.state = 'clean';\n        }\n\n\n        // calculate the ticks position of the recorded events\n        if (recordedEvents.length > 0) {\n            parseRecordedEvents(song, recordedEvents);\n        }\n\n        events.sort(function (a, b) {\n            return a.sortIndex - b.sortIndex;\n        });\n\n        notes.sort(function (a, b) {\n            return a.ticks - b.ticks;\n        });\n\n        parts.sort(function (a, b) {\n            return a.ticks - b.ticks;\n        });\n\n        for (i = events.length - 1; i >= 0; i--) {\n            event = events[i];\n            eventsById[event.id] = event;\n            if (event.type === 'audio') {\n                audioEvents.push(event);\n            } else {\n                midiEvents.push(event);\n            }\n        }\n\n        for (i = notes.length - 1; i >= 0; i--) {\n            note = notes[i];\n            notesById[note.id] = note;\n        }\n\n\n        if (updateTimeEvents === false) {\n\n            //console.log(newEvents);\n            //console.log(tmp.length, events.length, newEvents.length, changedEvents.length, song.timeEvents.length, song.metronome.events.length);\n\n            tmp = song.timeEvents.concat(newEvents, changedEvents);\n            parseEvents(song, tmp);\n\n            tmp = [].concat(newNotes, changedNotes);\n            parseMidiNotes(song, tmp);\n\n            tmp = [].concat(newParts, changedParts);\n            parseParts(song, tmp);\n        } else {\n            // if time events have changed we need to update everything!\n            tmp = song.timeEvents.concat(events);\n            parseEvents(song, tmp);\n            parseMidiNotes(song, notes);\n            parseParts(song, parts);\n        }\n\n        /*\n                console.log('  Song.update()');\n                console.log('new tracks', newTracks.length);\n                console.log('new parts', newParts.length);\n                console.log('new events', newEvents.length);\n                console.log('changed tracks', changedTracks.length);\n                console.log('changed parts', changedParts.length);\n                console.log('changed events', changedEvents.length);\n                console.log('removed tracks', removedTracks.length);\n                console.log('removed parts', removedParts.length);\n                console.log('removed events', removedEvents.length);\n                console.log('all events', events.length);\n                console.log('all parts', parts.length);\n                console.log('all tracks', tracks.length);\n                console.log('time events', song.timeEvents.length);\n                console.log('--------');\n        */\n        /*\n                if(changedEvents.length > 0){\n                    console.log('changed events', changedEvents.length);\n                    console.log('changed notes', changedNotes.length);\n                }\n        */\n\n\n        checkDuration(song);\n\n\n        // check if we need to generate new metronome events, metronome.update() calls parseMetronomeEvents()\n        if (song.metronome.bars !== song.bars) {\n            //song.metronome.update(song.metronome.bars, song.bars);\n            song.metronome.update();\n        } else if (updateTimeEvents === true) {\n            song.metronome.update();\n        }\n        eventsMidiAudioMetronome = [].concat(midiEvents, audioEvents, song.metronome.events);\n        eventsMidiAudioMetronome.sort(function (a, b) {\n            //return a.sortIndex - b.sortIndex;\n            return a.ticks - b.ticks;\n        });\n\n\n        eventsMidiTime = [].concat(events, song.timeEvents);\n        eventsMidiTime.sort(function (a, b) {\n            return a.ticks - b.ticks;\n            //return a.sortIndex - b.sortIndex;\n        });\n\n        song.eventsMidiAudioMetronome = eventsMidiAudioMetronome; // all midi, audio and metronome events\n        song.eventsMidiTime = eventsMidiTime; // all midi events plus time events\n        song.events = events; // all events excluding tempo and time signature events and metronome ticks\n        song.midiEvents = midiEvents; // all midi events excluding metronome events\n        song.audioEvents = audioEvents;\n        song.notes = notes;\n        song.parts = parts;\n        song.tracks = tracks;\n\n        song.numEvents = events.length;\n        song.numNotes = notes.length;\n        song.numParts = parts.length;\n        song.numTracks = tracks.length;\n\n        song.eventsById = eventsById;\n        song.notesById = notesById;\n        song.partsById = partsById;\n\n        song.newEvents = newEvents;\n        song.changedEvents = changedEvents;\n        song.removedEvents = removedEvents;\n\n        song.newNotes = newNotes;\n        song.changedNotes = changedNotes;\n        song.removedNotes = removedNotes;\n\n        song.newParts = newParts;\n        song.changedParts = changedParts;\n        song.removedParts = removedParts;\n\n\n        // update all dependent objects\n\n        song.playhead.updateSong();\n        song.playheadRecording.updateSong();\n        song.scheduler.updateSong();\n        song.scheduler.reschedule();\n        song.followEvent.updateSong();\n\n        if (song.grid !== undefined) {\n            song.grid.update();\n        }\n\n        if (song.keyEditor !== undefined) {\n            song.keyEditor.updateSong({\n                numBars: song.bars,\n                newEvents: newEvents,\n                changedEvents: changedEvents,\n                removedEvents: removedEvents,\n                newNotes: newNotes,\n                changedNotes: changedNotes,\n                removedNotes: removedNotes,\n                newParts: newParts,\n                changedParts: changedParts,\n                removedParts: removedParts\n            });\n        }\n        //console.timeEnd('update song')\n    };\n\n\n    function checkDuration(song, trim) {\n        var lastEvent = song.lastEventTmp,\n            position, key;\n\n        //console.log('checkDuration', lastEvent.barsAsString,lastEvent.bar,song.lastBar);\n        //console.log(lastEvent);\n        //console.log(song.autoSize);\n\n        if (song.autoSize === false) {\n            // don't allow the song to grow\n            song.lastBar = song.bars;\n        } else if (trim) {\n            // remove bars that don't contain any events(called via song.trim())\n            song.lastBar = lastEvent.bar;\n        } else {\n            // grow if needed\n            song.lastBar = Math.max(song.lastBar, lastEvent.bar);\n        }\n\n        song.bars = parseInt(song.lastBar);\n        position = getPosition(song, ['barsandbeats',\n            song.bars,\n            lastEvent.nominator,\n            lastEvent.numSixteenth,\n            lastEvent.ticksPerSixteenth,\n            true\n        ]);\n\n        //console.log(song.bars, lastEvent.nominator, lastEvent.numSixteenth, lastEvent.ticksPerSixteenth);\n\n        song.durationTicks = position.ticks;\n        song.durationMillis = position.millis;\n        //console.log(song.bars, '->', position.barsAsString, song.durationMillis, song.durationTicks);\n\n        // update song.lastEvent\n        for (key in position) {\n            if (position.hasOwnProperty(key)) {\n                //console.log(key, position[key])\n                song.lastEvent[key] = position[key];\n            }\n        }\n        //console.log(song.name, song.durationTicks, song.durationMillis, song.bars);\n    }\n\n\n    function parseMetronomeEvents(song, events) {\n        //console.log('parseMetronomeEvents', events.length);\n        var tmp = events.concat(song.timeEvents);\n        parseEvents(song, tmp);\n\n        events = events.concat(song.events);\n        events.sort(function (a, b) {\n            return a.sortIndex - b.sortIndex;\n        });\n        //console.log(1,song.allEvents.length);\n        song.eventsMidiAudioMetronome = [].concat(events);\n        //console.log(2,song.allEvents.length);\n        //console.log(song.allEvents);\n\n        // song.playhead.updateSong();\n        // song.scheduler.updateSong();\n        // song.scheduler.reschedule();\n        // song.followEvent.updateSong();\n    }\n\n\n    function parseParts(song, parts) {\n        var i, part;\n\n        //console.log(' → parse parts', parts.length);\n\n        for (i = parts.length - 1; i >= 0; i--) {\n            part = parts[i];\n            //part.update();\n            //part.track.update();\n            part.startPosition = song.getPosition('ticks', part.start.ticks);\n            part.endPosition = song.getPosition('ticks', part.end.ticks);\n            part.start.millis = part.startPosition.millis;\n            part.end.millis = part.endPosition.millis;\n            part.duration.millis = part.end.millis - part.start.millis;\n            part.state = 'clean';\n            //console.log('s', part.start.ticks, 'e', part.end.ticks);\n            //console.log('s', part.startPosition.barsAsString, 'e', part.endPosition.barsAsString);\n        }\n    }\n\n\n    function parseMidiNotes(song, notes) {\n        var i, note;\n\n        //console.log(' → parseMidiNotes', notes.length);\n\n        for (i = notes.length - 1; i >= 0; i--) {\n            note = notes[i];\n            //console.log(note);\n            if (note.endless === true) {\n                note.durationTicks = sequencer.ticks - note.noteOn.ticks;\n                note.durationMillis = sequencer.millis - note.noteOn.millis;\n            } else {\n                note.durationTicks = note.noteOff.ticks - note.noteOn.ticks;\n                note.durationMillis = note.noteOff.millis - note.noteOn.millis;\n            }\n            note.ticks = note.noteOn.ticks;\n            note.millis = note.noteOn.millis;\n            note.number = note.noteOn.noteNumber;\n            note.state = 'clean';\n        }\n    }\n\n\n    function parseRecordedEvents(song, events) {\n        var i, timeData,\n            position, event,\n            time,\n            timestamp = song.recordTimestamp,\n            startMillis = song.recordStartMillis,\n            totalTime = startMillis,\n            maxi = events.length,\n            playhead = song.playheadRecording;\n\n        //if(startMillis < 0){\n        //    playhead.set('millis', 0);\n        //}else{\n        playhead.set('millis', startMillis);\n        //}\n        //console.log(song, events, timestamp);\n        //console.log('parseRecordedEvents', timestamp, startMillis);\n\n        for (i = 0; i < maxi; i++) {\n            event = events[i];\n\n            time = (event.recordMillis - timestamp) + startMillis;\n            position = playhead.update('millis', time - totalTime); // update by supplying the diff in millis\n            totalTime = time;\n\n            timeData = sequencer.getNiceTime(position.millis);\n\n            //console.log(event.ticks, position.ticks);\n            //console.log(event.recordMillis, event.recordMillis - timestamp);\n\n            event.ticks = position.ticks;\n\n            event.bpm = position.bpm;\n            event.factor = position.factor;\n            event.nominator = position.nominator;\n            event.denominator = position.denominator;\n\n            event.ticksPerBar = position.ticksPerBar;\n            event.ticksPerBeat = position.ticksPerBeat;\n            event.ticksPerSixteenth = position.ticksPerSixteenth;\n\n            event.numSixteenth = position.numSixteenth;\n\n            event.millisPerTick = position.millisPerTick;\n            event.secondsPerTick = position.secondsPerTick;\n\n            event.millis = position.millis;\n            event.seconds = position.millis / 1000;\n\n            event.hour = timeData.hour;\n            event.minute = timeData.minute;\n            event.second = timeData.second;\n            event.millisecond = timeData.millisecond;\n            event.timeAsString = timeData.timeAsString;\n            event.timeAsArray = timeData.timeAsArray;\n\n            event.bar = position.bar;\n            event.beat = position.beat;\n            event.sixteenth = position.sixteenth;\n            event.tick = position.tick;\n            event.barsAsString = position.bar + ':' + position.beat + ':' + position.sixteenth + ':' + position.tick;\n            event.barsAsArray = [position.bar, position.beat, position.sixteenth, position.tick];\n\n            event.state = 'clean';\n        }\n\n        song.recordStartMillis = undefined;\n        song.recordTimestamp = undefined;\n    }\n\n\n    // not in use!\n    function sortEvents(events) {\n        var maxi = events.length,\n            i, event, lastTick = -100000,\n            buffer,\n            newOrder = [];\n\n        for (i = 0; i < maxi; i++) {\n            event = events[i];\n            if (buffer === undefined) {\n                buffer = [];\n            }\n            buffer.push(event);\n            if (event.ticks !== lastTick) {\n                if (buffer.length > 1) {\n                    // console.log('unsorted', buffer.length);\n                    // buffer.forEach(function(e){\n                    //     console.log(e.ticks, e.type, e.data1, e.data2);\n                    // });\n\n                    buffer.sort(function (a, b) {\n\n                        // question is: comes a after b\n\n                        if (b.type === 144 && a.type === 128) {\n                            // note off before note on\n                            return false;\n\n\n                        } else if (b.type === 144 && a.type === 176 && a.data1 === 64 && a.data2 === 127) {\n                            // sustain pedal down before note on\n                            return false;\n\n\n                        } else if (b.type === 176 && b.data1 === 64 && b.data2 === 127 && a.type === 128) {\n                            // note off before sustain pedal down\n                            return false;\n\n\n                        } else if (b.type === 128 && a.type === 176 && a.data1 === 64 && a.data2 === 0) {\n                            // sustain pedal up before note off -> for better performance, the note off event doesn't get added to the sustainPedalSamples array\n                            return false;\n\n                        } else if (b.type === 144 && a.type === 176 && a.data1 === 64 && a.data2 === 0) {\n                            // sustain pedal up before note on\n                            return false;\n\n\n                        } else if (a.type === 176 && a.data1 === 64 && a.data2 === 0 && b.type === 176 && b.data1 === 64 && b.data2 === 127) {\n                            // sustain pedal up should come before sustain pedal up\n                            return false;\n\n                        } else {\n                            return true;\n                        }\n                    });\n                    // console.log('sorted');\n                    // buffer.forEach(function(e){\n                    //     console.log(e.ticks, e.type, e.data1, e.data2);\n                    // });\n                    // console.log('---');\n                    newOrder = newOrder.concat(buffer);\n                    buffer = undefined;\n                } else {\n                    newOrder.push(buffer[0]);\n                }\n            }\n            lastTick = event.ticks;\n        }\n    }\n\n\n    sequencer.protectedScope.update = update;\n    sequencer.protectedScope.checkDuration = checkDuration;\n    sequencer.protectedScope.parseMetronomeEvents = parseMetronomeEvents;\n\n    sequencer.protectedScope.addInitMethod(function () {\n        getPosition = sequencer.protectedScope.getPosition;\n        parseEvents = sequencer.protectedScope.parseEvents;\n        parseTimeEvents = sequencer.protectedScope.parseTimeEvents;\n        getInstrument = sequencer.protectedScope.getInstrument;\n        scheduledTasks = sequencer.protectedScope.scheduledTasks;\n    });\n}\n/*\r\n    Events are always added to a Part before they are added to the track, in other words: a Track is a Part container, a Part is an Event container.\r\n\r\n    The events array in a Track contains only references to the Events in the Parts.\r\n\r\n    Tracks and Parts cannot contain tempo or time signature events, however, if you export Parts or Tracks as midi file you can choose to add the tempo track\r\n    of the song to a Track or a Part. If you export a Part to a Track, it will be converted to a Track containing that Part.\r\n\r\n*/\r\n\r\nfunction track() {\r\n\r\n  'use strict';\r\n\r\n  var\r\n    debug = sequencer.debug,\r\n\r\n    slice = Array.prototype.slice,\r\n\r\n    //import\r\n    createPart, // → defined in part.js\r\n    typeString, // → defined in utils.js\r\n    copyName, // → defined in utils.js\r\n    findItem, // → defined in utils.js\r\n    objectForEach, // → defined in utils.js\r\n    checkPosition, // → defined in get_position.js\r\n    createMidiEvent, // → defined in midi_event.js\r\n    createMidiNote, // → defined in midi_note.js\r\n    context, // -> defined in open_module.js\r\n    createInstrument, // defined in instrument.js\r\n    createAudioTrack, // defined in audio_track.js\r\n    createPanner, // defined in channel_effects.js\r\n    addMidiEventListener, // defined in midi_system.js\r\n    removeMidiEventListener, // defined in midi_system.js\r\n    encodeAudio, // defined in audio_encoder.js\r\n    handleMidiMessageTrack, // defined in midi_system.js\r\n\r\n\r\n    findEvent, // → defined in find_event.js\r\n    findNote, // → defined in find_event.js\r\n    getStats, // → defined in event_statistics.js\r\n\r\n    trackId = 0,\r\n\r\n    //public\r\n    Track;\r\n\r\n\r\n  Track = function (name, type, song) {\r\n    this.className = 'Track';\r\n    this.id = 'T' + trackId++ + '' + new Date().getTime();\r\n    //console.log('creating track', this.id, name);\r\n    this.type = type || 'instrument';\r\n    this.name = name || this.id;\r\n    this.song = song;\r\n    this.instrumentName = '';\r\n    this.events = [];\r\n    this.eventsById = {};\r\n    this.notes = [];\r\n    this.notesById = {};\r\n    this.parts = [];\r\n    this.partsById = {};\r\n    this.numParts = 0;\r\n    this.numEvents = 0;\r\n    this.needsUpdate = false;\r\n    this.audioLatency = 0;\r\n\r\n    //@TODO: create a plugin that gives a pulsating volume effect\r\n    //this.volumeChangeMethod = 'equal_power'; // 'direct', equal_power' or 'linear'\r\n\r\n    /* routing */\r\n    this.effects = {};\r\n    this.numEffects = 0;\r\n    this.volume = 1;\r\n\r\n    this.input = context.createGainNode();\r\n    this.input.gain.value = 1;\r\n\r\n    this.output = context.createGainNode();\r\n    this.output.gain.value = this.volume;\r\n\r\n    ///*\r\n    this.panner = createPanner();\r\n    // input to panner\r\n    this.input.connect(this.panner.node);\r\n    // panner to output, and output to song.gain as soon as the track gets added to a song\r\n    this.panner.node.connect(this.output);\r\n    //*/\r\n\r\n    /*\r\n            this.panner = context.createPanner();\r\n            this.panner.panningModel = 'equalpower';\r\n            this.panner.setPosition(0, 0, 0);\r\n\r\n            this.input.connect(this.panner);\r\n            this.panner.connect(this.output);\r\n    */\r\n\r\n    this.lastEffect = this.input;\r\n\r\n    this.midiInputs = {};\r\n    this.midiOutputs = {};\r\n    this.routeToMidiOut = false;\r\n    this.midiEventListeners = {};\r\n    this.monitor = false;\r\n    this.recordEnabled = false;\r\n\r\n    this.mute = false;\r\n    this.solo = false;\r\n    this.channel = 'any'; // note that this is the output channel, i.e. the events of this track are routed to the set channel\r\n    this.quantizeValue = 0;\r\n    this.fixedLengthValue = 0;\r\n    this.autoQuantize = false;\r\n    this.retrospectiveRecording = [];\r\n    this.recordingNotes = {};\r\n    this.enableRetrospectiveRecording = false;\r\n    if (type !== 'metronome') {\r\n      //console.log(this.instrumentName, this.id);\r\n      this.setInstrument(this.instrumentName);\r\n    }\r\n    //this.audio = createAudioTrack(this);\r\n  };\r\n\r\n\r\n  function getPart(data, track) {\r\n    var part = false;\r\n    if (!data) {\r\n      part = false;\r\n    } else if (data.className === 'Part') {\r\n      part = data;\r\n    } else if (typeString(data) === 'string') {\r\n      part = track.partsById[data];\r\n    } else if (isNaN(data) === false) {\r\n      part = track.parts[data];\r\n    }\r\n    return part;\r\n  }\r\n\r\n\r\n  function getEvent(data, track) {\r\n    var event = false;\r\n    if (!data) {\r\n      event = false;\r\n    } else if (data.className === 'MidiEvent' || data.className === 'AudioEvent') {\r\n      event = data;\r\n    } else if (typeString(data) === 'array' && data.length === 4) {\r\n      // new event as array\r\n      event = createMidiEvent(data);\r\n    } else if (typeString(data) === 'string') {\r\n      // get event by id\r\n      event = track.eventsById[data];\r\n    } else if (isNaN(data) === false) {\r\n      // get event by index\r\n      event = track.events[data];\r\n    }\r\n    return event;\r\n  }\r\n\r\n\r\n  function getPartsAndConfig(args, track) {\r\n    args = Array.prototype.slice.call(args);\r\n    var\r\n      j = 0,\r\n      i = 0,\r\n      maxi,\r\n      part,\r\n      arg,\r\n      arg0 = args[0],\r\n      parts = [],\r\n      config = [];\r\n\r\n    //console.log(args, track);\r\n    //console.log(args);\r\n    //console.log(arg0);\r\n\r\n    if (typeString(arg0) === 'array') {\r\n\r\n      for (i = arg0.length - 1; i >= 0; i--) {\r\n        arg = arg0[i];\r\n        part = getPart(arg, track);\r\n        if (part) {\r\n          parts.push(part);\r\n        }\r\n      }\r\n      j = parts.length === 0 ? 0 : 1;\r\n    }\r\n\r\n    maxi = args.length;\r\n    for (i = j; i < maxi; i++) {\r\n      arg = args[i];\r\n      part = getPart(arg, track);\r\n      if (part) {\r\n        parts.push(part);\r\n      } else {\r\n        config.push(arg);\r\n      }\r\n    }\r\n\r\n    if (parts.length === 0) {\r\n      //console.error('Please provide one or more parts, or an array of parts');\r\n      console.warn('no parts added');\r\n      return false;\r\n    }\r\n    /*\r\n            if(config.length === 1 && typeString(config[0]) === 'array'){\r\n                config = config[0];\r\n            }\r\n    */\r\n    return {\r\n      parts: parts,\r\n      config: config\r\n    };\r\n  }\r\n\r\n\r\n  function getEventsAndConfig(args, track) {\r\n    args = Array.prototype.slice.call(args);\r\n\r\n    var\r\n      j = 0,\r\n      i = 0,\r\n      maxi,\r\n      event,\r\n      arg,\r\n      arg0 = args[0],\r\n      events = [],\r\n      config = [];\r\n\r\n\r\n    if (typeString(arg0) === 'array') {\r\n\r\n      for (i = arg0.length - 1; i >= 0; i--) {\r\n        arg = arg0[i];\r\n        //@TODO: this can be dangerous!\r\n        //console.log(arg);\r\n        event = getEvent(arg, track);\r\n        //console.log(event);\r\n        if (event) {\r\n          events.push(event);\r\n        }\r\n      }\r\n      //j = events.length === 0 ? 0 : 1;\r\n      j = 1;\r\n    }\r\n\r\n    maxi = args.length;\r\n    for (i = j; i < maxi; i++) {\r\n      arg = args[i];\r\n      event = getEvent(arg, track);\r\n      if (event) {\r\n        events.push(event);\r\n      } else {\r\n        config.push(arg);\r\n      }\r\n    }\r\n\r\n    if (events.length === 0) {\r\n      if (debug >= 2) {\r\n        console.info('Please provide one or more events, or an array of events');\r\n      }\r\n    }\r\n\r\n    if (config.length === 1 && typeString(config[0]) === 'array') {\r\n      config = config[0];\r\n    }\r\n\r\n    //console.log(events);\r\n    //console.log(config);\r\n\r\n    return {\r\n      events: events,\r\n      config: config\r\n    };\r\n  }\r\n\r\n\r\n  function getTicksAtPosition(position, song) {\r\n    var type, ticks;\r\n\r\n    position = checkPosition(position);\r\n\r\n    if (position === false) {\r\n      //console.warn('wrong position data');\r\n      return false;\r\n    }\r\n\r\n    type = position[0];\r\n\r\n    if (song === undefined && type !== 'ticks') {\r\n      console.error('Track has not been added to a song yet, you can only use tick values');\r\n      return false;\r\n    }\r\n\r\n    switch (type) {\r\n      case 'ticks':\r\n        ticks = position[1];\r\n        break;\r\n      case 'millis':\r\n        ticks = song.millisToTicks(position[1]);\r\n        break;\r\n      case 'barsbeats':\r\n      case 'barsandbeats':\r\n      case 'time':\r\n        position = song.getPosition(position, 'ticks');\r\n        ticks = position.ticks;\r\n        break;\r\n    }\r\n    //return parseInt(ticks, 10);\r\n    return ticks;\r\n  }\r\n\r\n\r\n  function addParts(args, track) {\r\n    if (args === false) {\r\n      return;\r\n    }\r\n    var i, j, e, part, eventsById, ticks, move,\r\n      song = track.song,\r\n      parts = args.parts,\r\n      maxi = parts.length,\r\n      partsById = track.partsById;\r\n\r\n\r\n    //for(i = parts.length - 1; i >= 0; i--){\r\n    for (i = 0; i < maxi; i++) {\r\n      part = getPart(parts[i]);\r\n\r\n      if (part === false) {\r\n        console.error(part, 'is not a part');\r\n        continue;\r\n      }\r\n      if (part.track !== undefined) {\r\n        //console.warn('this part has already been added to track', part.track.id, ', adding a copy');\r\n        part = part.copy();\r\n      }\r\n      if (part.hasAudioEvents && track.audio === undefined) {\r\n        track.audio = createAudioTrack(track);\r\n      }\r\n\r\n      //console.log(part.id, part.trackId);\r\n\r\n      part.song = song;\r\n      part.track = track;\r\n      part.trackId = track.id;\r\n\r\n      eventsById = part.eventsById;\r\n      ticks = part.ticks;\r\n      move = ticks !== 0;\r\n\r\n      //console.log(part.id, move, eventsById);\r\n\r\n      for (j in eventsById) {\r\n        if (eventsById.hasOwnProperty(j)) {\r\n          e = eventsById[j];\r\n          //console.log(e, track, track.id);\r\n          e.track = track;\r\n          e.channel = track.channel;\r\n          e.trackId = track.id;\r\n          if (move) {\r\n            e.ticks += ticks;\r\n          }\r\n          e.state = 'new';\r\n        }\r\n      }\r\n\r\n      part.state = 'new';\r\n\r\n      //if(move){\r\n      part.needsUpdate = true;\r\n      //}\r\n\r\n      partsById[part.id] = part;\r\n      // console.log('partsById', partsById);\r\n    }\r\n\r\n    track.needsUpdate = true;\r\n  }\r\n\r\n\r\n  function moveParts(args, track) {\r\n    if (args === false) {\r\n      return;\r\n    }\r\n    var newTicks, part,\r\n      parts = args.parts,\r\n      ticks = args.config[0],\r\n      diffTicks = ticks, i;\r\n\r\n    //console.log('moveParts',parts);\r\n\r\n    for (i = parts.length - 1; i >= 0; i--) {\r\n      part = parts[i];\r\n      newTicks = part.ticks + ticks;\r\n\r\n      //console.log(newTicks, ticks, part.ticks);\r\n\r\n      if (newTicks < 0) {\r\n        newTicks = 0;\r\n        diffTicks = -part.ticks;\r\n      }\r\n\r\n      part.ticks = newTicks;\r\n      //console.log(part.events, diffTicks);\r\n      part.moveEvents(part.events, diffTicks);\r\n      if (part.state !== 'new') {\r\n        part.state = 'changed';\r\n      }\r\n      //console.log('Track.moveParts()', part.state);\r\n    }\r\n    track.needsUpdate = true;\r\n  }\r\n\r\n\r\n  function movePartsTo(args, track) {\r\n    if (args === false) {\r\n      return;\r\n    }\r\n\r\n    var i, part, ticks, diffTicks,\r\n      song = track.song,\r\n      parts = args.parts,\r\n      positions = args.config;\r\n\r\n    for (i = parts.length - 1; i >= 0; i--) {\r\n      part = parts[i];\r\n      ticks = getTicksAtPosition(positions[i], song);\r\n      // /console.log(ticks, positions[i]);\r\n\r\n      if (ticks === false) {\r\n        console.warn('wrong position data, skipping part', part.id);\r\n        continue;\r\n      }\r\n\r\n      diffTicks = ticks - part.ticks;\r\n      //console.log(part.ticks, ticks, diffTicks);\r\n      part.ticks = ticks;\r\n      part.moveAllEvents(diffTicks);\r\n      //console.log('Track.movePartsTo()', part.state);\r\n      if (part.state !== 'new') {\r\n        part.state = 'changed';\r\n      }\r\n    }\r\n\r\n    track.needsUpdate = true;\r\n  }\r\n\r\n\r\n  function removeParts(args, track) {\r\n    if (args === false) {\r\n      return [];\r\n    }\r\n    var i, part,\r\n      removed = [],\r\n      tobeRemoved = args.parts;\r\n\r\n    if (tobeRemoved === undefined) {\r\n      console.log('weird situation, check this when it happens');\r\n      return [];\r\n    }\r\n\r\n    for (i = tobeRemoved.length - 1; i >= 0; i--) {\r\n      part = tobeRemoved[i];\r\n      //console.log('removing part', part, 'from track', track.id);\r\n      if (part.track !== undefined && part.track !== track) {\r\n        console.warn('can\\'t remove: this part belongs to track', part.track.id);\r\n        continue;\r\n      }\r\n\r\n      removed.push(part);\r\n      part.state = 'removed';\r\n      part.reset(true, true);\r\n    }\r\n    track.needsUpdate = true;\r\n    return removed;\r\n  }\r\n\r\n\r\n  function removeEvents(args, track) {\r\n    if (args === false) {\r\n      return;\r\n    }\r\n\r\n    var i, part, partId, event, eventsPerPart = {},\r\n      removed = [],\r\n      tobeRemoved = args;//.events;\r\n\r\n\r\n    for (i = tobeRemoved.length - 1; i >= 0; i--) {\r\n      event = tobeRemoved[i];\r\n      if (event.track !== undefined && event.track !== null && event.track !== track) {\r\n        console.warn('can\\'t remove: this event belongs to track', event.track.id);\r\n        continue;\r\n      }\r\n      partId = event.partId;\r\n      if (eventsPerPart[partId] === undefined) {\r\n        eventsPerPart[partId] = [];\r\n      }\r\n      eventsPerPart[partId].push(event);\r\n      removed.push(event);\r\n    }\r\n\r\n    for (partId in eventsPerPart) {\r\n      if (eventsPerPart.hasOwnProperty(partId)) {\r\n        part = track.partsById[partId];\r\n        part.removeEvents(eventsPerPart[partId]);\r\n      }\r\n    }\r\n\r\n    track.needsUpdate = true;\r\n    return removed;\r\n  }\r\n\r\n\r\n  /*\r\n      getInput = function(){\r\n          var args = Array.prototype.slice.call(arguments),\r\n              loop, arg,\r\n              type, events = [];\r\n\r\n          loop = function(data, i, maxi){\r\n              var midiData;\r\n              for(i = 0; i < maxi; i++){\r\n                  arg = data[i];\r\n                  type = typeString(arg);\r\n                  if(arg === undefined){\r\n                      continue;\r\n                  }else if(type === 'midimessageevent'){\r\n                      midiData = arg.data;\r\n                      events.push(createMidiEvent(0, midiData[0], midiData[1], midiData[2]));\r\n                  }else if(arg.className === 'MidiEvent'){\r\n                      events.push(arg);\r\n                  }else if(type === 'array'){\r\n                      loop(arg, 0, arg.length);\r\n                  }\r\n              }\r\n          };\r\n\r\n          loop(args, 0, args.length);\r\n          return events;\r\n      };\r\n  */\r\n\r\n  Track.prototype.addPart = Track.prototype.addParts = function () {//newParts\r\n    //console.log('addPart',arguments);\r\n    var args = getPartsAndConfig(arguments, this);\r\n    addParts(args, this);\r\n  };\r\n\r\n\r\n  //addPartsAt(part1,part2,'ticks',480,1920); -> no\r\n  //addPartsAt([part1,part2],'ticks',[480,1920]); -> no\r\n  //addPartsAt([part1,part2],['ticks',480,1920]); -> no\r\n\r\n  //addPartsAt([part1, part2], [['ticks',480], ['ticks',1920]]); -> yes\r\n  //addPartsAt(part1, part2, ['ticks',480], ['ticks',1920]); -> yes\r\n  //addPartsAt(part1, part2, [['ticks',480], ['ticks',1920]]); -> yes\r\n  //addPartsAt([part1, part2], ['ticks',480], ['ticks',1920]); -> yes\r\n\r\n  Track.prototype.addPartAt = Track.prototype.addPartsAt = function () {\r\n    var args = getPartsAndConfig(arguments, this),\r\n      config,\r\n      parts,\r\n      i, part, ticks;\r\n\r\n    if (args === false) {\r\n      return;\r\n    }\r\n\r\n    parts = args.parts;\r\n    config = args.config;\r\n\r\n    if (config === undefined) {\r\n      console.error('please provide position data');\r\n      return false;\r\n    }\r\n\r\n    //console.log('addPartsAt', args.parts, args.config);\r\n\r\n    for (i = parts.length - 1; i >= 0; i--) {\r\n      part = parts[i];\r\n      if (config[0] === 'ticks') {\r\n        ticks = config[1];\r\n      } else {\r\n        ticks = getTicksAtPosition(config[i], this.song);\r\n      }\r\n      //console.log('addPartsAt',this.id, part.track, part.id, ticks, config[i]);\r\n      //console.log(part.ticks, ticks);\r\n      if (ticks === false) {\r\n        continue;\r\n      }\r\n      part.ticks += ticks;\r\n    }\r\n\r\n    addParts(args, this);\r\n  };\r\n\r\n  /*\r\n      Track.prototype.addPartAt = function(part, position){\r\n          var ticks = getTicksAtPosition(position);\r\n          part = getPart(part, this);\r\n\r\n          if(ticks === false){\r\n              console.error('please provide a valid position');\r\n              return false;\r\n          }\r\n\r\n          if(part === false){\r\n              console.error('please provide a valid part');\r\n              return false;\r\n          }\r\n\r\n          part.ticks += ticks;\r\n          //console.log(ticks);\r\n          addParts({parts:[part], config:[]}, this);\r\n      };\r\n  */\r\n\r\n  Track.prototype.movePart = Track.prototype.moveParts = function () {//parts, ticks\r\n    var args = getPartsAndConfig(arguments, this);\r\n    moveParts(args, this);\r\n  };\r\n\r\n\r\n  Track.prototype.movePartTo = Track.prototype.movePartsTo = function () {//selectedParts, position\r\n    var args = getPartsAndConfig(arguments, this);\r\n    //console.log('movePartTo', args);\r\n    movePartsTo(args, this);\r\n  };\r\n\r\n\r\n  Track.prototype.moveAllParts = function (ticks) {\r\n    this.moveParts({ parts: this.parts, config: [ticks] });\r\n  };\r\n\r\n\r\n  Track.prototype.copyPart = Track.prototype.copyParts = function () {\r\n    var args = getPartsAndConfig(arguments, this),\r\n      selectedParts,\r\n      copiedParts = [];\r\n\r\n    if (args === false) {\r\n      return;\r\n    }\r\n\r\n    if (selectedParts.length === 0) {\r\n      console.error('no parts');\r\n      return;\r\n    }\r\n    selectedParts = args.parts;\r\n\r\n    selectedParts.forEach(function (part) {\r\n      copiedParts.push(part.copy());\r\n    });\r\n\r\n    return copiedParts.length === 1 ? copiedParts[0] : copiedParts;\r\n  };\r\n\r\n\r\n  Track.prototype.removePart = function () {\r\n    var args = getPartsAndConfig(arguments, this),\r\n      removed = removeParts(args, this);\r\n    return removed.length === 1 ? removed[0] : removed;\r\n  };\r\n\r\n\r\n  Track.prototype.removeParts = function () {\r\n    var args = getPartsAndConfig(arguments, this);\r\n    return removeParts(args, this);\r\n  };\r\n\r\n\r\n  Track.prototype.getPart = function (arg) {\r\n    return getPart(arg);\r\n  };\r\n\r\n\r\n  Track.prototype.getParts = function () {\r\n    var args = Array.prototype.slice.call(arguments),\r\n      arg,\r\n      result = [],\r\n      loop;\r\n\r\n    loop = function (data, i) {\r\n      arg = data[i];\r\n      if (typeString(arg) === 'array') {\r\n        loop(arg, 0);\r\n      } else {\r\n        result.push(getPart(arg));\r\n      }\r\n    };\r\n\r\n    loop(args, 0);\r\n    return result;\r\n  };\r\n\r\n\r\n  Track.prototype.getPartAt = Track.prototype.getPartsAt = function (position) {\r\n    var ticks = getTicksAtPosition(position, this.song),\r\n      parts = this.parts,\r\n      selectedParts = [];\r\n\r\n    if (ticks === false) {\r\n      console.error('please provide position as array, for instance: [\\'barsandbeats\\',5,1,2,0]');\r\n      return;\r\n    }\r\n\r\n    parts.forEach(function (part) {\r\n      if (part.ticks === ticks) {\r\n        selectedParts.push(part);\r\n      }\r\n    });\r\n\r\n    return selectedParts;\r\n  };\r\n\r\n\r\n  Track.prototype.getPartFromTo = Track.prototype.getPartsFromTo = function (from, to) {\r\n    var parts = this.parts,\r\n      selectedParts = [],\r\n      fromTicks = getTicksAtPosition(from, this.song),\r\n      toTicks = getTicksAtPosition(to, this.song);\r\n\r\n    if (fromTicks === false) {\r\n      console.error('invalid position data for from position');\r\n      return;\r\n    }\r\n\r\n    if (toTicks === false) {\r\n      console.error('invalid position data for from position');\r\n      return;\r\n    }\r\n\r\n    parts.forEach(function (part) {\r\n      if (fromTicks >= part.start.ticks && fromTicks <= part.end.ticks || toTicks >= part.start.ticks && toTicks <= part.end.ticks) {\r\n        selectedParts.push(part);\r\n      }\r\n    });\r\n\r\n    return selectedParts;\r\n  };\r\n\r\n\r\n  Track.prototype.getPartBetween = Track.prototype.getPartBetween = function (from, to) {\r\n    var parts = this.parts,\r\n      selectedParts = [],\r\n      fromTicks = getTicksAtPosition(from, this.song),\r\n      toTicks = getTicksAtPosition(toTicks, this.song);\r\n\r\n    if (fromTicks === false || toTicks === false) {\r\n      console.error('please provide position as array, for instance: [\\'barsandbeats\\',5,1,2,0]');\r\n      return;\r\n    }\r\n\r\n    parts.forEach(function (part) {\r\n      if (part.start.ticks >= fromTicks && part.end.ticks <= toTicks) {\r\n        selectedParts.push(part);\r\n      }\r\n    });\r\n\r\n    return selectedParts;\r\n  };\r\n\r\n\r\n  Track.prototype.copy = function () {\r\n    var track = new Track(copyName(this.name)),\r\n      part, i, effect,\r\n      parts = this.parts,\r\n      copiedParts = [];\r\n\r\n    track.song = null;\r\n    track.instrumentId = this.instrumentId;\r\n    track.numEffects = this.numEffects;\r\n    if (this.numEffects > 0) {\r\n      track.effects = {};\r\n      for (i in this.effects) {\r\n        if (this.effects.hasOwnProperty(i)) {\r\n          effect = this.effects[i];\r\n          track.effects[effect.id] = effect.copy();\r\n        }\r\n      }\r\n    }\r\n\r\n    for (i = parts.length - 1; i >= 0; i--) {\r\n      part = parts[i];\r\n      copiedParts.push(part.copy());\r\n    }\r\n    //console.log(parts.length);\r\n    track.addParts(copiedParts);\r\n    return track;\r\n  };\r\n\r\n\r\n  Track.prototype.removeEvent = Track.prototype.removeEvents = function () {//events\r\n    var args = getEventsAndConfig(arguments, this);\r\n    removeEvents(args.events, this);\r\n  };\r\n\r\n\r\n  Track.prototype.removeEventsFromTo = function (from, to) {\r\n    console.warn('removeEventsFromTo() is temporarily disabled');\r\n    //removeEventsFromTo(from, to, this);\r\n  };\r\n\r\n\r\n  Track.prototype.removeEventAt = Track.prototype.removeEventsAt = function (position) {\r\n    console.warn('removeEventAt() is temporarily disabled');\r\n    //removeEventsAt(position, this);\r\n  };\r\n\r\n\r\n  Track.prototype.removeAllEvents = function () {\r\n    removeEvents(this.events, this);\r\n  };\r\n\r\n\r\n  Track.prototype.transposePart = function (part, semi) {\r\n    var stats = part.getStats('noteNumber all'),\r\n      min = 0, max = 127, semi2;\r\n    //console.log('transposePart', semi);\r\n    if (this.song) {\r\n      min = this.song.lowestNote;\r\n      max = this.song.highestNote;\r\n    }\r\n    //console.log(stats.min, min, stats.max, max);\r\n    if (stats.min + semi < min) {\r\n      semi2 = min - stats.min;\r\n      return;\r\n    } else if (stats.max + semi > max) {\r\n      semi2 = max = stats.max;\r\n      return;\r\n    }\r\n    //console.log(semi, semi2);\r\n    part.transposeAllEvents(semi);\r\n  };\r\n\r\n  // Track.prototype.addEvents = function(){\r\n  //     var part = sequencer.createPart();\r\n  //     part.addEvents(arguments);\r\n  //     this.addPart(part);\r\n  // };\r\n\r\n  // move events\r\n  /*\r\n      Track.prototype.moveEvent = Track.prototype.moveEvents = function(){//events, ticks\r\n          var args = getEventsAndConfig(arguments);\r\n          moveEvents(args.config[0], args.events, this);\r\n      };\r\n\r\n\r\n      Track.prototype.moveEventTo = Track.prototype.moveEventsTo = function(){//events, position\r\n          var args = getEventsAndConfig(arguments);\r\n          moveEventsTo(args.config[0], args.events, this);\r\n      };\r\n\r\n\r\n      Track.prototype.moveAllEvents = function(ticks){\r\n          moveEvents(ticks, this.events, this);\r\n      };\r\n\r\n\r\n      Track.prototype.moveAllEventsTo = function(position){\r\n          moveEventsTo(position, this.events, this);\r\n      };\r\n\r\n\r\n      // copy events\r\n\r\n      Track.prototype.copyEvent = Track.prototype.copyEvents = function(){//events\r\n          var args = getEventsAndConfig(arguments);\r\n          return copyEvents(args.events);\r\n      };\r\n\r\n\r\n      Track.prototype.copyAllEvents = function(){\r\n          return copyEvents(this.events);\r\n      };\r\n\r\n\r\n      Track.prototype.copyEventTo = Track.prototype.copyEventsTo = function(){//events, position\r\n          var args = getEventsAndConfig(arguments);\r\n          copyEventsTo(args.config[0], args.events, this);\r\n      };\r\n\r\n\r\n      Track.prototype.copyAllEventsTo = function(position){\r\n          copyEventsTo(position, this.events, this);\r\n      };\r\n\r\n\r\n      // repeat events\r\n\r\n      Track.prototype.repeatEvent = Track.prototype.repeatEvents = function(){//events, config\r\n          var args = getEventsAndConfig(arguments);\r\n          repeatEvents(args.config[0], args.events, this);\r\n      };\r\n\r\n\r\n      // transpose events\r\n\r\n      Track.prototype.transposeEvent = Track.prototype.transposeEvents = function(){//events, semi\r\n          var args = getEventsAndConfig(arguments);\r\n          transposeEvents(args.config[0], args.events);\r\n      };\r\n\r\n\r\n      Track.prototype.transpose = Track.prototype.transposeAllEvents = function(semi){\r\n          transposeEvents(semi, this.events);\r\n      };\r\n  */\r\n\r\n  Track.prototype.reset = function () {\r\n    var id, part;\r\n    this.song = null;\r\n    // fixing issue #5\r\n    if (this.audio) {\r\n      this.audio.setSong(null);\r\n    }\r\n    for (id in this.partsById) {\r\n      if (this.partsById.hasOwnProperty(id)) {\r\n        part = this.partsById[id];\r\n        // don't reset from track, reset from song only\r\n        part.reset(false, true);\r\n        //part.state = 'removed';\r\n      }\r\n    }\r\n    this.needsUpdate = true;\r\n  };\r\n\r\n\r\n  // find event utils\r\n\r\n  Track.prototype.findEvent = function (pattern) {\r\n    return findEvent(this, pattern);\r\n  };\r\n\r\n\r\n  Track.prototype.findNote = function (pattern) {\r\n    return findNote(this, pattern);\r\n  };\r\n\r\n\r\n  Track.prototype.getStats = function (pattern) {\r\n    return getStats(this, pattern);\r\n  };\r\n\r\n\r\n  Track.prototype.update = function () {\r\n    //console.log('track update');\r\n    //@TODO: do we need events and notes in a track?\r\n\r\n    this.parts = [];\r\n    this.notes = [];\r\n    this.events = [];\r\n\r\n    var i, id, part, event, events, note;\r\n    for (id in this.partsById) {\r\n      if (this.partsById.hasOwnProperty(id)) {\r\n        part = this.partsById[id];\r\n\r\n        if (part.needsUpdate === true) {\r\n          //console.log(part);\r\n          part.update();\r\n        }\r\n\r\n        //console.log(part.events.length, part.keepWhenEmpty);\r\n\r\n        if (part.events.length === 0 && part.keepWhenEmpty === false) {\r\n          this.removePart(part);\r\n        }\r\n\r\n        if (part.state === 'new' && this.song !== undefined) {\r\n          events = part.events;\r\n          for (i = events.length - 1; i >= 0; i--) {\r\n            event = events[i];\r\n            event.song = this.song;\r\n          }\r\n        }\r\n\r\n        if (part.state !== 'removed') {\r\n          this.parts.push(part);\r\n          this.notes = this.notes.concat(part.notes);\r\n          this.events = this.events.concat(part.events);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.parts.sort(function (a, b) {\r\n      return a.ticks - b.ticks;\r\n    });\r\n\r\n    this.notes.sort(function (a, b) {\r\n      return a.ticks - b.ticks;\r\n    });\r\n\r\n    this.events.sort(function (a, b) {\r\n      return a.sortIndex - b.sortIndex;\r\n    });\r\n\r\n\r\n    this.numEvents = this.events.length;\r\n    this.numNotes = this.notes.length;\r\n    this.numParts = this.parts.length;\r\n\r\n    for (i = this.numEvents - 1; i >= 0; i--) {\r\n      event = this.events[i];\r\n      this.eventsById[event.id] = event;\r\n    }\r\n\r\n    for (i = this.numNotes - 1; i >= 0; i--) {\r\n      note = this.notes[i];\r\n      this.notesById[note.id] = note;\r\n    }\r\n\r\n    this.needsUpdate = false;\r\n  };\r\n\r\n\r\n  Track.prototype.getIndex = function () {\r\n    var index = -1,\r\n      tracks = this.song.tracks,\r\n      numTracks = tracks.length,\r\n      track, i;\r\n\r\n    if (numTracks > 0) {\r\n\r\n      for (i = 0; i < numTracks; i++) {\r\n        track = tracks[i];\r\n        if (track.id === this.id) {\r\n          index = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return index;\r\n  };\r\n\r\n\r\n  /*\r\n\r\n      Track:\r\n       input\r\n       panner\r\n       output\r\n\r\n\r\n       input\r\n       fx\r\n       panner\r\n       output\r\n\r\n\r\n       input\r\n       fx\r\n       fx2\r\n       panner\r\n       output\r\n\r\n  */\r\n\r\n  Track.prototype.addEffect = function (effect, position) {\r\n    if (!effect) {\r\n      return;\r\n    }\r\n    // //effect.setInput(this.input);\r\n    /*\r\n            //this.input.connect(effect.node);\r\n            this.input.disconnect(0);\r\n            try{\r\n                this.input.disconnect(1);\r\n            }catch(e){\r\n                console.log(e);\r\n            }\r\n            effect.setInput(this.input);\r\n            effect.node.connect(this.panner.node);\r\n\r\n    //CONNNECT\r\n    return;\r\n    */\r\n\r\n    //console.log(effect);\r\n\r\n    this.effects[effect.id] = effect;\r\n    this.numEffects++;\r\n\r\n    if (this.lastEffect !== undefined) {\r\n      // disconnect output from panner\r\n      this.lastEffect.disconnect(0);\r\n      // try{\r\n      //     this.input.disconnect(1);\r\n      // }catch(e){\r\n      //     console.log(e);\r\n      // }\r\n      // connect output to input of new effect\r\n      effect.setInput(this.lastEffect);\r\n    }\r\n    // connect new effect to panner\r\n    effect.output.connect(this.panner.node);\r\n\r\n    // remember the last effect in case we want to add another effect\r\n    this.lastEffect = effect.output;\r\n\r\n\r\n    /*\r\n            if(position !== undefined && isNaN(position) === false){\r\n                this.setEffectPosition(position);\r\n            }else{\r\n                effect.position = this.numEffects;\r\n            }\r\n            this.numEffects++;\r\n    */\r\n  };\r\n\r\n\r\n  Track.prototype.removeEffect = function (effect) {\r\n    if (effect === false) {\r\n      return;\r\n    }\r\n    delete this.effects[effect.id];\r\n    this.numEffects--;\r\n  };\r\n\r\n\r\n  Track.prototype.setEffectPosition = function (effect, position) {\r\n    var i, fx, maxi = this.numEffects - 1;\r\n\r\n    if (position < 0 || position > maxi) {\r\n      return;\r\n    }\r\n\r\n    effect.position = position;\r\n    for (i = 0; i < maxi - 1; i++) {\r\n      fx = this.effects[i];\r\n      if (fx.position >= position && fx !== effect) {\r\n        fx.position += 1;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.setSolo = function (flag) {\r\n    if (flag === undefined) {\r\n      flag = !this.solo;\r\n    }\r\n    this.mute = false;\r\n    this.solo = flag;\r\n    if (this.song) {\r\n      this.song.setTrackSolo(this, flag);\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.setPartSolo = function (soloPart, flag) {\r\n    var i, part;\r\n    for (i = this.numParts - 1; i >= 0; i--) {\r\n      part = this.parts[i];\r\n      if (flag === true) {\r\n        part.mute = part === soloPart ? !flag : flag;\r\n      } else if (flag === false) {\r\n        part.mute = false;\r\n      }\r\n      part.solo = part === soloPart ? flag : false;\r\n      //console.log(soloPart.id, soloPart.mute, part.id, part.mute);\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.setVolume = function (value) {\r\n    if (isNaN(value)) {\r\n      if (sequencer.debug >= 1) {\r\n        console.error('please pass a number');\r\n      }\r\n    } else if (value < 0 || value > 1) {\r\n      if (sequencer.debug >= 1) {\r\n        console.error('please pass a float between 0 and 1');\r\n      }\r\n    } else {\r\n      this.volume = value;\r\n      // this.output.gain.value = this.volume; //-> this doesn't work which is weird\r\n      this.input.gain.value = this.volume; // this does work\r\n      // console.log(this.volume);\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.getVolume = function () {\r\n    return this.volume;\r\n  };\r\n\r\n  Track.prototype.setPanning = function (value) {\r\n    this.panner.setPosition(value);\r\n  };\r\n\r\n\r\n  Track.prototype.connect = function (node) {\r\n    //this.panner.node.connect(node);\r\n    this.output.connect(node);\r\n  };\r\n\r\n\r\n  Track.prototype.disconnect = function (node) {\r\n    //this.panner.node.disconnect(node);\r\n    this.output.disconnect(0);\r\n  };\r\n\r\n\r\n  function getDefaultInstrumentConfig(track) {\r\n    var config;\r\n    if (track.song !== undefined && track.song.defaultInstrument !== undefined) {\r\n      config = findItem(track.song.defaultInstrument, sequencer.storage.instruments);\r\n      //console.log('default instrument song', track.song.defaultInstrument);\r\n    }\r\n    if (config === false || config === undefined) {\r\n      config = findItem(sequencer.defaultInstrument, sequencer.storage.instruments);\r\n      //console.log('default instrument sequencer', sequencer.defaultInstrument, config);\r\n      //console.log(sequencer.storage.instruments.heartbeat.sinewave);\r\n    }\r\n    return config;\r\n  }\r\n\r\n\r\n  Track.prototype.setInstrument = function (arg) {\r\n    //console.log('Track.setInstrument()', arg.name, this.name);\r\n    if (arg === '' || arg === undefined || arg === false) {\r\n      arg = getDefaultInstrumentConfig(this);\r\n      //console.log('default', arg);\r\n    }\r\n    var instrument = createInstrument(arg);\r\n\r\n    //console.log(instrument);\r\n\r\n    if (instrument === false) {\r\n      instrument = createInstrument(getDefaultInstrumentConfig(this));\r\n    }\r\n\r\n    /*\r\n            var instrument;\r\n\r\n            if(arg === '' || arg === undefined || arg === false){\r\n                getDefaultInstrumentConfig(this);\r\n            }else{\r\n                instrument = createInstrument(arg);\r\n            }\r\n\r\n    */\r\n    instrument.track = this;\r\n    // stop possible scheduled notes by the previous instrument\r\n    if (this.instrument) {\r\n      this.instrument.allNotesOff();\r\n    }\r\n    this.instrument = instrument;\r\n    this.instrumentId = instrument.name;\r\n    if (this.song) {\r\n      this.instrument.song = this.song;\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.setMidiInput = function (id, flag) {\r\n    var input, i,\r\n      midiInputs = this.midiInputs,\r\n      availableInputs;\r\n\r\n    //console.log(id, flag, this.song.midiInputs[id]);\r\n\r\n    flag = flag === undefined ? true : flag;\r\n\r\n    if (id === 'all') {\r\n      availableInputs = this.song !== undefined ? this.song.midiInputs : sequencer.midiInputs;\r\n      objectForEach(availableInputs, function (value, key) {\r\n        if (flag === true) {\r\n          midiInputs[key] = value;\r\n        } else {\r\n          delete midiInputs[key];\r\n        }\r\n      });\r\n      //console.log(sequencer.midiInputs, this.midiInputs, midiInputs);\r\n      return;\r\n    }\r\n\r\n    input = this.song.midiInputs[id];\r\n    //console.log(input, id);\r\n    if (input === undefined) {\r\n      return;\r\n    }\r\n    //this.midiInputs[id] = flag === true ? input : false;\r\n    if (flag) {\r\n      this.midiInputs[id] = input;\r\n    } else {\r\n      delete this.midiInputs[id];\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.setMidiOutput = function (id, flag) {\r\n    // a track can, unlike Cubase, send its events to more than one midi output\r\n    flag = flag === undefined ? true : flag;\r\n\r\n    //console.log(id, flag, this.song.midiOutputs);\r\n\r\n    var output = this.song.midiOutputs[id],\r\n      me = this;\r\n\r\n    if (output === undefined) {\r\n      return;\r\n    }\r\n\r\n\r\n    // stop the internal instrument if a midi output has been chosen -> particulary necessary while the song is playing\r\n    if (flag === true) {\r\n      this.instrument.allNotesOff();\r\n    }\r\n\r\n    //this.midiOutputs[id] = flag === true ? output : false;\r\n    if (flag) {\r\n      this.midiOutputs[id] = output;\r\n    } else {\r\n      delete this.midiOutputs[id];\r\n    }\r\n\r\n    this.routeToMidiOut = false;\r\n\r\n    //console.log(this.midiOutputs[id]);\r\n    objectForEach(this.midiOutputs, function (value, key) {\r\n      //console.log(value, key);\r\n      if (value !== false) {\r\n        me.routeToMidiOut = true;\r\n      }\r\n    });\r\n    //console.log(output, id, this.routeToMidiOut);\r\n  };\r\n\r\n\r\n  Track.prototype.prepareForRecording = function (recordId, callback) {\r\n    //console.log('prepare', this.recordEnabled, recordId);\r\n    if (this.recordEnabled !== 'midi' && this.recordEnabled !== 'audio') {\r\n      return;\r\n    }\r\n    this.recordPart = sequencer.createPart();\r\n    this.addPart(this.recordPart);\r\n    //console.log(this.recordPart.needsUpdate);\r\n    this.recordingNotes = {};\r\n    this.recordId = recordId;\r\n\r\n    if (this.recordEnabled === 'audio') {\r\n      if (this.audio === undefined) {\r\n        this.audio = createAudioTrack(this);\r\n      }\r\n      this.audio.prepareForRecording(recordId, callback);\r\n    }\r\n    //console.log(this.recordEnabled);\r\n  };\r\n\r\n\r\n  Track.prototype.stopRecording = function (recordId, callback) {\r\n    //console.log(recordId, this.recordId);\r\n    if (this.recordId !== recordId) {\r\n      return;\r\n    }\r\n\r\n    this.recordingNotes = {};\r\n    if (this.autoQuantize || this.song.autoQuantize) {\r\n      if (debug >= 1) {\r\n        console.log('performing auto quantize');\r\n      }\r\n      this.quantizeRecording();\r\n    }\r\n\r\n    if (this.recordEnabled === 'midi') {\r\n      this.recordPart.update();\r\n      callback(this.recordPart.events);\r\n    } else if (this.recordEnabled === 'audio') {\r\n      var scope = this;\r\n      this.audio.stopRecording(function (recording) {\r\n\r\n        var event = sequencer.createAudioEvent({\r\n          ticks: scope.song.recordTimestampTicks,\r\n          buffer: recording.audioBuffer,\r\n          sampleId: recording.id,\r\n        });\r\n\r\n        scope.recordPart.addEvent(event);\r\n        scope.recordPart.update();\r\n        callback([event]);\r\n      });\r\n    }\r\n  };\r\n\r\n  /*\r\n      Track.prototype.undoRecording = function(recordId){\r\n          if(this.recordId !== recordId){\r\n              return;\r\n          }\r\n          this.removePart(this.recordPart);\r\n      };\r\n  */\r\n\r\n  Track.prototype.undoRecording = function (data) {\r\n    var type = typeString(data);\r\n    if (type === 'string') {\r\n      if (this.recordId === data) {\r\n        this.removePart(this.recordPart);\r\n      }\r\n    } else if (type === 'array') {\r\n      //console.log(data);\r\n      this.removeEvents(data);\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.setWaveformConfig = function (config) {\r\n    this.waveformConfig = config;\r\n    if (this.audio !== undefined) {\r\n      this.audio.recorder.waveformConfig = config;\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.getAudioRecordingData = function (recordId) {\r\n    if (this.audio === undefined) {\r\n      return;\r\n    }\r\n    if (recordId === undefined) {\r\n      if (sequencer.debug >= sequencer.WARN) {\r\n        console.warn('please provide a recording id');\r\n      }\r\n      return false;\r\n    }\r\n    return sequencer.storage.audio.recordings[recordId];\r\n  };\r\n\r\n\r\n  Track.prototype.encodeAudioRecording = function (recordId, type, bitrate, callback) {\r\n    if (this.audio === undefined) {\r\n      return;\r\n    }\r\n    if (recordId === undefined) {\r\n      if (sequencer.debug >= sequencer.WARN) {\r\n        console.warn('please provide a recording id');\r\n      }\r\n      if (callback) {\r\n        callback(false);\r\n      }\r\n      return;\r\n    }\r\n\r\n    var recording = sequencer.storage.audio.recordings[recordId];\r\n    encodeAudio(recording.audioBuffer, type, bitrate, function (mp3Data) {\r\n      recording.mp3 = mp3Data;\r\n      callback(recording);\r\n    });\r\n  };\r\n\r\n\r\n  Track.prototype.setAudioRecordingLatency = function (recordId, value, callback) {\r\n    if (this.audio !== undefined) {\r\n      //console.log(recordId, sequencer.storage.audio.recordings);\r\n      this.audio.setAudioRecordingLatency(recordId, value, function (recording) {\r\n        // update all audio events in this song that use this recording\r\n\r\n        var i, event, sampleId,\r\n          audioEvents = this.song.audioEvents;\r\n\r\n        for (i = audioEvents.length - 1; i >= 0; i--) {\r\n          event = audioEvents[i];\r\n          sampleId = event.sampleId;\r\n          if (sampleId === undefined) {\r\n            continue;\r\n          }\r\n          if (recordId === sampleId) {\r\n            event.buffer = recording.audioBuffer;\r\n          }\r\n        }\r\n\r\n        if (callback !== undefined) {\r\n          callback();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.quantizeRecording = function (value) {\r\n    value = value || this.quantizeValue;\r\n    return sequencer.quantize(this.recordPart.events, value, this.song.ppq);\r\n  };\r\n\r\n\r\n  // non-mandatory arguments: quantize value, history object\r\n  Track.prototype.quantize = function () {\r\n    var i, arg, type,\r\n      args = slice.call(arguments),\r\n      numArgs = args.length,\r\n      value,\r\n      historyObject = {};\r\n\r\n    //console.log(arguments);\r\n\r\n    for (i = 0; i < numArgs; i++) {\r\n      arg = args[i];\r\n      type = typeString(arg);\r\n      //console.log(arg, type);\r\n      if (type === 'string' || type === 'number') {\r\n        // overrule the quantize value of this track with this value\r\n        value = arg;\r\n      } else if (type === 'object') {\r\n        historyObject = arg;\r\n      }\r\n    }\r\n\r\n    // no value passed as arguments, use the quantize value of this track\r\n    if (value === undefined) {\r\n      value = this.quantizeValue;\r\n    }\r\n\r\n    //console.log(value, history);\r\n    return sequencer.quantize(this.events, value, this.song.ppq, history); // sequencer.quantize is defined in quantize_fixed-length.js\r\n  };\r\n\r\n\r\n  Track.prototype.undoQuantize = function (history) {\r\n    if (history === undefined) {\r\n      if (sequencer.debug >= 2) {\r\n        console.warn('please pass a quantize history object');\r\n      }\r\n      return;\r\n    }\r\n\r\n    var events = history.tracks[this.id].quantizedEvents,\r\n      numEvents = events.length,\r\n      i, event;\r\n\r\n    for (i = 0; i < numEvents; i++) {\r\n      event = events[i];\r\n      event.ticks = history.events[event.id].ticks;\r\n      //console.log(event.ticks, event.type);\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.addMidiEventListener = function () {\r\n    return addMidiEventListener(arguments, this);\r\n  };\r\n\r\n\r\n  Track.prototype.removeMidiEventListener = function (id) {\r\n    removeMidiEventListener(id, this);\r\n  };\r\n\r\n\r\n  Track.prototype.allNotesOff = function (id) {\r\n    if (this.audio) {\r\n      this.audio.allNotesOff();\r\n    }\r\n    if (this.instrument) {\r\n      this.instrument.allNotesOff();\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.processMidiEvent = function (event) {\r\n    handleMidiMessageTrack(event, this)\r\n  }\r\n\r\n  /*\r\n      Track.prototype.addReverb = function(id, amount){\r\n          var reverb = sequencer.getReverb(id);\r\n          if(reverb !== false){\r\n              reverb = sequencer.createEffect('reverb', reverb);\r\n              reverb.amount = amount < 0 ? 0 : amount > 1 ? 1 : 0.5;\r\n              this.effects.push(reverb);\r\n          }\r\n      };\r\n\r\n\r\n      Track.prototype.setReverb = function(id, amount){\r\n      };\r\n\r\n\r\n      Track.prototype.removeReverb = function(id, amount){\r\n      };\r\n  */\r\n\r\n  sequencer.protectedScope.Track = Track;\r\n\r\n  sequencer.createTrack = function (name, type, song) {\r\n    return new Track(name, type, song);\r\n  };\r\n\r\n  sequencer.protectedScope.addInitMethod(function () {\r\n    // get the protected scope with all added methods\r\n    var protectedScope = sequencer.protectedScope;\r\n\r\n    getStats = sequencer.getStats;\r\n    findEvent = sequencer.findEvent;\r\n    findNote = sequencer.findNote;\r\n    createPart = sequencer.createPart;\r\n    createMidiEvent = sequencer.createMidiEvent;\r\n    createMidiNote = sequencer.createMidiNote;\r\n    createInstrument = sequencer.createInstrument;\r\n    createPanner = sequencer.createPanner;\r\n    encodeAudio = sequencer.encodeAudio;\r\n\r\n    context = protectedScope.context;\r\n    findItem = protectedScope.findItem;\r\n    addMidiEventListener = protectedScope.addMidiEventListener;\r\n    removeMidiEventListener = protectedScope.removeMidiEventListener;\r\n    createAudioTrack = sequencer.protectedScope.createAudioTrack;\r\n    checkPosition = protectedScope.checkPosition;\r\n    objectForEach = protectedScope.objectForEach;\r\n    typeString = protectedScope.typeString;\r\n    copyName = protectedScope.copyName;\r\n    handleMidiMessageTrack = protectedScope.handleMidiMessageTrack;\r\n  });\r\n\r\n}\r\nfunction transpose() {\n\n  'use strict';\n\n  var\n    // satisfy jslint\n    Pitchshift = window.Pitchshift,\n\n    context,\n    fftFrameSize = 2048,\n    shifter;\n\n  function init() {\n    if (window.Pitchshift) {\n      shifter = new Pitchshift(fftFrameSize, context.sampleRate, 'FFT');\n    }\n  }\n\n\n  function transpose(inputBuffer, semitones, cb) {\n    if (shifter === undefined) {\n      console.log('include Kiev II');\n      return;\n    }\n    if (semitones === 0) {\n      if (cb) {\n        //console.log(inputBuffer, semitones)\n        cb(inputBuffer);\n        return;\n      }\n    }\n\n    var numChannels = inputBuffer.numberOfChannels,\n      c, input, length, output, outputs = [], shiftValue, i,\n      outputBuffer;\n\n    //console.log(inputBuffer);\n\n    for (c = 0; c < numChannels; c++) {\n      input = inputBuffer.getChannelData(c);\n      length = input.length;\n      output = new Float32Array(length);\n      shiftValue = Math.pow(1.0595, semitones);\n      //shiftValue = 1.01;\n      shifter.process(shiftValue, input.length, 4, input);\n      //shifter.process(shiftValue, input.length, 8, input);\n      for (i = 0; i < length; i++) {\n        output[i] = shifter.outdata[i];\n      }\n      outputs[c] = output;\n    }\n\n    outputBuffer = context.createBuffer(\n      numChannels,\n      length,\n      inputBuffer.sampleRate\n    );\n\n    for (c = 0; c < numChannels; c++) {\n      outputBuffer.getChannelData(c).set(outputs[c]);\n    }\n\n    cb(outputBuffer);\n  }\n\n  sequencer.protectedScope.transpose = transpose;\n\n  sequencer.protectedScope.addInitMethod(function () {\n    context = sequencer.protectedScope.context;\n    init();\n  });\n\n}function util() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        // import\r\n        context, // defined in open_module.js\r\n\r\n        slice = Array.prototype.slice,\r\n\r\n        mPow = Math.pow,\r\n        mRound = Math.round,\r\n        mFloor = Math.floor,\r\n        mRandom = Math.random,\r\n        // floor = function(value){\r\n        //  return value | 0;\r\n        // },\r\n\r\n        noteLengthNames = {\r\n            1: 'quarter',\r\n            2: 'eighth',\r\n            4: 'sixteenth',\r\n            8: '32th',\r\n            16: '64th'\r\n        },\r\n\r\n        foundItem,\r\n        foundFolder;\r\n\r\n\r\n    function typeString(o) {\r\n        if (typeof o != 'object') {\r\n            return typeof o;\r\n        }\r\n\r\n        if (o === null) {\r\n            return 'null';\r\n        }\r\n\r\n        //object, array, function, date, regexp, string, number, boolean, error\r\n        var internalClass = Object.prototype.toString.call(o).match(/\\[object\\s(\\w+)\\]/)[1];\r\n        return internalClass.toLowerCase();\r\n\r\n    }\r\n\r\n\r\n    function getNiceTime(millis) {\r\n        var h, m, s, ms,\r\n            seconds,\r\n            timeAsString = '';\r\n\r\n        seconds = millis / 1000; // → millis to seconds\r\n        h = floor(seconds / (60 * 60));\r\n        m = floor((seconds % (60 * 60)) / 60);\r\n        s = floor(seconds % (60));\r\n        ms = round((seconds - (h * 3600) - (m * 60) - s) * 1000);\r\n\r\n        timeAsString += h + ':';\r\n        timeAsString += m < 10 ? '0' + m : m;\r\n        timeAsString += ':';\r\n        timeAsString += s < 10 ? '0' + s : s;\r\n        timeAsString += ':';\r\n        timeAsString += ms === 0 ? '000' : ms < 10 ? '00' + ms : ms < 100 ? '0' + ms : ms;\r\n\r\n        //console.log(h, m, s, ms);\r\n\r\n        return {\r\n            hour: h,\r\n            minute: m,\r\n            second: s,\r\n            millisecond: ms,\r\n            timeAsString: timeAsString,\r\n            timeAsArray: [h, m, s, ms]\r\n        };\r\n    }\r\n\r\n\r\n    function clone(obj) {\r\n        var attr, copy;\r\n        if (obj === null || typeof obj !== 'object') {\r\n            return obj;\r\n        }\r\n        copy = obj.constructor();\r\n        for (attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) {\r\n                copy[attr] = clone(obj[attr]);\r\n            }\r\n        }\r\n        return copy;\r\n    }\r\n\r\n\r\n    function copyObject(obj) {\r\n        var prop, copy = {};\r\n        if (typeString(obj) !== 'object') {\r\n            return {};\r\n        }\r\n        for (prop in obj) {\r\n            if (obj.hasOwnProperty(prop)) {\r\n                copy[prop] = obj[prop];\r\n            }\r\n        }\r\n        return copy;\r\n    }\r\n\r\n\r\n    function copyName(name) {\r\n        var i = name.indexOf('_copy'),\r\n            copy, numCopies;\r\n\r\n        if (i === -1) {\r\n            copy = name + '_copy';\r\n        } else {\r\n            numCopies = name.substring(i + 5);\r\n            if (numCopies === '') {\r\n                copy = name + '2';\r\n            } else {\r\n                copy = name.slice(0, -1) + (parseInt(numCopies, 10) + 1);\r\n            }\r\n        }\r\n        return copy;\r\n    }\r\n\r\n\r\n    function removeFromArray(tobeRemoved, array) {\r\n        var i, j,\r\n            maxi,\r\n            maxj,\r\n            newArray = [],\r\n            remove,\r\n            elementA, elementB;\r\n\r\n        if (typeString(tobeRemoved) !== 'array') {\r\n            tobeRemoved = [tobeRemoved];\r\n        }\r\n        maxi = array.length;\r\n        maxj = tobeRemoved.length;\r\n\r\n        for (i = 0; i < maxi; i++) {\r\n            elementA = array[i];\r\n            remove = false;\r\n            for (j = 0; j < maxj; j++) {\r\n                elementB = tobeRemoved[j];\r\n                if (elementA === elementB) {\r\n                    remove = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (remove === false) {\r\n                newArray.push(elementA);\r\n            }\r\n        }\r\n\r\n        return newArray;\r\n    }\r\n\r\n\r\n    function removeFromArray2(array, callback) {\r\n        var i, maxi = array.length,\r\n            element,\r\n            newArray = [];\r\n\r\n        for (i = 0; i < maxi; i++) {\r\n            element = array[i];\r\n            if (callback(element) === false) {\r\n                newArray.push(element);\r\n            }\r\n        }\r\n        return newArray;\r\n    }\r\n\r\n\r\n    function round(value, decimals) {\r\n        if (decimals === undefined || decimals <= 0) {\r\n            return mRound(value);\r\n        }\r\n        var p = mPow(10, decimals);\r\n        //console.log(p, decimals)\r\n        return mRound(value * p) / p;\r\n    }\r\n\r\n\r\n    function floor(value, decimals) {\r\n        if (decimals === undefined || decimals <= 0) {\r\n            return mFloor(value);\r\n        }\r\n        var p = mPow(10, decimals);\r\n        //console.log(p,decimals)\r\n        return mFloor(value * p) / p;\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj, ignore_keys) {\r\n        //console.log('empty',obj)\r\n        if (obj === undefined) {\r\n            return false;\r\n        }\r\n        var i, isEmpty = true;\r\n        ignore_keys = ignore_keys || '';\r\n        for (i in obj) {\r\n            //console.log(i, ignore_keys.indexOf(i));\r\n            if (obj.hasOwnProperty(i) && ignore_keys.indexOf(i) === -1) {\r\n                isEmpty = false;\r\n                break;\r\n            }\r\n        }\r\n        return isEmpty;\r\n        //return Object.getOwnPropertyNames(obj).length === 0;\r\n    }\r\n\r\n\r\n    function objectForEach(o, cb) {\r\n        var name,\r\n            obj = o;\r\n        for (name in obj) {\r\n            if (obj.hasOwnProperty(name)) {\r\n                //cb.call(this, obj[name], name);\r\n                cb(obj[name], name);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function objectToArray(obj) {\r\n        var i, a = [];\r\n        for (i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                a.push(obj[i]);\r\n            }\r\n        }\r\n        return a;\r\n    }\r\n\r\n    function arrayToObject(arr, property) {\r\n        var i, o = {};\r\n        for (i = arr.length - 1; i >= 0; i--) {\r\n            o[arr[i][property]] = arr[i];\r\n        }\r\n        return o;\r\n    }\r\n\r\n\r\n    function createClass(parent, constructor) {\r\n        var thisClass;\r\n        // class constructor\r\n        thisClass = function () {\r\n            this.parent = parent;\r\n            if (arguments.length > 0) {\r\n                parent.apply(this, arguments);\r\n                if (constructor !== undefined) {\r\n                    constructor.apply(this, arguments);\r\n                }\r\n            }\r\n        };\r\n        // inheritance\r\n        thisClass.prototype = Object.create(parent.prototype);\r\n        return thisClass;\r\n    }\r\n\r\n    function ajax(config) {\r\n        var\r\n            request = new XMLHttpRequest(),\r\n            method = config.method === undefined ? 'GET' : config.method,\r\n            fileSize, promise;\r\n\r\n        function executor(resolve, reject) {\r\n\r\n            reject = reject || function () { };\r\n            resolve = resolve || function () { };\r\n\r\n            request.onload = function () {\r\n                if (request.status !== 200) {\r\n                    reject(request.status);\r\n                    return;\r\n                }\r\n\r\n                if (config.responseType === 'json') {\r\n                    fileSize = request.response.length;\r\n                    resolve(JSON.parse(request.response), fileSize);\r\n                } else {\r\n                    resolve(request.response);\r\n                }\r\n            };\r\n\r\n            request.onerror = function (e) {\r\n                config.onError(e);\r\n            };\r\n\r\n            request.open(method, config.url, true);\r\n\r\n            if (config.overrideMimeType) {\r\n                request.overrideMimeType(config.overrideMimeType);\r\n            }\r\n\r\n            if (config.responseType) {\r\n                if (config.responseType === 'json') {\r\n                    request.responseType = 'text';\r\n                } else {\r\n                    request.responseType = config.responseType;\r\n                }\r\n            }\r\n\r\n            if (method === 'POST') {\r\n                request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n            }\r\n\r\n            if (config.data) {\r\n                request.send(config.data);\r\n            } else {\r\n                request.send();\r\n            }\r\n        }\r\n\r\n        promise = new Promise(executor);\r\n        //console.log(promise);\r\n\r\n        if (config.onSuccess !== undefined) {\r\n            promise.then(config.onSuccess, config.onError);\r\n        } else {\r\n            return promise;\r\n        }\r\n    }\r\n\r\n\r\n    function ajax2(config) {\r\n\r\n        var request = new XMLHttpRequest(),\r\n            method = config.method === undefined ? 'GET' : config.method,\r\n            fileSize;\r\n\r\n        request.onreadystatechange = function () {\r\n            if (request.request === 404) {\r\n                //console.error(config.url, '404');\r\n                config.onError(404);\r\n            }\r\n        };\r\n\r\n        request.onload = function () {\r\n            if (request.status !== 200) {\r\n                //console.error(config.url, request.status);\r\n                config.onError(request.status);\r\n                return;\r\n            }\r\n            // this doesn't work with gzip server compression!\r\n            //fileSize = round(request.getResponseHeader('Content-Length')/1024/1024, 2);\r\n            //console.log(fileSize);\r\n            //console.log(config.url, request.getResponseHeader('Content-Length'));\r\n            //console.log(sequencer.os, request.response);\r\n\r\n            //if(sequencer.os === 'ios' && config.responseType === 'json'){\r\n            if (config.responseType === 'json') {\r\n                //fileSize = round(request.response.length/1024/1024, 2);\r\n                fileSize = request.response.length;\r\n                //console.log(config.url, fileSize)\r\n                config.onSuccess(JSON.parse(request.response), fileSize);\r\n                //config.onSuccess(JSON.parse(request.response));\r\n            } else {\r\n                //config.onSuccess(request.response, fileSize);\r\n                config.onSuccess(request.response);\r\n            }\r\n        };\r\n\r\n        request.onerror = function (e) {\r\n            //console.error(e);\r\n            config.onError(e);\r\n        };\r\n\r\n        /*\r\n                request.onreadystatechange = function() {\r\n                    if (success !== undefined && xmlhttp.readyState === 4 && xmlhttp.status === 200) {\r\n                        success(request.responseText);\r\n                    } else if (error !== undefined ) {\r\n                        error(request);\r\n                    }\r\n                };\r\n        */\r\n        request.open(method, config.url, true);\r\n\r\n\r\n        if (config.overrideMimeType) {\r\n            request.overrideMimeType(config.overrideMimeType);\r\n        }\r\n\r\n        if (config.responseType) {\r\n            //console.log(config.responseType, config.url);\r\n            //request.setRequestHeader('Content-type', 'application/' + config.responseType);\r\n\r\n            //if(sequencer.os === 'ios' && config.responseType === 'json'){\r\n            if (config.responseType === 'json') {\r\n                request.responseType = 'text';\r\n            } else {\r\n                request.responseType = config.responseType;\r\n            }\r\n\r\n            //request.setRequestHeader('Content-type', config.responseType);\r\n        }\r\n\r\n        if (method === 'POST') {\r\n            request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n        }\r\n\r\n        if (config.data) {\r\n            request.send(config.data);\r\n        } else {\r\n            request.send();\r\n        }\r\n    }\r\n\r\n    function loop2(root, id, indent) {\r\n        var i, tmp;\r\n        for (i in root) {\r\n            if (foundFolder !== false) {\r\n                return;\r\n            }\r\n            if (root.hasOwnProperty(i)) {\r\n                tmp = root[i];\r\n                if (tmp !== undefined && tmp.className === 'Folder') {\r\n                    //console.log(indent, i, id);\r\n                    if (i === id) {\r\n                        foundFolder = tmp;\r\n                        return;\r\n                    } else {\r\n                        loop2(tmp, id, indent + '.');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function loop3(folder, items, search_subfolders, indent) {\r\n        var i, item;\r\n        for (i in folder) {\r\n            if (folder.hasOwnProperty(i)) {\r\n                if (i === 'id' || i === 'path' || i === 'className') {\r\n                    continue;\r\n                }\r\n                item = folder[i];\r\n\r\n                if (item === undefined) {\r\n                    continue;\r\n                }\r\n\r\n                //console.log(indent, i, item, item.className);\r\n                if (item.className === 'Folder') {\r\n                    if (search_subfolders === true) {\r\n                        loop3(item, items, search_subfolders, indent + '.');\r\n                    }\r\n                } else {\r\n                    // loaded samples are audio object so they don't have a name, we use the key of the storage for name\r\n                    if (item.name === undefined) {\r\n                        items.push({ name: i, data: item });\r\n                    } else {\r\n                        items.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function findItemsInFolder(path, root, search_subfolders) {\r\n        search_subfolders = search_subfolders === undefined ? true : search_subfolders;\r\n        var folders = pathToArray(path),\r\n            numFolders = folders.length,\r\n            currentFolder, i, folder,\r\n            searchFolder = folders[numFolders - 1],\r\n            items = [];\r\n\r\n        if (numFolders === 0) {\r\n            // return all items in root folder (for instance sequencer.storage.midi)\r\n            loop3(root, items, search_subfolders, '.');\r\n        } else {\r\n            currentFolder = root;\r\n\r\n            for (i = 0; i < numFolders; i++) {\r\n                folder = folders[i];\r\n                currentFolder = currentFolder[folder];\r\n                if (currentFolder === undefined) {\r\n                    break;\r\n                }\r\n            }\r\n            //console.log(root, currentFolder);\r\n            if (currentFolder) {\r\n                loop3(currentFolder, items, search_subfolders, '.');\r\n            } else {\r\n                // declared on top of this file\r\n                foundFolder = false;\r\n                loop2(root, searchFolder, '.');\r\n                loop3(foundFolder, items, search_subfolders, '.');\r\n            }\r\n        }\r\n\r\n        items.sort(function (a, b) {\r\n            var nameA = a.name.toLowerCase(),\r\n                nameB = b.name.toLowerCase();\r\n            if (nameA < nameB) { //sort string ascending\r\n                return -1;\r\n            } else if (nameA > nameB) {\r\n                return 1;\r\n            }\r\n            return 0; //default return value (no sorting)\r\n        });\r\n\r\n        return items;\r\n    }\r\n\r\n\r\n    function loop(obj, id, indent) {\r\n        var i, tmp, type;\r\n        for (i in obj) {\r\n            if (foundItem !== false) {\r\n                return;\r\n            }\r\n            if (obj.hasOwnProperty(i)) {\r\n                tmp = obj[i];\r\n                type = typeString(tmp);\r\n                //console.log(indent, i, id, tmp, type, tmp.className)\r\n                if (i === id) {\r\n                    foundItem = tmp;\r\n                    break;\r\n                }\r\n                //console.log(tmp);\r\n                // tmp can be null if the sample has not been loaded!\r\n                if (tmp !== undefined && tmp.className === 'Folder') {\r\n                    indent = indent + '.';\r\n                    loop(tmp, id, indent);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function findItem(path, root, exact_match) {\r\n        exact_match = exact_match === undefined ? false : exact_match;\r\n        if (path === undefined || path === '') {\r\n            return root;\r\n        }\r\n\r\n        //console.log('findItem', path);\r\n        var i, folder, folders, numFolders, currentFolder, item, itemId;\r\n        folders = pathToArray(path);\r\n        itemId = folders.pop();\r\n        numFolders = folders.length;\r\n        //console.log(folders, itemId);\r\n\r\n        if (itemId === '') {\r\n            return root;\r\n        }\r\n\r\n        // declared on top of util.js\r\n        foundItem = false;\r\n\r\n        if (folders.length > 0) {\r\n            currentFolder = root;\r\n\r\n            for (i = 0; i < numFolders; i++) {\r\n                folder = folders[i];\r\n                currentFolder = currentFolder[folder];\r\n                if (currentFolder === undefined) {\r\n                    break;\r\n                }\r\n            }\r\n            //console.log(root, currentFolder);\r\n            if (currentFolder) {\r\n                item = currentFolder[itemId];\r\n            }\r\n        }\r\n\r\n        if (item === undefined) {\r\n            if (exact_match === true) {\r\n                item = root[itemId];\r\n            } else {\r\n                loop(root, itemId, '.');\r\n                item = foundItem;\r\n            }\r\n        }\r\n        //console.log(item, itemId, exact_match);\r\n        //console.log('found', root.id, folders, itemId, item);\r\n        if (item === undefined) {\r\n            item = false;\r\n        }\r\n        return item;\r\n    }\r\n\r\n\r\n    function storeItem(item, path, root) {\r\n        var folder, folders, numFolders, currentFolder, i, pathString = '';\r\n        folders = pathToArray(path);\r\n        numFolders = folders.length;\r\n        currentFolder = root;\r\n\r\n        for (i = 0; i < numFolders; i++) {\r\n            folder = folders[i];\r\n            pathString += '/' + folder;\r\n            //console.log(folder);\r\n            if (currentFolder[folder] === undefined) {\r\n                currentFolder[folder] = {\r\n                    path: pathString,\r\n                    className: 'Folder'\r\n                };\r\n            }\r\n            if (i === numFolders - 1) {\r\n                currentFolder[folder] = item;\r\n                break;\r\n            }\r\n            currentFolder = currentFolder[folder];\r\n        }\r\n    }\r\n\r\n\r\n    // -> classical/mozart/sonatas/early\r\n    function deleteItem(path, root) {\r\n        var item, itemId, i, obj = root;\r\n\r\n        // for deleting items you need to specify the complete path, hence the 3rd argument is set to true\r\n        //console.log('deleteItem', path);\r\n        item = findItem(path, root, true);\r\n\r\n        /*\r\n            // what was this for, because it doesn't work when deleting samples (as AudioBuffer) from storage.audio:\r\n            item = findItem(path, root);\r\n            console.log(item);\r\n            path = item.folder + '/' + item.name;\r\n            console.log(path);\r\n        */\r\n\r\n\r\n        if (!item) {\r\n            return false;\r\n        } else if (item.className === 'Folder') {\r\n            // remove files in folder\r\n            for (i in item) {\r\n                if (item.hasOwnProperty(i)) {\r\n                    if (i !== 'className') {\r\n                        delete item[i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        path = pathToArray(path);\r\n\r\n        while (path.length > 1) {\r\n            i = 0;\r\n            obj = root;\r\n\r\n            while (i < path.length - 1) {\r\n                //console.log(path[i],obj);\r\n                obj = obj[path[i++]];\r\n            }\r\n            //console.log(obj);\r\n            itemId = path[i];\r\n            item = obj[itemId];\r\n\r\n            if (item.className === 'Folder') {\r\n                if (isEmptyObject(item, 'path className')) {\r\n                    delete obj[itemId];\r\n                    //console.log('deleting empty folder', itemId);\r\n                }\r\n            } else {\r\n                delete obj[itemId];\r\n                //console.log('deleting item', itemId);\r\n            }\r\n\r\n            path.pop();\r\n        }\r\n\r\n        //console.log(path, path[0] === '', root[path[0]]);\r\n\r\n        if (path.length === 1 && path[0] !== '') {\r\n            itemId = path[0];\r\n            item = root[itemId];\r\n            //console.log(path, path.length, itemId);\r\n            if (item.className === 'Folder') {\r\n                if (isEmptyObject(root[itemId], 'path className')) {\r\n                    delete root[itemId];\r\n                    //console.log('deleting empty folder', itemId, '(2)');\r\n                }\r\n            } else {\r\n                delete root[itemId];\r\n                //console.log('deleting item', itemId, '(2)');\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    function parseSample(id, sample) {\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                context.decodeAudioData(sample,\r\n                    function onSuccess(buffer) {\r\n                        //console.log(id, buffer);\r\n                        resolve({ 'id': id, 'buffer': buffer });\r\n                    },\r\n                    function onError(e) {\r\n                        console.log('error decoding audiodata', id, e);\r\n                        //reject(e); // don't use reject because we don't want the parent promise to reject\r\n                        resolve({ 'id': id, 'buffer': undefined });\r\n                    }\r\n                );\r\n            } catch (e) {\r\n                console.log('error decoding audiodata', id, e);\r\n                //reject(e);\r\n                resolve({ 'id': id, 'buffer': undefined });\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    function loadAndParseSample(id, url) {\r\n        return new Promise(function (resolve, reject) {\r\n            ajax({ url: url, responseType: 'arraybuffer' }).then(\r\n                function onFulfilled(data) {\r\n                    parseSample(id, data).then(resolve, reject);\r\n                },\r\n                function onRejected() {\r\n                    resolve({ 'id': id, 'buffer': undefined });\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    function parseSamples(mapping) {\r\n        var key, sample,\r\n            promises = [];\r\n\r\n        for (key in mapping) {\r\n            if (mapping.hasOwnProperty(key)) {\r\n                sample = mapping[key];\r\n                if (sample.indexOf('http://') === -1) {\r\n                    promises.push(parseSample(key, base64ToBinary(sample)));\r\n                } else {\r\n                    promises.push(loadAndParseSample(key, sample));\r\n                }\r\n            }\r\n        }\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            Promise.all(promises).then(\r\n                function onFulfilled(values) {\r\n                    var mapping = {};\r\n\r\n                    values.forEach(function (value) {\r\n                        mapping[value.id] = value.buffer;\r\n                    });\r\n                    resolve(mapping);\r\n                },\r\n                function onRejected(e) {\r\n                    reject(e);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    // use xhr.overrideMimeType('text/plain; charset=x-user-defined');\r\n    // all credits: https://github.com/gasman/jasmid\r\n    function toBinaryString(input) {\r\n        /* munge input into a binary string */\r\n        var t, ff, mx, scc, z;\r\n        t = input || '';\r\n        ff = [];\r\n        mx = t.length;\r\n        scc = String.fromCharCode;\r\n        for (z = 0; z < mx; z++) {\r\n            ff[z] = scc(t.charCodeAt(z) & 255);\r\n        }\r\n        return ff.join('');\r\n    }\r\n\r\n\r\n    function toUint8Array(input) {\r\n        /* munge input into a binary string */\r\n        var t, uint, mx, scc, z;\r\n        t = input || '';\r\n        mx = t.length;\r\n        uint = new Uint8Array(mx);\r\n        scc = String.fromCharCode;\r\n        for (z = 0; z < mx; z++) {\r\n            uint[z] = scc(t.charCodeAt(z) & 255);\r\n        }\r\n        return uint;\r\n    }\r\n\r\n\r\n    // adapted version of https://github.com/danguer/blog-examples/blob/master/js/base64-binary.js\r\n    function base64ToBinary(input) {\r\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\r\n            bytes, uarray, buffer,\r\n            lkey1, lkey2,\r\n            chr1, chr2, chr3,\r\n            enc1, enc2, enc3, enc4,\r\n            i, j = 0;\r\n\r\n        bytes = Math.ceil((3 * input.length) / 4.0);\r\n        buffer = new ArrayBuffer(bytes);\r\n        uarray = new Uint8Array(buffer);\r\n\r\n        lkey1 = keyStr.indexOf(input.charAt(input.length - 1));\r\n        lkey2 = keyStr.indexOf(input.charAt(input.length - 1));\r\n        if (lkey1 == 64) bytes--; //padding chars, so skip\r\n        if (lkey2 == 64) bytes--; //padding chars, so skip\r\n\r\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\r\n\r\n        for (i = 0; i < bytes; i += 3) {\r\n            //get the 3 octects in 4 ascii chars\r\n            enc1 = keyStr.indexOf(input.charAt(j++));\r\n            enc2 = keyStr.indexOf(input.charAt(j++));\r\n            enc3 = keyStr.indexOf(input.charAt(j++));\r\n            enc4 = keyStr.indexOf(input.charAt(j++));\r\n\r\n            chr1 = (enc1 << 2) | (enc2 >> 4);\r\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n            chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n            uarray[i] = chr1;\r\n            if (enc3 != 64) uarray[i + 1] = chr2;\r\n            if (enc4 != 64) uarray[i + 2] = chr3;\r\n        }\r\n        //console.log(buffer);\r\n        return buffer;\r\n    }\r\n\r\n\r\n    function pathToArray(path) {\r\n        if (path === undefined) {\r\n            return [];\r\n        }\r\n        //console.log('path', path);\r\n        path = path.replace(/undefined/g, '');\r\n        path = path.replace(/\\/{2,}/g, '/');\r\n        path = path.replace(/^\\//, '');\r\n        path = path.replace(/\\/$/, '');\r\n        path = path.split('/');\r\n        return path;\r\n    }\r\n\r\n\r\n    function parseUrl(url) {\r\n        var filePath = '',\r\n            fileName = url,\r\n            fileExtension = '',\r\n            slash, dot, ext;\r\n\r\n        url = url.replace(/\\/{2,}/g, '/');\r\n        url = url.replace(/^\\//, '');\r\n        url = url.replace(/\\/$/, '');\r\n\r\n        // check if the url has a path and/or an extension\r\n        slash = url.lastIndexOf('/');\r\n        if (slash !== -1) {\r\n            fileName = url.substring(slash + 1);\r\n            filePath = url.substring(0, slash);\r\n        }\r\n\r\n        dot = url.lastIndexOf('.');\r\n        if (dot !== -1) {\r\n            ext = url.substring(dot + 1);\r\n            if (ext.length >= 3 && ext.length <= 4) {\r\n                fileExtension = ext;\r\n                fileName = url.substring(slash + 1, dot);\r\n            }\r\n        }\r\n\r\n        return {\r\n            path: filePath,\r\n            name: fileName,\r\n            ext: fileExtension\r\n        };\r\n    }\r\n\r\n\r\n    // generic load method that calls the load() method of the item to be loaded\r\n    // callback2 is called every time an item is loaded, callback1 is called after all items have been loaded\r\n    function loadLoop(i, numItems, items, callback1, callback2) {\r\n        if (numItems === 0) {\r\n            if (callback1) {\r\n                callback1();\r\n            }\r\n            return;\r\n        }\r\n        var item = items[i];\r\n        item.load(function () {\r\n            //console.log(item.name, 'loaded', i, numItems);\r\n            if (callback2) {\r\n                callback2(arguments);\r\n            }\r\n            i++;\r\n            if (i < numItems) {\r\n                loadLoop(i, numItems, items, callback1, callback2);\r\n            } else {\r\n                if (callback1) {\r\n                    callback1();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    function getArguments(args) {\r\n        var result = [],\r\n            loop, arg;\r\n\r\n        args = slice.call(args);\r\n\r\n        loop = function (data, i, maxi) {\r\n            for (i = 0; i < maxi; i++) {\r\n                arg = data[i];\r\n                if (typeString(arg) === 'array') {\r\n                    loop(arg, 0, arg.length);\r\n                } else {\r\n                    result.push(arg);\r\n                }\r\n            }\r\n        };\r\n\r\n        loop(args, 0, args.length);\r\n        return result;\r\n    }\r\n\r\n\r\n    function getEqualPowerCurve(numSteps, type, maxValue) {\r\n        var i, value, percent,\r\n            values = new Float32Array(numSteps);\r\n        for (i = 0; i < numSteps; i++) {\r\n            percent = i / numSteps;\r\n            if (type === 'fadeIn') {\r\n                value = Math.cos((1.0 - percent) * 0.5 * Math.PI) * maxValue;\r\n            } else if (type === 'fadeOut') {\r\n                value = Math.cos(percent * 0.5 * Math.PI) * maxValue;\r\n            }\r\n            values[i] = value;\r\n            if (i === numSteps - 1) {\r\n                values[i] = type === 'fadeIn' ? 1 : 0;\r\n            }\r\n        }\r\n        return values;\r\n    }\r\n\r\n\r\n    function remap(value, oldMin, oldMax, newMin, newMax) {\r\n        var oldRange = oldMax - oldMin,\r\n            newRange = newMax - newMin,\r\n            result;\r\n        result = (((value - oldMin) * newRange) / oldRange) + newMin;\r\n        return result;\r\n    }\r\n\r\n\r\n    // filters assets with classname \"name\" from object \"obj\" and stores them in array \"result\"\r\n    function filterItemsByClassName(obj, name, result) {\r\n        var i, item, type;\r\n\r\n        for (i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                item = obj[i];\r\n                if (item.className === name) {\r\n                    result.push(item);\r\n                } else {\r\n                    type = typeString(item);\r\n                    if (type === 'object') {\r\n                        loop(item, name, result);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function createSlider(config) {\r\n        var slider = config.slider,\r\n            message = config.message,\r\n            label = config.label,\r\n            sliderWrapper;\r\n        //mouseDownCalls = [],\r\n        //mouseMoveCalls = [],\r\n        //mouseUpCalls = [];\r\n\r\n        if (config.label === undefined) {\r\n            label = slider.parentNode.firstChild;\r\n        }\r\n\r\n        if (config.initialSliderValue !== undefined) {\r\n            slider.value = config.initialSliderValue;\r\n        }\r\n\r\n        if (config.initialLabelValue !== undefined) {\r\n            label.innerHTML = message.replace('{value}', config.initialLabelValue);\r\n        }\r\n\r\n        if (config.min !== undefined) {\r\n            slider.min = config.min;\r\n        }\r\n\r\n        if (config.max !== undefined) {\r\n            slider.max = config.max;\r\n        }\r\n\r\n        if (config.step !== undefined) {\r\n            slider.step = config.step;\r\n        }\r\n\r\n\r\n        function onMouseDown(e) {\r\n            var value = slider.valueAsNumber;\r\n            if (config.onMouseDown) {\r\n                config.onMouseDown(value, e);\r\n            }\r\n            if (sliderWrapper.onMouseDown) {\r\n                sliderWrapper.onMouseDown(value, e);\r\n            }\r\n        }\r\n\r\n        function onMouseUp(e) {\r\n            var value = slider.valueAsNumber;\r\n            if (config.onMouseUp) {\r\n                config.onMouseUp(value, e);\r\n            }\r\n            if (sliderWrapper.onMouseUp) {\r\n                sliderWrapper.onMouseUp(value, e);\r\n            }\r\n        }\r\n\r\n        function onMouseMove(e) {\r\n            var value = slider.valueAsNumber;\r\n            if (config.onMouseMove) {\r\n                config.onMouseMove(value, e);\r\n            }\r\n            if (sliderWrapper.onMouseMove) {\r\n                sliderWrapper.onMouseMove(value, e);\r\n            }\r\n        }\r\n\r\n        function onChange(e) {\r\n            var value = slider.valueAsNumber;\r\n            if (config.onChange) {\r\n                config.onChange(value, e);\r\n            }\r\n            if (sliderWrapper.onChange) {\r\n                sliderWrapper.onChange(value, e);\r\n            }\r\n        }\r\n\r\n        slider.addEventListener('mousedown', function (e) {\r\n            setTimeout(onMouseDown, 0, e);\r\n            slider.addEventListener('mousemove', onMouseMove, false);\r\n        }, false);\r\n\r\n\r\n        slider.addEventListener('mouseup', function (e) {\r\n            setTimeout(onMouseUp, 0, e);\r\n            slider.removeEventListener('mousemove', onMouseMove, false);\r\n        }, false);\r\n\r\n        slider.addEventListener('change', function (e) {\r\n            //console.log('change');\r\n            onChange(e);\r\n        }, false);\r\n\r\n        sliderWrapper = {\r\n            getValue: function () {\r\n                if (config.getValue) {\r\n                    return config.getValue(slider.valueAsNumber);\r\n                } else {\r\n                    return slider.valueAsNumber;\r\n                }\r\n            },\r\n            setValue: function (value) {\r\n                if (config.setValue) {\r\n                    slider.value = config.setValue(value);\r\n                } else {\r\n                    slider.value = value;\r\n                }\r\n            },\r\n            setLabel: function (value) {\r\n                label.innerHTML = message.replace('{value}', value);\r\n            },\r\n            elem: slider,\r\n            element: slider,\r\n        };\r\n\r\n        sliderWrapper.set = function (value) {\r\n            setLabel(value);\r\n            setValue(value);\r\n        };\r\n\r\n        return sliderWrapper;\r\n    }\r\n\r\n    function createSlider2(config) {\r\n        var slider = config.slider,\r\n            message = config.message,\r\n            label = slider.parentNode.firstChild;\r\n\r\n\r\n        if (config.initialValueSlider) {\r\n            slider.value = config.initialValueSlider;\r\n            label.innerHTML = message.replace('{value}', calculate());\r\n        }\r\n\r\n\r\n        if (config.initialValueLabel) {\r\n            label.innerHTML = message.replace('{value}', config.initialValueLabel);\r\n            slider.value = calculateFromLabel(config.initialValueLabel);\r\n        }\r\n\r\n\r\n        function onMouseMove() {\r\n            var value = calculate();\r\n            if (config.onMouseMove !== undefined) {\r\n                config.onMouseMove(slider.valueAsNumber, value);\r\n            }\r\n            label.innerHTML = message.replace('{value}', value);\r\n        }\r\n\r\n\r\n        function onMouseUp() {\r\n            var value = calculate();\r\n            if (config.onMouseUp !== undefined) {\r\n                config.onMouseUp(slider.valueAsNumber, value);\r\n            }\r\n            label.innerHTML = message.replace('{value}', value);\r\n        }\r\n\r\n\r\n        function onMouseDown() {\r\n            var value = calculate();\r\n            if (config.onMouseDown !== undefined) {\r\n                config.onMouseDown(slider.valueAsNumber, value);\r\n            }\r\n            label.innerHTML = message.replace('{value}', value);\r\n        }\r\n\r\n\r\n        function calculate() {\r\n            var value = slider.valueAsNumber;\r\n            if (config.calculate !== undefined) {\r\n                value = config.calculate(value);\r\n            }\r\n            return value;\r\n        }\r\n\r\n\r\n        function calculateFromLabel(value) {\r\n            if (config.calculateFromLabel !== undefined) {\r\n                value = config.calculateFromLabel(value);\r\n            }\r\n            return value;\r\n        }\r\n\r\n\r\n        slider.addEventListener('mousedown', function () {\r\n            setTimeout(onMouseDown, 0);\r\n            slider.addEventListener('mousemove', onMouseMove, false);\r\n        }, false);\r\n\r\n\r\n        slider.addEventListener('mouseup', function () {\r\n            setTimeout(onMouseUp, 0);\r\n            slider.removeEventListener('mousemove', onMouseMove, false);\r\n        }, false);\r\n\r\n\r\n        return {\r\n            updateSlider: function (value) {\r\n                slider.value = value;\r\n                label.innerHTML = message.replace('{value}', calculate(value));\r\n            },\r\n            updateLabel: function (value) {\r\n                label.innerHTML = message.replace('{value}', value);\r\n                slider.value = calculateFromLabel(value);\r\n            },\r\n            getValue1: function () {\r\n                return slider.valueAsNumber;\r\n            },\r\n            getValue2: function () {\r\n                return calculate(slider.valueAsNumber);\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    function getRandom(min, max, round) {\r\n        var r = mRandom() * (max - min) + min;\r\n        if (round === true) {\r\n            return mRound(r);\r\n        } else {\r\n            return r;\r\n        }\r\n    }\r\n\r\n\r\n    function getRandomNotes(config) {\r\n        var i,\r\n            ticks = 0,\r\n            events = [],\r\n            midiEvent,\r\n            velocity,\r\n            numNotes,\r\n            noteNumber,\r\n            noteLength,\r\n            minVelocity,\r\n            maxVelocity,\r\n            minNoteNumber,\r\n            maxNoteNumber,\r\n            ppq;\r\n\r\n        //console.log(config);\r\n\r\n        config = config || {};\r\n        ppq = config.ppq || sequencer.defaultPPQ;\r\n        numNotes = config.numNotes || 20;\r\n        noteLength = config.noteLength || ppq / 2; // ticks\r\n        minVelocity = config.minVelocity || 30;\r\n        maxVelocity = config.maxVelocity || 127;\r\n        minNoteNumber = config.minNoteNumber || 60;\r\n        maxNoteNumber = config.maxNoteNumber || 127;\r\n\r\n        if (noteLength > ppq) {\r\n            noteLength = ppq;\r\n        }\r\n\r\n        //console.log(ppq, numNotes, noteLength, minVelocity, maxVelocity, minNoteNumber, maxNoteNumber);\r\n\r\n\r\n        for (i = 0; i < numNotes; i++) {\r\n            noteNumber = getRandom(minNoteNumber, maxNoteNumber, true);\r\n            velocity = getRandom(minVelocity, maxVelocity, true);\r\n\r\n            //console.log(ticks, noteNumber, velocity);\r\n\r\n            midiEvent = sequencer.createMidiEvent(ticks, sequencer.NOTE_ON, noteNumber, velocity);\r\n            events.push(midiEvent);\r\n            ticks += noteLength;\r\n\r\n            midiEvent = sequencer.createMidiEvent(ticks, sequencer.NOTE_OFF, noteNumber, 0);\r\n            events.push(midiEvent);\r\n            ticks += ppq - noteLength;\r\n        }\r\n\r\n        return events;\r\n    }\r\n\r\n\r\n    function convertPPQ() {//oldPPQ, newPPQ, data, ..., ...\r\n        var args = slice.call(arguments),\r\n            oldPPQ = args[0],\r\n            newPPQ = args[1],\r\n            ratio = newPPQ / oldPPQ,\r\n            i, event;\r\n\r\n        if (isNaN(oldPPQ) || isNaN(newPPQ)) {\r\n            if (sequencer.debug === 4) {\r\n                console.error('PPQ values must be numbers');\r\n            }\r\n            return;\r\n        }\r\n\r\n        function loop(data, i, maxi) {\r\n            var arg, type, track, j, t;\r\n            for (j = i; j < maxi; j++) {\r\n                arg = data[j];\r\n                type = typeString(arg);\r\n                //console.log(type, arg.className);\r\n                if (type === 'array') {\r\n                    convert(arg);\r\n                } else if (type === 'object') {\r\n                    if (arg.className === 'Part' || arg.className === 'Track' || arg.className === 'Song') {\r\n                        convert(arg.events);\r\n                    } else if (arg.className === 'MidiFile') {\r\n                        //console.log(arg.numTracks, arg.tracks[0].events);\r\n                        for (t = arg.numTracks - 1; t >= 0; t--) {\r\n                            track = arg.tracks[t];\r\n                            //console.log(track.needsUpdate);\r\n                            if (track.needsUpdate === true) {\r\n                                track.update();\r\n                                if (track.events) {\r\n                                    convert(track.events);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        loop(args, 2, args.length);\r\n\r\n        function convert(events) {\r\n            for (i = events.length - 1; i >= 0; i--) {\r\n                event = events[i];\r\n                event.ticks = ratio * event.ticks;\r\n                if (event.state !== 'new') {\r\n                    event.state = 'changed';\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function getNoteLengthName(song, value) {\r\n        for (var divider in noteLengthNames) {\r\n            if (noteLengthNames.hasOwnProperty(divider)) {\r\n                //console.log(value, song.ppq/divider);\r\n                if (value === song.ppq / divider) {\r\n                    return noteLengthNames[divider];\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function getMicrosecondsFromBPM(bpm) {\r\n        return round(60000000 / bpm);\r\n    }\r\n\r\n\r\n    function insertLink(s) {\r\n        // @TODO: fix this -> should be md syntax\r\n        var href,\r\n            i = s.indexOf('http://');\r\n        if (i !== -1) {\r\n            href = s.substring(i);\r\n            i = href.indexOf(' ');\r\n            if (i !== -1) {\r\n                href = href.substring(0, i);\r\n            }\r\n        }\r\n        return '<a href=\"' + href + '\"></a>';\r\n    }\r\n\r\n\r\n    function getWaveformData(buffer, config, callback) {\r\n        var i, maxi,\r\n            canvas = document.createElement('canvas'),\r\n            ctx = canvas.getContext('2d'),\r\n            pcmRight = buffer.getChannelData(0),\r\n            pcmLeft = buffer.getChannelData(0),\r\n            numSamples = pcmRight.length,\r\n            width, // max width of a canvas on chrome/chromium is 32000\r\n            height = config.height || 100,\r\n            color = config.color || '#71DE71',\r\n            bgcolor = config.bgcolor || '#000',\r\n            density,\r\n            scale = height / 2,\r\n            sampleStep = config.sampleStep || 50,\r\n            height,\r\n            lastWidth,\r\n            numImages,\r\n            currentImage,\r\n            xPos = 0,\r\n            offset = 0,\r\n            urls = [],\r\n            imgElement,\r\n            imgElements = [];\r\n\r\n        //console.log(pcmRight.length, pcmLeft.length, config.samples.length);\r\n\r\n        if (config.width !== undefined) {\r\n            width = config.width;\r\n            density = width / numSamples;\r\n        } else {\r\n            density = config.density || 1;\r\n            width = 1000;\r\n            lastWidth = (numSamples * config.density) % width;\r\n            numImages = Math.ceil((numSamples * config.density) / width);\r\n            currentImage = 0;\r\n        }\r\n\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        ctx.fillStyle = bgcolor;\r\n        ctx.fillRect(0, 0, width, height);\r\n\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = color;\r\n        ctx.lineWidth = 1;\r\n        ctx.moveTo(0, scale);\r\n\r\n\r\n        for (i = 0; i < numSamples; i += sampleStep) {\r\n            xPos = (i - offset) * density;\r\n            if (xPos >= width) {\r\n                //console.log(width, height)\r\n                //ctx.closePath();\r\n                ctx.stroke();\r\n                urls.push(canvas.toDataURL('image/png'));\r\n                currentImage++;\r\n                if (currentImage === numImages - 1) {\r\n                    canvas.width = lastWidth;\r\n                } else {\r\n                    canvas.width = width;\r\n                }\r\n                ctx.beginPath();\r\n                ctx.strokeStyle = color;\r\n                offset = i;\r\n                xPos = 0;\r\n                ctx.moveTo(xPos, scale - (pcmRight[i] * scale));\r\n            } else {\r\n                ctx.lineTo(xPos, scale - (pcmRight[i] * scale));\r\n                //console.log(scale - (pcmRight[i] * scale));\r\n            }\r\n        }\r\n\r\n        if (xPos < width) {\r\n            //ctx.closePath();\r\n            ctx.stroke();\r\n            urls.push(canvas.toDataURL('image/png'));\r\n        }\r\n\r\n        callback(urls);\r\n\r\n        /*\r\n        // create html image elements from the data-urls\r\n        for(i = 0, maxi = urls.length; i < maxi; i++){\r\n            imgElement = document.createElement('img');\r\n            imgElement.src = urls[i];\r\n            imgElement.origWidth = imgElement.width;\r\n            imgElement.height = 100;\r\n            imgElements.push(imgElement);\r\n        }\r\n\r\n        callback({\r\n            dataURIs: urls,\r\n            imgElements: imgElements\r\n        });\r\n        */\r\n    }\r\n\r\n\r\n    function encode64(buffer) {\r\n        var binary = '',\r\n            bytes = new Uint8Array(buffer),\r\n            len = bytes.byteLength;\r\n\r\n        for (var i = 0; i < len; i++) {\r\n            binary += String.fromCharCode(bytes[i]);\r\n        }\r\n        return window.btoa(binary);\r\n    }\r\n\r\n    /*\\\r\n    |*|\r\n    |*|  Base64 / binary data / UTF-8 strings utilities\r\n    |*|\r\n    |*|  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Base64_encoding_and_decoding\r\n    |*|\r\n    \\*/\r\n\r\n    /* Array of bytes to base64 string decoding */\r\n\r\n    function b64ToUint6(nChr) {\r\n\r\n        return nChr > 64 && nChr < 91 ?\r\n            nChr - 65\r\n            : nChr > 96 && nChr < 123 ?\r\n                nChr - 71\r\n                : nChr > 47 && nChr < 58 ?\r\n                    nChr + 4\r\n                    : nChr === 43 ?\r\n                        62\r\n                        : nChr === 47 ?\r\n                            63\r\n                            :\r\n                            0;\r\n\r\n    }\r\n\r\n\r\n    function base64DecToArr(sBase64, nBlocksSize) {\r\n\r\n        var\r\n            sB64Enc = sBase64.replace(/[^A-Za-z0-9\\+\\/]/g, \"\"),\r\n            nInLen = sB64Enc.length,\r\n            nOutLen = nBlocksSize ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize : nInLen * 3 + 1 >> 2,\r\n            taBytes = new Uint8Array(nOutLen);\r\n\r\n        for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\r\n            nMod4 = nInIdx & 3;\r\n            nUint24 |= b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\r\n            if (nMod4 === 3 || nInLen - nInIdx === 1) {\r\n                for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++ , nOutIdx++) {\r\n                    taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\r\n                }\r\n                nUint24 = 0;\r\n\r\n            }\r\n        }\r\n\r\n        return taBytes;\r\n    }\r\n\r\n    /* Base64 string to array encoding */\r\n\r\n    function uint6ToB64(nUint6) {\r\n\r\n        return nUint6 < 26 ?\r\n            nUint6 + 65\r\n            : nUint6 < 52 ?\r\n                nUint6 + 71\r\n                : nUint6 < 62 ?\r\n                    nUint6 - 4\r\n                    : nUint6 === 62 ?\r\n                        43\r\n                        : nUint6 === 63 ?\r\n                            47\r\n                            :\r\n                            65;\r\n\r\n    }\r\n\r\n    function base64EncArr(aBytes) {\r\n\r\n        var nMod3 = 2, sB64Enc = \"\";\r\n\r\n        for (var nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nMod3 = nIdx % 3;\r\n            if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\r\n            nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\r\n            if (nMod3 === 2 || aBytes.length - nIdx === 1) {\r\n                sB64Enc += String.fromCharCode(uint6ToB64(nUint24 >>> 18 & 63), uint6ToB64(nUint24 >>> 12 & 63), uint6ToB64(nUint24 >>> 6 & 63), uint6ToB64(nUint24 & 63));\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n\r\n        return sB64Enc.substr(0, sB64Enc.length - 2 + nMod3) + (nMod3 === 2 ? '' : nMod3 === 1 ? '=' : '==');\r\n\r\n    }\r\n\r\n    /* UTF-8 array to DOMString and vice versa */\r\n\r\n    function UTF8ArrToStr(aBytes) {\r\n\r\n        var sView = \"\";\r\n\r\n        for (var nPart, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nPart = aBytes[nIdx];\r\n            sView += String.fromCharCode(\r\n                nPart > 251 && nPart < 254 && nIdx + 5 < nLen ? /* six bytes */\r\n                    /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\r\n                    (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                    : nPart > 247 && nPart < 252 && nIdx + 4 < nLen ? /* five bytes */\r\n                        (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                        : nPart > 239 && nPart < 248 && nIdx + 3 < nLen ? /* four bytes */\r\n                            (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                            : nPart > 223 && nPart < 240 && nIdx + 2 < nLen ? /* three bytes */\r\n                                (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                                : nPart > 191 && nPart < 224 && nIdx + 1 < nLen ? /* two bytes */\r\n                                    (nPart - 192 << 6) + aBytes[++nIdx] - 128\r\n                                    : /* nPart < 127 ? */ /* one byte */\r\n                                    nPart\r\n            );\r\n        }\r\n\r\n        return sView;\r\n\r\n    }\r\n\r\n    function strToUTF8Arr(sDOMStr) {\r\n\r\n        var aBytes, nChr, nStrLen = sDOMStr.length, nArrLen = 0;\r\n\r\n        /* mapping... */\r\n\r\n        for (var nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nMapIdx);\r\n            nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\r\n        }\r\n\r\n        aBytes = new Uint8Array(nArrLen);\r\n\r\n        /* transcription... */\r\n\r\n        for (var nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nChrIdx);\r\n            if (nChr < 128) {\r\n                /* one byte */\r\n                aBytes[nIdx++] = nChr;\r\n            } else if (nChr < 0x800) {\r\n                /* two bytes */\r\n                aBytes[nIdx++] = 192 + (nChr >>> 6);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x10000) {\r\n                /* three bytes */\r\n                aBytes[nIdx++] = 224 + (nChr >>> 12);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x200000) {\r\n                /* four bytes */\r\n                aBytes[nIdx++] = 240 + (nChr >>> 18);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x4000000) {\r\n                /* five bytes */\r\n                aBytes[nIdx++] = 248 + (nChr >>> 24);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else /* if (nChr <= 0x7fffffff) */ {\r\n                /* six bytes */\r\n                aBytes[nIdx++] = 252 + (nChr >>> 30);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n        }\r\n\r\n        return aBytes;\r\n\r\n    }\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        context = sequencer.protectedScope.context;\r\n    });\r\n\r\n    // mozilla tools\r\n    sequencer.util.b64ToUint6 = b64ToUint6;\r\n    sequencer.util.base64DecToArr = base64DecToArr;\r\n    sequencer.util.uint6ToB64 = uint6ToB64;\r\n    sequencer.util.base64EncArr = base64EncArr;\r\n    sequencer.util.UTF8ArrToStr = UTF8ArrToStr;\r\n    sequencer.util.strToUTF8Arr = strToUTF8Arr;\r\n    sequencer.util.ajax = ajax;\r\n    sequencer.util.ajax2 = ajax2;\r\n    sequencer.util.parseSamples = parseSamples;\r\n\r\n\r\n    //sequencer.findItem = findItem;\r\n    //sequencer.storeItem = storeItem;\r\n\r\n    sequencer.util.round = round;\r\n    sequencer.util.floor = floor;\r\n    sequencer.util.remap = remap;\r\n    sequencer.util.getRandom = getRandom;\r\n    sequencer.util.createSlider = createSlider;\r\n    sequencer.util.createSlider2 = createSlider2;\r\n    sequencer.util.getRandomNotes = getRandomNotes;\r\n    sequencer.util.getEqualPowerCurve = getEqualPowerCurve;\r\n    sequencer.util.objectForEach = objectForEach;\r\n    sequencer.util.insertLink = insertLink;\r\n    sequencer.util.encode64 = encode64;\r\n\r\n    sequencer.protectedScope.getNoteLengthName = getNoteLengthName;\r\n    sequencer.protectedScope.toBinaryString = toBinaryString;\r\n    sequencer.protectedScope.base64ToBinary = base64ToBinary;\r\n    //sequencer.protectedScope.base64ToBinary = base64DecToArr;\r\n    sequencer.protectedScope.toUint8Array = toUint8Array;\r\n    sequencer.protectedScope.getArguments = getArguments;\r\n    sequencer.protectedScope.pathToArray = pathToArray;\r\n    sequencer.protectedScope.parseUrl = parseUrl;\r\n    sequencer.protectedScope.loadLoop = loadLoop;\r\n\r\n\r\n    sequencer.protectedScope.findItem = findItem;\r\n    sequencer.protectedScope.storeItem = storeItem;\r\n    sequencer.protectedScope.deleteItem = deleteItem;\r\n    sequencer.protectedScope.toBinaryString = toBinaryString;\r\n    sequencer.protectedScope.ajax = ajax;\r\n    sequencer.protectedScope.copyObject = copyObject;\r\n    sequencer.protectedScope.findItemsInFolder = findItemsInFolder;\r\n\r\n\r\n    sequencer.convertPPQ = convertPPQ;\r\n    sequencer.getNiceTime = getNiceTime;\r\n    sequencer.protectedScope.isEmptyObject = isEmptyObject;\r\n    sequencer.protectedScope.objectForEach = objectForEach;\r\n    sequencer.protectedScope.objectToArray = objectToArray;\r\n    sequencer.protectedScope.arrayToObject = arrayToObject;\r\n    sequencer.protectedScope.createClass = createClass;\r\n\r\n    sequencer.protectedScope.clone = clone;\r\n    sequencer.protectedScope.round = round;\r\n    sequencer.protectedScope.floor = floor;\r\n    sequencer.protectedScope.typeString = typeString;\r\n    sequencer.protectedScope.copyName = copyName;\r\n    sequencer.protectedScope.removeFromArray = removeFromArray;\r\n    sequencer.protectedScope.removeFromArray2 = removeFromArray2;\r\n    sequencer.protectedScope.filterItemsByClassName = filterItemsByClassName;\r\n\r\n    sequencer.getMicrosecondsFromBPM = getMicrosecondsFromBPM;\r\n    sequencer.getWaveformData = getWaveformData;\r\n}function closeModule(cb) {\n\n  'use strict';\n\n  var\n    ready = false,\n    readyCallbacks = [],\n    context,\n    initMidi,\n    base64ToBinary;\n\n  sequencer.protectedScope.callInitMethods(); // defined in open_module.js\n  context = sequencer.protectedScope.context; // defined in open_module.js\n  initMidi = sequencer.protectedScope.initMidi; // defined in midi_system.js\n  base64ToBinary = sequencer.protectedScope.base64ToBinary; // defined in util.js\n  delete sequencer.protectedScope; //seal\n\n  function addCleanup() {\n    window.addEventListener('beforeunload', function (event) {\n      // close all MIDI ports\n    });\n  }\n\n  sequencer.ready = function () {\n    return new Promise(resolve => {\n      if (ready === true) {\n        addCleanup();\n        resolve();\n      } else {\n        readyCallbacks.push(() => {\n          addCleanup();\n          resolve();\n        });\n      }\n    })\n  };\n\n  sequencer.addInstrument({\n    name: 'sinewave',\n    folder: 'heartbeat',\n    autopan: false,\n    attack: 200,\n    keyrange: [21, 108],\n    release_duration: 50\n  });\n\n\n  sequencer.addInstrument({\n    name: 'metronome',\n    folder: 'heartbeat',\n    //release_duration: 250,\n    sample_path: 'heartbeat/metronome',\n    keyrange: [60, 61],\n    mapping: {\n      '60': { n: 'lowtick' },\n      '61': { n: 'hightick' }\n    }\n  });\n\n  //console.log(sequencer.os, sequencer.browser);\n\n  // safari supports only mp3 and all other browsers support mp3 among others, so although ogg is a better format, mp3 is the best choice here to cover all browsers\n  // -> but we use wav for the metronome tick to get rid of the padding at the start of a mp3 file\n  sequencer.addSamplePack({\n    name: 'metronome',\n    folder: 'heartbeat',\n    mapping: {\n      'hightick': 'UklGRkQFAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YSAFAACx/xf/dADOACwBsP3p+6H+zAGoBOkCCwBX/EH5OvxlA4kJ2wcSArT9E/ut+HT2evUx98n6OAF5CCUMwQvfCOsJxAx0DSIMEAq9BiAB3vhz7mLkT9sR133YxN2s5QLv0vrUBnwRnxuQJeEsSDCiMd8yFS8aKFIhohUsCKj64u625OraA9HuyPnElcP+wxvJWtW25637VQ0jHPgnBTDDM1o0CzKLK+8hzhgFDOz8Se4J47DYVtG0z5fQq9LB12rfA+j99roHAhelIyMwIjdTOuU8mjwIOGoxhCb5E53/j+3k3/fTY8pTw4y/Tr+ew8DMvdsk8RcHRRkSKO4yGTkHPkU/rzzyNcgsrR94Dp/5r+Zs17zOncoDxhfE38WLyn/TeOMi9r0IRxlRKIQzyTlOPKo9yjmWMcokDRLc/Y7rudtdzu/D2L1Iu+27JcG3yYrVLujl+3UOZx1UK5Q0qzmNPDk8ZjeeMPojzhH+/jLtPd5m0hHLHsYIw5TEMMnA0jvj8fSOBiwXASZgMzM8dUBGQbI+rzjpKkIZygZT9QflcdaRyqXCz7+VwUPH784r3K7s+v0KDu8bvyeLMb43NjrhOIo0dSvQHi0PnP6i7ovg3NTxy4/Gf8X8yH/QBtvX55P2Ygb0FcUjsy4LNmI5ejiXM38r7iC8FJwHPvok7dDgQdaJzlTKIsoFzsrVkuA87d/6qAi7FQ0h9ClKMLEz3TOrMBcqYSD8E9AFd/dS6kTf6dbU0XnQv9IH2MXfZ+ln9DEAFwwdFy8giib6KawqeChgI/UbHBOTCZj/vvXe7InlFuDN3P3b0d1F4gzpifG2+u4D7Qw1FfwbnCD+IlgjWyHLHPMVog2mBL37qvP+7NvnYuTv4rvjfubN6k3wpPZ0/WkEOwtiEUsWcxm+Gl4aOhhiFDAPIwmbAtn7TPVy77zqcefr5YHmHull7enyfPmcAHgHew1REr8Vhhd/F+AV1RJ0DikJWQNc/ZP3efKd7hvs2ur46rHs5u8e9N/48/0hA/8HFgwuD04RSBIREqsQOg7mCssGMAJW/Xn4G/TK8Lbuzu0I7qTvnPJy9sX6bP84BLYIbAwdD84QYxG7EOcODAxwCFMEAQC9+7P3SvTX8XHw+u9R8KTxIvSo9+X7VQCUBJ0IMwziDj4QLhAGD9UMrgnTBZcBRv1v+Xv2UfS+8tfx+vES87z0+vb3+Zf9ZgEQBSEIUArWC8kM2QyzC5EJEAdvBHgBXP5n++r4Avd89Wj07fMw9D31Jvfp+Uj9xQD9A8QG5QhXClELrAsvC9wJ7gd6BWIC3v6O+7T4PPZN9EHzWvNf9Pz1Fvit+qL9rQCHAwEG/weCCZUKFwvDCnIJcAcQBWcCaf8Z/CD55vaB9dD0wPSP9UL3m/k7/Mz+JwEyAw8FzAY7CBsJaQk5CWkI2gatBCICYf+j/Fr6vfiV9872sfZP91z4p/lR+3H9zf89AroEFAfjCP0Jcwo8CjAJdQdgBSEDkgDQ/Vj7ZfnR95T28fUd9v32Vvg2+nb8+/6xAWoE4AbDCP4JpAqbCqQJ0weEBfgCTACT/R37M/m+9672IPY69gb3afhW+tT8qf+MAj0FggcuCScKXAriCcMIEAfyBJYCFwCP/Rz7A/l793z2F/Zn9mH37fjd+i39yf9pAt0EFAfRCNkJGAqrCZYIvgZPBJ8B6P4//M350vdz9q/1lfUq9mz3RPmi+3H+bgFVBOQG3wgHCkwK0Am7CCAHCgWmAjAA',\n      'lowtick': 'UklGRlQFAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YTAFAAB0/5v+U/4T/3gA0wFTAuUB+f8d/nT90f1q/ub+tf46/mb/8wFQA9gC7wCd/mr+FAGRA3cE6wJf/h36evmv+8v/NwRHBZUC2/60+//5EvuZ/aX/bgFOAp8Azvzh9wfzLPF68zT4y/2BAygIfQwaEjYY0x31Irwl8SOWHVESOgPh9NfpReFt22nYHddD2BXcZeDa5InqgPDx9nP+6gS4CBYLnw0zES0WXxv4HkcgLh/1G+EX1RNpD4wKigXH/6r5/fNu7lTpj+Zu5hHoXOtL71byr/Qp91L64v6OBO4JoQ5zEskU+hU1FiQVeRP7EWgP4Qr0BIT+tPid9C3y1vCh8FDxJvK28vvyy/LA8pLzU/XP95v6xvw4/uD/RAK2BSkKcg6BEScTZBMeEqkPTQxjCKEEVwFi/nv7h/hp9aDyAvHP8MfxLvM+9PX0uPW19g/4Lfr7/C4AKgNaBXQGywb0BhIHWQfWB1oIzAjtCF8IHwdtBakDVwKLAeYA8v9w/kj81/nQ94v29/XX9bz1bPUY9Uz1Z/aH+Hr7yP4MAi4F+wcfCnYLNgyfDPsMSw0sDUAMfgrcB5IEMwFb/iX8T/pT+O/1X/Mf8cbvrO+18MLyvfVP+Rf9wgAoBCEHpwnIC5EN4Q5AD3wO1Ay0CpsIvwbvBNcCbQAr/nX8Ofsf+vb4mvda9rj1z/WX9pL3a/hH+ZX6R/wn/vP/eQESA/AE+wYDCcwKFAyPDCkMFQuSCe4HVQbSBHQDCwI8ANL9JPuY+HX28vTq82PzdPMV9Az1MfZ49zD5gftx/sQBBQXLB8cJ/gqpCw8MigwWDXENXQ2rDDUL7QgDBswCdv8S/K74WPVk8hXwou4P7mvu1+9T8pz1Uvli/ZoBwgWRCcsMPg/CEEQR4RDADwoO9wusCVMH4ARSApn/ufzd+Wj3bvX78xzzx/L68qzz1vSD9qX4Gfvd/c0AhwO/BWwHmghvCQEKVQonClsJCwiIBh0F0gOgAm0BOwAx/03+XP0g/Lb6cPmX+F/4vfh++TH6s/os+7/7cvwL/Zz9XP5O/3IA3AF9AzsF9gaUCAAKHgueCzcL9wntB3sF4wIzAI396fp1+Gv2IvWn9N30p/Xi9m74G/ru+9P9k/8aAYEC1AMTBSIG0wYuB1gHkgcACGEISAhTBzEFWAKt/5L92fuU+vX50fmf+SP5i/gb+Bf4mviv+Sr7kvyb/Uj+r/4X/8r/+gCiAo0EUAaRBzwISwjqB3IHGQfCBv8FpgTMApQAKf67+5n5/vfn9jz2yPVn9SL1RPXq9SP3Dvmr+6f+sQGKBAcH+whOCh0Laws3C28KLAmDB5AFfQNoAVP/Zv3e+7P6sfnL+Cv4vPeM95b37feV+Jn51Poq/LL9mv+YAVYD3gQuBmcHSAikCIEI7Af+BuEFngQXA1sBv/9v/pf9MP3W/Fj8q/sR+6H6U/o3+mP6y/pN+/f7xvye/WH+Jf9mAD4CQAQJBisHtgf6Bw0I8QdsB1sGywT4AggBCP/o/KX6mPg19572jfaz9uf2S/cM+E35E/tW/af/5wH1A8AFKgfkB/AHgwfxBlAGgQVIBMMCJwGs/43+vP0i/Zr8Lfzl+9H76fvi+9f75fsf/In8BP10/ej9cf4O/7f/dAAcAaUBEgKMAhgDpAMEBCEEDwTfA3IDxQL8ASoBUwCG/87+J/6h/Rr9pPxk/Gb8oPwJ/XH9w/39/UD+qP41/9D/WwDeAGsBAgKdAhEDQQNAA0sDbwOVA5YDVwPOAhgCVAGRAA=='\n    }\n  });\n\n  // console.log(initMidi);\n\n  sequencer.addTask({\n    type: 'init midi',\n    method: initMidi,\n    params: []\n  }, function () {\n    // setTimeout(function() {\n    readyCallbacks.forEach(function (cb) {\n      cb();\n    });\n    ready = true;\n    console.timeEnd(label);\n    // }, 4000)\n  }, false); // @TODO: check this true | false\n\n  // sequencer.startTaskQueue();\n}\n\nvar label = 'heartbeat ' + version + ', initializing took';\n\nfunction initSequencer() {\n  console.time(label);\n  openModule();\n  assetManager();\n  assetPack();\n  // audioEncoder();\n  audioEvent();\n  audioRecorder();\n  // audioRecordingWorker();\n  audioTrack();\n  channelEffects();\n  eventStatistics();\n  findEvent();\n  instrument();\n  instrumentConfig();\n  keyEditor();\n  keyEditorIteratorFactory();\n  metronome();\n  midiEvent();\n  midiEventNames();\n  midiFile();\n  midiNote();\n  midiParse();\n  midiStream();\n  midiSystem();\n  midiWrite();\n  musicXMLParser();\n  note();\n  parseEvents();\n  parseTimeEvents();\n  part();\n  playhead();\n  position();\n  quantizeFixedLength();\n  sample();\n  samplePack();\n  scheduler();\n  createSequencer();\n  song();\n  songEventListener();\n  songFollowEvent();\n  songGrid();\n  songUpdate();\n  track();\n  transpose();\n  util();\n  closeModule();\n}\n\ninitSequencer();\n\nimport { loadMusicXMLFile } from './load_musicxml_file';\nexport { loadMusicXMLFile };\n\n// hail hail esnext!\nexport default sequencer;"]}